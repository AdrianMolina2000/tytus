
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'leftR_UNIONR_INTERSECTR_EXCEPTrightR_NOTleftR_ANDR_ORleftR_BETWEENR_ISleftS_IGUALOL_DISTINTODEOL_MAYORQUEOL_MENORQUEOL_MAYORIGUALQUEOL_MENORIGUALQUEleftOC_CONCATENARleftO_SUMAO_RESTAleftO_PRODUCTOO_DIVISIONO_MODULARrightUO_SUMAUO_RESTAleftO_EXPONENTECHARACTER COMMENT DECIMAL ID IDEspecial INTEGER OC_AND OC_CONCATENAR OC_NOT OC_OR OC_SHIFTL OC_SHIFTR OC_XOR OL_DISTINTODE OL_ESIGUAL OL_MAYORIGUALQUE OL_MAYORQUE OL_MENORIGUALQUE OL_MENORQUE O_DIVISION O_EXPONENTE O_MODULAR O_PRODUCTO O_RESTA O_SUMA R_ADD R_ALIAS R_ALL R_ALTER R_AND R_ANY R_AS R_ASC R_BEGIN R_BETWEEN R_BY R_CASE R_CHECK R_COLUMN R_CONSTRAINT R_COUNT R_CREATE R_CURRENT_DATE R_CURRENT_TIME R_CURRENT_USER R_DATABASE R_DATABASES R_DATE_PART R_DAY R_DECLARE R_DEFAULT R_DELETE R_DESC R_DISTINCT R_DROP R_ELSE R_END R_ENUM R_EXCEPT R_EXISTS R_EXTRACT R_FALSE R_FIRST R_FOR R_FOREIGN R_FROM R_FULL R_FUNCTION R_GROUP R_HAVING R_HOUR R_IF R_IN R_INHERITS R_INNER R_INSERT R_INTERSECT R_INTERVAL R_INTO R_IS R_ISNULL R_JOIN R_KEY R_LANGUAGE R_LAST R_LEFT R_LIKE R_LIMIT R_MINUTE R_MODE R_MONTH R_NATURAL R_NOT R_NOTNULL R_NOW R_NULL R_OFFSET R_ON R_OR R_ORDER R_OUTER R_OWNER R_PRIMARY R_PROM R_REFERENCES R_RENAME R_REPLACE R_RETURNS R_RIGHT R_SECOND R_SELECT R_SESSION_USER R_SET R_SHOW R_SOME R_SUM R_SYMMETRIC R_TABLE R_THEN R_TIMESTAMP R_TO R_TRUE R_TRUNCATE R_TYPE R_UNION R_UNIQUE R_UNKNOWN R_UPDATE R_USE R_USING R_VALUES R_WHEN R_WHERE R_YEAR STRING S_COMA S_DOLAR S_IGUAL S_PARDER S_PARIZQ S_PUNTO S_PUNTOCOMA T_BIGINT T_BOOLEAN T_CHAR T_CHARACTER T_DATE T_DECIMAL T_DOUBLE T_INTEGER T_MONEY T_NUMERIC T_PRECISION T_REAL T_SMALLINT T_TEXT T_TIME T_VARCHAR T_VARYINGinit : stmtListstmtList : stmtList stmtstmtList : stmt\n    stmt : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n        | functionStmt S_PUNTOCOMA\n    \n    idOrString : ID\n    | STRING\n    | CHARACTER\n    createStmt : R_CREATE createBody\n    createBody : createOpts\n    createOpts : R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt \n    createOpts : orReplace R_DATABASE ifNotExists idOrString createOwner createMode\n    \n    orReplace : R_OR R_REPLACE\n    \n    orReplace :\n    \n    createOpts : R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER\n    \n    ifNotExists : R_IF R_NOT R_EXISTS\n    \n    ifNotExists :\n    \n    inheritsOpt : R_INHERITS S_PARIZQ ID S_PARDER\n    \n    inheritsOpt :\n    \n    createOwner : R_OWNER ID\n    | R_OWNER STRING\n    \n    createOwner :  R_OWNER S_IGUAL ID\n    | R_OWNER S_IGUAL STRING\n    \n    createOwner :\n    \n    createMode : R_MODE INTEGER\n    \n    createMode : R_MODE S_IGUAL INTEGER\n    \n    createMode :\n    createTableList : createTableList S_COMA createTablecreateTableList :  createTable\n    createTable :  ID types createColumns\n    \n    createTable : createConstraint\n    | createUnique\n    | createPrimary\n    | createForeign\n    \n    createColumns : colOptionsList\n    \n    createColumns :\n    createConstraint : constrName R_CHECK S_PARIZQ booleanCheck S_PARDERcreateUnique : R_UNIQUE S_PARIZQ idList S_PARDERcreatePrimary : R_PRIMARY R_KEY S_PARIZQ idList S_PARDER\n    createForeign : constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER\n    \n    constrName : R_CONSTRAINT ID\n    \n    constrName :\n    idList : idList S_COMA IDidList : ID\n    types :  ID\n    \n    types : T_SMALLINT\n    | T_INTEGER\n    | T_BIGINT\n    | T_REAL\n    | T_DOUBLE T_PRECISION\n    | T_MONEY\n    | T_TEXT\n    | T_BOOLEAN\n    | R_TIMESTAMP\n    | T_DATE\n    | T_TIME\n    \n    types : T_DECIMAL optParams\n    | T_NUMERIC optParams\n    | T_VARCHAR optParams\n    | T_CHARACTER optParams\n    | T_CHAR optParams\n    \n    types : T_CHARACTER T_VARYING optParams\n    \n    types : R_INTERVAL intervalFields\n    \n    intervalFields :  R_YEAR\n    | R_MONTH\n    | R_DAY\n    | R_HOUR\n    | R_MINUTE\n    | R_SECOND\n    \n    intervalFields :\n    optParams : S_PARIZQ literalList S_PARDERoptParams : colOptionsList : colOptionsList colOptionscolOptionsList : colOptions\n    colOptions : defaultVal\n    | nullOpt\n    | constraintOpt\n    | primaryOpt\n    | referencesOpt\n    defaultVal : R_DEFAULT literal\n    nullOpt : R_NOT R_NULL\n    \n    nullOpt : R_NULL\n    \n    constraintOpt : constrName R_UNIQUE\n    \n    constraintOpt : constrName R_CHECK S_PARIZQ booleanCheck S_PARDER\n    primaryOpt : R_PRIMARY R_KEYreferencesOpt : R_REFERENCES ID\n    expresion : datatype\n            | expBool\n    \n    expresion : S_PARIZQ selectStmt S_PARDER\n    \n    funcCall : ID S_PARIZQ paramsList S_PARDER\n    \n    funcCall : ID S_PARIZQ S_PARDER\n            | R_NOW S_PARIZQ S_PARDER\n    \n    funcCall : R_COUNT S_PARIZQ datatype S_PARDER\n            | R_COUNT S_PARIZQ O_PRODUCTO S_PARDER\n            | R_SUM S_PARIZQ datatype S_PARDER\n            | R_PROM S_PARIZQ datatype S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER\n    \n    timeStamp : R_TIMESTAMP STRING\n          | R_INTERVAL STRING\n    \n    optsExtract : R_YEAR\n                  | R_MONTH\n                  | R_DAY\n                  | R_HOUR\n                  | R_MINUTE\n                  | R_SECOND\n    \n    datePart : R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER\n    \n    dateSource : R_TIMESTAMP STRING\n          | T_DATE STRING\n          | T_TIME STRING\n          | R_INTERVAL STRING\n          | R_NOW S_PARIZQ S_PARDER\n    \n    current : R_CURRENT_DATE\n          | R_CURRENT_TIME\n    \n    current : timeStamp\n    literalList : literalList S_COMA literalliteralList : literal\n    literal :  INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    | R_NULL\n    paramsList : paramsList S_COMA datatypeparamsList : datatype\n    datatype : datatype O_SUMA datatype\n    | datatype O_RESTA datatype\n    | datatype O_PRODUCTO datatype\n    | datatype O_DIVISION datatype\n    | datatype O_EXPONENTE datatype\n    | datatype O_MODULAR datatype\n    \n    datatype : datatype OC_CONCATENAR datatype\n    \n    datatype : R_CASE caseList optElse R_END\n    \n    caseList : caseList caseWhen\n            | caseWhen\n    caseWhen : R_WHEN expBool R_THEN literaloptElse : R_ELSE literal\n    |\n    \n    datatype : O_RESTA datatype %prec UO_RESTA\n    | O_SUMA datatype %prec UO_SUMA\n    \n    datatype : columnName\n    | literal\n    | funcCall\n    | extract\n    | datePart\n    | current\n    \n    datatype : S_PARIZQ datatype S_PARDER\n    \n    expComp : datatype OL_MENORQUE datatype\n    | datatype OL_MAYORQUE datatype\n    | datatype OL_MAYORIGUALQUE datatype\n    | datatype OL_MENORIGUALQUE datatype\n    | datatype S_IGUAL datatype\n    | datatype OL_DISTINTODE datatype\n    \n    expComp : datatype R_IS R_DISTINCT R_FROM datatype\n    \n    expComp : datatype R_IS R_NOT R_DISTINCT R_FROM datatype\n    \n    expComp :  datatype R_BETWEEN datatype R_AND datatype\n    \n    expComp : datatype R_NOT R_BETWEEN datatype R_AND datatype\n    | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype\n    \n    expComp : datatype R_ISNULL\n    | datatype R_NOTNULL\n    \n    expComp : datatype R_IS R_NULL\n    | datatype R_IS R_TRUE\n    | datatype R_IS R_FALSE\n    | datatype R_IS R_UNKNOWN\n    \n    expComp : datatype R_IS R_NOT R_NULL\n    | datatype R_IS R_NOT R_TRUE\n    | datatype R_IS R_NOT R_FALSE\n    | datatype R_IS R_NOT R_UNKNOWN\n    \n    expSubq : datatype OL_MENORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_ESIGUAL  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | stringExp R_LIKE STRING\n    \n    stringExp : STRING\n          | columnName\n    \n    subqValues : R_ALL\n                  | R_ANY\n                  | R_SOME\n    \n    boolean : R_EXISTS S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : expComp\n            | expSubq\n    \n    expBool : expBool R_AND expBool\n            | expBool R_OR expBool\n    \n    expBool : R_NOT expBool\n    \n    expBool : S_PARIZQ expBool S_PARDER\n    \n    expBool : expBool optBoolPredicate\n    \n    expBool : boolean\n    \n    optBoolPredicate : R_IS R_TRUE\n    | R_IS R_FALSE\n    | R_IS R_UNKNOWN\n    \n    optBoolPredicate : R_IS R_NOT R_TRUE\n    | R_IS R_NOT R_FALSE\n    | R_IS R_NOT R_UNKNOWN\n    \n    columnName : ID\n    \n    columnName : ID S_PUNTO ID\n    \n    booleanCheck : idOrLiteral OL_MENORQUE idOrLiteral\n    | idOrLiteral OL_MAYORQUE idOrLiteral\n    | idOrLiteral OL_MAYORIGUALQUE idOrLiteral\n    | idOrLiteral OL_MENORIGUALQUE idOrLiteral\n    | idOrLiteral S_IGUAL idOrLiteral\n    | idOrLiteral OL_DISTINTODE idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral\n    \n    idOrLiteral : ID\n    | INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    alterStmt : R_ALTER R_DATABASE idOrString alterDb\n    | R_ALTER R_TABLE idOrString alterTableList\n    alterDb : R_RENAME R_TO idOrString\n    | R_OWNER R_TO ownerOPts\n    \n    ownerOPts : idOrString\n    | R_CURRENT_USER\n    | R_SESSION_USER\n    \n    alterTableList : alterTableList S_COMA alterTable\n    \n    alterTableList : alterTable\n    \n    alterTable : R_ADD alterAdd\n    | R_ALTER alterAlter\n    | R_DROP alterDrop\n    | R_RENAME alterRename\n    \n    alterAdd : R_COLUMN ID types\n    \n    alterAdd : createConstraint\n    | createPrimary\n    | createForeign\n    \n    alterAdd : constrName R_UNIQUE S_PARIZQ ID S_PARDER\n    \n    alterAlter : R_COLUMN ID R_SET nullOpt\n    | R_COLUMN ID R_SET defaultVal\n    | R_COLUMN ID R_TYPE types\n    \n    alterDrop : R_CONSTRAINT ID\n    | R_COLUMN ID\n    \n    alterRename : R_COLUMN ID R_TO ID\n    \n    dropStmt : R_DROP R_TABLE ifExists idOrString\n    | R_DROP R_DATABASE ifExists idOrString\n    ifExists : R_IF R_EXISTS\n    |\n    selectStmt : R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl limitClselectStmt : selectStmt R_UNION allOpt selectStmtselectStmt : selectStmt R_INTERSECT allOpt selectStmtselectStmt : selectStmt R_EXCEPT allOpt selectStmtselectStmt : S_PARIZQ selectStmt S_PARDER\n    fromCl : R_FROM tableExp\n    selectStmt : R_SELECT selectParamsallOpt : R_ALL\n    |\n    selectParams : O_PRODUCTOselectParams : selectListselectList : selectList S_COMA selectListParams optAliasselectList : selectListParams optAliasselectListParams : expresionselectListParams : ID S_PUNTO O_PRODUCTO\n    optAlias : R_AS idOrString\n    \n    optAlias : idOrString\n    optAlias : tableExp : tableExp S_COMA fromBody tableExp : fromBody fromBody : ID optAliasfromBody : S_PARIZQ selectStmt S_PARDER R_AS idOrStringjoinList : joinList2joinList2 : joinList2 joinCl\n    | joinCljoinCl : joinOpt R_JOIN columnName optAlias R_ON expBool\n    | joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER\n    | R_NATURAL joinOpt R_JOIN columnName optAlias\n    nameList : nameList S_COMA columnName\n    | columnName\n    joinOpt : R_INNER\n    | R_LEFT\n    | R_LEFT R_OUTER\n    | R_RIGHT\n    | R_RIGHT R_OUTER\n    | R_FULL\n    | R_FULL R_OUTER\n    whereCl : R_WHERE expBoolwhereCl : \n    groupByCl : R_GROUP R_BY groupList havingCl\n    \n    groupByCl :\n    \n    groupList :  groupList S_COMA columnName\n            | groupList S_COMA INTEGER\n    \n    groupList :  columnName\n              | INTEGER\n    havingCl : R_HAVING expBoolhavingCl :orderByCl : R_ORDER R_BY orderListorderByCl : orderList : orderList S_COMA orderByElemorderList : orderByElem\n    orderByElem : columnName orderOpts orderNull\n                | INTEGER orderOpts orderNull\n    orderOpts : R_ASC\n                 | R_DESC\n    orderOpts : orderNull : R_NULL R_FIRST\n                 | R_NULL R_LASTorderNull : limitCl : R_LIMIT INTEGER offsetLimit\n               | R_LIMIT R_ALL offsetLimit\n    limitCl :offsetLimit : R_OFFSET INTEGERoffsetLimit :insertStmt : R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDERparamsColumn : S_PARIZQ idList S_PARDERparamsColumn :updateStmt : R_UPDATE fromBody R_SET updateCols whereClupdateCols : updateCols S_COMA updateValsupdateCols : updateVals updateVals : ID S_IGUAL updateExpupdateExp : datatype\n    | R_DEFAULT\n    deleteStmt : R_DELETE fromCl whereCltruncateStmt : R_TRUNCATE tableOpt IDtableOpt : R_TABLE\n    |\n    showStmt : R_SHOW R_DATABASES likeOptlikeOpt : R_LIKE STRING\n    |\n    useStmt : R_USE IDfunctionStmt : R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction bloqueFunction : declareStmt R_BEGIN beginStmt R_END labelEndparams_list : params_list param_itemparams_list : param_itemparam_item : R_NULLreturnsStmt : R_RETURNS item_returnsreturnsStmt : item_returns : R_NULLdeclareStmt : declaracion_list : declaracion_list declaracion_itemdeclaracion_list : declaracion_itemdeclaracion_item : ID types declaracion_item : ID R_ALIAS R_FOR alias_declaracionalias_declaracion : ID \n                         | IDEspecialbeginStmt : R_NULLlabelEnd : R_NULL'
    
_lr_action_items = {'R_CREATE':([0,2,3,26,27,28,29,30,31,32,33,34,35,36,40,],[15,15,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,]),'R_SHOW':([0,2,3,26,27,28,29,30,31,32,33,34,35,36,40,],[16,16,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,]),'R_ALTER':([0,2,3,26,27,28,29,30,31,32,33,34,35,36,40,119,120,121,122,317,],[17,17,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,206,206,]),'R_DROP':([0,2,3,26,27,28,29,30,31,32,33,34,35,36,40,119,120,121,122,317,],[18,18,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,210,210,]),'R_INSERT':([0,2,3,26,27,28,29,30,31,32,33,34,35,36,40,],[19,19,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,]),'R_UPDATE':([0,2,3,26,27,28,29,30,31,32,33,34,35,36,40,],[21,21,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,]),'R_DELETE':([0,2,3,26,27,28,29,30,31,32,33,34,35,36,40,],[22,22,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,]),'R_TRUNCATE':([0,2,3,26,27,28,29,30,31,32,33,34,35,36,40,],[23,23,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,]),'R_USE':([0,2,3,26,27,28,29,30,31,32,33,34,35,36,40,],[24,24,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,]),'R_SELECT':([0,2,3,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,57,72,106,107,108,109,168,190,248,353,355,356,357,358,359,372,373,374,449,450,451,452,527,528,529,530,621,631,673,675,681,],[25,25,-3,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-279,-279,-279,-14,25,25,25,-278,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'S_PARIZQ':([0,2,3,20,21,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,57,59,63,69,72,73,74,82,91,92,93,94,95,97,100,106,107,108,109,110,119,120,121,126,134,140,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,160,164,165,168,172,175,180,182,185,186,187,190,198,223,248,249,250,252,253,254,255,257,259,261,264,272,273,274,275,331,336,351,353,355,356,357,358,359,360,366,367,368,369,370,372,373,374,398,401,410,411,413,418,437,444,445,446,447,448,449,450,451,452,454,466,484,485,486,487,488,496,502,525,527,528,529,530,535,552,574,615,617,618,620,621,622,631,632,640,673,675,681,727,],[20,20,-3,20,57,72,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-279,-279,-279,-14,20,57,72,143,168,175,175,182,184,185,186,187,188,189,190,20,-278,20,20,197,-15,-16,-17,216,182,72,175,175,175,175,175,175,175,175,248,175,175,175,175,175,175,175,182,182,168,143,175,182,182,175,175,175,20,309,57,20,353,175,355,-203,-204,-205,356,357,358,359,175,372,373,374,418,175,175,20,20,20,20,20,20,175,449,450,451,452,175,20,20,20,490,496,500,501,503,175,175,175,527,528,529,530,20,20,20,20,175,547,570,570,570,570,570,175,602,621,20,20,20,20,631,635,570,182,182,672,673,20,675,20,681,684,20,20,20,732,]),'$end':([1,2,3,26,27,28,29,30,31,32,33,34,35,36,40,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,]),'S_PUNTOCOMA':([4,5,6,7,8,9,10,11,12,13,14,41,43,48,56,58,62,64,65,66,67,68,69,70,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,96,98,99,101,102,116,119,120,121,127,129,131,133,135,136,137,139,141,161,162,166,172,173,174,176,177,181,191,192,194,195,196,202,203,207,208,212,214,217,218,220,222,224,225,226,227,228,235,236,237,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,282,283,284,291,305,311,315,318,320,321,322,326,329,334,338,339,340,342,343,349,350,362,363,364,365,375,376,377,378,381,382,383,384,387,399,402,403,404,405,406,408,415,416,421,422,423,424,425,426,427,430,432,435,443,453,469,471,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,491,493,494,499,507,508,511,512,513,514,515,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,551,564,568,569,571,572,573,574,575,576,577,578,579,580,581,582,584,586,587,589,590,591,604,605,606,607,608,609,610,611,612,613,616,619,627,628,629,630,637,638,645,647,648,649,650,659,660,662,664,665,666,667,668,669,670,671,676,677,678,679,685,696,697,698,700,704,706,708,710,716,717,718,720,721,722,735,736,737,],[27,28,29,30,31,32,33,34,35,36,40,-18,-19,-350,-288,-309,-351,-277,-280,-281,-288,-284,-223,-96,-97,-151,-152,-153,-154,-155,-156,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-348,-15,-16,-17,-275,-291,-287,-344,-276,-290,-345,-309,-283,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-272,-273,-274,-349,-240,-241,-248,-264,-265,-309,-340,-286,-308,-309,-311,-309,-293,-295,-288,-224,-285,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-98,-157,-214,-101,-200,-33,-250,-249,-254,-255,-256,-251,-252,-338,-289,-311,-319,-311,-294,-282,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-36,-242,-243,-244,-245,-246,-247,-261,-262,-339,-341,-342,-343,-292,-319,-332,-319,-223,-207,-164,-166,-28,-54,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,-21,-29,-30,-253,-332,-269,-317,-314,-315,-332,-271,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-20,-91,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,-34,-31,-32,-258,-259,-260,-263,-335,-268,-334,-334,-318,-321,-326,-326,-310,-270,-298,-190,-194,-196,-198,-89,-90,-71,-35,-24,-257,-46,-48,-330,-331,-329,-324,-325,-329,-312,-313,-316,-296,-191,-195,-197,-199,-80,-333,-320,-322,-323,-188,-185,-352,-27,-327,-328,-297,-186,-189,-187,-353,-368,-49,]),'R_UNION':([13,54,56,64,65,66,67,68,69,70,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,96,98,99,101,102,119,120,121,127,129,131,132,135,136,139,141,161,162,166,169,172,173,174,176,177,181,191,192,194,195,196,220,222,224,225,226,227,228,235,236,237,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,282,283,284,291,304,305,338,339,340,342,343,349,350,352,362,363,364,365,375,376,377,378,381,382,383,384,387,425,426,427,430,432,435,436,438,439,440,441,442,443,453,455,456,457,507,508,511,512,513,514,515,517,518,519,520,521,522,523,524,526,531,532,533,534,536,537,538,539,540,541,542,606,607,608,609,610,611,612,613,616,619,623,624,625,626,627,628,629,630,660,662,664,665,666,667,668,669,670,671,674,676,677,678,679,680,696,697,698,700,703,704,705,706,707,716,717,718,720,721,722,],[37,37,-288,-277,-280,-281,-288,-284,-223,-96,-97,-151,-152,-153,-154,-155,-156,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-275,-291,-287,37,-276,-290,-309,-283,-169,-170,-215,37,-223,-150,-151,-128,-149,-213,-108,-109,-272,-273,-274,-286,-308,-309,-311,-309,-293,-295,-288,-224,-285,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-98,-157,-214,-101,37,-200,-289,-311,-319,-311,-294,-282,-99,37,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-319,-332,-319,-223,-207,37,37,37,37,37,37,-164,-166,37,37,37,-332,-269,-317,-314,-315,-332,-271,-288,-208,-167,-179,-180,-181,-182,-184,-165,37,37,37,37,-168,-192,-193,-183,-106,-107,-116,-268,-334,-334,-318,-321,-326,-326,-310,-270,-298,37,37,37,37,-190,-194,-196,-198,-330,-331,-329,-324,-325,-329,-312,-313,-316,-296,37,-191,-195,-197,-199,37,-333,-320,-322,-323,37,-188,37,-185,37,-327,-328,-297,-186,-189,-187,]),'R_INTERSECT':([13,54,56,64,65,66,67,68,69,70,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,96,98,99,101,102,119,120,121,127,129,131,132,135,136,139,141,161,162,166,169,172,173,174,176,177,181,191,192,194,195,196,220,222,224,225,226,227,228,235,236,237,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,282,283,284,291,304,305,338,339,340,342,343,349,350,352,362,363,364,365,375,376,377,378,381,382,383,384,387,425,426,427,430,432,435,436,438,439,440,441,442,443,453,455,456,457,507,508,511,512,513,514,515,517,518,519,520,521,522,523,524,526,531,532,533,534,536,537,538,539,540,541,542,606,607,608,609,610,611,612,613,616,619,623,624,625,626,627,628,629,630,660,662,664,665,666,667,668,669,670,671,674,676,677,678,679,680,696,697,698,700,703,704,705,706,707,716,717,718,720,721,722,],[38,38,-288,-277,-280,-281,-288,-284,-223,-96,-97,-151,-152,-153,-154,-155,-156,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-275,-291,-287,38,-276,-290,-309,-283,-169,-170,-215,38,-223,-150,-151,-128,-149,-213,-108,-109,-272,-273,-274,-286,-308,-309,-311,-309,-293,-295,-288,-224,-285,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-98,-157,-214,-101,38,-200,-289,-311,-319,-311,-294,-282,-99,38,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-319,-332,-319,-223,-207,38,38,38,38,38,38,-164,-166,38,38,38,-332,-269,-317,-314,-315,-332,-271,-288,-208,-167,-179,-180,-181,-182,-184,-165,38,38,38,38,-168,-192,-193,-183,-106,-107,-116,-268,-334,-334,-318,-321,-326,-326,-310,-270,-298,38,38,38,38,-190,-194,-196,-198,-330,-331,-329,-324,-325,-329,-312,-313,-316,-296,38,-191,-195,-197,-199,38,-333,-320,-322,-323,38,-188,38,-185,38,-327,-328,-297,-186,-189,-187,]),'R_EXCEPT':([13,54,56,64,65,66,67,68,69,70,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,96,98,99,101,102,119,120,121,127,129,131,132,135,136,139,141,161,162,166,169,172,173,174,176,177,181,191,192,194,195,196,220,222,224,225,226,227,228,235,236,237,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,282,283,284,291,304,305,338,339,340,342,343,349,350,352,362,363,364,365,375,376,377,378,381,382,383,384,387,425,426,427,430,432,435,436,438,439,440,441,442,443,453,455,456,457,507,508,511,512,513,514,515,517,518,519,520,521,522,523,524,526,531,532,533,534,536,537,538,539,540,541,542,606,607,608,609,610,611,612,613,616,619,623,624,625,626,627,628,629,630,660,662,664,665,666,667,668,669,670,671,674,676,677,678,679,680,696,697,698,700,703,704,705,706,707,716,717,718,720,721,722,],[39,39,-288,-277,-280,-281,-288,-284,-223,-96,-97,-151,-152,-153,-154,-155,-156,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-275,-291,-287,39,-276,-290,-309,-283,-169,-170,-215,39,-223,-150,-151,-128,-149,-213,-108,-109,-272,-273,-274,-286,-308,-309,-311,-309,-293,-295,-288,-224,-285,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-98,-157,-214,-101,39,-200,-289,-311,-319,-311,-294,-282,-99,39,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-319,-332,-319,-223,-207,39,39,39,39,39,39,-164,-166,39,39,39,-332,-269,-317,-314,-315,-332,-271,-288,-208,-167,-179,-180,-181,-182,-184,-165,39,39,39,39,-168,-192,-193,-183,-106,-107,-116,-268,-334,-334,-318,-321,-326,-326,-310,-270,-298,39,39,39,39,-190,-194,-196,-198,-330,-331,-329,-324,-325,-329,-312,-313,-316,-296,39,-191,-195,-197,-199,39,-333,-320,-322,-323,39,-188,39,-185,39,-327,-328,-297,-186,-189,-187,]),'R_FUNCTION':([15,],[42,]),'R_TABLE':([15,17,18,23,],[44,50,51,61,]),'R_TYPE':([15,407,],[46,498,]),'R_OR':([15,71,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,161,162,166,171,172,173,174,176,177,181,191,192,222,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,290,291,305,350,362,363,364,365,375,376,377,378,381,382,383,384,387,435,443,453,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,627,628,629,630,670,671,676,677,678,679,704,706,720,721,722,],[47,165,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-169,-170,-215,165,-223,-150,-151,-128,-149,165,-108,-109,165,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,165,-101,-200,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-207,-164,-166,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-190,-194,-196,-198,165,165,-191,-195,-197,-199,-188,-185,-186,-189,-187,]),'R_DATABASE':([15,17,18,45,115,],[-23,49,52,113,-22,]),'R_DATABASES':([16,],[48,]),'R_INTO':([19,],[53,]),'ID':([21,23,24,25,42,44,46,49,50,51,52,53,56,59,60,61,63,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,98,99,101,102,111,113,114,123,125,128,130,134,140,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,161,162,164,165,166,168,172,173,174,175,176,177,180,181,182,185,186,187,191,192,200,213,216,223,235,236,237,239,241,242,243,244,245,246,247,250,251,256,258,260,262,263,267,268,269,270,272,276,277,278,279,280,282,283,284,285,291,305,309,310,313,314,316,319,325,327,328,330,335,336,337,344,350,351,360,362,363,364,365,370,375,376,377,378,381,382,383,384,385,387,392,400,409,418,420,429,431,432,433,435,437,443,444,453,454,470,490,495,496,498,500,501,503,504,510,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,567,602,614,615,617,627,628,629,630,635,651,652,653,654,655,656,663,672,676,677,678,679,684,704,706,713,715,719,720,721,722,726,732,],[56,-347,62,69,110,-26,-26,119,119,-267,-267,126,119,56,137,-346,69,119,-284,-223,-96,-97,172,172,172,-151,-152,-153,-154,-155,-156,172,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,119,-26,201,119,119,219,119,172,69,236,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-169,-170,172,172,-215,172,-223,-150,-151,172,-128,-149,172,-213,172,172,172,172,-108,-109,119,-266,333,56,119,-224,-285,-100,-136,-137,-138,-139,-140,-141,-142,172,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,172,-211,-212,-217,-218,-219,-98,-157,-214,236,-101,-200,392,-25,119,119,407,409,414,415,416,417,219,172,119,432,-99,172,172,-175,-176,-177,-178,172,-220,-221,-222,-143,-102,-103,-104,-105,432,-206,471,493,471,172,506,432,119,-223,432,-207,172,-164,172,-166,172,392,333,586,172,471,592,595,333,604,432,119,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,642,333,432,172,172,-190,-194,-196,-198,683,595,595,595,595,595,595,432,432,-191,-195,-197,-199,595,-188,-185,595,727,432,-186,-189,-187,595,333,]),'R_FROM':([22,64,65,66,67,68,69,70,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,96,98,99,101,102,119,120,121,131,138,141,161,162,166,172,173,174,176,177,181,191,192,220,235,236,237,239,241,242,243,244,245,246,247,251,256,258,260,262,263,265,267,268,269,270,276,277,278,279,280,282,283,284,291,296,297,298,299,300,301,302,305,349,350,361,362,363,364,365,375,376,377,378,381,382,383,384,387,435,443,453,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,627,628,629,630,676,677,678,679,693,704,706,714,720,721,722,],[59,59,-280,-281,-288,-284,-223,-96,-97,-151,-152,-153,-154,-155,-156,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-287,59,-283,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-286,-288,-224,-285,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,360,-171,-172,-173,-174,-211,-212,-217,-218,-219,-98,-157,-214,-101,385,-110,-111,-112,-113,-114,-115,-200,-282,-99,444,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-207,-164,-166,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-190,-194,-196,-198,-191,-195,-197,-199,713,-188,-185,726,-186,-189,-187,]),'R_DISTINCT':([25,159,266,657,694,],[63,265,361,693,714,]),'O_PRODUCTO':([25,63,69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,142,170,172,173,174,176,177,183,185,191,192,236,239,240,241,242,243,244,245,246,247,251,256,258,260,262,263,271,283,286,291,292,294,295,350,354,371,378,381,382,383,384,423,434,443,453,519,526,536,540,541,542,],[65,65,-223,146,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,237,146,-223,-150,-151,-128,-149,146,293,-108,-109,-224,-100,146,146,146,-138,-139,-140,-141,146,146,146,146,146,146,146,146,-157,146,-101,146,146,146,-99,146,146,-143,-102,-103,-104,-105,146,146,146,146,146,146,146,-106,-107,-116,]),'R_CASE':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'O_RESTA':([25,63,69,70,72,73,74,76,77,78,79,80,81,82,84,85,86,87,88,89,90,96,98,99,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,170,172,173,174,175,176,177,180,182,183,185,186,187,191,192,236,239,240,241,242,243,244,245,246,247,250,251,256,258,260,262,263,271,272,283,286,291,292,294,295,336,350,351,354,360,370,371,378,381,382,383,384,418,423,434,437,443,444,453,454,496,519,526,536,540,541,542,615,617,],[74,74,-223,145,74,74,74,-151,-152,-153,-154,-155,-156,74,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,145,-223,-150,-151,74,-128,-149,74,74,145,74,74,74,-108,-109,-224,-100,145,-136,-137,-138,-139,-140,-141,145,74,145,145,145,145,145,145,145,74,-157,145,-101,145,145,145,74,-99,74,145,74,74,145,-143,-102,-103,-104,-105,74,145,145,74,145,74,145,74,74,145,145,145,-106,-107,-116,74,74,]),'O_SUMA':([25,63,69,70,72,73,74,76,77,78,79,80,81,82,84,85,86,87,88,89,90,96,98,99,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,170,172,173,174,175,176,177,180,182,183,185,186,187,191,192,236,239,240,241,242,243,244,245,246,247,250,251,256,258,260,262,263,271,272,283,286,291,292,294,295,336,350,351,354,360,370,371,378,381,382,383,384,418,423,434,437,443,444,453,454,496,519,526,536,540,541,542,615,617,],[73,73,-223,144,73,73,73,-151,-152,-153,-154,-155,-156,73,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,144,-223,-150,-151,73,-128,-149,73,73,144,73,73,73,-108,-109,-224,-100,144,-136,-137,-138,-139,-140,-141,144,73,144,144,144,144,144,144,144,73,-157,144,-101,144,144,144,73,-99,73,144,73,73,144,-143,-102,-103,-104,-105,73,144,144,73,144,73,144,73,73,144,144,144,-106,-107,-116,73,73,]),'R_NOT':([25,63,69,70,72,76,77,78,79,80,81,82,84,85,86,87,88,89,90,96,98,99,112,134,140,159,164,165,167,168,170,172,173,174,176,177,180,182,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,497,540,541,542,555,556,557,558,559,560,561,564,568,569,571,572,573,574,575,576,577,578,579,580,581,582,615,617,636,637,638,639,641,642,645,657,685,724,],[82,82,-223,152,82,-151,-152,-153,-154,-155,-156,82,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,199,82,82,266,82,82,281,82,152,-223,-150,-151,-128,-149,82,82,152,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-54,563,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,563,-106,-107,-116,563,-83,-84,-85,-86,-87,-88,-91,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,82,82,-82,-89,-90,-92,-94,-95,-71,694,-80,-93,]),'INTEGER':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,289,336,351,360,370,380,418,429,437,444,454,492,496,501,509,510,562,570,585,614,615,617,651,652,653,654,655,656,661,663,684,686,713,726,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,513,84,84,84,584,84,596,607,612,84,84,647,669,84,84,596,596,596,596,596,596,696,612,596,84,596,596,]),'STRING':([25,44,49,50,51,52,56,63,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,98,99,101,102,103,104,111,113,117,123,125,130,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,161,162,164,165,166,168,172,173,174,175,176,177,180,181,182,185,186,187,189,191,192,193,200,213,235,236,237,239,241,242,243,244,245,246,247,250,251,256,258,260,262,263,267,268,269,270,272,276,277,278,279,280,282,283,284,289,291,305,310,313,314,336,337,350,351,360,362,363,364,365,370,375,376,377,378,380,381,382,383,384,387,400,418,431,432,435,437,443,444,453,454,462,463,464,465,495,496,501,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,562,570,615,617,627,628,629,630,651,652,653,654,655,656,676,677,678,679,684,686,704,706,713,720,721,722,726,],[85,-26,120,120,-267,-267,120,85,120,-284,-223,-96,-97,85,176,176,-151,-152,-153,-154,-155,-156,85,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,191,192,120,-26,202,120,120,120,85,85,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-169,-170,85,85,-215,85,-223,-150,-151,176,-128,-149,85,-213,85,176,176,176,303,-108,-109,305,120,-266,120,-224,-285,-100,-136,-137,-138,-139,-140,-141,-142,176,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,176,-211,-212,-217,-218,-219,-98,-157,-214,176,-101,-200,-25,120,120,176,120,-99,176,176,-175,-176,-177,-178,176,-220,-221,-222,-143,176,-102,-103,-104,-105,-206,494,176,120,-223,-207,176,-164,176,-166,176,543,544,545,546,587,176,597,120,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,176,176,85,85,-190,-194,-196,-198,597,597,597,597,597,597,-191,-195,-197,-199,597,176,-188,-185,597,-186,-189,-187,597,]),'DECIMAL':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,289,336,351,360,370,380,418,437,444,454,496,501,562,570,615,617,651,652,653,654,655,656,684,686,713,726,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,598,86,86,86,86,598,598,598,598,598,598,598,86,598,598,]),'CHARACTER':([25,44,49,50,51,52,56,63,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,98,99,101,102,111,113,123,125,130,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,161,162,164,165,166,168,172,173,174,175,176,177,180,181,182,185,186,187,191,192,200,213,235,236,237,239,241,242,243,244,245,246,247,250,251,256,258,260,262,263,267,268,269,270,272,276,277,278,279,280,282,283,284,289,291,305,310,313,314,336,337,350,351,360,362,363,364,365,370,375,376,377,378,380,381,382,383,384,387,418,431,432,435,437,443,444,453,454,496,501,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,562,570,615,617,627,628,629,630,651,652,653,654,655,656,676,677,678,679,684,686,704,706,713,720,721,722,726,],[87,-26,121,121,-267,-267,121,87,121,-284,-223,-96,-97,87,87,87,-151,-152,-153,-154,-155,-156,87,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,121,-26,121,121,121,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-169,-170,87,87,-215,87,-223,-150,-151,87,-128,-149,87,-213,87,87,87,87,-108,-109,121,-266,121,-224,-285,-100,-136,-137,-138,-139,-140,-141,-142,87,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,87,-211,-212,-217,-218,-219,-98,-157,-214,87,-101,-200,-25,121,121,87,121,-99,87,87,-175,-176,-177,-178,87,-220,-221,-222,-143,87,-102,-103,-104,-105,-206,87,121,-223,-207,87,-164,87,-166,87,87,599,121,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,87,87,87,87,-190,-194,-196,-198,599,599,599,599,599,599,-191,-195,-197,-199,599,87,-188,-185,599,-186,-189,-187,599,]),'R_TRUE':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,159,160,164,165,167,168,175,180,182,185,186,187,250,266,272,281,289,336,351,360,370,380,418,437,444,454,496,501,562,570,615,617,651,652,653,654,655,656,684,686,713,726,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,268,88,88,88,278,88,88,88,88,88,88,88,88,363,88,375,88,88,88,88,88,88,88,88,88,88,88,600,88,88,88,88,600,600,600,600,600,600,600,88,600,600,]),'R_FALSE':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,159,160,164,165,167,168,175,180,182,185,186,187,250,266,272,281,289,336,351,360,370,380,418,437,444,454,496,501,562,570,615,617,651,652,653,654,655,656,684,686,713,726,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,269,89,89,89,279,89,89,89,89,89,89,89,89,364,89,376,89,89,89,89,89,89,89,89,89,89,89,601,89,89,89,89,601,601,601,601,601,601,601,89,601,601,]),'R_NULL':([25,63,72,73,74,82,84,86,87,88,89,90,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,159,160,164,165,168,175,176,180,182,185,186,187,197,236,250,266,272,289,306,307,308,336,351,360,370,380,389,418,432,437,444,454,468,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,496,497,555,556,557,558,559,560,561,562,563,564,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,611,612,615,617,636,637,638,639,641,642,645,664,665,666,667,685,686,723,724,733,],[90,90,90,90,90,90,-127,-129,-130,-131,-132,-133,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,267,90,90,90,90,90,-128,90,90,90,90,90,308,-224,90,362,90,90,308,-355,-356,90,90,90,90,90,-354,90,-223,90,90,90,550,-54,564,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,90,564,564,-83,-84,-85,-86,-87,-88,90,638,-91,-59,-66,90,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,-326,-326,90,90,-82,-89,-90,-92,-94,-95,-71,699,-324,-325,699,-80,90,730,-93,736,]),'R_NOW':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,386,418,437,444,454,496,615,617,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,466,91,91,91,91,91,91,91,]),'R_COUNT':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'R_SUM':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'R_PROM':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'R_EXTRACT':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'R_DATE_PART':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'R_CURRENT_DATE':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'R_CURRENT_TIME':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'R_EXISTS':([25,63,72,82,124,134,140,164,165,168,180,182,199,615,617,],[100,100,100,100,213,100,100,100,100,100,100,100,310,100,100,]),'R_TIMESTAMP':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,385,386,392,409,418,437,444,454,496,498,615,617,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,462,481,481,103,103,103,103,103,481,103,103,]),'R_INTERVAL':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,385,386,392,409,418,437,444,454,496,498,615,617,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,465,489,489,104,104,104,104,104,489,104,104,]),'R_ALL':([37,38,39,77,78,79,80,81,84,86,87,88,89,90,96,98,99,153,154,155,156,158,161,162,163,172,173,174,176,177,191,192,236,239,241,242,243,244,245,246,247,267,268,269,270,283,291,350,362,363,364,365,378,381,382,383,384,443,453,509,519,526,536,540,541,542,],[107,107,107,-152,-153,-154,-155,-156,-127,-129,-130,-131,-132,-133,-124,-122,-123,253,253,253,253,253,253,253,253,-223,-150,-151,-128,-149,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,253,253,253,253,-157,-101,-99,253,253,253,253,-143,-102,-103,-104,-105,253,253,608,253,253,253,-106,-107,-116,]),'R_IF':([44,46,51,52,113,],[112,112,124,124,112,]),'R_REPLACE':([47,],[115,]),'R_LIKE':([48,69,76,85,105,172,236,],[117,-223,-202,-201,193,-223,-224,]),'S_PARDER':([54,56,64,65,66,67,68,69,70,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,96,98,99,101,102,119,120,121,127,129,131,132,135,136,139,141,143,161,162,166,169,170,171,172,173,174,176,177,181,184,191,192,194,195,196,220,222,224,225,226,227,228,235,236,237,238,239,240,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,282,283,284,286,291,292,293,294,295,304,305,306,307,308,332,333,338,339,340,342,343,349,350,352,362,363,364,365,375,376,377,378,381,382,383,384,387,389,390,391,393,394,395,396,425,426,427,430,432,434,435,436,438,439,440,441,442,443,453,455,456,457,459,460,461,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,505,506,507,508,511,512,513,514,515,517,518,519,520,521,522,523,524,526,531,532,533,534,536,537,538,539,540,541,542,543,544,545,546,547,553,554,555,556,557,558,559,560,561,564,568,569,571,572,573,574,575,576,577,578,579,580,581,582,583,588,592,593,595,596,597,598,599,600,601,603,606,607,608,609,610,611,612,613,616,619,623,624,625,626,627,628,629,630,633,636,637,638,639,641,642,643,644,645,646,650,658,659,660,662,664,665,666,667,668,669,670,671,674,676,677,678,679,680,683,685,687,688,689,690,691,692,696,697,698,700,701,702,703,704,705,706,707,711,712,716,717,718,720,721,722,724,725,728,731,734,737,],[127,-288,-277,-280,-281,-288,-284,-223,-96,-97,-151,-152,-153,-154,-155,-156,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-275,-291,-287,221,-276,-290,-309,-283,239,-169,-170,-215,282,283,284,-223,-150,-151,-128,-149,-213,291,-108,-109,-272,-273,-274,-286,-308,-309,-311,-309,-293,-295,-288,-224,-285,350,-100,-135,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-98,-157,-214,283,-101,381,382,383,384,387,-200,388,-355,-356,419,-53,-289,-311,-319,-311,-294,-282,-99,435,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-354,469,-38,-40,-41,-42,-43,-292,-319,-332,-319,-223,-134,-207,518,520,521,522,523,524,-164,-166,537,538,539,540,541,542,-54,-45,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,605,-52,-332,-269,-317,-314,-315,-332,-271,-288,-208,-167,-179,-180,-181,-182,-184,-165,627,628,629,630,-168,-192,-193,-183,-106,-107,-116,-117,-118,-119,-120,633,-37,-39,-44,-83,-84,-85,-86,-87,-88,-91,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,646,648,649,650,-233,-234,-235,-236,-237,-238,-239,659,-268,-334,-334,-318,-321,-326,-326,-310,-270,-298,676,677,678,679,-190,-194,-196,-198,-121,-82,-89,-90,-92,-94,-95,685,-126,-71,-47,-46,695,-48,-330,-331,-329,-324,-325,-329,-312,-313,-316,-296,704,-191,-195,-197,-199,706,710,-80,-225,-226,-227,-228,-229,-230,-333,-320,-322,-323,-300,718,720,-188,721,-185,722,724,-125,-327,-328,-297,-186,-189,-187,-93,-231,-299,-232,737,-49,]),'R_SET':([55,56,119,120,121,129,131,220,407,425,],[128,-288,-15,-16,-17,-291,-287,-286,497,-292,]),'R_AS':([56,67,68,69,70,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,96,98,99,101,102,161,162,166,172,173,174,176,177,181,191,192,201,221,235,236,237,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,282,283,284,291,305,350,362,363,364,365,375,376,377,378,381,382,383,384,387,388,431,432,435,443,453,467,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,549,550,627,628,629,630,676,677,678,679,704,706,720,721,722,],[130,130,-284,-223,-96,-97,-151,-152,-153,-154,-155,-156,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,312,337,130,-224,-285,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-98,-157,-214,-101,-200,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-358,130,-223,-207,-164,-166,548,130,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-357,-359,-190,-194,-196,-198,-191,-195,-197,-199,-188,-185,-186,-189,-187,]),'S_COMA':([56,66,67,68,69,70,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,141,161,162,166,172,173,174,176,177,181,191,192,207,208,217,218,220,235,236,237,238,239,240,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,282,283,284,291,303,305,315,318,320,321,322,326,329,332,333,338,349,350,362,363,364,365,375,376,377,378,381,382,383,384,387,390,391,393,394,395,396,408,415,416,421,422,423,424,425,432,434,435,443,453,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,499,505,506,511,512,513,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,553,554,555,556,557,558,559,560,561,564,568,569,571,572,573,574,575,576,577,578,579,580,581,582,583,588,589,590,591,603,604,609,610,611,612,627,628,629,630,636,637,638,639,641,642,643,644,645,646,649,650,658,659,664,665,666,667,668,669,676,677,678,679,685,697,698,700,701,702,704,706,712,716,717,720,721,722,724,728,734,737,],[-288,140,-288,-284,-223,-96,-97,-151,-152,-153,-154,-155,-156,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,223,-290,-283,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,317,-248,335,-340,-286,-288,-224,-285,351,-100,-135,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-98,-157,-214,-101,386,-200,-250,-249,-254,-255,-256,-251,-252,420,-53,-289,-282,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,470,-38,-40,-41,-42,-43,-247,-261,-262,-339,-341,-342,-343,-292,-223,-134,-207,-164,-166,-54,-45,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,-253,351,-52,614,-314,-315,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-37,-39,-44,-83,-84,-85,-86,-87,-88,-91,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,420,351,-258,-259,-260,420,-263,663,-321,-326,-326,-190,-194,-196,-198,-82,-89,-90,-92,-94,-95,686,-126,-71,-47,-257,-46,420,-48,-329,-324,-325,-329,-312,-313,-191,-195,-197,-199,-80,-320,-322,-323,-300,719,-188,-185,-125,-327,-328,-186,-189,-187,-93,-299,420,-49,]),'R_WHERE':([56,58,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,139,161,162,166,172,173,174,176,177,181,191,192,217,218,220,224,226,227,228,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,291,305,338,343,350,362,363,364,365,375,376,377,378,381,382,383,384,387,421,422,423,424,425,432,435,443,453,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,619,627,628,629,630,671,676,677,678,679,704,706,718,720,721,722,],[-288,134,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,-276,-290,134,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,134,-340,-286,134,134,-293,-295,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,-101,-200,-289,-294,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-339,-341,-342,-343,-292,-223,-207,-164,-166,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-298,-190,-194,-196,-198,-296,-191,-195,-197,-199,-188,-185,-297,-186,-189,-187,]),'R_NATURAL':([56,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,139,161,162,166,172,173,174,176,177,181,191,192,220,227,228,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,291,305,338,343,350,362,363,364,365,375,376,377,378,381,382,383,384,387,425,432,435,443,453,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,619,627,628,629,630,671,676,677,678,679,704,706,718,720,721,722,],[-288,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,-276,-290,230,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-286,230,-295,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,-101,-200,-289,-294,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-223,-207,-164,-166,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-298,-190,-194,-196,-198,-296,-191,-195,-197,-199,-188,-185,-297,-186,-189,-187,]),'R_INNER':([56,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,139,161,162,166,172,173,174,176,177,181,191,192,220,227,228,230,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,291,305,338,343,350,362,363,364,365,375,376,377,378,381,382,383,384,387,425,432,435,443,453,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,619,627,628,629,630,671,676,677,678,679,704,706,718,720,721,722,],[-288,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,-276,-290,231,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-286,231,-295,231,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,-101,-200,-289,-294,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-223,-207,-164,-166,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-298,-190,-194,-196,-198,-296,-191,-195,-197,-199,-188,-185,-297,-186,-189,-187,]),'R_LEFT':([56,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,139,161,162,166,172,173,174,176,177,181,191,192,220,227,228,230,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,291,305,338,343,350,362,363,364,365,375,376,377,378,381,382,383,384,387,425,432,435,443,453,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,619,627,628,629,630,671,676,677,678,679,704,706,718,720,721,722,],[-288,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,-276,-290,232,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-286,232,-295,232,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,-101,-200,-289,-294,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-223,-207,-164,-166,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-298,-190,-194,-196,-198,-296,-191,-195,-197,-199,-188,-185,-297,-186,-189,-187,]),'R_RIGHT':([56,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,139,161,162,166,172,173,174,176,177,181,191,192,220,227,228,230,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,291,305,338,343,350,362,363,364,365,375,376,377,378,381,382,383,384,387,425,432,435,443,453,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,619,627,628,629,630,671,676,677,678,679,704,706,718,720,721,722,],[-288,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,-276,-290,233,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-286,233,-295,233,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,-101,-200,-289,-294,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-223,-207,-164,-166,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-298,-190,-194,-196,-198,-296,-191,-195,-197,-199,-188,-185,-297,-186,-189,-187,]),'R_FULL':([56,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,139,161,162,166,172,173,174,176,177,181,191,192,220,227,228,230,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,291,305,338,343,350,362,363,364,365,375,376,377,378,381,382,383,384,387,425,432,435,443,453,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,619,627,628,629,630,671,676,677,678,679,704,706,718,720,721,722,],[-288,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,-276,-290,234,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-286,234,-295,234,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,-101,-200,-289,-294,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-223,-207,-164,-166,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-298,-190,-194,-196,-198,-296,-191,-195,-197,-199,-188,-185,-297,-186,-189,-187,]),'R_GROUP':([56,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,139,161,162,166,172,173,174,176,177,181,191,192,220,222,224,225,226,227,228,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,291,305,338,339,342,343,350,362,363,364,365,375,376,377,378,381,382,383,384,387,425,432,435,443,453,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,619,627,628,629,630,671,676,677,678,679,704,706,718,720,721,722,],[-288,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,-276,-290,-309,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-286,-308,-309,341,-309,-293,-295,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,-101,-200,-289,341,341,-294,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-223,-207,-164,-166,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-298,-190,-194,-196,-198,-296,-191,-195,-197,-199,-188,-185,-297,-186,-189,-187,]),'R_ORDER':([56,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,139,161,162,166,172,173,174,176,177,181,191,192,220,222,224,225,226,227,228,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,291,305,338,339,340,342,343,350,362,363,364,365,375,376,377,378,381,382,383,384,387,425,426,430,432,435,443,453,511,512,513,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,613,619,627,628,629,630,668,669,670,671,676,677,678,679,704,706,718,720,721,722,],[-288,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,-276,-290,-309,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-286,-308,-309,-311,-309,-293,-295,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,-101,-200,-289,-311,428,-311,-294,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,428,428,-223,-207,-164,-166,-317,-314,-315,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-310,-298,-190,-194,-196,-198,-312,-313,-316,-296,-191,-195,-197,-199,-188,-185,-297,-186,-189,-187,]),'R_LIMIT':([56,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,119,120,121,129,131,135,136,139,161,162,166,172,173,174,176,177,181,191,192,220,222,224,225,226,227,228,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,291,305,338,339,340,342,343,350,362,363,364,365,375,376,377,378,381,382,383,384,387,425,426,427,430,432,435,443,453,507,511,512,513,514,517,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,609,610,611,612,613,619,627,628,629,630,664,665,666,667,668,669,670,671,676,677,678,679,697,698,700,704,706,716,717,718,720,721,722,],[-288,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-15,-16,-17,-291,-287,-276,-290,-309,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-286,-308,-309,-311,-309,-293,-295,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,-101,-200,-289,-311,-319,-311,-294,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-292,-319,509,509,-223,-207,-164,-166,509,-317,-314,-315,509,-288,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-318,-321,-326,-326,-310,-298,-190,-194,-196,-198,-329,-324,-325,-329,-312,-313,-316,-296,-191,-195,-197,-199,-320,-322,-323,-188,-185,-327,-328,-297,-186,-189,-187,]),'S_PUNTO':([69,172,432,],[142,285,285,]),'O_DIVISION':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,240,241,242,243,244,245,246,247,251,256,258,260,262,263,271,283,286,291,292,294,295,350,354,371,378,381,382,383,384,423,434,443,453,519,526,536,540,541,542,],[-223,147,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,147,-223,-150,-151,-128,-149,147,-108,-109,-224,-100,147,147,147,-138,-139,-140,-141,147,147,147,147,147,147,147,147,-157,147,-101,147,147,147,-99,147,147,-143,-102,-103,-104,-105,147,147,147,147,147,147,147,-106,-107,-116,]),'O_EXPONENTE':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,240,241,242,243,244,245,246,247,251,256,258,260,262,263,271,283,286,291,292,294,295,350,354,371,378,381,382,383,384,423,434,443,453,519,526,536,540,541,542,],[-223,148,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,148,-223,148,-151,-128,148,148,-108,-109,-224,-100,148,148,148,148,148,-140,148,148,148,148,148,148,148,148,148,-157,148,-101,148,148,148,-99,148,148,-143,-102,-103,-104,-105,148,148,148,148,148,148,148,-106,-107,-116,]),'O_MODULAR':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,240,241,242,243,244,245,246,247,251,256,258,260,262,263,271,283,286,291,292,294,295,350,354,371,378,381,382,383,384,423,434,443,453,519,526,536,540,541,542,],[-223,149,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,149,-223,-150,-151,-128,-149,149,-108,-109,-224,-100,149,149,149,-138,-139,-140,-141,149,149,149,149,149,149,149,149,-157,149,-101,149,149,149,-99,149,149,-143,-102,-103,-104,-105,149,149,149,149,149,149,149,-106,-107,-116,]),'OC_CONCATENAR':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,240,241,242,243,244,245,246,247,251,256,258,260,262,263,271,283,286,291,292,294,295,350,354,371,378,381,382,383,384,423,434,443,453,519,526,536,540,541,542,],[-223,150,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,150,-223,-150,-151,-128,-149,150,-108,-109,-224,-100,150,-136,-137,-138,-139,-140,-141,-142,150,150,150,150,150,150,150,-157,150,-101,150,150,150,-99,150,150,-143,-102,-103,-104,-105,150,150,150,150,150,150,150,-106,-107,-116,]),'R_IN':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,152,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,],[-223,151,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,249,151,-223,-150,-151,-128,-149,151,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,]),'OL_MENORQUE':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,594,595,596,597,598,599,600,601,],[-223,153,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,153,-223,-150,-151,-128,-149,153,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,651,-233,-234,-235,-236,-237,-238,-239,]),'OL_MAYORQUE':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,594,595,596,597,598,599,600,601,],[-223,154,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,154,-223,-150,-151,-128,-149,154,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,652,-233,-234,-235,-236,-237,-238,-239,]),'OL_MAYORIGUALQUE':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,594,595,596,597,598,599,600,601,],[-223,155,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,155,-223,-150,-151,-128,-149,155,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,653,-233,-234,-235,-236,-237,-238,-239,]),'OL_MENORIGUALQUE':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,594,595,596,597,598,599,600,601,],[-223,156,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,156,-223,-150,-151,-128,-149,156,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,654,-233,-234,-235,-236,-237,-238,-239,]),'S_IGUAL':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,219,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,400,492,540,541,542,594,595,596,597,598,599,600,601,],[-223,157,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,157,-223,-150,-151,-128,-149,157,-108,-109,336,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,495,585,-106,-107,-116,655,-233,-234,-235,-236,-237,-238,-239,]),'OL_DISTINTODE':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,594,595,596,597,598,599,600,601,],[-223,158,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,158,-223,-150,-151,-128,-149,158,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,656,-233,-234,-235,-236,-237,-238,-239,]),'R_IS':([69,70,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,96,98,99,101,102,161,162,166,170,171,172,173,174,176,177,181,183,191,192,222,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,290,291,305,350,362,363,364,365,375,376,377,378,381,382,383,384,387,435,443,453,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,594,595,596,597,598,599,600,601,627,628,629,630,670,671,676,677,678,679,704,706,720,721,722,],[-223,159,167,-151,-152,-153,-154,-155,-156,-216,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-169,-170,-215,159,167,-223,-150,-151,-128,-149,167,159,-108,-109,167,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,167,167,-217,-218,-219,-157,-214,167,-101,-200,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-207,-164,-166,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,657,-233,-234,-235,-236,-237,-238,-239,-190,-194,-196,-198,167,167,-191,-195,-197,-199,-188,-185,-186,-189,-187,]),'R_BETWEEN':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,152,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,],[-223,160,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,250,160,-223,-150,-151,-128,-149,160,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,]),'R_ISNULL':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,],[-223,161,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,161,-223,-150,-151,-128,-149,161,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,]),'R_NOTNULL':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,],[-223,162,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,162,-223,-150,-151,-128,-149,162,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,]),'OL_ESIGUAL':([69,70,76,77,78,79,80,81,84,85,86,87,88,89,90,96,98,99,170,172,173,174,176,177,183,191,192,236,239,241,242,243,244,245,246,247,283,291,350,378,381,382,383,384,540,541,542,],[-223,163,-151,-152,-153,-154,-155,-156,-127,-128,-129,-130,-131,-132,-133,-124,-122,-123,163,-223,-150,-151,-128,-149,163,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-157,-101,-99,-143,-102,-103,-104,-105,-106,-107,-116,]),'R_AND':([71,77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,161,162,166,171,172,173,174,176,177,181,191,192,222,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,271,276,277,278,279,280,283,284,290,291,305,350,354,362,363,364,365,371,375,376,377,378,381,382,383,384,387,435,443,453,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,627,628,629,630,670,671,676,677,678,679,704,706,720,721,722,],[164,-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-169,-170,-215,164,-223,-150,-151,-128,-149,164,-108,-109,164,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,370,-211,-212,-217,-218,-219,-157,-214,164,-101,-200,-99,437,-175,-176,-177,-178,454,-220,-221,-222,-143,-102,-103,-104,-105,-206,-207,-164,-166,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-190,-194,-196,-198,164,164,-191,-195,-197,-199,-188,-185,-186,-189,-187,]),'R_WHEN':([75,84,86,87,88,89,90,176,178,179,288,458,],[180,-127,-129,-130,-131,-132,-133,-128,180,-145,-144,-146,]),'R_THEN':([77,78,79,80,81,83,84,86,87,88,89,90,96,98,99,101,102,161,162,166,172,173,174,176,177,181,191,192,236,239,241,242,243,244,245,246,247,251,256,258,260,262,263,267,268,269,270,276,277,278,279,280,283,284,290,291,305,350,362,363,364,365,375,376,377,378,381,382,383,384,387,435,443,453,518,519,520,521,522,523,524,526,536,537,538,539,540,541,542,627,628,629,630,676,677,678,679,704,706,720,721,722,],[-152,-153,-154,-155,-156,-216,-127,-129,-130,-131,-132,-133,-124,-122,-123,-209,-210,-169,-170,-215,-223,-150,-151,-128,-149,-213,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,-158,-159,-160,-161,-162,-163,-171,-172,-173,-174,-211,-212,-217,-218,-219,-157,-214,380,-101,-200,-99,-175,-176,-177,-178,-220,-221,-222,-143,-102,-103,-104,-105,-206,-207,-164,-166,-208,-167,-179,-180,-181,-182,-184,-165,-168,-192,-193,-183,-106,-107,-116,-190,-194,-196,-198,-191,-195,-197,-199,-188,-185,-186,-189,-187,]),'R_ANY':([77,78,79,80,81,84,86,87,88,89,90,96,98,99,153,154,155,156,158,161,162,163,172,173,174,176,177,191,192,236,239,241,242,243,244,245,246,247,267,268,269,270,283,291,350,362,363,364,365,378,381,382,383,384,443,453,519,526,536,540,541,542,],[-152,-153,-154,-155,-156,-127,-129,-130,-131,-132,-133,-124,-122,-123,254,254,254,254,254,254,254,254,-223,-150,-151,-128,-149,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,254,254,254,254,-157,-101,-99,254,254,254,254,-143,-102,-103,-104,-105,254,254,254,254,254,-106,-107,-116,]),'R_SOME':([77,78,79,80,81,84,86,87,88,89,90,96,98,99,153,154,155,156,158,161,162,163,172,173,174,176,177,191,192,236,239,241,242,243,244,245,246,247,267,268,269,270,283,291,350,362,363,364,365,378,381,382,383,384,443,453,519,526,536,540,541,542,],[-152,-153,-154,-155,-156,-127,-129,-130,-131,-132,-133,-124,-122,-123,255,255,255,255,255,255,255,255,-223,-150,-151,-128,-149,-108,-109,-224,-100,-136,-137,-138,-139,-140,-141,-142,255,255,255,255,-157,-101,-99,255,255,255,255,-143,-102,-103,-104,-105,255,255,255,255,255,-106,-107,-116,]),'R_END':([84,86,87,88,89,90,176,178,179,287,288,379,458,729,730,],[-127,-129,-130,-131,-132,-133,-128,-148,-145,378,-144,-147,-146,733,-367,]),'R_ELSE':([84,86,87,88,89,90,176,178,179,288,458,],[-127,-129,-130,-131,-132,-133,-128,289,-145,-144,-146,]),'R_DEFAULT':([84,86,87,88,89,90,176,336,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,497,555,556,557,558,559,560,561,564,568,569,571,572,573,574,575,576,577,578,579,580,581,582,636,637,638,639,641,642,645,685,724,],[-127,-129,-130,-131,-132,-133,-128,424,-54,562,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,562,562,-83,-84,-85,-86,-87,-88,-91,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,-82,-89,-90,-92,-94,-95,-71,-80,-93,]),'R_PRIMARY':([84,86,87,88,89,90,176,209,309,470,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,555,556,557,558,559,560,561,564,568,569,571,572,573,574,575,576,577,578,579,580,581,582,636,637,638,639,641,642,645,685,724,],[-127,-129,-130,-131,-132,-133,-128,324,324,324,-54,566,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,566,-83,-84,-85,-86,-87,-88,-91,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,-82,-89,-90,-92,-94,-95,-71,-80,-93,]),'R_REFERENCES':([84,86,87,88,89,90,176,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,555,556,557,558,559,560,561,564,568,569,571,572,573,574,575,576,577,578,579,580,581,582,636,637,638,639,641,642,645,685,695,724,],[-127,-129,-130,-131,-132,-133,-128,-54,567,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,567,-83,-84,-85,-86,-87,-88,-91,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,-82,-89,-90,-92,-94,-95,-71,-80,715,-93,]),'R_CONSTRAINT':([84,86,87,88,89,90,176,209,210,309,470,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,555,556,557,558,559,560,561,564,568,569,571,572,573,574,575,576,577,578,579,580,581,582,636,637,638,639,641,642,645,685,724,],[-127,-129,-130,-131,-132,-133,-128,325,327,325,325,-54,325,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,325,-83,-84,-85,-86,-87,-88,-91,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,-82,-89,-90,-92,-94,-95,-71,-80,-93,]),'R_UNIQUE':([84,86,87,88,89,90,176,209,309,323,414,470,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,555,556,557,558,559,560,561,564,565,568,569,571,572,573,574,575,576,577,578,579,580,581,582,636,637,638,639,641,642,645,685,724,],[-127,-129,-130,-131,-132,-133,-128,-51,398,410,-50,398,-54,-51,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,-51,-83,-84,-85,-86,-87,-88,-91,639,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,-82,-89,-90,-92,-94,-95,-71,-80,-93,]),'R_CHECK':([84,86,87,88,89,90,176,209,309,323,397,414,470,471,472,473,474,475,476,478,479,480,481,482,483,484,485,486,487,488,489,555,556,557,558,559,560,561,564,565,568,569,571,572,573,574,575,576,577,578,579,580,581,582,636,637,638,639,641,642,645,685,724,],[-127,-129,-130,-131,-132,-133,-128,-51,-51,411,411,-50,-51,-54,-51,-55,-56,-57,-58,-60,-61,-62,-63,-64,-65,-81,-81,-81,-81,-81,-79,-51,-83,-84,-85,-86,-87,-88,-91,640,-59,-66,-67,-68,-69,-81,-70,-72,-73,-74,-75,-76,-77,-78,-82,-89,-90,-92,-94,-95,-71,-80,-93,]),'R_RENAME':([118,119,120,121,122,317,],[204,-15,-16,-17,211,211,]),'R_OWNER':([118,119,120,121,311,],[205,-15,-16,-17,400,]),'R_ADD':([119,120,121,122,317,],[-15,-16,-17,209,209,]),'R_ON':([119,120,121,131,220,236,431,432,516,],[-15,-16,-17,-287,-286,-224,-288,-223,617,]),'R_USING':([119,120,121,131,220,236,431,432,516,],[-15,-16,-17,-287,-286,-224,-288,-223,618,]),'R_MODE':([119,120,121,311,399,493,494,586,587,],[-15,-16,-17,-33,492,-29,-30,-31,-32,]),'R_VALUES':([126,215,419,],[-337,331,-336,]),'R_UNKNOWN':([159,167,266,281,],[270,280,365,377,]),'R_SYMMETRIC':([160,],[272,]),'R_YEAR':([188,489,],[297,577,]),'R_MONTH':([188,489,],[298,578,]),'R_DAY':([188,489,],[299,579,]),'R_HOUR':([188,489,],[300,580,]),'R_MINUTE':([188,489,],[301,581,]),'R_SECOND':([188,489,],[302,582,]),'R_TO':([204,205,417,],[313,314,504,]),'R_COLUMN':([206,209,210,211,],[316,319,328,330,]),'R_FOREIGN':([209,309,323,397,414,470,],[-51,-51,412,412,-50,-51,]),'R_JOIN':([229,231,232,233,234,345,346,347,348,],[344,-301,-302,-304,-306,433,-303,-305,-307,]),'R_OUTER':([232,233,234,],[346,347,348,]),'R_HAVING':([236,432,511,512,513,668,669,],[-224,-223,615,-314,-315,-312,-313,]),'R_ASC':([236,432,611,612,],[-224,-223,665,665,]),'R_DESC':([236,432,611,612,],[-224,-223,666,666,]),'R_ENUM':([312,],[401,]),'R_CURRENT_USER':([314,],[405,]),'R_SESSION_USER':([314,],[406,]),'R_KEY':([324,412,566,],[413,502,641,]),'R_BY':([341,428,],[429,510,]),'T_DATE':([386,392,409,498,],[463,482,482,482,]),'T_TIME':([386,392,409,498,],[464,483,483,483,]),'R_RETURNS':([388,],[468,]),'T_SMALLINT':([392,409,498,],[473,473,473,]),'T_INTEGER':([392,409,498,],[474,474,474,]),'T_BIGINT':([392,409,498,],[475,475,475,]),'T_REAL':([392,409,498,],[476,476,476,]),'T_DOUBLE':([392,409,498,],[477,477,477,]),'T_MONEY':([392,409,498,],[478,478,478,]),'T_TEXT':([392,409,498,],[479,479,479,]),'T_BOOLEAN':([392,409,498,],[480,480,480,]),'T_DECIMAL':([392,409,498,],[484,484,484,]),'T_NUMERIC':([392,409,498,],[485,485,485,]),'T_VARCHAR':([392,409,498,],[486,486,486,]),'T_CHARACTER':([392,409,498,],[487,487,487,]),'T_CHAR':([392,409,498,],[488,488,488,]),'R_INHERITS':([469,],[552,]),'T_PRECISION':([477,],[568,]),'T_VARYING':([487,],[574,]),'S_DOLAR':([548,634,],[634,682,]),'R_OFFSET':([607,608,],[661,661,]),'R_BEGIN':([682,709,],[-360,723,]),'R_FIRST':([699,],[716,]),'R_LAST':([699,],[717,]),}
=======
_lr_signature = 'leftR_UNIONR_INTERSECTR_EXCEPTrightR_NOTleftR_ANDR_ORleftR_BETWEENR_ISleftS_IGUALOL_DISTINTODEOL_MAYORQUEOL_MENORQUEOL_MAYORIGUALQUEOL_MENORIGUALQUEleftOC_CONCATENARleftO_SUMAO_RESTAleftO_PRODUCTOO_DIVISIONO_MODULARrightUO_SUMAUO_RESTAleftO_EXPONENTECHARACTER COMMENT DECIMAL ID INTEGER OC_AND OC_CONCATENAR OC_NOT OC_OR OC_SHIFTL OC_SHIFTR OC_XOR OL_DISTINTODE OL_ESIGUAL OL_MAYORIGUALQUE OL_MAYORQUE OL_MENORIGUALQUE OL_MENORQUE O_DIVISION O_EXPONENTE O_MODULAR O_PRODUCTO O_RESTA O_SUMA R_ADD R_ALL R_ALTER R_AND R_ANY R_AS R_ASC R_BETWEEN R_BY R_CASE R_CHECK R_COLUMN R_CONSTRAINT R_COUNT R_CREATE R_CURRENT_DATE R_CURRENT_TIME R_CURRENT_USER R_DATABASE R_DATABASES R_DATE_PART R_DAY R_DEFAULT R_DELETE R_DESC R_DISTINCT R_DROP R_ELSE R_END R_ENUM R_EXCEPT R_EXISTS R_EXTRACT R_FALSE R_FIRST R_FOREIGN R_FROM R_FULL R_GROUP R_HASH R_HAVING R_HOUR R_IF R_IN R_INDEX R_INHERITS R_INNER R_INSERT R_INTERSECT R_INTERVAL R_INTO R_IS R_ISNULL R_JOIN R_KEY R_LAST R_LEFT R_LIKE R_LIMIT R_MINUTE R_MODE R_MONTH R_NATURAL R_NOT R_NOTNULL R_NOW R_NULL R_NULLS R_OFFSET R_ON R_OR R_ORDER R_OUTER R_OWNER R_PRIMARY R_PROM R_REFERENCES R_RENAME R_REPLACE R_RIGHT R_SECOND R_SELECT R_SESSION_USER R_SET R_SHOW R_SOME R_SUM R_SYMMETRIC R_TABLE R_THEN R_TIMESTAMP R_TO R_TRUE R_TRUNCATE R_TYPE R_UNION R_UNIQUE R_UNKNOWN R_UPDATE R_USE R_USING R_VALUES R_WHEN R_WHERE R_YEAR STRING S_COMA S_IGUAL S_PARDER S_PARIZQ S_PUNTO S_PUNTOCOMA T_BIGINT T_BOOLEAN T_CHAR T_CHARACTER T_DATE T_DECIMAL T_DOUBLE T_INTEGER T_MONEY T_NUMERIC T_PRECISION T_REAL T_SMALLINT T_TEXT T_TIME T_VARCHAR T_VARYINGinit : stmtListstmtList : stmtList stmtstmtList : stmt\n    stmt : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n    \n    idOrString : ID\n    | STRING\n    | CHARACTER\n    createStmt : R_CREATE createBody\n    createBody : createOpts\n    createOpts : unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereClunique_index : R_UNIQUE\n                    | using_hash_index : R_USING R_HASH\n                    | indexNullS : R_NULLS R_FIRST\n    | R_NULLS R_LAST\n    |\n    indexasc_desc : R_DESC\n    | R_ASC\n    |\n    createOpts : R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt \n    createOpts : orReplace R_DATABASE ifNotExists idOrString createOwner createMode\n    \n    orReplace : R_OR R_REPLACE\n    \n    orReplace :\n    \n    createOpts : R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER\n    \n    ifNotExists : R_IF R_NOT R_EXISTS\n    \n    ifNotExists :\n    \n    inheritsOpt : R_INHERITS S_PARIZQ ID S_PARDER\n    \n    inheritsOpt :\n    \n    createOwner : R_OWNER ID\n    | R_OWNER STRING\n    \n    createOwner :  R_OWNER S_IGUAL ID\n    | R_OWNER S_IGUAL STRING\n    \n    createOwner :\n    \n    createMode : R_MODE INTEGER\n    \n    createMode : R_MODE S_IGUAL INTEGER\n    \n    createMode :\n    createTableList : createTableList S_COMA createTablecreateTableList :  createTable\n    createTable :  ID types createColumns\n    \n    createTable : createConstraint\n    | createUnique\n    | createPrimary\n    | createForeign\n    \n    createColumns : colOptionsList\n    \n    createColumns :\n    createConstraint : constrName R_CHECK S_PARIZQ booleanCheck S_PARDERcreateUnique : R_UNIQUE S_PARIZQ idList S_PARDERcreatePrimary : R_PRIMARY R_KEY S_PARIZQ idList S_PARDER\n    createForeign : constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER\n    \n    constrName : R_CONSTRAINT ID\n    \n    constrName :\n    idList : idList S_COMA IDidList : ID\n    types :  ID\n    \n    types : T_SMALLINT\n    | T_INTEGER\n    | T_BIGINT\n    | T_REAL\n    | T_DOUBLE T_PRECISION\n    | T_MONEY\n    | T_TEXT\n    | T_BOOLEAN\n    | R_TIMESTAMP\n    | T_DATE\n    | T_TIME\n    \n    types : T_DECIMAL optParams\n    | T_NUMERIC optParams\n    | T_VARCHAR optParams\n    | T_CHARACTER optParams\n    | T_CHAR optParams\n    \n    types : T_CHARACTER T_VARYING optParams\n    \n    types : R_INTERVAL intervalFields\n    \n    intervalFields :  R_YEAR\n    | R_MONTH\n    | R_DAY\n    | R_HOUR\n    | R_MINUTE\n    | R_SECOND\n    \n    intervalFields :\n    optParams : S_PARIZQ literalList S_PARDERoptParams : colOptionsList : colOptionsList colOptionscolOptionsList : colOptions\n    colOptions : defaultVal\n    | nullOpt\n    | constraintOpt\n    | primaryOpt\n    | referencesOpt\n    defaultVal : R_DEFAULT literal\n    nullOpt : R_NOT R_NULL\n    \n    nullOpt : R_NULL\n    \n    constraintOpt : constrName R_UNIQUE\n    \n    constraintOpt : constrName R_CHECK S_PARIZQ booleanCheck S_PARDER\n    primaryOpt : R_PRIMARY R_KEYreferencesOpt : R_REFERENCES ID\n    expresion : datatype\n            | expBool\n    \n    expresion : S_PARIZQ selectStmt S_PARDER\n    \n    funcCall : ID S_PARIZQ paramsList S_PARDER\n    \n    funcCall : ID S_PARIZQ S_PARDER\n            | R_NOW S_PARIZQ S_PARDER\n    \n    funcCall : R_COUNT S_PARIZQ datatype S_PARDER\n            | R_COUNT S_PARIZQ O_PRODUCTO S_PARDER\n            | R_SUM S_PARIZQ datatype S_PARDER\n            | R_PROM S_PARIZQ datatype S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER\n    \n    timeStamp : R_TIMESTAMP STRING\n          | R_INTERVAL STRING\n    \n    optsExtract : R_YEAR\n                  | R_MONTH\n                  | R_DAY\n                  | R_HOUR\n                  | R_MINUTE\n                  | R_SECOND\n    \n    datePart : R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER\n    \n    dateSource : R_TIMESTAMP STRING\n          | T_DATE STRING\n          | T_TIME STRING\n          | R_INTERVAL STRING\n          | R_NOW S_PARIZQ S_PARDER\n    \n    current : R_CURRENT_DATE\n          | R_CURRENT_TIME\n    \n    current : timeStamp\n    literalList : literalList S_COMA literalliteralList : literal\n    literal :  INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    | R_NULL\n    paramsList : paramsList S_COMA datatypeparamsList : datatype\n    datatype : datatype O_SUMA datatype\n    | datatype O_RESTA datatype\n    | datatype O_PRODUCTO datatype\n    | datatype O_DIVISION datatype\n    | datatype O_EXPONENTE datatype\n    | datatype O_MODULAR datatype\n    \n    datatype : datatype OC_CONCATENAR datatype\n    \n    datatype : R_CASE caseList optElse R_END\n    \n    caseList : caseList caseWhen\n            | caseWhen\n    caseWhen : R_WHEN expBool R_THEN literaloptElse : R_ELSE literal\n    |\n    \n    datatype : O_RESTA datatype %prec UO_RESTA\n    | O_SUMA datatype %prec UO_SUMA\n    \n    datatype : columnName\n    | literal\n    | funcCall\n    | extract\n    | datePart\n    | current\n    \n    datatype : S_PARIZQ datatype S_PARDER\n    \n    expComp : datatype OL_MENORQUE datatype\n    | datatype OL_MAYORQUE datatype\n    | datatype OL_MAYORIGUALQUE datatype\n    | datatype OL_MENORIGUALQUE datatype\n    | datatype S_IGUAL datatype\n    | datatype OL_DISTINTODE datatype\n    \n    expComp : datatype R_IS R_DISTINCT R_FROM datatype\n    \n    expComp : datatype R_IS R_NOT R_DISTINCT R_FROM datatype\n    \n    expComp :  datatype R_BETWEEN datatype R_AND datatype\n    \n    expComp : datatype R_NOT R_BETWEEN datatype R_AND datatype\n    | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype\n    \n    expComp : datatype R_ISNULL\n    | datatype R_NOTNULL\n    \n    expComp : datatype R_IS R_NULL\n    | datatype R_IS R_TRUE\n    | datatype R_IS R_FALSE\n    | datatype R_IS R_UNKNOWN\n    \n    expComp : datatype R_IS R_NOT R_NULL\n    | datatype R_IS R_NOT R_TRUE\n    | datatype R_IS R_NOT R_FALSE\n    | datatype R_IS R_NOT R_UNKNOWN\n    \n    expSubq : datatype OL_MENORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_ESIGUAL  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | stringExp R_LIKE STRING\n    \n    stringExp : STRING\n          | columnName\n    \n    subqValues : R_ALL\n                  | R_ANY\n                  | R_SOME\n    \n    boolean : R_EXISTS S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : expComp\n            | expSubq\n    \n    expBool : expBool R_AND expBool\n            | expBool R_OR expBool\n    \n    expBool : R_NOT expBool\n    \n    expBool : S_PARIZQ expBool S_PARDER\n    \n    expBool : expBool optBoolPredicate\n    \n    expBool : boolean\n    \n    optBoolPredicate : R_IS R_TRUE\n    | R_IS R_FALSE\n    | R_IS R_UNKNOWN\n    \n    optBoolPredicate : R_IS R_NOT R_TRUE\n    | R_IS R_NOT R_FALSE\n    | R_IS R_NOT R_UNKNOWN\n    \n    columnName : ID\n    \n    columnName : ID S_PUNTO ID\n    \n    booleanCheck : idOrLiteral OL_MENORQUE idOrLiteral\n    | idOrLiteral OL_MAYORQUE idOrLiteral\n    | idOrLiteral OL_MAYORIGUALQUE idOrLiteral\n    | idOrLiteral OL_MENORIGUALQUE idOrLiteral\n    | idOrLiteral S_IGUAL idOrLiteral\n    | idOrLiteral OL_DISTINTODE idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral\n    \n    idOrLiteral : ID\n    | INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    alterStmt : R_ALTER R_DATABASE idOrString alterDb\n    | R_ALTER R_TABLE idOrString alterTableList\n    alterDb : R_RENAME R_TO idOrString\n    | R_OWNER R_TO ownerOPts\n    \n    ownerOPts : idOrString\n    | R_CURRENT_USER\n    | R_SESSION_USER\n    \n    alterTableList : alterTableList S_COMA alterTable\n    \n    alterTableList : alterTable\n    \n    alterTable : R_ADD alterAdd\n    | R_ALTER alterAlter\n    | R_DROP alterDrop\n    | R_RENAME alterRename\n    \n    alterAdd : R_COLUMN ID types\n    \n    alterAdd : createConstraint\n    | createPrimary\n    | createForeign\n    \n    alterAdd : constrName R_UNIQUE S_PARIZQ ID S_PARDER\n    \n    alterAlter : R_COLUMN ID R_SET nullOpt\n    | R_COLUMN ID R_SET defaultVal\n    | R_COLUMN ID R_TYPE types\n    \n    alterDrop : R_CONSTRAINT ID\n    | R_COLUMN ID\n    \n    alterRename : R_COLUMN ID R_TO ID\n    \n    dropStmt : R_DROP R_TABLE ifExists idOrString\n    | R_DROP R_DATABASE ifExists idOrString\n    ifExists : R_IF R_EXISTS\n    |\n    selectStmt : R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitClselectStmt : R_SELECT selectParams fromCl whereCl groupByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl limitClselectStmt : selectStmt R_UNION allOpt selectStmtselectStmt : selectStmt R_INTERSECT allOpt selectStmtselectStmt : selectStmt R_EXCEPT allOpt selectStmtselectStmt : S_PARIZQ selectStmt S_PARDER\n    fromCl : R_FROM tableExp\n    selectStmt : R_SELECT selectParamsallOpt : R_ALL\n    |\n    selectParams : O_PRODUCTOselectParams : selectListselectList : selectList S_COMA selectListParams optAliasselectList : selectListParams optAliasselectListParams : expresionselectListParams : ID S_PUNTO O_PRODUCTO\n    optAlias : R_AS idOrString\n    \n    optAlias : idOrString\n    optAlias : tableExp : tableExp S_COMA fromBody tableExp : fromBody fromBody : ID optAliasfromBody : S_PARIZQ selectStmt S_PARDER R_AS idOrStringjoinList : joinList2joinList2 : joinList2 joinCl\n    | joinCljoinCl : joinOpt R_JOIN columnName optAlias R_ON expBool\n    | joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER\n    | R_NATURAL joinOpt R_JOIN columnName optAlias\n    nameList : nameList S_COMA columnName\n    | columnName\n    joinOpt : R_INNER\n    | R_LEFT\n    | R_LEFT R_OUTER\n    | R_RIGHT\n    | R_RIGHT R_OUTER\n    | R_FULL\n    | R_FULL R_OUTER\n    whereCl : R_WHERE expBoolwhereCl : \n    groupByCl : R_GROUP R_BY groupList havingCl\n    \n    groupByCl :\n    \n    groupList :  groupList S_COMA columnName\n            | groupList S_COMA INTEGER\n    \n    groupList :  columnName\n            | INTEGER\n    havingCl : R_HAVING expBoolhavingCl :orderByCl : R_ORDER R_BY orderListorderList : orderList S_COMA orderByElem\n    | orderByElem\n    \n    orderByElem : columnName orderOpts orderNull\n                | INTEGER orderOpts orderNull\n    orderOpts : R_ASC\n    | R_DESC\n    |\n    orderNull : R_NULL R_FIRST\n    | R_NULL R_LAST\n    |\n    limitCl : R_LIMIT INTEGER offsetLimit\n    | R_LIMIT R_ALL offsetLimit\n    limitCl :offsetLimit : R_OFFSET INTEGERoffsetLimit :insertStmt : R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDERparamsColumn : S_PARIZQ idList S_PARDERparamsColumn :updateStmt : R_UPDATE fromBody R_SET updateCols whereClupdateCols : updateCols S_COMA updateValsupdateCols : updateVals updateVals : ID S_IGUAL updateExpupdateExp : datatype\n    | R_DEFAULT\n    deleteStmt : R_DELETE fromCl whereCltruncateStmt : R_TRUNCATE tableOpt IDtableOpt : R_TABLE\n    |\n    showStmt : R_SHOW R_DATABASES likeOptlikeOpt : R_LIKE STRING\n    |\n    useStmt : R_USE ID'
    
_lr_action_items = {'R_CREATE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[14,14,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_SHOW':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[15,15,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_ALTER':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,118,119,120,121,314,],[16,16,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,205,205,]),'R_DROP':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,118,119,120,121,314,],[17,17,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,209,209,]),'R_INSERT':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[18,18,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_UPDATE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[20,20,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_DELETE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[21,21,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_TRUNCATE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[22,22,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_USE':([0,2,3,25,26,27,28,29,30,31,32,33,34,35,],[23,23,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'R_SELECT':([0,2,3,19,25,26,27,28,29,30,31,32,33,34,35,36,37,38,56,71,105,106,107,108,167,189,247,350,352,353,354,355,356,369,370,371,447,448,449,450,526,527,528,529,619,629,669,671,677,],[24,24,-3,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-290,-290,-290,24,24,24,-289,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'S_PARIZQ':([0,2,3,19,20,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,56,58,62,68,71,72,73,81,90,91,92,93,94,96,99,105,106,107,108,118,119,120,125,133,139,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,159,163,164,167,171,174,179,181,184,185,186,189,197,222,247,248,249,251,252,253,254,256,258,260,263,271,272,273,274,328,333,348,350,352,353,354,355,356,357,363,364,365,366,367,369,370,371,385,394,397,406,407,409,414,435,442,443,444,445,446,447,448,449,450,452,464,465,482,483,484,485,486,494,500,524,526,527,528,529,534,548,550,572,613,615,616,618,619,620,629,630,638,669,671,677,726,],[19,19,-3,19,56,71,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-290,-290,-290,19,56,71,142,167,174,174,181,183,184,185,186,187,188,189,19,-289,19,19,-14,-15,-16,215,181,71,174,174,174,174,174,174,174,174,247,174,174,174,174,174,174,174,181,181,167,142,174,181,181,174,174,174,19,306,56,19,350,174,352,-213,-214,-215,353,354,355,356,174,369,370,371,414,174,174,19,19,19,19,19,19,174,447,448,449,450,174,19,19,19,-23,488,494,498,499,501,174,174,174,526,527,528,529,19,19,19,19,174,546,547,568,568,568,568,568,174,600,619,19,19,19,19,629,-22,633,568,181,181,668,669,19,671,19,677,682,19,19,19,730,]),'$end':([1,2,3,25,26,27,28,29,30,31,32,33,34,35,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'S_PUNTOCOMA':([4,5,6,7,8,9,10,11,12,13,39,40,47,55,57,61,63,64,65,66,67,68,69,70,75,76,77,78,79,80,82,83,84,85,86,87,88,89,95,97,98,100,101,115,118,119,120,126,128,130,132,134,135,136,138,140,160,161,165,171,172,173,175,176,180,190,191,193,194,195,201,202,206,207,211,213,216,217,219,221,223,224,225,226,227,234,235,236,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,281,282,283,290,304,308,312,315,317,318,319,323,326,331,335,336,337,339,340,346,347,359,360,361,362,372,373,374,375,378,379,380,381,384,395,398,399,400,401,402,404,411,412,417,418,419,420,421,422,423,424,428,430,433,441,451,467,469,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,489,491,492,497,505,506,507,508,510,511,512,513,514,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,549,562,566,567,569,570,571,572,573,574,575,576,577,578,579,580,582,584,585,587,588,589,602,603,604,606,607,608,609,610,611,614,617,625,626,627,628,635,636,643,645,646,647,648,657,658,660,661,662,663,664,665,666,667,672,673,674,675,683,694,695,697,701,703,707,713,714,715,717,718,719,720,728,732,],[26,27,28,29,30,31,32,33,34,35,-17,-18,-360,-299,-320,-361,-288,-291,-292,-299,-295,-233,-106,-107,-161,-162,-163,-164,-165,-166,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-358,-14,-15,-16,-286,-302,-298,-354,-287,-301,-355,-320,-294,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-283,-284,-285,-359,-250,-251,-258,-274,-275,-320,-350,-297,-319,-320,-322,-320,-304,-306,-299,-234,-296,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-108,-167,-224,-111,-210,-43,-260,-259,-264,-265,-266,-261,-262,-348,-300,-322,-342,-322,-305,-293,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-46,-252,-253,-254,-255,-256,-257,-271,-272,-349,-351,-352,-353,-303,-342,-279,-342,-342,-233,-217,-174,-176,-38,-64,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,-31,-39,-40,-263,-278,-281,-344,-344,-328,-325,-326,-342,-282,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-30,-101,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,-44,-41,-42,-268,-269,-270,-273,-345,-340,-341,-329,-331,-336,-336,-321,-280,-309,-200,-204,-206,-208,-99,-100,-81,-45,-34,-267,-56,-58,-343,-339,-334,-335,-339,-323,-324,-327,-307,-201,-205,-207,-209,-90,-330,-332,-333,-198,-195,-37,-337,-338,-308,-196,-199,-197,-320,-19,-59,]),'R_UNION':([13,53,55,63,64,65,66,67,68,69,70,75,76,77,78,79,80,82,83,84,85,86,87,88,89,95,97,98,100,101,118,119,120,126,128,130,131,134,135,138,140,160,161,165,168,171,172,173,175,176,180,190,191,193,194,195,219,221,223,224,225,226,227,234,235,236,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,281,282,283,290,303,304,335,336,337,339,340,346,347,349,359,360,361,362,372,373,374,375,378,379,380,381,384,421,422,423,424,428,430,433,434,436,437,438,439,440,441,451,453,454,455,505,506,507,508,510,511,512,513,514,516,517,518,519,520,521,522,523,525,530,531,532,533,535,536,537,538,539,540,541,604,606,607,608,609,610,611,614,617,621,622,623,624,625,626,627,628,658,660,661,662,663,664,665,666,667,670,672,673,674,675,676,694,695,697,700,701,702,703,704,713,714,715,717,718,719,],[36,36,-299,-288,-291,-292,-299,-295,-233,-106,-107,-161,-162,-163,-164,-165,-166,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-286,-302,-298,36,-287,-301,-320,-294,-179,-180,-225,36,-233,-160,-161,-138,-159,-223,-118,-119,-283,-284,-285,-297,-319,-320,-322,-320,-304,-306,-299,-234,-296,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-108,-167,-224,-111,36,-210,-300,-322,-342,-322,-305,-293,-109,36,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,-342,-279,-342,-342,-233,-217,36,36,36,36,36,36,-174,-176,36,36,36,-278,-281,-344,-344,-328,-325,-326,-342,-282,-299,-218,-177,-189,-190,-191,-192,-194,-175,36,36,36,36,-178,-202,-203,-193,-116,-117,-126,-340,-341,-329,-331,-336,-336,-321,-280,-309,36,36,36,36,-200,-204,-206,-208,-343,-339,-334,-335,-339,-323,-324,-327,-307,36,-201,-205,-207,-209,36,-330,-332,-333,36,-198,36,-195,36,-337,-338,-308,-196,-199,-197,]),'R_INTERSECT':([13,53,55,63,64,65,66,67,68,69,70,75,76,77,78,79,80,82,83,84,85,86,87,88,89,95,97,98,100,101,118,119,120,126,128,130,131,134,135,138,140,160,161,165,168,171,172,173,175,176,180,190,191,193,194,195,219,221,223,224,225,226,227,234,235,236,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,281,282,283,290,303,304,335,336,337,339,340,346,347,349,359,360,361,362,372,373,374,375,378,379,380,381,384,421,422,423,424,428,430,433,434,436,437,438,439,440,441,451,453,454,455,505,506,507,508,510,511,512,513,514,516,517,518,519,520,521,522,523,525,530,531,532,533,535,536,537,538,539,540,541,604,606,607,608,609,610,611,614,617,621,622,623,624,625,626,627,628,658,660,661,662,663,664,665,666,667,670,672,673,674,675,676,694,695,697,700,701,702,703,704,713,714,715,717,718,719,],[37,37,-299,-288,-291,-292,-299,-295,-233,-106,-107,-161,-162,-163,-164,-165,-166,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-286,-302,-298,37,-287,-301,-320,-294,-179,-180,-225,37,-233,-160,-161,-138,-159,-223,-118,-119,-283,-284,-285,-297,-319,-320,-322,-320,-304,-306,-299,-234,-296,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-108,-167,-224,-111,37,-210,-300,-322,-342,-322,-305,-293,-109,37,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,-342,-279,-342,-342,-233,-217,37,37,37,37,37,37,-174,-176,37,37,37,-278,-281,-344,-344,-328,-325,-326,-342,-282,-299,-218,-177,-189,-190,-191,-192,-194,-175,37,37,37,37,-178,-202,-203,-193,-116,-117,-126,-340,-341,-329,-331,-336,-336,-321,-280,-309,37,37,37,37,-200,-204,-206,-208,-343,-339,-334,-335,-339,-323,-324,-327,-307,37,-201,-205,-207,-209,37,-330,-332,-333,37,-198,37,-195,37,-337,-338,-308,-196,-199,-197,]),'R_EXCEPT':([13,53,55,63,64,65,66,67,68,69,70,75,76,77,78,79,80,82,83,84,85,86,87,88,89,95,97,98,100,101,118,119,120,126,128,130,131,134,135,138,140,160,161,165,168,171,172,173,175,176,180,190,191,193,194,195,219,221,223,224,225,226,227,234,235,236,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,281,282,283,290,303,304,335,336,337,339,340,346,347,349,359,360,361,362,372,373,374,375,378,379,380,381,384,421,422,423,424,428,430,433,434,436,437,438,439,440,441,451,453,454,455,505,506,507,508,510,511,512,513,514,516,517,518,519,520,521,522,523,525,530,531,532,533,535,536,537,538,539,540,541,604,606,607,608,609,610,611,614,617,621,622,623,624,625,626,627,628,658,660,661,662,663,664,665,666,667,670,672,673,674,675,676,694,695,697,700,701,702,703,704,713,714,715,717,718,719,],[38,38,-299,-288,-291,-292,-299,-295,-233,-106,-107,-161,-162,-163,-164,-165,-166,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-286,-302,-298,38,-287,-301,-320,-294,-179,-180,-225,38,-233,-160,-161,-138,-159,-223,-118,-119,-283,-284,-285,-297,-319,-320,-322,-320,-304,-306,-299,-234,-296,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-108,-167,-224,-111,38,-210,-300,-322,-342,-322,-305,-293,-109,38,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,-342,-279,-342,-342,-233,-217,38,38,38,38,38,38,-174,-176,38,38,38,-278,-281,-344,-344,-328,-325,-326,-342,-282,-299,-218,-177,-189,-190,-191,-192,-194,-175,38,38,38,38,-178,-202,-203,-193,-116,-117,-126,-340,-341,-329,-331,-336,-336,-321,-280,-309,38,38,38,38,-200,-204,-206,-208,-343,-339,-334,-335,-339,-323,-324,-327,-307,38,-201,-205,-207,-209,38,-330,-332,-333,38,-198,38,-195,38,-337,-338,-308,-196,-199,-197,]),'R_TABLE':([14,16,17,22,],[42,49,50,60,]),'R_TYPE':([14,403,],[44,496,]),'R_UNIQUE':([14,83,85,86,87,88,89,175,208,306,320,410,468,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,553,554,555,556,557,558,559,562,563,566,567,569,570,571,572,573,574,575,576,577,578,579,580,634,635,636,637,639,640,643,683,723,],[45,-137,-139,-140,-141,-142,-143,-138,-61,394,406,-60,394,-64,-61,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,-61,-93,-94,-95,-96,-97,-98,-101,637,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,-92,-99,-100,-102,-104,-105,-81,-90,-103,]),'R_INDEX':([14,41,45,],[-21,109,-20,]),'R_OR':([14,70,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,160,161,165,170,171,172,173,175,176,180,190,191,221,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,289,290,304,347,359,360,361,362,372,373,374,375,378,379,380,381,384,433,441,451,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,625,626,627,628,666,667,672,673,674,675,701,703,717,718,719,],[46,164,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-179,-180,-225,164,-233,-160,-161,-138,-159,164,-118,-119,164,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,164,-111,-210,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-217,-174,-176,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-200,-204,-206,-208,164,164,-201,-205,-207,-209,-198,-195,-196,-199,-197,]),'R_DATABASE':([14,16,17,43,114,],[-33,48,51,112,-32,]),'R_DATABASES':([15,],[47,]),'R_INTO':([18,],[52,]),'ID':([20,22,23,24,42,44,48,49,50,51,52,55,58,59,60,62,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,97,98,100,101,109,110,112,113,122,124,127,129,133,139,141,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,160,161,163,164,165,167,171,172,173,174,175,176,179,180,181,184,185,186,190,191,199,212,215,222,234,235,236,238,240,241,242,243,244,245,246,249,250,255,257,259,261,262,266,267,268,269,271,275,276,277,278,279,281,282,283,284,290,304,305,306,307,310,311,313,316,322,324,325,327,332,333,334,341,347,348,357,359,360,361,362,367,372,373,374,375,378,379,380,381,382,384,388,396,405,414,416,427,429,430,431,433,435,441,442,451,452,468,488,493,494,496,498,499,501,502,509,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,547,565,600,612,613,615,625,626,627,628,633,649,650,651,652,653,654,659,668,672,673,674,675,682,701,703,710,712,716,717,718,719,725,730,],[55,-357,61,68,-36,-36,118,118,-277,-277,125,118,55,136,-356,68,118,-295,-233,-106,-107,171,171,171,-161,-162,-163,-164,-165,-166,171,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,196,118,-36,200,118,118,218,118,171,68,235,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,-179,-180,171,171,-225,171,-233,-160,-161,171,-138,-159,171,-223,171,171,171,171,-118,-119,118,-276,330,55,118,-234,-296,-110,-146,-147,-148,-149,-150,-151,-152,171,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,171,-221,-222,-227,-228,-229,-108,-167,-224,235,-111,-210,385,388,-35,118,118,403,405,410,411,412,413,218,171,118,430,-109,171,171,-185,-186,-187,-188,171,-230,-231,-232,-153,-112,-113,-114,-115,430,-216,469,491,469,171,504,430,118,-233,430,-217,171,-174,171,-176,171,388,330,584,171,469,590,593,330,602,430,118,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,330,640,330,430,171,171,-200,-204,-206,-208,681,593,593,593,593,593,593,430,430,-201,-205,-207,-209,593,-198,-195,593,726,430,-196,-199,-197,593,330,]),'R_FROM':([21,63,64,65,66,67,68,69,70,75,76,77,78,79,80,82,83,84,85,86,87,88,89,95,97,98,100,101,118,119,120,130,137,140,160,161,165,171,172,173,175,176,180,190,191,219,234,235,236,238,240,241,242,243,244,245,246,250,255,257,259,261,262,264,266,267,268,269,275,276,277,278,279,281,282,283,290,295,296,297,298,299,300,301,304,346,347,358,359,360,361,362,372,373,374,375,378,379,380,381,384,433,441,451,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,625,626,627,628,672,673,674,675,691,701,703,711,717,718,719,],[58,58,-291,-292,-299,-295,-233,-106,-107,-161,-162,-163,-164,-165,-166,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-298,58,-294,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-297,-299,-234,-296,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,357,-181,-182,-183,-184,-221,-222,-227,-228,-229,-108,-167,-224,-111,382,-120,-121,-122,-123,-124,-125,-210,-293,-109,442,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-217,-174,-176,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-200,-204,-206,-208,-201,-205,-207,-209,710,-198,-195,725,-196,-199,-197,]),'R_DISTINCT':([24,158,265,655,692,],[62,264,358,691,711,]),'O_PRODUCTO':([24,62,68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,141,169,171,172,173,175,176,182,184,190,191,235,238,239,240,241,242,243,244,245,246,250,255,257,259,261,262,270,282,285,290,291,293,294,347,351,368,375,378,379,380,381,419,432,441,451,518,525,535,539,540,541,],[64,64,-233,145,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,236,145,-233,-160,-161,-138,-159,145,292,-118,-119,-234,-110,145,145,145,-148,-149,-150,-151,145,145,145,145,145,145,145,145,-167,145,-111,145,145,145,-109,145,145,-153,-112,-113,-114,-115,145,145,145,145,145,145,145,-116,-117,-126,]),'R_CASE':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'O_RESTA':([24,62,68,69,71,72,73,75,76,77,78,79,80,81,83,84,85,86,87,88,89,95,97,98,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,169,171,172,173,174,175,176,179,181,182,184,185,186,190,191,235,238,239,240,241,242,243,244,245,246,249,250,255,257,259,261,262,270,271,282,285,290,291,293,294,333,347,348,351,357,367,368,375,378,379,380,381,414,419,432,435,441,442,451,452,494,518,525,535,539,540,541,613,615,],[73,73,-233,144,73,73,73,-161,-162,-163,-164,-165,-166,73,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,144,-233,-160,-161,73,-138,-159,73,73,144,73,73,73,-118,-119,-234,-110,144,-146,-147,-148,-149,-150,-151,144,73,144,144,144,144,144,144,144,73,-167,144,-111,144,144,144,73,-109,73,144,73,73,144,-153,-112,-113,-114,-115,73,144,144,73,144,73,144,73,73,144,144,144,-116,-117,-126,73,73,]),'O_SUMA':([24,62,68,69,71,72,73,75,76,77,78,79,80,81,83,84,85,86,87,88,89,95,97,98,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,169,171,172,173,174,175,176,179,181,182,184,185,186,190,191,235,238,239,240,241,242,243,244,245,246,249,250,255,257,259,261,262,270,271,282,285,290,291,293,294,333,347,348,351,357,367,368,375,378,379,380,381,414,419,432,435,441,442,451,452,494,518,525,535,539,540,541,613,615,],[72,72,-233,143,72,72,72,-161,-162,-163,-164,-165,-166,72,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,143,-233,-160,-161,72,-138,-159,72,72,143,72,72,72,-118,-119,-234,-110,143,-146,-147,-148,-149,-150,-151,143,72,143,143,143,143,143,143,143,72,-167,143,-111,143,143,143,72,-109,72,143,72,72,143,-153,-112,-113,-114,-115,72,143,143,72,143,72,143,72,72,143,143,143,-116,-117,-126,72,72,]),'R_NOT':([24,62,68,69,71,75,76,77,78,79,80,81,83,84,85,86,87,88,89,95,97,98,111,133,139,158,163,164,166,167,169,171,172,173,175,176,179,181,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,495,539,540,541,553,554,555,556,557,558,559,562,566,567,569,570,571,572,573,574,575,576,577,578,579,580,613,615,634,635,636,637,639,640,643,655,683,723,],[81,81,-233,151,81,-161,-162,-163,-164,-165,-166,81,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,198,81,81,265,81,81,280,81,151,-233,-160,-161,-138,-159,81,81,151,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-64,561,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,561,-116,-117,-126,561,-93,-94,-95,-96,-97,-98,-101,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,81,81,-92,-99,-100,-102,-104,-105,-81,692,-90,-103,]),'INTEGER':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,288,333,348,357,367,377,414,425,427,435,442,452,490,494,499,509,560,568,583,605,612,613,615,649,650,651,652,653,654,659,682,684,710,725,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,507,512,83,83,83,582,83,594,610,83,83,645,658,665,83,83,594,594,594,594,594,594,610,594,83,594,594,]),'STRING':([24,42,48,49,50,51,55,62,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,97,98,100,101,102,103,110,112,116,122,124,129,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,160,161,163,164,165,167,171,172,173,174,175,176,179,180,181,184,185,186,188,190,191,192,199,212,234,235,236,238,240,241,242,243,244,245,246,249,250,255,257,259,261,262,266,267,268,269,271,275,276,277,278,279,281,282,283,288,290,304,307,310,311,333,334,347,348,357,359,360,361,362,367,372,373,374,375,377,378,379,380,381,384,396,414,429,430,433,435,441,442,451,452,460,461,462,463,493,494,499,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,560,568,613,615,625,626,627,628,649,650,651,652,653,654,672,673,674,675,682,684,701,703,710,717,718,719,725,],[84,-36,119,119,-277,-277,119,84,119,-295,-233,-106,-107,84,175,175,-161,-162,-163,-164,-165,-166,84,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,190,191,119,-36,201,119,119,119,84,84,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-179,-180,84,84,-225,84,-233,-160,-161,175,-138,-159,84,-223,84,175,175,175,302,-118,-119,304,119,-276,119,-234,-296,-110,-146,-147,-148,-149,-150,-151,-152,175,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,175,-221,-222,-227,-228,-229,-108,-167,-224,175,-111,-210,-35,119,119,175,119,-109,175,175,-185,-186,-187,-188,175,-230,-231,-232,-153,175,-112,-113,-114,-115,-216,492,175,119,-233,-217,175,-174,175,-176,175,542,543,544,545,585,175,595,119,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,175,175,84,84,-200,-204,-206,-208,595,595,595,595,595,595,-201,-205,-207,-209,595,175,-198,-195,595,-196,-199,-197,595,]),'DECIMAL':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,288,333,348,357,367,377,414,435,442,452,494,499,560,568,613,615,649,650,651,652,653,654,682,684,710,725,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,596,85,85,85,85,596,596,596,596,596,596,596,85,596,596,]),'CHARACTER':([24,42,48,49,50,51,55,62,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,97,98,100,101,110,112,122,124,129,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,160,161,163,164,165,167,171,172,173,174,175,176,179,180,181,184,185,186,190,191,199,212,234,235,236,238,240,241,242,243,244,245,246,249,250,255,257,259,261,262,266,267,268,269,271,275,276,277,278,279,281,282,283,288,290,304,307,310,311,333,334,347,348,357,359,360,361,362,367,372,373,374,375,377,378,379,380,381,384,414,429,430,433,435,441,442,451,452,494,499,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,560,568,613,615,625,626,627,628,649,650,651,652,653,654,672,673,674,675,682,684,701,703,710,717,718,719,725,],[86,-36,120,120,-277,-277,120,86,120,-295,-233,-106,-107,86,86,86,-161,-162,-163,-164,-165,-166,86,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,120,-36,120,120,120,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-179,-180,86,86,-225,86,-233,-160,-161,86,-138,-159,86,-223,86,86,86,86,-118,-119,120,-276,120,-234,-296,-110,-146,-147,-148,-149,-150,-151,-152,86,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,86,-221,-222,-227,-228,-229,-108,-167,-224,86,-111,-210,-35,120,120,86,120,-109,86,86,-185,-186,-187,-188,86,-230,-231,-232,-153,86,-112,-113,-114,-115,-216,86,120,-233,-217,86,-174,86,-176,86,86,597,120,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,86,86,86,86,-200,-204,-206,-208,597,597,597,597,597,597,-201,-205,-207,-209,597,86,-198,-195,597,-196,-199,-197,597,]),'R_TRUE':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,158,159,163,164,166,167,174,179,181,184,185,186,249,265,271,280,288,333,348,357,367,377,414,435,442,452,494,499,560,568,613,615,649,650,651,652,653,654,682,684,710,725,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,267,87,87,87,277,87,87,87,87,87,87,87,87,360,87,372,87,87,87,87,87,87,87,87,87,87,87,598,87,87,87,87,598,598,598,598,598,598,598,87,598,598,]),'R_FALSE':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,158,159,163,164,166,167,174,179,181,184,185,186,249,265,271,280,288,333,348,357,367,377,414,435,442,452,494,499,560,568,613,615,649,650,651,652,653,654,682,684,710,725,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,268,88,88,88,278,88,88,88,88,88,88,88,88,361,88,373,88,88,88,88,88,88,88,88,88,88,88,599,88,88,88,88,599,599,599,599,599,599,599,88,599,599,]),'R_NULL':([24,62,71,72,73,81,83,85,86,87,88,89,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,158,159,163,164,167,174,175,179,181,184,185,186,235,249,265,271,288,333,348,357,367,377,414,430,435,442,452,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,494,495,553,554,555,556,557,558,559,560,561,562,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,609,610,613,615,634,635,636,637,639,640,643,660,661,662,663,683,684,723,],[89,89,89,89,89,89,-137,-139,-140,-141,-142,-143,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,266,89,89,89,89,89,-138,89,89,89,89,89,-234,89,359,89,89,89,89,89,89,89,89,-233,89,89,89,-64,562,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,89,562,562,-93,-94,-95,-96,-97,-98,89,636,-101,-69,-76,89,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,-336,-336,89,89,-92,-99,-100,-102,-104,-105,-81,696,-334,-335,696,-90,89,-103,]),'R_NOW':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,383,414,435,442,452,494,613,615,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,464,90,90,90,90,90,90,90,]),'R_COUNT':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'R_SUM':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'R_PROM':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'R_EXTRACT':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'R_DATE_PART':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'R_CURRENT_DATE':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'R_CURRENT_TIME':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'R_EXISTS':([24,62,71,81,123,133,139,163,164,167,179,181,198,613,615,],[99,99,99,99,212,99,99,99,99,99,99,99,307,99,99,]),'R_TIMESTAMP':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,382,383,388,405,414,435,442,452,494,496,613,615,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,460,479,479,102,102,102,102,102,479,102,102,]),'R_INTERVAL':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,382,383,388,405,414,435,442,452,494,496,613,615,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,463,487,487,103,103,103,103,103,487,103,103,]),'R_ALL':([36,37,38,76,77,78,79,80,83,85,86,87,88,89,95,97,98,152,153,154,155,157,160,161,162,171,172,173,175,176,190,191,235,238,240,241,242,243,244,245,246,266,267,268,269,282,290,347,359,360,361,362,375,378,379,380,381,425,441,451,518,525,535,539,540,541,],[106,106,106,-162,-163,-164,-165,-166,-137,-139,-140,-141,-142,-143,-134,-132,-133,252,252,252,252,252,252,252,252,-233,-160,-161,-138,-159,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,252,252,252,252,-167,-111,-109,252,252,252,252,-153,-112,-113,-114,-115,508,252,252,252,252,252,-116,-117,-126,]),'R_IF':([42,44,50,51,112,],[111,111,123,123,111,]),'R_REPLACE':([46,],[114,]),'R_LIKE':([47,68,75,84,104,171,235,],[116,-233,-212,-211,192,-233,-234,]),'S_PARDER':([53,55,63,64,65,66,67,68,69,70,75,76,77,78,79,80,82,83,84,85,86,87,88,89,95,97,98,100,101,118,119,120,126,128,130,131,134,135,138,140,142,160,161,165,168,169,170,171,172,173,175,176,180,183,190,191,193,194,195,219,221,223,224,225,226,227,234,235,236,237,238,239,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,281,282,283,285,290,291,292,293,294,303,304,329,330,335,336,337,339,340,346,347,349,359,360,361,362,372,373,374,375,378,379,380,381,384,386,387,389,390,391,392,421,422,423,424,428,430,432,433,434,436,437,438,439,440,441,451,453,454,455,457,458,459,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,503,504,505,506,507,508,510,511,512,513,514,516,517,518,519,520,521,522,523,525,530,531,532,533,535,536,537,538,539,540,541,542,543,544,545,546,551,552,553,554,555,556,557,558,559,562,566,567,569,570,571,572,573,574,575,576,577,578,579,580,581,586,590,591,593,594,595,596,597,598,599,601,604,606,607,608,609,610,611,614,617,621,622,623,624,625,626,627,628,631,632,634,635,636,637,639,640,641,642,643,644,648,656,657,658,660,661,662,663,664,665,666,667,670,672,673,674,675,676,678,679,680,681,683,685,686,687,688,689,690,694,695,697,698,699,700,701,702,703,704,705,708,709,713,714,715,717,718,719,721,722,723,724,727,729,731,732,],[126,-299,-288,-291,-292,-299,-295,-233,-106,-107,-161,-162,-163,-164,-165,-166,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-286,-302,-298,220,-287,-301,-320,-294,238,-179,-180,-225,281,282,283,-233,-160,-161,-138,-159,-223,290,-118,-119,-283,-284,-285,-297,-319,-320,-322,-320,-304,-306,-299,-234,-296,347,-110,-145,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-108,-167,-224,282,-111,378,379,380,381,384,-210,415,-63,-300,-322,-342,-322,-305,-293,-109,433,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,467,-48,-50,-51,-52,-53,-303,-342,-279,-342,-342,-233,-144,-217,517,519,520,521,522,523,-174,-176,536,537,538,539,540,541,-64,-55,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,603,-62,-278,-281,-344,-344,-328,-325,-326,-342,-282,-299,-218,-177,-189,-190,-191,-192,-194,-175,625,626,627,628,-178,-202,-203,-193,-116,-117,-126,-127,-128,-129,-130,631,-47,-49,-54,-93,-94,-95,-96,-97,-98,-101,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,644,646,647,648,-243,-244,-245,-246,-247,-248,-249,657,-340,-341,-329,-331,-336,-336,-321,-280,-309,672,673,674,675,-200,-204,-206,-208,-131,-29,-92,-99,-100,-102,-104,-105,683,-136,-81,-57,-56,693,-58,-343,-339,-334,-335,-339,-323,-324,-327,-307,701,-201,-205,-207,-209,703,-26,-27,-28,707,-90,-235,-236,-237,-238,-239,-240,-330,-332,-333,-311,715,717,-198,718,-195,719,720,723,-135,-337,-338,-308,-196,-199,-197,-24,-25,-103,-241,-310,-242,732,-59,]),'R_SET':([54,55,118,119,120,128,130,219,403,421,],[127,-299,-14,-15,-16,-302,-298,-297,495,-303,]),'R_AS':([55,66,67,68,69,70,75,76,77,78,79,80,82,83,84,85,86,87,88,89,95,97,98,100,101,160,161,165,171,172,173,175,176,180,190,191,200,220,234,235,236,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,281,282,283,290,304,347,359,360,361,362,372,373,374,375,378,379,380,381,384,429,430,433,441,451,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,625,626,627,628,672,673,674,675,701,703,717,718,719,],[129,129,-295,-233,-106,-107,-161,-162,-163,-164,-165,-166,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,309,334,129,-234,-296,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-108,-167,-224,-111,-210,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,129,-233,-217,-174,-176,129,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-200,-204,-206,-208,-201,-205,-207,-209,-198,-195,-196,-199,-197,]),'S_COMA':([55,65,66,67,68,69,70,75,76,77,78,79,80,82,83,84,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,140,160,161,165,171,172,173,175,176,180,190,191,206,207,216,217,219,234,235,236,237,238,239,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,281,282,283,290,302,304,312,315,317,318,319,323,326,329,330,335,346,347,359,360,361,362,372,373,374,375,378,379,380,381,384,386,387,389,390,391,392,404,411,412,417,418,419,420,421,430,432,433,441,451,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,497,503,504,510,511,512,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,551,552,553,554,555,556,557,558,559,562,566,567,569,570,571,572,573,574,575,576,577,578,579,580,581,586,587,588,589,601,602,607,608,609,610,625,626,627,628,632,634,635,636,637,639,640,641,642,643,644,647,648,656,657,660,661,662,663,664,665,672,673,674,675,683,694,695,697,698,699,701,703,709,713,714,717,718,719,723,727,731,732,],[-299,139,-299,-295,-233,-106,-107,-161,-162,-163,-164,-165,-166,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,222,-301,-294,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,314,-258,332,-350,-297,-299,-234,-296,348,-110,-145,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-108,-167,-224,-111,383,-210,-260,-259,-264,-265,-266,-261,-262,416,-63,-300,-293,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,468,-48,-50,-51,-52,-53,-257,-271,-272,-349,-351,-352,-353,-303,-233,-144,-217,-174,-176,-64,-55,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,-263,348,-62,612,-325,-326,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-47,-49,-54,-93,-94,-95,-96,-97,-98,-101,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,416,348,-268,-269,-270,416,-273,659,-331,-336,-336,-200,-204,-206,-208,416,-92,-99,-100,-102,-104,-105,684,-136,-81,-57,-267,-56,416,-58,-339,-334,-335,-339,-323,-324,-201,-205,-207,-209,-90,-330,-332,-333,-311,716,-198,-195,-135,-337,-338,-196,-199,-197,-103,-310,416,-59,]),'R_WHERE':([55,57,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,138,160,161,165,171,172,173,175,176,180,190,191,216,217,219,223,225,226,227,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,290,304,335,340,347,359,360,361,362,372,373,374,375,378,379,380,381,384,417,418,419,420,421,430,433,441,451,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,617,625,626,627,628,667,672,673,674,675,701,703,715,717,718,719,720,],[-299,133,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,-287,-301,133,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,133,-350,-297,133,133,-304,-306,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,-111,-210,-300,-305,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-349,-351,-352,-353,-303,-233,-217,-174,-176,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-309,-200,-204,-206,-208,-307,-201,-205,-207,-209,-198,-195,-308,-196,-199,-197,133,]),'R_NATURAL':([55,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,138,160,161,165,171,172,173,175,176,180,190,191,219,226,227,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,290,304,335,340,347,359,360,361,362,372,373,374,375,378,379,380,381,384,421,430,433,441,451,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,617,625,626,627,628,667,672,673,674,675,701,703,715,717,718,719,],[-299,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,-287,-301,229,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-297,229,-306,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,-111,-210,-300,-305,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,-233,-217,-174,-176,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-309,-200,-204,-206,-208,-307,-201,-205,-207,-209,-198,-195,-308,-196,-199,-197,]),'R_INNER':([55,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,138,160,161,165,171,172,173,175,176,180,190,191,219,226,227,229,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,290,304,335,340,347,359,360,361,362,372,373,374,375,378,379,380,381,384,421,430,433,441,451,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,617,625,626,627,628,667,672,673,674,675,701,703,715,717,718,719,],[-299,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,-287,-301,230,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-297,230,-306,230,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,-111,-210,-300,-305,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,-233,-217,-174,-176,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-309,-200,-204,-206,-208,-307,-201,-205,-207,-209,-198,-195,-308,-196,-199,-197,]),'R_LEFT':([55,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,138,160,161,165,171,172,173,175,176,180,190,191,219,226,227,229,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,290,304,335,340,347,359,360,361,362,372,373,374,375,378,379,380,381,384,421,430,433,441,451,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,617,625,626,627,628,667,672,673,674,675,701,703,715,717,718,719,],[-299,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,-287,-301,231,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-297,231,-306,231,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,-111,-210,-300,-305,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,-233,-217,-174,-176,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-309,-200,-204,-206,-208,-307,-201,-205,-207,-209,-198,-195,-308,-196,-199,-197,]),'R_RIGHT':([55,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,138,160,161,165,171,172,173,175,176,180,190,191,219,226,227,229,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,290,304,335,340,347,359,360,361,362,372,373,374,375,378,379,380,381,384,421,430,433,441,451,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,617,625,626,627,628,667,672,673,674,675,701,703,715,717,718,719,],[-299,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,-287,-301,232,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-297,232,-306,232,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,-111,-210,-300,-305,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,-233,-217,-174,-176,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-309,-200,-204,-206,-208,-307,-201,-205,-207,-209,-198,-195,-308,-196,-199,-197,]),'R_FULL':([55,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,138,160,161,165,171,172,173,175,176,180,190,191,219,226,227,229,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,290,304,335,340,347,359,360,361,362,372,373,374,375,378,379,380,381,384,421,430,433,441,451,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,617,625,626,627,628,667,672,673,674,675,701,703,715,717,718,719,],[-299,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,-287,-301,233,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-297,233,-306,233,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,-111,-210,-300,-305,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,-233,-217,-174,-176,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-309,-200,-204,-206,-208,-307,-201,-205,-207,-209,-198,-195,-308,-196,-199,-197,]),'R_GROUP':([55,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,138,160,161,165,171,172,173,175,176,180,190,191,219,221,223,224,225,226,227,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,290,304,335,336,339,340,347,359,360,361,362,372,373,374,375,378,379,380,381,384,421,430,433,441,451,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,617,625,626,627,628,667,672,673,674,675,701,703,715,717,718,719,],[-299,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,-287,-301,-320,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-297,-319,-320,338,-320,-304,-306,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,-111,-210,-300,338,338,-305,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,-233,-217,-174,-176,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-309,-200,-204,-206,-208,-307,-201,-205,-207,-209,-198,-195,-308,-196,-199,-197,]),'R_LIMIT':([55,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,138,160,161,165,171,172,173,175,176,180,190,191,219,221,223,224,225,226,227,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,290,304,335,336,337,339,340,347,359,360,361,362,372,373,374,375,378,379,380,381,384,421,422,424,428,430,433,441,451,510,511,512,513,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,607,608,609,610,611,617,625,626,627,628,660,661,662,663,664,665,666,667,672,673,674,675,694,695,697,701,703,713,714,715,717,718,719,],[-299,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,-287,-301,-320,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-297,-319,-320,-322,-320,-304,-306,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,-111,-210,-300,-322,425,-322,-305,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,425,425,425,-233,-217,-174,-176,-328,-325,-326,425,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-329,-331,-336,-336,-321,-309,-200,-204,-206,-208,-339,-334,-335,-339,-323,-324,-327,-307,-201,-205,-207,-209,-330,-332,-333,-198,-195,-337,-338,-308,-196,-199,-197,]),'R_ORDER':([55,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,118,119,120,128,130,134,135,138,160,161,165,171,172,173,175,176,180,190,191,219,221,224,225,226,227,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,290,304,335,337,339,340,347,359,360,361,362,372,373,374,375,378,379,380,381,384,421,428,430,433,441,451,510,511,512,516,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,611,617,625,626,627,628,664,665,666,667,672,673,674,675,701,703,715,717,718,719,],[-299,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-14,-15,-16,-302,-298,-287,-301,-320,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-297,-319,-322,-320,-304,-306,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,-111,-210,-300,426,-322,-305,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-303,426,-233,-217,-174,-176,-328,-325,-326,-299,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-321,-309,-200,-204,-206,-208,-323,-324,-327,-307,-201,-205,-207,-209,-198,-195,-308,-196,-199,-197,]),'S_PUNTO':([68,171,430,],[141,284,284,]),'O_DIVISION':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,239,240,241,242,243,244,245,246,250,255,257,259,261,262,270,282,285,290,291,293,294,347,351,368,375,378,379,380,381,419,432,441,451,518,525,535,539,540,541,],[-233,146,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,146,-233,-160,-161,-138,-159,146,-118,-119,-234,-110,146,146,146,-148,-149,-150,-151,146,146,146,146,146,146,146,146,-167,146,-111,146,146,146,-109,146,146,-153,-112,-113,-114,-115,146,146,146,146,146,146,146,-116,-117,-126,]),'O_EXPONENTE':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,239,240,241,242,243,244,245,246,250,255,257,259,261,262,270,282,285,290,291,293,294,347,351,368,375,378,379,380,381,419,432,441,451,518,525,535,539,540,541,],[-233,147,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,147,-233,147,-161,-138,147,147,-118,-119,-234,-110,147,147,147,147,147,-150,147,147,147,147,147,147,147,147,147,-167,147,-111,147,147,147,-109,147,147,-153,-112,-113,-114,-115,147,147,147,147,147,147,147,-116,-117,-126,]),'O_MODULAR':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,239,240,241,242,243,244,245,246,250,255,257,259,261,262,270,282,285,290,291,293,294,347,351,368,375,378,379,380,381,419,432,441,451,518,525,535,539,540,541,],[-233,148,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,148,-233,-160,-161,-138,-159,148,-118,-119,-234,-110,148,148,148,-148,-149,-150,-151,148,148,148,148,148,148,148,148,-167,148,-111,148,148,148,-109,148,148,-153,-112,-113,-114,-115,148,148,148,148,148,148,148,-116,-117,-126,]),'OC_CONCATENAR':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,239,240,241,242,243,244,245,246,250,255,257,259,261,262,270,282,285,290,291,293,294,347,351,368,375,378,379,380,381,419,432,441,451,518,525,535,539,540,541,],[-233,149,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,149,-233,-160,-161,-138,-159,149,-118,-119,-234,-110,149,-146,-147,-148,-149,-150,-151,-152,149,149,149,149,149,149,149,-167,149,-111,149,149,149,-109,149,149,-153,-112,-113,-114,-115,149,149,149,149,149,149,149,-116,-117,-126,]),'R_IN':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,151,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,],[-233,150,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,248,150,-233,-160,-161,-138,-159,150,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,]),'OL_MENORQUE':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,592,593,594,595,596,597,598,599,],[-233,152,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,152,-233,-160,-161,-138,-159,152,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,649,-243,-244,-245,-246,-247,-248,-249,]),'OL_MAYORQUE':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,592,593,594,595,596,597,598,599,],[-233,153,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,153,-233,-160,-161,-138,-159,153,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,650,-243,-244,-245,-246,-247,-248,-249,]),'OL_MAYORIGUALQUE':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,592,593,594,595,596,597,598,599,],[-233,154,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,154,-233,-160,-161,-138,-159,154,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,651,-243,-244,-245,-246,-247,-248,-249,]),'OL_MENORIGUALQUE':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,592,593,594,595,596,597,598,599,],[-233,155,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,155,-233,-160,-161,-138,-159,155,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,652,-243,-244,-245,-246,-247,-248,-249,]),'S_IGUAL':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,218,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,396,490,539,540,541,592,593,594,595,596,597,598,599,],[-233,156,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,156,-233,-160,-161,-138,-159,156,-118,-119,333,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,493,583,-116,-117,-126,653,-243,-244,-245,-246,-247,-248,-249,]),'OL_DISTINTODE':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,592,593,594,595,596,597,598,599,],[-233,157,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,157,-233,-160,-161,-138,-159,157,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,654,-243,-244,-245,-246,-247,-248,-249,]),'R_IS':([68,69,70,75,76,77,78,79,80,82,83,84,85,86,87,88,89,95,97,98,100,101,160,161,165,169,170,171,172,173,175,176,180,182,190,191,221,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,289,290,304,347,359,360,361,362,372,373,374,375,378,379,380,381,384,433,441,451,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,592,593,594,595,596,597,598,599,625,626,627,628,666,667,672,673,674,675,701,703,717,718,719,],[-233,158,166,-161,-162,-163,-164,-165,-166,-226,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-179,-180,-225,158,166,-233,-160,-161,-138,-159,166,158,-118,-119,166,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,166,166,-227,-228,-229,-167,-224,166,-111,-210,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-217,-174,-176,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,655,-243,-244,-245,-246,-247,-248,-249,-200,-204,-206,-208,166,166,-201,-205,-207,-209,-198,-195,-196,-199,-197,]),'R_BETWEEN':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,151,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,],[-233,159,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,249,159,-233,-160,-161,-138,-159,159,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,]),'R_ISNULL':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,],[-233,160,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,160,-233,-160,-161,-138,-159,160,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,]),'R_NOTNULL':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,],[-233,161,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,161,-233,-160,-161,-138,-159,161,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,]),'OL_ESIGUAL':([68,69,75,76,77,78,79,80,83,84,85,86,87,88,89,95,97,98,169,171,172,173,175,176,182,190,191,235,238,240,241,242,243,244,245,246,282,290,347,375,378,379,380,381,539,540,541,],[-233,162,-161,-162,-163,-164,-165,-166,-137,-138,-139,-140,-141,-142,-143,-134,-132,-133,162,-233,-160,-161,-138,-159,162,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-167,-111,-109,-153,-112,-113,-114,-115,-116,-117,-126,]),'R_AND':([70,76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,160,161,165,170,171,172,173,175,176,180,190,191,221,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,270,275,276,277,278,279,282,283,289,290,304,347,351,359,360,361,362,368,372,373,374,375,378,379,380,381,384,433,441,451,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,625,626,627,628,666,667,672,673,674,675,701,703,717,718,719,],[163,-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-179,-180,-225,163,-233,-160,-161,-138,-159,163,-118,-119,163,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,367,-221,-222,-227,-228,-229,-167,-224,163,-111,-210,-109,435,-185,-186,-187,-188,452,-230,-231,-232,-153,-112,-113,-114,-115,-216,-217,-174,-176,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-200,-204,-206,-208,163,163,-201,-205,-207,-209,-198,-195,-196,-199,-197,]),'R_WHEN':([74,83,85,86,87,88,89,175,177,178,287,456,],[179,-137,-139,-140,-141,-142,-143,-138,179,-155,-154,-156,]),'R_THEN':([76,77,78,79,80,82,83,85,86,87,88,89,95,97,98,100,101,160,161,165,171,172,173,175,176,180,190,191,235,238,240,241,242,243,244,245,246,250,255,257,259,261,262,266,267,268,269,275,276,277,278,279,282,283,289,290,304,347,359,360,361,362,372,373,374,375,378,379,380,381,384,433,441,451,517,518,519,520,521,522,523,525,535,536,537,538,539,540,541,625,626,627,628,672,673,674,675,701,703,717,718,719,],[-162,-163,-164,-165,-166,-226,-137,-139,-140,-141,-142,-143,-134,-132,-133,-219,-220,-179,-180,-225,-233,-160,-161,-138,-159,-223,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,-168,-169,-170,-171,-172,-173,-181,-182,-183,-184,-221,-222,-227,-228,-229,-167,-224,377,-111,-210,-109,-185,-186,-187,-188,-230,-231,-232,-153,-112,-113,-114,-115,-216,-217,-174,-176,-218,-177,-189,-190,-191,-192,-194,-175,-178,-202,-203,-193,-116,-117,-126,-200,-204,-206,-208,-201,-205,-207,-209,-198,-195,-196,-199,-197,]),'R_ANY':([76,77,78,79,80,83,85,86,87,88,89,95,97,98,152,153,154,155,157,160,161,162,171,172,173,175,176,190,191,235,238,240,241,242,243,244,245,246,266,267,268,269,282,290,347,359,360,361,362,375,378,379,380,381,441,451,518,525,535,539,540,541,],[-162,-163,-164,-165,-166,-137,-139,-140,-141,-142,-143,-134,-132,-133,253,253,253,253,253,253,253,253,-233,-160,-161,-138,-159,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,253,253,253,253,-167,-111,-109,253,253,253,253,-153,-112,-113,-114,-115,253,253,253,253,253,-116,-117,-126,]),'R_SOME':([76,77,78,79,80,83,85,86,87,88,89,95,97,98,152,153,154,155,157,160,161,162,171,172,173,175,176,190,191,235,238,240,241,242,243,244,245,246,266,267,268,269,282,290,347,359,360,361,362,375,378,379,380,381,441,451,518,525,535,539,540,541,],[-162,-163,-164,-165,-166,-137,-139,-140,-141,-142,-143,-134,-132,-133,254,254,254,254,254,254,254,254,-233,-160,-161,-138,-159,-118,-119,-234,-110,-146,-147,-148,-149,-150,-151,-152,254,254,254,254,-167,-111,-109,254,254,254,254,-153,-112,-113,-114,-115,254,254,254,254,254,-116,-117,-126,]),'R_END':([83,85,86,87,88,89,175,177,178,286,287,376,456,],[-137,-139,-140,-141,-142,-143,-138,-158,-155,375,-154,-157,-156,]),'R_ELSE':([83,85,86,87,88,89,175,177,178,287,456,],[-137,-139,-140,-141,-142,-143,-138,288,-155,-154,-156,]),'R_DEFAULT':([83,85,86,87,88,89,175,333,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,495,553,554,555,556,557,558,559,562,566,567,569,570,571,572,573,574,575,576,577,578,579,580,634,635,636,637,639,640,643,683,723,],[-137,-139,-140,-141,-142,-143,-138,420,-64,560,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,560,560,-93,-94,-95,-96,-97,-98,-101,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,-92,-99,-100,-102,-104,-105,-81,-90,-103,]),'R_PRIMARY':([83,85,86,87,88,89,175,208,306,468,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,553,554,555,556,557,558,559,562,566,567,569,570,571,572,573,574,575,576,577,578,579,580,634,635,636,637,639,640,643,683,723,],[-137,-139,-140,-141,-142,-143,-138,321,321,321,-64,564,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,564,-93,-94,-95,-96,-97,-98,-101,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,-92,-99,-100,-102,-104,-105,-81,-90,-103,]),'R_REFERENCES':([83,85,86,87,88,89,175,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,553,554,555,556,557,558,559,562,566,567,569,570,571,572,573,574,575,576,577,578,579,580,634,635,636,637,639,640,643,683,693,723,],[-137,-139,-140,-141,-142,-143,-138,-64,565,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,565,-93,-94,-95,-96,-97,-98,-101,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,-92,-99,-100,-102,-104,-105,-81,-90,712,-103,]),'R_CONSTRAINT':([83,85,86,87,88,89,175,208,209,306,468,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,553,554,555,556,557,558,559,562,566,567,569,570,571,572,573,574,575,576,577,578,579,580,634,635,636,637,639,640,643,683,723,],[-137,-139,-140,-141,-142,-143,-138,322,324,322,322,-64,322,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,322,-93,-94,-95,-96,-97,-98,-101,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,-92,-99,-100,-102,-104,-105,-81,-90,-103,]),'R_CHECK':([83,85,86,87,88,89,175,208,306,320,393,410,468,469,470,471,472,473,474,476,477,478,479,480,481,482,483,484,485,486,487,553,554,555,556,557,558,559,562,563,566,567,569,570,571,572,573,574,575,576,577,578,579,580,634,635,636,637,639,640,643,683,723,],[-137,-139,-140,-141,-142,-143,-138,-61,-61,407,407,-60,-61,-64,-61,-65,-66,-67,-68,-70,-71,-72,-73,-74,-75,-91,-91,-91,-91,-91,-89,-61,-93,-94,-95,-96,-97,-98,-101,638,-69,-76,-77,-78,-79,-91,-80,-82,-83,-84,-85,-86,-87,-88,-92,-99,-100,-102,-104,-105,-81,-90,-103,]),'R_RENAME':([117,118,119,120,121,314,],[203,-14,-15,-16,210,210,]),'R_OWNER':([117,118,119,120,308,],[204,-14,-15,-16,396,]),'R_ADD':([118,119,120,121,314,],[-14,-15,-16,208,208,]),'R_ON':([118,119,120,130,196,219,235,429,430,515,],[-14,-15,-16,-298,305,-297,-234,-299,-233,615,]),'R_USING':([118,119,120,130,219,235,385,429,430,515,],[-14,-15,-16,-298,-297,-234,466,-299,-233,616,]),'R_MODE':([118,119,120,308,395,491,492,584,585,],[-14,-15,-16,-43,490,-39,-40,-41,-42,]),'R_VALUES':([125,214,415,],[-347,328,-346,]),'R_UNKNOWN':([158,166,265,280,],[269,279,362,374,]),'R_SYMMETRIC':([159,],[271,]),'R_YEAR':([187,487,],[296,575,]),'R_MONTH':([187,487,],[297,576,]),'R_DAY':([187,487,],[298,577,]),'R_HOUR':([187,487,],[299,578,]),'R_MINUTE':([187,487,],[300,579,]),'R_SECOND':([187,487,],[301,580,]),'R_TO':([203,204,413,],[310,311,502,]),'R_COLUMN':([205,208,209,210,],[313,316,325,327,]),'R_FOREIGN':([208,306,320,393,410,468,],[-61,-61,408,408,-60,-61,]),'R_JOIN':([228,230,231,232,233,342,343,344,345,],[341,-312,-313,-315,-317,431,-314,-316,-318,]),'R_OUTER':([231,232,233,],[343,344,345,]),'R_HAVING':([235,430,510,511,512,664,665,],[-234,-233,613,-325,-326,-323,-324,]),'R_ASC':([235,330,430,504,609,610,632,],[-234,-63,-233,-62,661,661,680,]),'R_DESC':([235,330,430,504,609,610,632,],[-234,-63,-233,-62,662,662,679,]),'R_ENUM':([309,],[397,]),'R_CURRENT_USER':([311,],[401,]),'R_SESSION_USER':([311,],[402,]),'R_KEY':([321,408,564,],[409,500,639,]),'R_NULLS':([330,504,632,678,679,680,],[-63,-62,-29,706,-27,-28,]),'R_BY':([338,426,],[427,509,]),'T_DATE':([383,388,405,496,],[461,480,480,480,]),'T_TIME':([383,388,405,496,],[462,481,481,481,]),'T_SMALLINT':([388,405,496,],[471,471,471,]),'T_INTEGER':([388,405,496,],[472,472,472,]),'T_BIGINT':([388,405,496,],[473,473,473,]),'T_REAL':([388,405,496,],[474,474,474,]),'T_DOUBLE':([388,405,496,],[475,475,475,]),'T_MONEY':([388,405,496,],[476,476,476,]),'T_TEXT':([388,405,496,],[477,477,477,]),'T_BOOLEAN':([388,405,496,],[478,478,478,]),'T_DECIMAL':([388,405,496,],[482,482,482,]),'T_NUMERIC':([388,405,496,],[483,483,483,]),'T_VARCHAR':([388,405,496,],[484,484,484,]),'T_CHARACTER':([388,405,496,],[485,485,485,]),'T_CHAR':([388,405,496,],[486,486,486,]),'R_HASH':([466,],[548,]),'R_INHERITS':([467,],[550,]),'T_PRECISION':([475,],[566,]),'T_VARYING':([485,],[572,]),'R_OFFSET':([507,508,],[605,605,]),'R_FIRST':([696,706,],[713,721,]),'R_LAST':([696,706,],[714,722,]),}
>>>>>>> main

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

<<<<<<< HEAD
_lr_goto_items = {'init':([0,],[1,]),'stmtList':([0,],[2,]),'stmt':([0,2,],[3,26,]),'createStmt':([0,2,],[4,4,]),'showStmt':([0,2,],[5,5,]),'alterStmt':([0,2,],[6,6,]),'dropStmt':([0,2,],[7,7,]),'insertStmt':([0,2,],[8,8,]),'updateStmt':([0,2,],[9,9,]),'deleteStmt':([0,2,],[10,10,]),'truncateStmt':([0,2,],[11,11,]),'useStmt':([0,2,],[12,12,]),'selectStmt':([0,2,20,57,72,106,108,109,168,190,248,353,355,356,357,358,359,372,373,374,449,450,451,452,527,528,529,530,621,631,673,675,681,],[13,13,54,132,169,194,195,196,54,304,352,436,438,439,440,441,442,455,456,457,531,532,533,534,623,624,625,626,674,680,703,705,707,]),'functionStmt':([0,2,],[14,14,]),'createBody':([15,],[41,]),'createOpts':([15,],[43,]),'orReplace':([15,],[45,]),'fromBody':([21,59,223,],[55,136,338,]),'fromCl':([22,64,138,],[58,139,224,]),'tableOpt':([23,],[60,]),'selectParams':([25,63,],[64,138,]),'selectList':([25,63,],[66,66,]),'selectListParams':([25,63,140,],[67,67,235,]),'expresion':([25,63,140,],[68,68,68,]),'datatype':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[70,70,170,173,177,183,183,70,240,241,242,243,244,245,246,247,251,256,258,260,262,263,271,183,183,170,286,183,170,292,294,295,354,371,423,434,443,453,240,519,526,536,240,183,183,]),'expBool':([25,63,72,82,134,140,164,165,168,180,182,615,617,],[71,71,171,181,222,71,276,277,171,290,171,670,671,]),'columnName':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,344,351,360,370,385,418,429,433,437,444,454,496,510,614,615,617,663,672,719,],[76,76,76,174,174,76,76,76,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,76,76,76,174,76,76,174,174,174,174,174,174,431,174,174,174,460,174,512,517,174,174,174,174,611,668,76,76,611,701,728,]),'literal':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,289,336,351,360,370,380,418,437,444,454,496,562,570,615,617,686,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,379,77,77,77,77,458,77,77,77,77,77,637,644,77,77,712,]),'funcCall':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'extract':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'datePart':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'current':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,418,437,444,454,496,615,617,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'boolean':([25,63,72,82,134,140,164,165,168,180,182,615,617,],[83,83,83,83,83,83,83,83,83,83,83,83,83,]),'timeStamp':([25,63,72,73,74,82,134,140,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,164,165,168,175,180,182,185,186,187,250,272,336,351,360,370,385,418,437,444,454,496,615,617,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,459,96,96,96,96,96,96,96,]),'expComp':([25,63,72,82,134,140,164,165,168,180,182,615,617,],[101,101,101,101,101,101,101,101,101,101,101,101,101,]),'expSubq':([25,63,72,82,134,140,164,165,168,180,182,615,617,],[102,102,102,102,102,102,102,102,102,102,102,102,102,]),'stringExp':([25,63,72,82,134,140,164,165,168,180,182,615,617,],[105,105,105,105,105,105,105,105,105,105,105,105,105,]),'allOpt':([37,38,39,],[106,108,109,]),'ifNotExists':([44,46,113,],[111,114,200,]),'likeOpt':([48,],[116,]),'idOrString':([49,50,56,67,111,123,125,130,200,235,313,314,337,431,517,],[118,122,131,131,198,212,214,220,311,131,402,404,425,131,131,]),'ifExists':([51,52,],[123,125,]),'optAlias':([56,67,235,431,517,],[129,141,349,516,619,]),'whereCl':([58,139,217,224,226,],[133,225,334,339,342,]),'tableExp':([59,],[135,]),'optBoolPredicate':([71,171,181,222,276,277,290,670,671,],[166,166,166,166,166,166,166,166,166,]),'caseList':([75,],[178,]),'caseWhen':([75,178,],[179,288,]),'alterDb':([118,],[203,]),'alterTableList':([122,],[207,]),'alterTable':([122,317,],[208,408,]),'paramsColumn':([126,],[215,]),'updateCols':([128,],[217,]),'updateVals':([128,335,],[218,421,]),'joinList':([139,],[226,]),'joinList2':([139,],[227,]),'joinCl':([139,227,],[228,343,]),'joinOpt':([139,227,230,],[229,229,345,]),'paramsList':([143,418,496,],[238,505,588,]),'subqValues':([153,154,155,156,158,161,162,163,267,268,269,270,362,363,364,365,443,453,519,526,536,],[252,257,259,261,264,273,274,275,366,367,368,369,445,446,447,448,525,535,620,622,632,]),'optElse':([178,],[287,]),'optsExtract':([188,],[296,]),'params_list':([197,],[306,]),'param_item':([197,306,],[307,389,]),'alterAlter':([206,],[315,]),'alterAdd':([209,],[318,]),'createConstraint':([209,309,470,],[320,393,393,]),'createPrimary':([209,309,470,],[321,395,395,]),'createForeign':([209,309,470,],[322,396,396,]),'constrName':([209,309,470,472,555,],[323,397,397,565,565,]),'alterDrop':([210,],[326,]),'alterRename':([211,],[329,]),'idList':([216,490,503,602,732,],[332,583,603,658,734,]),'groupByCl':([225,339,342,],[340,426,430,]),'createTableList':([309,],[390,]),'createTable':([309,470,],[391,553,]),'createUnique':([309,470,],[394,394,]),'createOwner':([311,],[399,]),'ownerOPts':([314,],[403,]),'updateExp':([336,],[422,]),'orderByCl':([340,426,430,],[427,507,514,]),'dateSource':([386,],[461,]),'returnsStmt':([388,],[467,]),'types':([392,409,498,],[472,499,591,]),'createMode':([399,],[491,]),'limitCl':([427,430,507,514,],[508,515,606,616,]),'groupList':([429,],[511,]),'item_returns':([468,],[549,]),'inheritsOpt':([469,],[551,]),'createColumns':([472,],[554,]),'colOptionsList':([472,],[555,]),'colOptions':([472,555,],[556,636,]),'defaultVal':([472,497,555,],[557,590,557,]),'nullOpt':([472,497,555,],[558,589,558,]),'constraintOpt':([472,555,],[559,559,]),'primaryOpt':([472,555,],[560,560,]),'referencesOpt':([472,555,],[561,561,]),'optParams':([484,485,486,487,488,574,],[569,571,572,573,575,645,]),'intervalFields':([489,],[576,]),'booleanCheck':([501,684,],[593,711,]),'idOrLiteral':([501,651,652,653,654,655,656,684,713,726,],[594,687,688,689,690,691,692,594,725,731,]),'orderList':([510,],[609,]),'orderByElem':([510,663,],[610,697,]),'havingCl':([511,],[613,]),'literalList':([570,],[643,]),'offsetLimit':([607,608,],[660,662,]),'orderOpts':([611,612,],[664,667,]),'orderNull':([664,667,],[698,700,]),'nameList':([672,],[702,]),'bloqueFunction':([682,],[708,]),'declareStmt':([682,],[709,]),'beginStmt':([723,],[729,]),'labelEnd':([733,],[735,]),}
=======
_lr_goto_items = {'init':([0,],[1,]),'stmtList':([0,],[2,]),'stmt':([0,2,],[3,25,]),'createStmt':([0,2,],[4,4,]),'showStmt':([0,2,],[5,5,]),'alterStmt':([0,2,],[6,6,]),'dropStmt':([0,2,],[7,7,]),'insertStmt':([0,2,],[8,8,]),'updateStmt':([0,2,],[9,9,]),'deleteStmt':([0,2,],[10,10,]),'truncateStmt':([0,2,],[11,11,]),'useStmt':([0,2,],[12,12,]),'selectStmt':([0,2,19,56,71,105,107,108,167,189,247,350,352,353,354,355,356,369,370,371,447,448,449,450,526,527,528,529,619,629,669,671,677,],[13,13,53,131,168,193,194,195,53,303,349,434,436,437,438,439,440,453,454,455,530,531,532,533,621,622,623,624,670,676,700,702,704,]),'createBody':([14,],[39,]),'createOpts':([14,],[40,]),'unique_index':([14,],[41,]),'orReplace':([14,],[43,]),'fromBody':([20,58,222,],[54,135,335,]),'fromCl':([21,63,137,],[57,138,223,]),'tableOpt':([22,],[59,]),'selectParams':([24,62,],[63,137,]),'selectList':([24,62,],[65,65,]),'selectListParams':([24,62,139,],[66,66,234,]),'expresion':([24,62,139,],[67,67,67,]),'datatype':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[69,69,169,172,176,182,182,69,239,240,241,242,243,244,245,246,250,255,257,259,261,262,270,182,182,169,285,182,169,291,293,294,351,368,419,432,441,451,239,518,525,535,239,182,182,]),'expBool':([24,62,71,81,133,139,163,164,167,179,181,613,615,],[70,70,170,180,221,70,275,276,170,289,170,666,667,]),'columnName':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,341,348,357,367,382,414,427,431,435,442,452,494,509,612,613,615,659,668,716,],[75,75,75,173,173,75,75,75,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,75,75,75,173,75,75,173,173,173,173,173,173,429,173,173,173,458,173,511,516,173,173,173,173,609,664,75,75,609,698,727,]),'literal':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,288,333,348,357,367,377,414,435,442,452,494,560,568,613,615,684,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,376,76,76,76,76,456,76,76,76,76,76,635,642,76,76,709,]),'funcCall':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'extract':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'datePart':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'current':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,414,435,442,452,494,613,615,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'boolean':([24,62,71,81,133,139,163,164,167,179,181,613,615,],[82,82,82,82,82,82,82,82,82,82,82,82,82,]),'timeStamp':([24,62,71,72,73,81,133,139,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,163,164,167,174,179,181,184,185,186,249,271,333,348,357,367,382,414,435,442,452,494,613,615,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,457,95,95,95,95,95,95,95,]),'expComp':([24,62,71,81,133,139,163,164,167,179,181,613,615,],[100,100,100,100,100,100,100,100,100,100,100,100,100,]),'expSubq':([24,62,71,81,133,139,163,164,167,179,181,613,615,],[101,101,101,101,101,101,101,101,101,101,101,101,101,]),'stringExp':([24,62,71,81,133,139,163,164,167,179,181,613,615,],[104,104,104,104,104,104,104,104,104,104,104,104,104,]),'allOpt':([36,37,38,],[105,107,108,]),'ifNotExists':([42,44,112,],[110,113,199,]),'likeOpt':([47,],[115,]),'idOrString':([48,49,55,66,110,122,124,129,199,234,310,311,334,429,516,],[117,121,130,130,197,211,213,219,308,130,398,400,421,130,130,]),'ifExists':([50,51,],[122,124,]),'optAlias':([55,66,234,429,516,],[128,140,346,515,617,]),'whereCl':([57,138,216,223,225,720,],[132,224,331,336,339,728,]),'tableExp':([58,],[134,]),'optBoolPredicate':([70,170,180,221,275,276,289,666,667,],[165,165,165,165,165,165,165,165,165,]),'caseList':([74,],[177,]),'caseWhen':([74,177,],[178,287,]),'alterDb':([117,],[202,]),'alterTableList':([121,],[206,]),'alterTable':([121,314,],[207,404,]),'paramsColumn':([125,],[214,]),'updateCols':([127,],[216,]),'updateVals':([127,332,],[217,417,]),'joinList':([138,],[225,]),'joinList2':([138,],[226,]),'joinCl':([138,226,],[227,340,]),'joinOpt':([138,226,229,],[228,228,342,]),'paramsList':([142,414,494,],[237,503,586,]),'subqValues':([152,153,154,155,157,160,161,162,266,267,268,269,359,360,361,362,441,451,518,525,535,],[251,256,258,260,263,272,273,274,363,364,365,366,443,444,445,446,524,534,618,620,630,]),'optElse':([177,],[286,]),'optsExtract':([187,],[295,]),'alterAlter':([205,],[312,]),'alterAdd':([208,],[315,]),'createConstraint':([208,306,468,],[317,389,389,]),'createPrimary':([208,306,468,],[318,391,391,]),'createForeign':([208,306,468,],[319,392,392,]),'constrName':([208,306,468,470,553,],[320,393,393,563,563,]),'alterDrop':([209,],[323,]),'alterRename':([210,],[326,]),'idList':([215,488,501,547,600,730,],[329,581,601,632,656,731,]),'groupByCl':([224,336,339,],[337,422,428,]),'createTableList':([306,],[386,]),'createTable':([306,468,],[387,551,]),'createUnique':([306,468,],[390,390,]),'createOwner':([308,],[395,]),'ownerOPts':([311,],[399,]),'updateExp':([333,],[418,]),'limitCl':([337,422,424,428,513,],[423,505,506,514,614,]),'orderByCl':([337,428,],[424,513,]),'dateSource':([383,],[459,]),'using_hash_index':([385,],[465,]),'types':([388,405,496,],[470,497,589,]),'createMode':([395,],[489,]),'groupList':([427,],[510,]),'inheritsOpt':([467,],[549,]),'createColumns':([470,],[552,]),'colOptionsList':([470,],[553,]),'colOptions':([470,553,],[554,634,]),'defaultVal':([470,495,553,],[555,588,555,]),'nullOpt':([470,495,553,],[556,587,556,]),'constraintOpt':([470,553,],[557,557,]),'primaryOpt':([470,553,],[558,558,]),'referencesOpt':([470,553,],[559,559,]),'optParams':([482,483,484,485,486,572,],[567,569,570,571,573,643,]),'intervalFields':([487,],[574,]),'booleanCheck':([499,682,],[591,708,]),'idOrLiteral':([499,649,650,651,652,653,654,682,710,725,],[592,685,686,687,688,689,690,592,724,729,]),'offsetLimit':([507,508,],[604,606,]),'orderList':([509,],[607,]),'orderByElem':([509,659,],[608,694,]),'havingCl':([510,],[611,]),'literalList':([568,],[641,]),'orderOpts':([609,610,],[660,663,]),'indexasc_desc':([632,],[678,]),'orderNull':([660,663,],[695,697,]),'nameList':([668,],[699,]),'indexNullS':([678,],[705,]),}
>>>>>>> main

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> stmtList','init',1,'p_init','grammar.py',54),
  ('stmtList -> stmtList stmt','stmtList',2,'p_stmt_list','grammar.py',62),
  ('stmtList -> stmt','stmtList',1,'p_stmt_u','grammar.py',69),
  ('stmt -> createStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',76),
  ('stmt -> showStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',77),
  ('stmt -> alterStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',78),
  ('stmt -> dropStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',79),
  ('stmt -> insertStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',80),
  ('stmt -> updateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',81),
  ('stmt -> deleteStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',82),
  ('stmt -> truncateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',83),
  ('stmt -> useStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',84),
  ('stmt -> selectStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',85),
<<<<<<< HEAD
  ('stmt -> functionStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',86),
  ('idOrString -> ID','idOrString',1,'p_id_string','grammar.py',100),
  ('idOrString -> STRING','idOrString',1,'p_id_string','grammar.py',101),
  ('idOrString -> CHARACTER','idOrString',1,'p_id_string','grammar.py',102),
  ('createStmt -> R_CREATE createBody','createStmt',2,'p_createstmt','grammar.py',109),
  ('createBody -> createOpts','createBody',1,'p_createbody','grammar.py',116),
  ('createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt','createOpts',7,'p_createopts_table','grammar.py',123),
  ('createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode','createOpts',6,'p_createopts_db','grammar.py',130),
  ('orReplace -> R_OR R_REPLACE','orReplace',2,'p_replace_true','grammar.py',138),
  ('orReplace -> <empty>','orReplace',0,'p_replace_false','grammar.py',146),
  ('createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER','createOpts',8,'p_createopts_type','grammar.py',154),
  ('ifNotExists -> R_IF R_NOT R_EXISTS','ifNotExists',3,'p_ifnotexists_true','grammar.py',162),
  ('ifNotExists -> <empty>','ifNotExists',0,'p_ifnotexists_false','grammar.py',170),
  ('inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER','inheritsOpt',4,'p_inheritsOpt','grammar.py',178),
  ('inheritsOpt -> <empty>','inheritsOpt',0,'p_inheritsOpt_none','grammar.py',186),
  ('createOwner -> R_OWNER ID','createOwner',2,'p_createowner','grammar.py',194),
  ('createOwner -> R_OWNER STRING','createOwner',2,'p_createowner','grammar.py',195),
  ('createOwner -> R_OWNER S_IGUAL ID','createOwner',3,'p_createowner_asg','grammar.py',203),
  ('createOwner -> R_OWNER S_IGUAL STRING','createOwner',3,'p_createowner_asg','grammar.py',204),
  ('createOwner -> <empty>','createOwner',0,'p_createowner_none','grammar.py',212),
  ('createMode -> R_MODE INTEGER','createMode',2,'p_createmode','grammar.py',220),
  ('createMode -> R_MODE S_IGUAL INTEGER','createMode',3,'p_createMode_asg','grammar.py',228),
  ('createMode -> <empty>','createMode',0,'p_createmode_none','grammar.py',236),
  ('createTableList -> createTableList S_COMA createTable','createTableList',3,'p_createtable_list','grammar.py',243),
  ('createTableList -> createTable','createTableList',1,'p_createtable_u','grammar.py',250),
  ('createTable -> ID types createColumns','createTable',3,'p_createTable_id','grammar.py',257),
  ('createTable -> createConstraint','createTable',1,'p_createTable','grammar.py',265),
  ('createTable -> createUnique','createTable',1,'p_createTable','grammar.py',266),
  ('createTable -> createPrimary','createTable',1,'p_createTable','grammar.py',267),
  ('createTable -> createForeign','createTable',1,'p_createTable','grammar.py',268),
  ('createColumns -> colOptionsList','createColumns',1,'p_createColumNs','grammar.py',276),
  ('createColumns -> <empty>','createColumns',0,'p_createColumNs_none','grammar.py',284),
  ('createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','createConstraint',5,'p_createConstraint','grammar.py',291),
  ('createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER','createUnique',4,'p_createUnique','grammar.py',297),
  ('createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER','createPrimary',5,'p_createPrimary','grammar.py',303),
  ('createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER','createForeign',11,'p_createForeign','grammar.py',310),
  ('constrName -> R_CONSTRAINT ID','constrName',2,'p_constrName','grammar.py',318),
  ('constrName -> <empty>','constrName',0,'p_constrName_none','grammar.py',326),
  ('idList -> idList S_COMA ID','idList',3,'p_id_list','grammar.py',333),
  ('idList -> ID','idList',1,'p_id_u','grammar.py',340),
  ('types -> ID','types',1,'p_types','grammar.py',347),
  ('types -> T_SMALLINT','types',1,'p_types_simple','grammar.py',355),
  ('types -> T_INTEGER','types',1,'p_types_simple','grammar.py',356),
  ('types -> T_BIGINT','types',1,'p_types_simple','grammar.py',357),
  ('types -> T_REAL','types',1,'p_types_simple','grammar.py',358),
  ('types -> T_DOUBLE T_PRECISION','types',2,'p_types_simple','grammar.py',359),
  ('types -> T_MONEY','types',1,'p_types_simple','grammar.py',360),
  ('types -> T_TEXT','types',1,'p_types_simple','grammar.py',361),
  ('types -> T_BOOLEAN','types',1,'p_types_simple','grammar.py',362),
  ('types -> R_TIMESTAMP','types',1,'p_types_simple','grammar.py',363),
  ('types -> T_DATE','types',1,'p_types_simple','grammar.py',364),
  ('types -> T_TIME','types',1,'p_types_simple','grammar.py',365),
  ('types -> T_DECIMAL optParams','types',2,'p_types_params','grammar.py',374),
  ('types -> T_NUMERIC optParams','types',2,'p_types_params','grammar.py',375),
  ('types -> T_VARCHAR optParams','types',2,'p_types_params','grammar.py',376),
  ('types -> T_CHARACTER optParams','types',2,'p_types_params','grammar.py',377),
  ('types -> T_CHAR optParams','types',2,'p_types_params','grammar.py',378),
  ('types -> T_CHARACTER T_VARYING optParams','types',3,'p_types_var','grammar.py',386),
  ('types -> R_INTERVAL intervalFields','types',2,'p_timeType_interval','grammar.py',394),
  ('intervalFields -> R_YEAR','intervalFields',1,'p_intervalFields','grammar.py',402),
  ('intervalFields -> R_MONTH','intervalFields',1,'p_intervalFields','grammar.py',403),
  ('intervalFields -> R_DAY','intervalFields',1,'p_intervalFields','grammar.py',404),
  ('intervalFields -> R_HOUR','intervalFields',1,'p_intervalFields','grammar.py',405),
  ('intervalFields -> R_MINUTE','intervalFields',1,'p_intervalFields','grammar.py',406),
  ('intervalFields -> R_SECOND','intervalFields',1,'p_intervalFields','grammar.py',407),
  ('intervalFields -> <empty>','intervalFields',0,'p_intervalFields_none','grammar.py',415),
  ('optParams -> S_PARIZQ literalList S_PARDER','optParams',3,'p_optParams','grammar.py',422),
  ('optParams -> <empty>','optParams',0,'p_optParams_none','grammar.py',428),
  ('colOptionsList -> colOptionsList colOptions','colOptionsList',2,'p_colOptions_list','grammar.py',434),
  ('colOptionsList -> colOptions','colOptionsList',1,'p_colOptions_u','grammar.py',441),
  ('colOptions -> defaultVal','colOptions',1,'p_colOptions','grammar.py',448),
  ('colOptions -> nullOpt','colOptions',1,'p_colOptions','grammar.py',449),
  ('colOptions -> constraintOpt','colOptions',1,'p_colOptions','grammar.py',450),
  ('colOptions -> primaryOpt','colOptions',1,'p_colOptions','grammar.py',451),
  ('colOptions -> referencesOpt','colOptions',1,'p_colOptions','grammar.py',452),
  ('defaultVal -> R_DEFAULT literal','defaultVal',2,'p_defaultVal','grammar.py',460),
  ('nullOpt -> R_NOT R_NULL','nullOpt',2,'p_nullOpt_true','grammar.py',467),
  ('nullOpt -> R_NULL','nullOpt',1,'p_nullOpt_false','grammar.py',475),
  ('constraintOpt -> constrName R_UNIQUE','constraintOpt',2,'p_constraintOpt_unique','grammar.py',486),
  ('constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','constraintOpt',5,'p_constraintOpt_check','grammar.py',494),
  ('primaryOpt -> R_PRIMARY R_KEY','primaryOpt',2,'p_primaryOpt','grammar.py',501),
  ('referencesOpt -> R_REFERENCES ID','referencesOpt',2,'p_referencesOpt','grammar.py',507),
  ('expresion -> datatype','expresion',1,'p_expresion','grammar.py',519),
  ('expresion -> expBool','expresion',1,'p_expresion','grammar.py',520),
  ('expresion -> S_PARIZQ selectStmt S_PARDER','expresion',3,'p_expresion_','grammar.py',528),
  ('funcCall -> ID S_PARIZQ paramsList S_PARDER','funcCall',4,'p_funcCall_1','grammar.py',536),
  ('funcCall -> ID S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',544),
  ('funcCall -> R_NOW S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',545),
  ('funcCall -> R_COUNT S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',553),
  ('funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',554),
  ('funcCall -> R_SUM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',555),
  ('funcCall -> R_PROM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',556),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER','extract',6,'p_extract_1','grammar.py',566),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER','extract',6,'p_extract_2','grammar.py',577),
  ('timeStamp -> R_TIMESTAMP STRING','timeStamp',2,'p_timeStamp','grammar.py',587),
  ('timeStamp -> R_INTERVAL STRING','timeStamp',2,'p_timeStamp','grammar.py',588),
  ('optsExtract -> R_YEAR','optsExtract',1,'p_optsExtract','grammar.py',596),
  ('optsExtract -> R_MONTH','optsExtract',1,'p_optsExtract','grammar.py',597),
  ('optsExtract -> R_DAY','optsExtract',1,'p_optsExtract','grammar.py',598),
  ('optsExtract -> R_HOUR','optsExtract',1,'p_optsExtract','grammar.py',599),
  ('optsExtract -> R_MINUTE','optsExtract',1,'p_optsExtract','grammar.py',600),
  ('optsExtract -> R_SECOND','optsExtract',1,'p_optsExtract','grammar.py',601),
  ('datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER','datePart',6,'p_datePart','grammar.py',609),
  ('dateSource -> R_TIMESTAMP STRING','dateSource',2,'p_dateSource','grammar.py',619),
  ('dateSource -> T_DATE STRING','dateSource',2,'p_dateSource','grammar.py',620),
  ('dateSource -> T_TIME STRING','dateSource',2,'p_dateSource','grammar.py',621),
  ('dateSource -> R_INTERVAL STRING','dateSource',2,'p_dateSource','grammar.py',622),
  ('dateSource -> R_NOW S_PARIZQ S_PARDER','dateSource',3,'p_dateSource','grammar.py',623),
  ('current -> R_CURRENT_DATE','current',1,'p_current','grammar.py',631),
  ('current -> R_CURRENT_TIME','current',1,'p_current','grammar.py',632),
  ('current -> timeStamp','current',1,'p_current_1','grammar.py',641),
  ('literalList -> literalList S_COMA literal','literalList',3,'p_literal_list','grammar.py',648),
  ('literalList -> literal','literalList',1,'p_literal_u','grammar.py',655),
  ('literal -> INTEGER','literal',1,'p_literal','grammar.py',662),
  ('literal -> STRING','literal',1,'p_literal','grammar.py',663),
  ('literal -> DECIMAL','literal',1,'p_literal','grammar.py',664),
  ('literal -> CHARACTER','literal',1,'p_literal','grammar.py',665),
  ('literal -> R_TRUE','literal',1,'p_literal','grammar.py',666),
  ('literal -> R_FALSE','literal',1,'p_literal','grammar.py',667),
  ('literal -> R_NULL','literal',1,'p_literal','grammar.py',668),
  ('paramsList -> paramsList S_COMA datatype','paramsList',3,'p_params_list','grammar.py',687),
  ('paramsList -> datatype','paramsList',1,'p_params_u','grammar.py',694),
  ('datatype -> datatype O_SUMA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',701),
  ('datatype -> datatype O_RESTA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',702),
  ('datatype -> datatype O_PRODUCTO datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',703),
  ('datatype -> datatype O_DIVISION datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',704),
  ('datatype -> datatype O_EXPONENTE datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',705),
  ('datatype -> datatype O_MODULAR datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',706),
  ('datatype -> datatype OC_CONCATENAR datatype','datatype',3,'p_datatype_operadores_binarios2','grammar.py',715),
  ('datatype -> R_CASE caseList optElse R_END','datatype',4,'p_datatype_case_when','grammar.py',723),
  ('caseList -> caseList caseWhen','caseList',2,'p_case_list','grammar.py',729),
  ('caseList -> caseWhen','caseList',1,'p_case_list','grammar.py',730),
  ('caseWhen -> R_WHEN expBool R_THEN literal','caseWhen',4,'p_caseWhen','grammar.py',735),
  ('optElse -> R_ELSE literal','optElse',2,'p_caseWhen_2','grammar.py',739),
  ('optElse -> <empty>','optElse',0,'p_caseWhen_2','grammar.py',740),
  ('datatype -> O_RESTA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',746),
  ('datatype -> O_SUMA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',747),
  ('datatype -> columnName','datatype',1,'p_datatype_operandos','grammar.py',755),
  ('datatype -> literal','datatype',1,'p_datatype_operandos','grammar.py',756),
  ('datatype -> funcCall','datatype',1,'p_datatype_operandos','grammar.py',757),
  ('datatype -> extract','datatype',1,'p_datatype_operandos','grammar.py',758),
  ('datatype -> datePart','datatype',1,'p_datatype_operandos','grammar.py',759),
  ('datatype -> current','datatype',1,'p_datatype_operandos','grammar.py',760),
  ('datatype -> S_PARIZQ datatype S_PARDER','datatype',3,'p_datatype_agrupacion','grammar.py',768),
  ('expComp -> datatype OL_MENORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',776),
  ('expComp -> datatype OL_MAYORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',777),
  ('expComp -> datatype OL_MAYORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',778),
  ('expComp -> datatype OL_MENORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',779),
  ('expComp -> datatype S_IGUAL datatype','expComp',3,'p_expCompBinario_1','grammar.py',780),
  ('expComp -> datatype OL_DISTINTODE datatype','expComp',3,'p_expCompBinario_1','grammar.py',781),
  ('expComp -> datatype R_IS R_DISTINCT R_FROM datatype','expComp',5,'p_expCompBinario_2','grammar.py',789),
  ('expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype','expComp',6,'p_expCompBinario_3','grammar.py',799),
  ('expComp -> datatype R_BETWEEN datatype R_AND datatype','expComp',5,'p_expComp_ternario_1','grammar.py',809),
  ('expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',819),
  ('expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',820),
  ('expComp -> datatype R_ISNULL','expComp',2,'p_expComp_unario_1','grammar.py',831),
  ('expComp -> datatype R_NOTNULL','expComp',2,'p_expComp_unario_1','grammar.py',832),
  ('expComp -> datatype R_IS R_NULL','expComp',3,'p_expComp_unario_2','grammar.py',841),
  ('expComp -> datatype R_IS R_TRUE','expComp',3,'p_expComp_unario_2','grammar.py',842),
  ('expComp -> datatype R_IS R_FALSE','expComp',3,'p_expComp_unario_2','grammar.py',843),
  ('expComp -> datatype R_IS R_UNKNOWN','expComp',3,'p_expComp_unario_2','grammar.py',844),
  ('expComp -> datatype R_IS R_NOT R_NULL','expComp',4,'p_expComp_unario_3','grammar.py',852),
  ('expComp -> datatype R_IS R_NOT R_TRUE','expComp',4,'p_expComp_unario_3','grammar.py',853),
  ('expComp -> datatype R_IS R_NOT R_FALSE','expComp',4,'p_expComp_unario_3','grammar.py',854),
  ('expComp -> datatype R_IS R_NOT R_UNKNOWN','expComp',4,'p_expComp_unario_3','grammar.py',855),
  ('expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',865),
  ('expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',866),
  ('expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',867),
  ('expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',868),
  ('expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',869),
  ('expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',870),
  ('expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',871),
  ('expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',872),
  ('expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',873),
  ('expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',874),
  ('expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',875),
  ('expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',876),
  ('expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',877),
  ('expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',878),
  ('expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',879),
  ('expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',880),
  ('expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',881),
  ('expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',882),
  ('expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',883),
  ('expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',884),
  ('expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',885),
  ('expSubq -> stringExp R_LIKE STRING','expSubq',3,'p_expSubq','grammar.py',886),
  ('stringExp -> STRING','stringExp',1,'p_stringExp','grammar.py',893),
  ('stringExp -> columnName','stringExp',1,'p_stringExp','grammar.py',894),
  ('subqValues -> R_ALL','subqValues',1,'p_subqValues','grammar.py',901),
  ('subqValues -> R_ANY','subqValues',1,'p_subqValues','grammar.py',902),
  ('subqValues -> R_SOME','subqValues',1,'p_subqValues','grammar.py',903),
  ('boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER','boolean',4,'p_boolean_1','grammar.py',910),
  ('boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER','boolean',5,'p_boolean_2','grammar.py',920),
  ('boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER','boolean',6,'p_boolean_3','grammar.py',928),
  ('boolean -> expComp','boolean',1,'p_boolean_4','grammar.py',936),
  ('boolean -> expSubq','boolean',1,'p_boolean_4','grammar.py',937),
  ('expBool -> expBool R_AND expBool','expBool',3,'p_expBool_1','grammar.py',945),
  ('expBool -> expBool R_OR expBool','expBool',3,'p_expBool_1','grammar.py',946),
  ('expBool -> R_NOT expBool','expBool',2,'p_expBool_2','grammar.py',954),
  ('expBool -> S_PARIZQ expBool S_PARDER','expBool',3,'p_expBool_3','grammar.py',962),
  ('expBool -> expBool optBoolPredicate','expBool',2,'p_expBool_5','grammar.py',970),
  ('expBool -> boolean','expBool',1,'p_expBool_4','grammar.py',978),
  ('optBoolPredicate -> R_IS R_TRUE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',986),
  ('optBoolPredicate -> R_IS R_FALSE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',987),
  ('optBoolPredicate -> R_IS R_UNKNOWN','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',988),
  ('optBoolPredicate -> R_IS R_NOT R_TRUE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',996),
  ('optBoolPredicate -> R_IS R_NOT R_FALSE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',997),
  ('optBoolPredicate -> R_IS R_NOT R_UNKNOWN','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',998),
  ('columnName -> ID','columnName',1,'p_columnName_id','grammar.py',1006),
  ('columnName -> ID S_PUNTO ID','columnName',3,'p_columnName_table_id','grammar.py',1015),
  ('booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1033),
  ('booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1034),
  ('booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1035),
  ('booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1036),
  ('booleanCheck -> idOrLiteral S_IGUAL idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1037),
  ('booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1038),
  ('booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral','booleanCheck',5,'p_booleanCheck_2','grammar.py',1048),
  ('booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral','booleanCheck',6,'p_booleanCheck_3','grammar.py',1060),
  ('idOrLiteral -> ID','idOrLiteral',1,'p_idOrLiteral','grammar.py',1071),
  ('idOrLiteral -> INTEGER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1072),
  ('idOrLiteral -> STRING','idOrLiteral',1,'p_idOrLiteral','grammar.py',1073),
  ('idOrLiteral -> DECIMAL','idOrLiteral',1,'p_idOrLiteral','grammar.py',1074),
  ('idOrLiteral -> CHARACTER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1075),
  ('idOrLiteral -> R_TRUE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1076),
  ('idOrLiteral -> R_FALSE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1077),
  ('alterStmt -> R_ALTER R_DATABASE idOrString alterDb','alterStmt',4,'p_alterStmt','grammar.py',1106),
  ('alterStmt -> R_ALTER R_TABLE idOrString alterTableList','alterStmt',4,'p_alterStmt','grammar.py',1107),
  ('alterDb -> R_RENAME R_TO idOrString','alterDb',3,'p_alterDb','grammar.py',1117),
  ('alterDb -> R_OWNER R_TO ownerOPts','alterDb',3,'p_alterDb','grammar.py',1118),
  ('ownerOPts -> idOrString','ownerOPts',1,'p_ownerOpts','grammar.py',1127),
  ('ownerOPts -> R_CURRENT_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1128),
  ('ownerOPts -> R_SESSION_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1129),
  ('alterTableList -> alterTableList S_COMA alterTable','alterTableList',3,'p_alterTableList','grammar.py',1137),
  ('alterTableList -> alterTable','alterTableList',1,'p_alterTableList_u','grammar.py',1146),
  ('alterTable -> R_ADD alterAdd','alterTable',2,'p_alterTable','grammar.py',1154),
  ('alterTable -> R_ALTER alterAlter','alterTable',2,'p_alterTable','grammar.py',1155),
  ('alterTable -> R_DROP alterDrop','alterTable',2,'p_alterTable','grammar.py',1156),
  ('alterTable -> R_RENAME alterRename','alterTable',2,'p_alterTable','grammar.py',1157),
  ('alterAdd -> R_COLUMN ID types','alterAdd',3,'p_alterAdd_column','grammar.py',1165),
  ('alterAdd -> createConstraint','alterAdd',1,'p_alterAdd_constraint','grammar.py',1173),
  ('alterAdd -> createPrimary','alterAdd',1,'p_alterAdd_constraint','grammar.py',1174),
  ('alterAdd -> createForeign','alterAdd',1,'p_alterAdd_constraint','grammar.py',1175),
  ('alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER','alterAdd',5,'p_alterAdd_unique','grammar.py',1183),
  ('alterAlter -> R_COLUMN ID R_SET nullOpt','alterAlter',4,'p_alterAlter','grammar.py',1191),
  ('alterAlter -> R_COLUMN ID R_SET defaultVal','alterAlter',4,'p_alterAlter','grammar.py',1192),
  ('alterAlter -> R_COLUMN ID R_TYPE types','alterAlter',4,'p_alterAlter','grammar.py',1193),
  ('alterDrop -> R_CONSTRAINT ID','alterDrop',2,'p_alterDrop','grammar.py',1201),
  ('alterDrop -> R_COLUMN ID','alterDrop',2,'p_alterDrop','grammar.py',1202),
  ('alterRename -> R_COLUMN ID R_TO ID','alterRename',4,'p_alterRename','grammar.py',1210),
  ('dropStmt -> R_DROP R_TABLE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1228),
  ('dropStmt -> R_DROP R_DATABASE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1229),
  ('ifExists -> R_IF R_EXISTS','ifExists',2,'p_ifExists','grammar.py',1239),
  ('ifExists -> <empty>','ifExists',0,'p_ifExists','grammar.py',1240),
  ('selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt_1','grammar.py',1253),
  ('selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',7,'p_selectStmt_2','grammar.py',1271),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt__1','grammar.py',1288),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl','selectStmt',7,'p_selectStmt__3','grammar.py',1293),
  ('selectStmt -> selectStmt R_UNION allOpt selectStmt','selectStmt',4,'p_selectStmt_union','grammar.py',1298),
  ('selectStmt -> selectStmt R_INTERSECT allOpt selectStmt','selectStmt',4,'p_selectStmt_intersect','grammar.py',1304),
  ('selectStmt -> selectStmt R_EXCEPT allOpt selectStmt','selectStmt',4,'p_selectStmt_except','grammar.py',1310),
  ('selectStmt -> S_PARIZQ selectStmt S_PARDER','selectStmt',3,'p_selectStmt_agrupacion','grammar.py',1316),
  ('fromCl -> R_FROM tableExp','fromCl',2,'p_fromClause','grammar.py',1323),
  ('selectStmt -> R_SELECT selectParams','selectStmt',2,'p_selectstmt_only_params','grammar.py',1335),
  ('allOpt -> R_ALL','allOpt',1,'p_allOpt','grammar.py',1344),
  ('allOpt -> <empty>','allOpt',0,'p_allOpt','grammar.py',1345),
  ('selectParams -> O_PRODUCTO','selectParams',1,'p_selectparams_all','grammar.py',1352),
  ('selectParams -> selectList','selectParams',1,'p_selectparams_params','grammar.py',1359),
  ('selectList -> selectList S_COMA selectListParams optAlias','selectList',4,'p_selectList_list','grammar.py',1367),
  ('selectList -> selectListParams optAlias','selectList',2,'p_selectList_u','grammar.py',1377),
  ('selectListParams -> expresion','selectListParams',1,'p_selectListParams_1','grammar.py',1386),
  ('selectListParams -> ID S_PUNTO O_PRODUCTO','selectListParams',3,'p_selectListParams_2','grammar.py',1393),
  ('optAlias -> R_AS idOrString','optAlias',2,'p_optalias_as','grammar.py',1400),
  ('optAlias -> idOrString','optAlias',1,'p_optalias_id','grammar.py',1408),
  ('optAlias -> <empty>','optAlias',0,'p_optalias_none','grammar.py',1415),
  ('tableExp -> tableExp S_COMA fromBody','tableExp',3,'p_tableexp_list','grammar.py',1421),
  ('tableExp -> fromBody','tableExp',1,'p_tableexp_u','grammar.py',1429),
  ('fromBody -> ID optAlias','fromBody',2,'p_fromBody','grammar.py',1435),
  ('fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString','fromBody',5,'p_tableexp_subq','grammar.py',1444),
  ('joinList -> joinList2','joinList',1,'p_joinList','grammar.py',1451),
  ('joinList2 -> joinList2 joinCl','joinList2',2,'p_joinList_2','grammar.py',1456),
  ('joinList2 -> joinCl','joinList2',1,'p_joinList_2','grammar.py',1457),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool','joinCl',6,'p_joinCl','grammar.py',1462),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER','joinCl',8,'p_joinCl','grammar.py',1463),
  ('joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias','joinCl',5,'p_joinCl','grammar.py',1464),
  ('nameList -> nameList S_COMA columnName','nameList',3,'p_nameList','grammar.py',1471),
  ('nameList -> columnName','nameList',1,'p_nameList','grammar.py',1472),
  ('joinOpt -> R_INNER','joinOpt',1,'p_joinOpt','grammar.py',1478),
  ('joinOpt -> R_LEFT','joinOpt',1,'p_joinOpt','grammar.py',1479),
  ('joinOpt -> R_LEFT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1480),
  ('joinOpt -> R_RIGHT','joinOpt',1,'p_joinOpt','grammar.py',1481),
  ('joinOpt -> R_RIGHT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1482),
  ('joinOpt -> R_FULL','joinOpt',1,'p_joinOpt','grammar.py',1483),
  ('joinOpt -> R_FULL R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1484),
  ('whereCl -> R_WHERE expBool','whereCl',2,'p_whereCl','grammar.py',1491),
  ('whereCl -> <empty>','whereCl',0,'p_whereCl_none','grammar.py',1500),
  ('groupByCl -> R_GROUP R_BY groupList havingCl','groupByCl',4,'p_groupByCl_1','grammar.py',1510),
  ('groupByCl -> <empty>','groupByCl',0,'p_groupByCl_2','grammar.py',1518),
  ('groupList -> groupList S_COMA columnName','groupList',3,'p_groupList_1','grammar.py',1526),
  ('groupList -> groupList S_COMA INTEGER','groupList',3,'p_groupList_1','grammar.py',1527),
  ('groupList -> columnName','groupList',1,'p_groupList_2','grammar.py',1536),
  ('groupList -> INTEGER','groupList',1,'p_groupList_2','grammar.py',1537),
  ('havingCl -> R_HAVING expBool','havingCl',2,'p_havingCl_1','grammar.py',1547),
  ('havingCl -> <empty>','havingCl',0,'p_havingCl_2','grammar.py',1553),
  ('orderByCl -> R_ORDER R_BY orderList','orderByCl',3,'p_orderByCl','grammar.py',1562),
  ('orderByCl -> <empty>','orderByCl',0,'p_orderByCl2','grammar.py',1568),
  ('orderList -> orderList S_COMA orderByElem','orderList',3,'p_orderList','grammar.py',1574),
  ('orderList -> orderByElem','orderList',1,'p_orderList2','grammar.py',1581),
  ('orderByElem -> columnName orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1588),
  ('orderByElem -> INTEGER orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1589),
  ('orderOpts -> R_ASC','orderOpts',1,'p_orderOpts','grammar.py',1596),
  ('orderOpts -> R_DESC','orderOpts',1,'p_orderOpts','grammar.py',1597),
  ('orderOpts -> <empty>','orderOpts',0,'p_orderOpts2','grammar.py',1603),
  ('orderNull -> R_NULL R_FIRST','orderNull',2,'p_orderNull','grammar.py',1608),
  ('orderNull -> R_NULL R_LAST','orderNull',2,'p_orderNull','grammar.py',1609),
  ('orderNull -> <empty>','orderNull',0,'p_ordenNull2','grammar.py',1614),
  ('limitCl -> R_LIMIT INTEGER offsetLimit','limitCl',3,'p_limitCl','grammar.py',1623),
  ('limitCl -> R_LIMIT R_ALL offsetLimit','limitCl',3,'p_limitCl','grammar.py',1624),
  ('limitCl -> <empty>','limitCl',0,'p_limitCl_n','grammar.py',1631),
  ('offsetLimit -> R_OFFSET INTEGER','offsetLimit',2,'p_offsetLimit','grammar.py',1637),
  ('offsetLimit -> <empty>','offsetLimit',0,'p_offsetLimit_n','grammar.py',1643),
  ('insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER','insertStmt',8,'p_insertStmt','grammar.py',1657),
  ('paramsColumn -> S_PARIZQ idList S_PARDER','paramsColumn',3,'p_paramsColumn','grammar.py',1664),
  ('paramsColumn -> <empty>','paramsColumn',0,'p_paramsColumn_none','grammar.py',1670),
  ('updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl','updateStmt',5,'p_updateStmt','grammar.py',1684),
  ('updateCols -> updateCols S_COMA updateVals','updateCols',3,'p_updateCols_list','grammar.py',1694),
  ('updateCols -> updateVals','updateCols',1,'p_updateCols_u','grammar.py',1701),
  ('updateVals -> ID S_IGUAL updateExp','updateVals',3,'p_updateVals','grammar.py',1707),
  ('updateExp -> datatype','updateExp',1,'p_updateExp','grammar.py',1714),
  ('updateExp -> R_DEFAULT','updateExp',1,'p_updateExp','grammar.py',1715),
  ('deleteStmt -> R_DELETE fromCl whereCl','deleteStmt',3,'p_deleteStmt','grammar.py',1729),
  ('truncateStmt -> R_TRUNCATE tableOpt ID','truncateStmt',3,'p_truncateStmt','grammar.py',1735),
  ('tableOpt -> R_TABLE','tableOpt',1,'p_tableOpt','grammar.py',1741),
  ('tableOpt -> <empty>','tableOpt',0,'p_tableOpt','grammar.py',1742),
  ('showStmt -> R_SHOW R_DATABASES likeOpt','showStmt',3,'p_showStmt','grammar.py',1748),
  ('likeOpt -> R_LIKE STRING','likeOpt',2,'p_likeOpt','grammar.py',1755),
  ('likeOpt -> <empty>','likeOpt',0,'p_likeOpt','grammar.py',1756),
  ('useStmt -> R_USE ID','useStmt',2,'p_useStmt','grammar.py',1766),
  ('functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction','functionStmt',11,'p_functionStmt','grammar.py',1777),
  ('bloqueFunction -> declareStmt R_BEGIN beginStmt R_END labelEnd','bloqueFunction',5,'p_functionBloque','grammar.py',1781),
  ('params_list -> params_list param_item','params_list',2,'p_params_list_func','grammar.py',1786),
  ('params_list -> param_item','params_list',1,'p_params_list_func_aux','grammar.py',1792),
  ('param_item -> R_NULL','param_item',1,'p_param_item_func','grammar.py',1798),
  ('returnsStmt -> R_RETURNS item_returns','returnsStmt',2,'p_returnsStmt','grammar.py',1803),
  ('returnsStmt -> <empty>','returnsStmt',0,'p_returnsStmt_aux','grammar.py',1807),
  ('item_returns -> R_NULL','item_returns',1,'p_item','grammar.py',1811),
  ('declareStmt -> <empty>','declareStmt',0,'p_declareStmt','grammar.py',1819),
  ('declaracion_list -> declaracion_list declaracion_item','declaracion_list',2,'p_declaracion_list','grammar.py',1823),
  ('declaracion_list -> declaracion_item','declaracion_list',1,'p_declaracion_list_aux','grammar.py',1829),
  ('declaracion_item -> ID types','declaracion_item',2,'p_declaracion_item','grammar.py',1834),
  ('declaracion_item -> ID R_ALIAS R_FOR alias_declaracion','declaracion_item',4,'p_declaracion_item_aux','grammar.py',1838),
  ('alias_declaracion -> ID','alias_declaracion',1,'p_alias_declaracion','grammar.py',1842),
  ('alias_declaracion -> IDEspecial','alias_declaracion',1,'p_alias_declaracion','grammar.py',1843),
  ('beginStmt -> R_NULL','beginStmt',1,'p_beingStmt','grammar.py',1848),
  ('labelEnd -> R_NULL','labelEnd',1,'p_labelEnd','grammar.py',1852),
=======
  ('idOrString -> ID','idOrString',1,'p_id_string','grammar.py',99),
  ('idOrString -> STRING','idOrString',1,'p_id_string','grammar.py',100),
  ('idOrString -> CHARACTER','idOrString',1,'p_id_string','grammar.py',101),
  ('createStmt -> R_CREATE createBody','createStmt',2,'p_createstmt','grammar.py',108),
  ('createBody -> createOpts','createBody',1,'p_createbody','grammar.py',115),
  ('createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl','createOpts',12,'p_createopts_index','grammar.py',122),
  ('unique_index -> R_UNIQUE','unique_index',1,'p_unique_index','grammar.py',128),
  ('unique_index -> <empty>','unique_index',0,'p_unique_index','grammar.py',129),
  ('using_hash_index -> R_USING R_HASH','using_hash_index',2,'p_using_hash_index','grammar.py',139),
  ('using_hash_index -> <empty>','using_hash_index',0,'p_using_hash_index','grammar.py',140),
  ('indexNullS -> R_NULLS R_FIRST','indexNullS',2,'p_orderNullS','grammar.py',150),
  ('indexNullS -> R_NULLS R_LAST','indexNullS',2,'p_orderNullS','grammar.py',151),
  ('indexNullS -> <empty>','indexNullS',0,'p_orderNullS','grammar.py',152),
  ('indexasc_desc -> R_DESC','indexasc_desc',1,'p_indexasc_desc','grammar.py',164),
  ('indexasc_desc -> R_ASC','indexasc_desc',1,'p_indexasc_desc','grammar.py',165),
  ('indexasc_desc -> <empty>','indexasc_desc',0,'p_indexasc_desc','grammar.py',166),
  ('createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt','createOpts',7,'p_createopts_table','grammar.py',179),
  ('createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode','createOpts',6,'p_createopts_db','grammar.py',186),
  ('orReplace -> R_OR R_REPLACE','orReplace',2,'p_replace_true','grammar.py',194),
  ('orReplace -> <empty>','orReplace',0,'p_replace_false','grammar.py',202),
  ('createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER','createOpts',8,'p_createopts_type','grammar.py',210),
  ('ifNotExists -> R_IF R_NOT R_EXISTS','ifNotExists',3,'p_ifnotexists_true','grammar.py',218),
  ('ifNotExists -> <empty>','ifNotExists',0,'p_ifnotexists_false','grammar.py',226),
  ('inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER','inheritsOpt',4,'p_inheritsOpt','grammar.py',234),
  ('inheritsOpt -> <empty>','inheritsOpt',0,'p_inheritsOpt_none','grammar.py',242),
  ('createOwner -> R_OWNER ID','createOwner',2,'p_createowner','grammar.py',250),
  ('createOwner -> R_OWNER STRING','createOwner',2,'p_createowner','grammar.py',251),
  ('createOwner -> R_OWNER S_IGUAL ID','createOwner',3,'p_createowner_asg','grammar.py',259),
  ('createOwner -> R_OWNER S_IGUAL STRING','createOwner',3,'p_createowner_asg','grammar.py',260),
  ('createOwner -> <empty>','createOwner',0,'p_createowner_none','grammar.py',268),
  ('createMode -> R_MODE INTEGER','createMode',2,'p_createmode','grammar.py',276),
  ('createMode -> R_MODE S_IGUAL INTEGER','createMode',3,'p_createMode_asg','grammar.py',284),
  ('createMode -> <empty>','createMode',0,'p_createmode_none','grammar.py',292),
  ('createTableList -> createTableList S_COMA createTable','createTableList',3,'p_createtable_list','grammar.py',299),
  ('createTableList -> createTable','createTableList',1,'p_createtable_u','grammar.py',306),
  ('createTable -> ID types createColumns','createTable',3,'p_createTable_id','grammar.py',313),
  ('createTable -> createConstraint','createTable',1,'p_createTable','grammar.py',321),
  ('createTable -> createUnique','createTable',1,'p_createTable','grammar.py',322),
  ('createTable -> createPrimary','createTable',1,'p_createTable','grammar.py',323),
  ('createTable -> createForeign','createTable',1,'p_createTable','grammar.py',324),
  ('createColumns -> colOptionsList','createColumns',1,'p_createColumNs','grammar.py',332),
  ('createColumns -> <empty>','createColumns',0,'p_createColumNs_none','grammar.py',340),
  ('createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','createConstraint',5,'p_createConstraint','grammar.py',347),
  ('createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER','createUnique',4,'p_createUnique','grammar.py',353),
  ('createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER','createPrimary',5,'p_createPrimary','grammar.py',359),
  ('createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER','createForeign',11,'p_createForeign','grammar.py',366),
  ('constrName -> R_CONSTRAINT ID','constrName',2,'p_constrName','grammar.py',374),
  ('constrName -> <empty>','constrName',0,'p_constrName_none','grammar.py',382),
  ('idList -> idList S_COMA ID','idList',3,'p_id_list','grammar.py',389),
  ('idList -> ID','idList',1,'p_id_u','grammar.py',396),
  ('types -> ID','types',1,'p_types','grammar.py',403),
  ('types -> T_SMALLINT','types',1,'p_types_simple','grammar.py',411),
  ('types -> T_INTEGER','types',1,'p_types_simple','grammar.py',412),
  ('types -> T_BIGINT','types',1,'p_types_simple','grammar.py',413),
  ('types -> T_REAL','types',1,'p_types_simple','grammar.py',414),
  ('types -> T_DOUBLE T_PRECISION','types',2,'p_types_simple','grammar.py',415),
  ('types -> T_MONEY','types',1,'p_types_simple','grammar.py',416),
  ('types -> T_TEXT','types',1,'p_types_simple','grammar.py',417),
  ('types -> T_BOOLEAN','types',1,'p_types_simple','grammar.py',418),
  ('types -> R_TIMESTAMP','types',1,'p_types_simple','grammar.py',419),
  ('types -> T_DATE','types',1,'p_types_simple','grammar.py',420),
  ('types -> T_TIME','types',1,'p_types_simple','grammar.py',421),
  ('types -> T_DECIMAL optParams','types',2,'p_types_params','grammar.py',430),
  ('types -> T_NUMERIC optParams','types',2,'p_types_params','grammar.py',431),
  ('types -> T_VARCHAR optParams','types',2,'p_types_params','grammar.py',432),
  ('types -> T_CHARACTER optParams','types',2,'p_types_params','grammar.py',433),
  ('types -> T_CHAR optParams','types',2,'p_types_params','grammar.py',434),
  ('types -> T_CHARACTER T_VARYING optParams','types',3,'p_types_var','grammar.py',442),
  ('types -> R_INTERVAL intervalFields','types',2,'p_timeType_interval','grammar.py',450),
  ('intervalFields -> R_YEAR','intervalFields',1,'p_intervalFields','grammar.py',458),
  ('intervalFields -> R_MONTH','intervalFields',1,'p_intervalFields','grammar.py',459),
  ('intervalFields -> R_DAY','intervalFields',1,'p_intervalFields','grammar.py',460),
  ('intervalFields -> R_HOUR','intervalFields',1,'p_intervalFields','grammar.py',461),
  ('intervalFields -> R_MINUTE','intervalFields',1,'p_intervalFields','grammar.py',462),
  ('intervalFields -> R_SECOND','intervalFields',1,'p_intervalFields','grammar.py',463),
  ('intervalFields -> <empty>','intervalFields',0,'p_intervalFields_none','grammar.py',471),
  ('optParams -> S_PARIZQ literalList S_PARDER','optParams',3,'p_optParams','grammar.py',478),
  ('optParams -> <empty>','optParams',0,'p_optParams_none','grammar.py',484),
  ('colOptionsList -> colOptionsList colOptions','colOptionsList',2,'p_colOptions_list','grammar.py',490),
  ('colOptionsList -> colOptions','colOptionsList',1,'p_colOptions_u','grammar.py',497),
  ('colOptions -> defaultVal','colOptions',1,'p_colOptions','grammar.py',504),
  ('colOptions -> nullOpt','colOptions',1,'p_colOptions','grammar.py',505),
  ('colOptions -> constraintOpt','colOptions',1,'p_colOptions','grammar.py',506),
  ('colOptions -> primaryOpt','colOptions',1,'p_colOptions','grammar.py',507),
  ('colOptions -> referencesOpt','colOptions',1,'p_colOptions','grammar.py',508),
  ('defaultVal -> R_DEFAULT literal','defaultVal',2,'p_defaultVal','grammar.py',516),
  ('nullOpt -> R_NOT R_NULL','nullOpt',2,'p_nullOpt_true','grammar.py',523),
  ('nullOpt -> R_NULL','nullOpt',1,'p_nullOpt_false','grammar.py',531),
  ('constraintOpt -> constrName R_UNIQUE','constraintOpt',2,'p_constraintOpt_unique','grammar.py',542),
  ('constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','constraintOpt',5,'p_constraintOpt_check','grammar.py',550),
  ('primaryOpt -> R_PRIMARY R_KEY','primaryOpt',2,'p_primaryOpt','grammar.py',557),
  ('referencesOpt -> R_REFERENCES ID','referencesOpt',2,'p_referencesOpt','grammar.py',563),
  ('expresion -> datatype','expresion',1,'p_expresion','grammar.py',575),
  ('expresion -> expBool','expresion',1,'p_expresion','grammar.py',576),
  ('expresion -> S_PARIZQ selectStmt S_PARDER','expresion',3,'p_expresion_','grammar.py',584),
  ('funcCall -> ID S_PARIZQ paramsList S_PARDER','funcCall',4,'p_funcCall_1','grammar.py',592),
  ('funcCall -> ID S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',600),
  ('funcCall -> R_NOW S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',601),
  ('funcCall -> R_COUNT S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',609),
  ('funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',610),
  ('funcCall -> R_SUM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',611),
  ('funcCall -> R_PROM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',612),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER','extract',6,'p_extract_1','grammar.py',622),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER','extract',6,'p_extract_2','grammar.py',633),
  ('timeStamp -> R_TIMESTAMP STRING','timeStamp',2,'p_timeStamp','grammar.py',643),
  ('timeStamp -> R_INTERVAL STRING','timeStamp',2,'p_timeStamp','grammar.py',644),
  ('optsExtract -> R_YEAR','optsExtract',1,'p_optsExtract','grammar.py',652),
  ('optsExtract -> R_MONTH','optsExtract',1,'p_optsExtract','grammar.py',653),
  ('optsExtract -> R_DAY','optsExtract',1,'p_optsExtract','grammar.py',654),
  ('optsExtract -> R_HOUR','optsExtract',1,'p_optsExtract','grammar.py',655),
  ('optsExtract -> R_MINUTE','optsExtract',1,'p_optsExtract','grammar.py',656),
  ('optsExtract -> R_SECOND','optsExtract',1,'p_optsExtract','grammar.py',657),
  ('datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER','datePart',6,'p_datePart','grammar.py',665),
  ('dateSource -> R_TIMESTAMP STRING','dateSource',2,'p_dateSource','grammar.py',675),
  ('dateSource -> T_DATE STRING','dateSource',2,'p_dateSource','grammar.py',676),
  ('dateSource -> T_TIME STRING','dateSource',2,'p_dateSource','grammar.py',677),
  ('dateSource -> R_INTERVAL STRING','dateSource',2,'p_dateSource','grammar.py',678),
  ('dateSource -> R_NOW S_PARIZQ S_PARDER','dateSource',3,'p_dateSource','grammar.py',679),
  ('current -> R_CURRENT_DATE','current',1,'p_current','grammar.py',687),
  ('current -> R_CURRENT_TIME','current',1,'p_current','grammar.py',688),
  ('current -> timeStamp','current',1,'p_current_1','grammar.py',697),
  ('literalList -> literalList S_COMA literal','literalList',3,'p_literal_list','grammar.py',704),
  ('literalList -> literal','literalList',1,'p_literal_u','grammar.py',711),
  ('literal -> INTEGER','literal',1,'p_literal','grammar.py',718),
  ('literal -> STRING','literal',1,'p_literal','grammar.py',719),
  ('literal -> DECIMAL','literal',1,'p_literal','grammar.py',720),
  ('literal -> CHARACTER','literal',1,'p_literal','grammar.py',721),
  ('literal -> R_TRUE','literal',1,'p_literal','grammar.py',722),
  ('literal -> R_FALSE','literal',1,'p_literal','grammar.py',723),
  ('literal -> R_NULL','literal',1,'p_literal','grammar.py',724),
  ('paramsList -> paramsList S_COMA datatype','paramsList',3,'p_params_list','grammar.py',743),
  ('paramsList -> datatype','paramsList',1,'p_params_u','grammar.py',750),
  ('datatype -> datatype O_SUMA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',757),
  ('datatype -> datatype O_RESTA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',758),
  ('datatype -> datatype O_PRODUCTO datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',759),
  ('datatype -> datatype O_DIVISION datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',760),
  ('datatype -> datatype O_EXPONENTE datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',761),
  ('datatype -> datatype O_MODULAR datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',762),
  ('datatype -> datatype OC_CONCATENAR datatype','datatype',3,'p_datatype_operadores_binarios2','grammar.py',771),
  ('datatype -> R_CASE caseList optElse R_END','datatype',4,'p_datatype_case_when','grammar.py',779),
  ('caseList -> caseList caseWhen','caseList',2,'p_case_list','grammar.py',785),
  ('caseList -> caseWhen','caseList',1,'p_case_list','grammar.py',786),
  ('caseWhen -> R_WHEN expBool R_THEN literal','caseWhen',4,'p_caseWhen','grammar.py',791),
  ('optElse -> R_ELSE literal','optElse',2,'p_caseWhen_2','grammar.py',795),
  ('optElse -> <empty>','optElse',0,'p_caseWhen_2','grammar.py',796),
  ('datatype -> O_RESTA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',802),
  ('datatype -> O_SUMA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',803),
  ('datatype -> columnName','datatype',1,'p_datatype_operandos','grammar.py',811),
  ('datatype -> literal','datatype',1,'p_datatype_operandos','grammar.py',812),
  ('datatype -> funcCall','datatype',1,'p_datatype_operandos','grammar.py',813),
  ('datatype -> extract','datatype',1,'p_datatype_operandos','grammar.py',814),
  ('datatype -> datePart','datatype',1,'p_datatype_operandos','grammar.py',815),
  ('datatype -> current','datatype',1,'p_datatype_operandos','grammar.py',816),
  ('datatype -> S_PARIZQ datatype S_PARDER','datatype',3,'p_datatype_agrupacion','grammar.py',824),
  ('expComp -> datatype OL_MENORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',832),
  ('expComp -> datatype OL_MAYORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',833),
  ('expComp -> datatype OL_MAYORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',834),
  ('expComp -> datatype OL_MENORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',835),
  ('expComp -> datatype S_IGUAL datatype','expComp',3,'p_expCompBinario_1','grammar.py',836),
  ('expComp -> datatype OL_DISTINTODE datatype','expComp',3,'p_expCompBinario_1','grammar.py',837),
  ('expComp -> datatype R_IS R_DISTINCT R_FROM datatype','expComp',5,'p_expCompBinario_2','grammar.py',845),
  ('expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype','expComp',6,'p_expCompBinario_3','grammar.py',855),
  ('expComp -> datatype R_BETWEEN datatype R_AND datatype','expComp',5,'p_expComp_ternario_1','grammar.py',865),
  ('expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',875),
  ('expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',876),
  ('expComp -> datatype R_ISNULL','expComp',2,'p_expComp_unario_1','grammar.py',887),
  ('expComp -> datatype R_NOTNULL','expComp',2,'p_expComp_unario_1','grammar.py',888),
  ('expComp -> datatype R_IS R_NULL','expComp',3,'p_expComp_unario_2','grammar.py',897),
  ('expComp -> datatype R_IS R_TRUE','expComp',3,'p_expComp_unario_2','grammar.py',898),
  ('expComp -> datatype R_IS R_FALSE','expComp',3,'p_expComp_unario_2','grammar.py',899),
  ('expComp -> datatype R_IS R_UNKNOWN','expComp',3,'p_expComp_unario_2','grammar.py',900),
  ('expComp -> datatype R_IS R_NOT R_NULL','expComp',4,'p_expComp_unario_3','grammar.py',908),
  ('expComp -> datatype R_IS R_NOT R_TRUE','expComp',4,'p_expComp_unario_3','grammar.py',909),
  ('expComp -> datatype R_IS R_NOT R_FALSE','expComp',4,'p_expComp_unario_3','grammar.py',910),
  ('expComp -> datatype R_IS R_NOT R_UNKNOWN','expComp',4,'p_expComp_unario_3','grammar.py',911),
  ('expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',921),
  ('expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',922),
  ('expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',923),
  ('expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',924),
  ('expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',925),
  ('expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',926),
  ('expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',927),
  ('expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',928),
  ('expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',929),
  ('expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',930),
  ('expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',931),
  ('expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',932),
  ('expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',933),
  ('expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',934),
  ('expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',935),
  ('expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',936),
  ('expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',937),
  ('expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',938),
  ('expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',939),
  ('expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',940),
  ('expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',941),
  ('expSubq -> stringExp R_LIKE STRING','expSubq',3,'p_expSubq','grammar.py',942),
  ('stringExp -> STRING','stringExp',1,'p_stringExp','grammar.py',949),
  ('stringExp -> columnName','stringExp',1,'p_stringExp','grammar.py',950),
  ('subqValues -> R_ALL','subqValues',1,'p_subqValues','grammar.py',957),
  ('subqValues -> R_ANY','subqValues',1,'p_subqValues','grammar.py',958),
  ('subqValues -> R_SOME','subqValues',1,'p_subqValues','grammar.py',959),
  ('boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER','boolean',4,'p_boolean_1','grammar.py',966),
  ('boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER','boolean',5,'p_boolean_2','grammar.py',976),
  ('boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER','boolean',6,'p_boolean_3','grammar.py',984),
  ('boolean -> expComp','boolean',1,'p_boolean_4','grammar.py',992),
  ('boolean -> expSubq','boolean',1,'p_boolean_4','grammar.py',993),
  ('expBool -> expBool R_AND expBool','expBool',3,'p_expBool_1','grammar.py',1001),
  ('expBool -> expBool R_OR expBool','expBool',3,'p_expBool_1','grammar.py',1002),
  ('expBool -> R_NOT expBool','expBool',2,'p_expBool_2','grammar.py',1010),
  ('expBool -> S_PARIZQ expBool S_PARDER','expBool',3,'p_expBool_3','grammar.py',1018),
  ('expBool -> expBool optBoolPredicate','expBool',2,'p_expBool_5','grammar.py',1026),
  ('expBool -> boolean','expBool',1,'p_expBool_4','grammar.py',1034),
  ('optBoolPredicate -> R_IS R_TRUE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1042),
  ('optBoolPredicate -> R_IS R_FALSE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1043),
  ('optBoolPredicate -> R_IS R_UNKNOWN','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1044),
  ('optBoolPredicate -> R_IS R_NOT R_TRUE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1052),
  ('optBoolPredicate -> R_IS R_NOT R_FALSE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1053),
  ('optBoolPredicate -> R_IS R_NOT R_UNKNOWN','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1054),
  ('columnName -> ID','columnName',1,'p_columnName_id','grammar.py',1062),
  ('columnName -> ID S_PUNTO ID','columnName',3,'p_columnName_table_id','grammar.py',1071),
  ('booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1089),
  ('booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1090),
  ('booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1091),
  ('booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1092),
  ('booleanCheck -> idOrLiteral S_IGUAL idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1093),
  ('booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1094),
  ('booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral','booleanCheck',5,'p_booleanCheck_2','grammar.py',1104),
  ('booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral','booleanCheck',6,'p_booleanCheck_3','grammar.py',1116),
  ('idOrLiteral -> ID','idOrLiteral',1,'p_idOrLiteral','grammar.py',1127),
  ('idOrLiteral -> INTEGER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1128),
  ('idOrLiteral -> STRING','idOrLiteral',1,'p_idOrLiteral','grammar.py',1129),
  ('idOrLiteral -> DECIMAL','idOrLiteral',1,'p_idOrLiteral','grammar.py',1130),
  ('idOrLiteral -> CHARACTER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1131),
  ('idOrLiteral -> R_TRUE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1132),
  ('idOrLiteral -> R_FALSE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1133),
  ('alterStmt -> R_ALTER R_DATABASE idOrString alterDb','alterStmt',4,'p_alterStmt','grammar.py',1162),
  ('alterStmt -> R_ALTER R_TABLE idOrString alterTableList','alterStmt',4,'p_alterStmt','grammar.py',1163),
  ('alterDb -> R_RENAME R_TO idOrString','alterDb',3,'p_alterDb','grammar.py',1173),
  ('alterDb -> R_OWNER R_TO ownerOPts','alterDb',3,'p_alterDb','grammar.py',1174),
  ('ownerOPts -> idOrString','ownerOPts',1,'p_ownerOpts','grammar.py',1183),
  ('ownerOPts -> R_CURRENT_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1184),
  ('ownerOPts -> R_SESSION_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1185),
  ('alterTableList -> alterTableList S_COMA alterTable','alterTableList',3,'p_alterTableList','grammar.py',1193),
  ('alterTableList -> alterTable','alterTableList',1,'p_alterTableList_u','grammar.py',1202),
  ('alterTable -> R_ADD alterAdd','alterTable',2,'p_alterTable','grammar.py',1210),
  ('alterTable -> R_ALTER alterAlter','alterTable',2,'p_alterTable','grammar.py',1211),
  ('alterTable -> R_DROP alterDrop','alterTable',2,'p_alterTable','grammar.py',1212),
  ('alterTable -> R_RENAME alterRename','alterTable',2,'p_alterTable','grammar.py',1213),
  ('alterAdd -> R_COLUMN ID types','alterAdd',3,'p_alterAdd_column','grammar.py',1221),
  ('alterAdd -> createConstraint','alterAdd',1,'p_alterAdd_constraint','grammar.py',1229),
  ('alterAdd -> createPrimary','alterAdd',1,'p_alterAdd_constraint','grammar.py',1230),
  ('alterAdd -> createForeign','alterAdd',1,'p_alterAdd_constraint','grammar.py',1231),
  ('alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER','alterAdd',5,'p_alterAdd_unique','grammar.py',1239),
  ('alterAlter -> R_COLUMN ID R_SET nullOpt','alterAlter',4,'p_alterAlter','grammar.py',1247),
  ('alterAlter -> R_COLUMN ID R_SET defaultVal','alterAlter',4,'p_alterAlter','grammar.py',1248),
  ('alterAlter -> R_COLUMN ID R_TYPE types','alterAlter',4,'p_alterAlter','grammar.py',1249),
  ('alterDrop -> R_CONSTRAINT ID','alterDrop',2,'p_alterDrop','grammar.py',1257),
  ('alterDrop -> R_COLUMN ID','alterDrop',2,'p_alterDrop','grammar.py',1258),
  ('alterRename -> R_COLUMN ID R_TO ID','alterRename',4,'p_alterRename','grammar.py',1266),
  ('dropStmt -> R_DROP R_TABLE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1284),
  ('dropStmt -> R_DROP R_DATABASE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1285),
  ('ifExists -> R_IF R_EXISTS','ifExists',2,'p_ifExists','grammar.py',1295),
  ('ifExists -> <empty>','ifExists',0,'p_ifExists','grammar.py',1296),
  ('selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl','selectStmt',7,'p_selectStmt_1','grammar.py',1309),
  ('selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl','selectStmt',6,'p_selectStmt_2','grammar.py',1326),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt__1','grammar.py',1342),
  ('selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',7,'p_selectStmt__2','grammar.py',1347),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl','selectStmt',7,'p_selectStmt__3','grammar.py',1352),
  ('selectStmt -> selectStmt R_UNION allOpt selectStmt','selectStmt',4,'p_selectStmt_union','grammar.py',1357),
  ('selectStmt -> selectStmt R_INTERSECT allOpt selectStmt','selectStmt',4,'p_selectStmt_intersect','grammar.py',1363),
  ('selectStmt -> selectStmt R_EXCEPT allOpt selectStmt','selectStmt',4,'p_selectStmt_except','grammar.py',1369),
  ('selectStmt -> S_PARIZQ selectStmt S_PARDER','selectStmt',3,'p_selectStmt_agrupacion','grammar.py',1375),
  ('fromCl -> R_FROM tableExp','fromCl',2,'p_fromClause','grammar.py',1382),
  ('selectStmt -> R_SELECT selectParams','selectStmt',2,'p_selectstmt_only_params','grammar.py',1394),
  ('allOpt -> R_ALL','allOpt',1,'p_allOpt','grammar.py',1403),
  ('allOpt -> <empty>','allOpt',0,'p_allOpt','grammar.py',1404),
  ('selectParams -> O_PRODUCTO','selectParams',1,'p_selectparams_all','grammar.py',1411),
  ('selectParams -> selectList','selectParams',1,'p_selectparams_params','grammar.py',1418),
  ('selectList -> selectList S_COMA selectListParams optAlias','selectList',4,'p_selectList_list','grammar.py',1426),
  ('selectList -> selectListParams optAlias','selectList',2,'p_selectList_u','grammar.py',1436),
  ('selectListParams -> expresion','selectListParams',1,'p_selectListParams_1','grammar.py',1445),
  ('selectListParams -> ID S_PUNTO O_PRODUCTO','selectListParams',3,'p_selectListParams_2','grammar.py',1452),
  ('optAlias -> R_AS idOrString','optAlias',2,'p_optalias_as','grammar.py',1459),
  ('optAlias -> idOrString','optAlias',1,'p_optalias_id','grammar.py',1467),
  ('optAlias -> <empty>','optAlias',0,'p_optalias_none','grammar.py',1474),
  ('tableExp -> tableExp S_COMA fromBody','tableExp',3,'p_tableexp_list','grammar.py',1480),
  ('tableExp -> fromBody','tableExp',1,'p_tableexp_u','grammar.py',1488),
  ('fromBody -> ID optAlias','fromBody',2,'p_fromBody','grammar.py',1494),
  ('fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString','fromBody',5,'p_tableexp_subq','grammar.py',1503),
  ('joinList -> joinList2','joinList',1,'p_joinList','grammar.py',1510),
  ('joinList2 -> joinList2 joinCl','joinList2',2,'p_joinList_2','grammar.py',1515),
  ('joinList2 -> joinCl','joinList2',1,'p_joinList_2','grammar.py',1516),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool','joinCl',6,'p_joinCl','grammar.py',1521),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER','joinCl',8,'p_joinCl','grammar.py',1522),
  ('joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias','joinCl',5,'p_joinCl','grammar.py',1523),
  ('nameList -> nameList S_COMA columnName','nameList',3,'p_nameList','grammar.py',1530),
  ('nameList -> columnName','nameList',1,'p_nameList','grammar.py',1531),
  ('joinOpt -> R_INNER','joinOpt',1,'p_joinOpt','grammar.py',1537),
  ('joinOpt -> R_LEFT','joinOpt',1,'p_joinOpt','grammar.py',1538),
  ('joinOpt -> R_LEFT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1539),
  ('joinOpt -> R_RIGHT','joinOpt',1,'p_joinOpt','grammar.py',1540),
  ('joinOpt -> R_RIGHT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1541),
  ('joinOpt -> R_FULL','joinOpt',1,'p_joinOpt','grammar.py',1542),
  ('joinOpt -> R_FULL R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1543),
  ('whereCl -> R_WHERE expBool','whereCl',2,'p_whereCl','grammar.py',1549),
  ('whereCl -> <empty>','whereCl',0,'p_whereCl_none','grammar.py',1558),
  ('groupByCl -> R_GROUP R_BY groupList havingCl','groupByCl',4,'p_groupByCl_1','grammar.py',1565),
  ('groupByCl -> <empty>','groupByCl',0,'p_groupByCl_2','grammar.py',1573),
  ('groupList -> groupList S_COMA columnName','groupList',3,'p_groupList_1','grammar.py',1581),
  ('groupList -> groupList S_COMA INTEGER','groupList',3,'p_groupList_1','grammar.py',1582),
  ('groupList -> columnName','groupList',1,'p_groupList_2','grammar.py',1591),
  ('groupList -> INTEGER','groupList',1,'p_groupList_2','grammar.py',1592),
  ('havingCl -> R_HAVING expBool','havingCl',2,'p_havingCl_1','grammar.py',1599),
  ('havingCl -> <empty>','havingCl',0,'p_havingCl_2','grammar.py',1605),
  ('orderByCl -> R_ORDER R_BY orderList','orderByCl',3,'p_orderByCl','grammar.py',1611),
  ('orderList -> orderList S_COMA orderByElem','orderList',3,'p_orderList','grammar.py',1616),
  ('orderList -> orderByElem','orderList',1,'p_orderList','grammar.py',1617),
  ('orderByElem -> columnName orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1624),
  ('orderByElem -> INTEGER orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1625),
  ('orderOpts -> R_ASC','orderOpts',1,'p_orderOpts','grammar.py',1631),
  ('orderOpts -> R_DESC','orderOpts',1,'p_orderOpts','grammar.py',1632),
  ('orderOpts -> <empty>','orderOpts',0,'p_orderOpts','grammar.py',1633),
  ('orderNull -> R_NULL R_FIRST','orderNull',2,'p_orderNull','grammar.py',1639),
  ('orderNull -> R_NULL R_LAST','orderNull',2,'p_orderNull','grammar.py',1640),
  ('orderNull -> <empty>','orderNull',0,'p_orderNull','grammar.py',1641),
  ('limitCl -> R_LIMIT INTEGER offsetLimit','limitCl',3,'p_limitCl','grammar.py',1647),
  ('limitCl -> R_LIMIT R_ALL offsetLimit','limitCl',3,'p_limitCl','grammar.py',1648),
  ('limitCl -> <empty>','limitCl',0,'p_limitCl_n','grammar.py',1655),
  ('offsetLimit -> R_OFFSET INTEGER','offsetLimit',2,'p_offsetLimit','grammar.py',1661),
  ('offsetLimit -> <empty>','offsetLimit',0,'p_offsetLimit_n','grammar.py',1667),
  ('insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER','insertStmt',8,'p_insertStmt','grammar.py',1680),
  ('paramsColumn -> S_PARIZQ idList S_PARDER','paramsColumn',3,'p_paramsColumn','grammar.py',1687),
  ('paramsColumn -> <empty>','paramsColumn',0,'p_paramsColumn_none','grammar.py',1693),
  ('updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl','updateStmt',5,'p_updateStmt','grammar.py',1707),
  ('updateCols -> updateCols S_COMA updateVals','updateCols',3,'p_updateCols_list','grammar.py',1717),
  ('updateCols -> updateVals','updateCols',1,'p_updateCols_u','grammar.py',1724),
  ('updateVals -> ID S_IGUAL updateExp','updateVals',3,'p_updateVals','grammar.py',1730),
  ('updateExp -> datatype','updateExp',1,'p_updateExp','grammar.py',1737),
  ('updateExp -> R_DEFAULT','updateExp',1,'p_updateExp','grammar.py',1738),
  ('deleteStmt -> R_DELETE fromCl whereCl','deleteStmt',3,'p_deleteStmt','grammar.py',1752),
  ('truncateStmt -> R_TRUNCATE tableOpt ID','truncateStmt',3,'p_truncateStmt','grammar.py',1758),
  ('tableOpt -> R_TABLE','tableOpt',1,'p_tableOpt','grammar.py',1764),
  ('tableOpt -> <empty>','tableOpt',0,'p_tableOpt','grammar.py',1765),
  ('showStmt -> R_SHOW R_DATABASES likeOpt','showStmt',3,'p_showStmt','grammar.py',1771),
  ('likeOpt -> R_LIKE STRING','likeOpt',2,'p_likeOpt','grammar.py',1778),
  ('likeOpt -> <empty>','likeOpt',0,'p_likeOpt','grammar.py',1779),
  ('useStmt -> R_USE ID','useStmt',2,'p_useStmt','grammar.py',1789),
>>>>>>> main
]
