
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftR_UNIONR_INTERSECTR_EXCEPTrightR_NOTleftR_ANDR_ORleftR_BETWEENR_ISleftS_IGUALOL_DISTINTODEOL_MAYORQUEOL_MENORQUEOL_MAYORIGUALQUEOL_MENORIGUALQUEleftOC_CONCATENARleftO_SUMAO_RESTAleftO_PRODUCTOO_DIVISIONO_MODULARrightUO_SUMAUO_RESTAleftO_EXPONENTECHARACTER COMMENT DECIMAL ID IDEspecial INTEGER OC_AND OC_CONCATENAR OC_NOT OC_OR OC_SHIFTL OC_SHIFTR OC_XOR OL_DISTINTODE OL_ESIGUAL OL_MAYORIGUALQUE OL_MAYORQUE OL_MENORIGUALQUE OL_MENORQUE O_DIVISION O_EXPONENTE O_MODULAR O_PRODUCTO O_RESTA O_SUMA R_ADD R_ALIAS R_ALL R_ALTER R_AND R_ANY R_AS R_ASC R_BEGIN R_BETWEEN R_BY R_CASE R_CHECK R_COLUMN R_CONSTANT R_CONSTRAINT R_COUNT R_CREATE R_CURRENT_DATE R_CURRENT_TIME R_CURRENT_USER R_DATABASE R_DATABASES R_DATE_PART R_DAY R_DECLARE R_DEFAULT R_DELETE R_DESC R_DISTINCT R_DROP R_ELSE R_ELSIF R_END R_ENUM R_EXCEPT R_EXISTS R_EXTRACT R_FALSE R_FIRST R_FOR R_FOREIGN R_FROM R_FULL R_FUNCTION R_GROUP R_HASH R_HAVING R_HOUR R_IF R_IN R_INDEX R_INHERITS R_INNER R_INSERT R_INTERSECT R_INTERVAL R_INTO R_IS R_ISNULL R_JOIN R_KEY R_LANGUAGE R_LAST R_LEFT R_LIKE R_LIMIT R_MINUTE R_MODE R_MONTH R_NATURAL R_NOT R_NOTNULL R_NOW R_NULL R_NULLS R_OFFSET R_ON R_OR R_ORDER R_OUTER R_OWNER R_PRIMARY R_PROM R_REFERENCES R_RENAME R_REPLACE R_RETURN R_RETURNS R_RIGHT R_SECOND R_SELECT R_SESSION_USER R_SET R_SHOW R_SOME R_SUM R_SYMMETRIC R_TABLE R_THEN R_TIMESTAMP R_TO R_TRUE R_TRUNCATE R_TYPE R_UNION R_UNIQUE R_UNKNOWN R_UPDATE R_USE R_USING R_VALUES R_WHEN R_WHERE R_YEAR STRING S_COMA S_DOLAR S_DOSPUNTOS S_IGUAL S_PARDER S_PARIZQ S_PUNTO S_PUNTOCOMA T_BIGINT T_BOOLEAN T_CHAR T_CHARACTER T_DATE T_DECIMAL T_DOUBLE T_INTEGER T_MONEY T_NUMERIC T_PRECISION T_REAL T_SMALLINT T_TEXT T_TIME T_VARCHAR T_VARYINGinit : stmtListstmtList : stmtList stmtstmtList : stmt\n    stmt : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n        | functionStmt\n        | ifStmt R_END R_IF S_PUNTOCOMA\n    ifStmt : R_IF S_PARIZQ expresion S_PARDER R_THEN List_body  else_else_ : R_ELSE List_body\n           | Lista_elsif_\n           |\n    \n    Lista_elsif_ : Lista_elsif_ elsif_\n    \n    Lista_elsif_ : elsif_\n    elsif_ : R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body\n\n    \n    List_body : List_body body\n    \n    List_body : body\n    \n    body : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n        | functionStmt\n        | ifStmt R_END R_IF S_PUNTOCOMA\n    \n    idOrString : ID\n    | STRING\n    | CHARACTER\n    createStmt : R_CREATE createBody\n    createBody : createOpts\n    createOpts : unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereClunique_index : R_UNIQUE\n                    | using_hash_index : R_USING R_HASH\n                    | indexNullS : R_NULLS R_FIRST\n    | R_NULLS R_LAST\n    |\n    indexasc_desc : R_DESC\n    | R_ASC\n    |\n    createOpts : R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt \n    createOpts : orReplace R_DATABASE ifNotExists idOrString createOwner createMode\n    \n    orReplace : R_OR R_REPLACE\n    \n    orReplace :\n    \n    createOpts : R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER\n    \n    ifNotExists : R_IF R_NOT R_EXISTS\n    \n    ifNotExists :\n    \n    inheritsOpt : R_INHERITS S_PARIZQ ID S_PARDER\n    \n    inheritsOpt :\n    \n    createOwner : R_OWNER ID\n    | R_OWNER STRING\n    \n    createOwner :  R_OWNER S_IGUAL ID\n    | R_OWNER S_IGUAL STRING\n    \n    createOwner :\n    \n    createMode : R_MODE INTEGER\n    \n    createMode : R_MODE S_IGUAL INTEGER\n    \n    createMode :\n    createTableList : createTableList S_COMA createTablecreateTableList :  createTable\n    createTable :  ID types createColumns\n    \n    createTable : createConstraint\n    | createUnique\n    | createPrimary\n    | createForeign\n    \n    createColumns : colOptionsList\n    \n    createColumns :\n    createConstraint : constrName R_CHECK S_PARIZQ booleanCheck S_PARDERcreateUnique : R_UNIQUE S_PARIZQ idList S_PARDERcreatePrimary : R_PRIMARY R_KEY S_PARIZQ idList S_PARDER\n    createForeign : constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER\n    \n    constrName : R_CONSTRAINT ID\n    \n    constrName :\n    idList : idList S_COMA IDidList : ID\n    types :  ID\n    \n    types : T_SMALLINT\n    | T_INTEGER\n    | T_BIGINT\n    | T_REAL\n    | T_DOUBLE T_PRECISION\n    | T_MONEY\n    | T_TEXT\n    | T_BOOLEAN\n    | R_TIMESTAMP\n    | T_DATE\n    | T_TIME\n    \n    types : T_DECIMAL optParams\n    | T_NUMERIC optParams\n    | T_VARCHAR optParams\n    | T_CHARACTER optParams\n    | T_CHAR optParams\n    \n    types : T_CHARACTER T_VARYING optParams\n    \n    types : R_INTERVAL intervalFields\n    \n    intervalFields :  R_YEAR\n    | R_MONTH\n    | R_DAY\n    | R_HOUR\n    | R_MINUTE\n    | R_SECOND\n    \n    intervalFields :\n    optParams : S_PARIZQ literalList S_PARDERoptParams : colOptionsList : colOptionsList colOptionscolOptionsList : colOptions\n    colOptions : defaultVal\n    | nullOpt\n    | constraintOpt\n    | primaryOpt\n    | referencesOpt\n    defaultVal : R_DEFAULT literal\n    nullOpt : R_NOT R_NULL\n    \n    nullOpt : R_NULL\n    \n    constraintOpt : constrName R_UNIQUE\n    \n    constraintOpt : constrName R_CHECK S_PARIZQ booleanCheck S_PARDER\n    primaryOpt : R_PRIMARY R_KEYreferencesOpt : R_REFERENCES ID\n    expresion : datatype\n            | expBool\n    \n    expresion : S_PARIZQ selectStmt S_PARDER\n    \n    funcCall : ID S_PARIZQ paramsList S_PARDER\n    \n    funcCall : ID S_PARIZQ S_PARDER\n            | R_NOW S_PARIZQ S_PARDER\n    \n    funcCall : R_COUNT S_PARIZQ datatype S_PARDER\n            | R_COUNT S_PARIZQ O_PRODUCTO S_PARDER\n            | R_SUM S_PARIZQ datatype S_PARDER\n            | R_PROM S_PARIZQ datatype S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER\n    \n    timeStamp : R_TIMESTAMP STRING\n          | R_INTERVAL STRING\n    \n    optsExtract : R_YEAR\n                  | R_MONTH\n                  | R_DAY\n                  | R_HOUR\n                  | R_MINUTE\n                  | R_SECOND\n    \n    datePart : R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER\n    \n    dateSource : R_TIMESTAMP STRING\n          | T_DATE STRING\n          | T_TIME STRING\n          | R_INTERVAL STRING\n          | R_NOW S_PARIZQ S_PARDER\n    \n    current : R_CURRENT_DATE\n          | R_CURRENT_TIME\n    \n    current : timeStamp\n    literalList : literalList S_COMA literalliteralList : literal\n    literal :  INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    | R_NULL\n    paramsList : paramsList S_COMA datatypeparamsList : datatype\n    datatype : datatype O_SUMA datatype\n    | datatype O_RESTA datatype\n    | datatype O_PRODUCTO datatype\n    | datatype O_DIVISION datatype\n    | datatype O_EXPONENTE datatype\n    | datatype O_MODULAR datatype\n    \n    datatype : datatype OC_CONCATENAR datatype\n    \n    datatype : R_CASE caseList optElse R_END\n    \n    caseList : caseList caseWhen\n            | caseWhen\n    caseWhen : R_WHEN expBool R_THEN literaloptElse : R_ELSE literal\n    |\n    \n    datatype : O_RESTA datatype %prec UO_RESTA\n    | O_SUMA datatype %prec UO_SUMA\n    \n    datatype : columnName\n    | literal\n    | funcCall\n    | extract\n    | datePart\n    | current\n    \n    datatype : S_PARIZQ datatype S_PARDER\n    \n    expComp : datatype OL_MENORQUE datatype\n    | datatype OL_MAYORQUE datatype\n    | datatype OL_MAYORIGUALQUE datatype\n    | datatype OL_MENORIGUALQUE datatype\n    | datatype S_IGUAL datatype\n    | datatype OL_DISTINTODE datatype\n    \n    expComp : datatype R_IS R_DISTINCT R_FROM datatype\n    \n    expComp : datatype R_IS R_NOT R_DISTINCT R_FROM datatype\n    \n    expComp :  datatype R_BETWEEN datatype R_AND datatype\n    \n    expComp : datatype R_NOT R_BETWEEN datatype R_AND datatype\n    | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype\n    \n    expComp : datatype R_ISNULL\n    | datatype R_NOTNULL\n    \n    expComp : datatype R_IS R_NULL\n    | datatype R_IS R_TRUE\n    | datatype R_IS R_FALSE\n    | datatype R_IS R_UNKNOWN\n    \n    expComp : datatype R_IS R_NOT R_NULL\n    | datatype R_IS R_NOT R_TRUE\n    | datatype R_IS R_NOT R_FALSE\n    | datatype R_IS R_NOT R_UNKNOWN\n    \n    expSubq : datatype OL_MENORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_ESIGUAL  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | stringExp R_LIKE STRING\n    \n    stringExp : STRING\n          | columnName\n    \n    subqValues : R_ALL\n                  | R_ANY\n                  | R_SOME\n    \n    boolean : R_EXISTS S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : expComp\n            | expSubq\n    \n    expBool : expBool R_AND expBool\n            | expBool R_OR expBool\n    \n    expBool : R_NOT expBool\n    \n    expBool : S_PARIZQ expBool S_PARDER\n    \n    expBool : expBool optBoolPredicate\n    \n    expBool : boolean\n    \n    optBoolPredicate : R_IS R_TRUE\n    | R_IS R_FALSE\n    | R_IS R_UNKNOWN\n    \n    optBoolPredicate : R_IS R_NOT R_TRUE\n    | R_IS R_NOT R_FALSE\n    | R_IS R_NOT R_UNKNOWN\n    \n    columnName : ID\n    \n    columnName : ID S_PUNTO ID\n    \n    booleanCheck : idOrLiteral OL_MENORQUE idOrLiteral\n    | idOrLiteral OL_MAYORQUE idOrLiteral\n    | idOrLiteral OL_MAYORIGUALQUE idOrLiteral\n    | idOrLiteral OL_MENORIGUALQUE idOrLiteral\n    | idOrLiteral S_IGUAL idOrLiteral\n    | idOrLiteral OL_DISTINTODE idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral\n    \n    idOrLiteral : ID\n    | INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    alterStmt : R_ALTER R_DATABASE idOrString alterDb\n    | R_ALTER R_TABLE idOrString alterTableList\n    alterDb : R_RENAME R_TO idOrString\n    | R_OWNER R_TO ownerOPts\n    \n    ownerOPts : idOrString\n    | R_CURRENT_USER\n    | R_SESSION_USER\n    \n    alterTableList : alterTableList S_COMA alterTable\n    \n    alterTableList : alterTable\n    \n    alterTable : R_ADD alterAdd\n    | R_ALTER alterAlter\n    | R_DROP alterDrop\n    | R_RENAME alterRename\n    \n    alterAdd : R_COLUMN ID types\n    \n    alterAdd : createConstraint\n    | createPrimary\n    | createForeign\n    \n    alterAdd : constrName R_UNIQUE S_PARIZQ ID S_PARDER\n    \n    alterAlter : R_COLUMN ID R_SET nullOpt\n    | R_COLUMN ID R_SET defaultVal\n    | R_COLUMN ID R_TYPE types\n    \n    alterDrop : R_CONSTRAINT ID\n    | R_COLUMN ID\n    \n    alterRename : R_COLUMN ID R_TO ID\n    \n    dropStmt : R_DROP R_TABLE ifExists idOrString\n    | R_DROP R_DATABASE ifExists idOrString\n    ifExists : R_IF R_EXISTS\n    |\n    selectStmt : R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl limitClselectStmt : selectStmt R_UNION allOpt selectStmtselectStmt : selectStmt R_INTERSECT allOpt selectStmtselectStmt : selectStmt R_EXCEPT allOpt selectStmtselectStmt : S_PARIZQ selectStmt S_PARDER\n    fromCl : R_FROM tableExp\n    selectStmt : R_SELECT selectParamsallOpt : R_ALL\n    |\n    selectParams : O_PRODUCTOselectParams : selectListselectList : selectList S_COMA selectListParams optAliasselectList : selectListParams optAliasselectListParams : expresionselectListParams : ID S_PUNTO O_PRODUCTO\n    optAlias : R_AS idOrString\n    \n    optAlias : idOrString\n    optAlias : tableExp : tableExp S_COMA fromBody tableExp : fromBody fromBody : ID optAliasfromBody : S_PARIZQ selectStmt S_PARDER R_AS idOrStringjoinList : joinList2joinList2 : joinList2 joinCl\n    | joinCljoinCl : joinOpt R_JOIN columnName optAlias R_ON expBool\n    | joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER\n    | R_NATURAL joinOpt R_JOIN columnName optAlias\n    nameList : nameList S_COMA columnName\n    | columnName\n    joinOpt : R_INNER\n    | R_LEFT\n    | R_LEFT R_OUTER\n    | R_RIGHT\n    | R_RIGHT R_OUTER\n    | R_FULL\n    | R_FULL R_OUTER\n    whereCl : R_WHERE expBoolwhereCl : \n    groupByCl : R_GROUP R_BY groupList havingCl\n    \n    groupByCl :\n    \n    groupList :  groupList S_COMA columnName\n            | groupList S_COMA INTEGER\n    \n    groupList :  columnName\n              | INTEGER\n    havingCl : R_HAVING expBoolhavingCl :orderByCl : R_ORDER R_BY orderListorderByCl : orderList : orderList S_COMA orderByElemorderList : orderByElem\n    orderByElem : columnName orderOpts orderNull\n                | INTEGER orderOpts orderNull\n    orderOpts : R_ASC\n                 | R_DESC\n    orderOpts : orderNull : R_NULL R_FIRST\n                 | R_NULL R_LASTorderNull : limitCl : R_LIMIT INTEGER offsetLimit\n               | R_LIMIT R_ALL offsetLimit\n    limitCl :offsetLimit : R_OFFSET INTEGERoffsetLimit :insertStmt : R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDERparamsColumn : S_PARIZQ idList S_PARDERparamsColumn :updateStmt : R_UPDATE fromBody R_SET updateCols whereClupdateCols : updateCols S_COMA updateValsupdateCols : updateVals updateVals : ID S_IGUAL updateExpupdateExp : datatype\n    | R_DEFAULT\n    deleteStmt : R_DELETE fromCl whereCltruncateStmt : R_TRUNCATE tableOpt IDtableOpt : R_TABLE\n    |\n    showStmt : R_SHOW R_DATABASES likeOptlikeOpt : R_LIKE STRING\n    |\n    useStmt : R_USE IDfunctionStmt : R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunctionfunctionStmt : R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunctionbloqueFunction : declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEndparams_list : params_list S_COMA param_itemparams_list : param_itemparam_item : ID typesreturnsStmt : R_RETURNS typesreturnsStmt : declareStmt : R_DECLARE declaracion_listdeclareStmt : declaracion_list : declaracion_list declaracion_itemdeclaracion_list : declaracion_itemdeclaracion_item : ID constant_opt types null_opt default_item S_PUNTOCOMAdeclaracion_item : ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMAconstant_opt : R_CONSTANTconstant_opt : null_opt : R_NOT R_NULLnull_opt : default_opt : R_DEFAULT  \n                   | S_DOSPUNTOS S_IGUAL\n                   | S_IGUALdefault_item : default_opt expresiondefault_item : alias_declaracion : ID \n                         | IDEspecialbeginStmt : beginStmt beginItembeginStmt : beginItembeginItem : stmt\n                 | returnStmt S_PUNTOCOMAreturnStmt : R_RETURN expresionlabelEnd : labelEnd : S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA'
    
_lr_action_items = {'R_CREATE':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,205,317,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[17,17,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,17,17,-24,-35,-23,17,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,17,-36,-386,17,-385,17,17,17,-411,-412,-410,-413,-415,-387,-416,]),'R_SHOW':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,205,317,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[18,18,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,18,18,-24,-35,-23,18,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,18,-36,-386,18,-385,18,18,18,-411,-412,-410,-413,-415,-387,-416,]),'R_ALTER':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,128,129,130,131,205,317,331,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[19,19,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-37,-38,-39,218,-15,19,218,19,-24,-35,-23,19,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,19,-36,-386,19,-385,19,19,19,-411,-412,-410,-413,-415,-387,-416,]),'R_DROP':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,128,129,130,131,205,317,331,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[20,20,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-37,-38,-39,222,-15,20,222,20,-24,-35,-23,20,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,20,-36,-386,20,-385,20,20,20,-411,-412,-410,-413,-415,-387,-416,]),'R_INSERT':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,205,317,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[21,21,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,21,21,-24,-35,-23,21,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,21,-36,-386,21,-385,21,21,21,-411,-412,-410,-413,-415,-387,-416,]),'R_UPDATE':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,205,317,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[23,23,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,23,23,-24,-35,-23,23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,23,-36,-386,23,-385,23,23,23,-411,-412,-410,-413,-415,-387,-416,]),'R_DELETE':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,205,317,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[24,24,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,24,24,-24,-35,-23,24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,24,-36,-386,24,-385,24,24,24,-411,-412,-410,-413,-415,-387,-416,]),'R_TRUNCATE':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,205,317,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[25,25,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,25,25,-24,-35,-23,25,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,25,-36,-386,25,-385,25,25,25,-411,-412,-410,-413,-415,-387,-416,]),'R_USE':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,205,317,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[26,26,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,26,26,-24,-35,-23,26,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,26,-36,-386,26,-385,26,26,26,-411,-412,-410,-413,-415,-387,-416,]),'R_SELECT':([0,2,3,14,22,28,29,30,31,32,33,34,35,36,37,38,39,40,41,62,77,111,112,113,114,177,198,205,260,317,367,369,370,371,372,373,386,387,388,402,403,414,499,500,501,502,518,519,523,524,525,526,527,528,529,530,531,532,595,596,597,598,616,682,692,696,737,739,745,749,778,779,780,798,799,800,801,817,818,825,832,848,],[27,27,-3,-14,27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-312,-312,-312,27,27,27,-311,27,27,27,27,-15,27,27,27,27,27,27,27,27,27,27,27,27,-24,-35,27,27,27,27,-23,27,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,27,27,27,27,27,27,27,-36,27,27,27,-386,27,-385,27,27,27,-411,-412,-410,-413,-415,-387,-416,]),'S_PARIZQ':([0,2,3,14,16,22,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,62,64,68,74,77,78,79,87,96,97,98,99,100,102,105,111,112,113,114,117,118,128,129,130,135,143,149,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,198,205,210,235,260,261,262,264,265,266,267,269,271,273,276,284,285,286,287,317,345,350,365,367,369,370,371,372,373,374,380,381,382,383,384,386,387,388,402,403,414,429,430,431,432,433,439,448,451,460,461,463,468,487,494,495,496,497,498,499,500,501,502,504,516,518,519,522,523,524,525,526,527,528,529,530,531,532,540,553,564,570,593,595,596,597,598,603,616,618,626,628,676,678,679,681,682,683,692,693,696,707,737,739,745,749,778,779,780,798,799,800,801,803,814,817,818,825,832,835,836,838,845,848,],[22,22,-3,-14,43,22,62,77,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-312,-312,-312,77,22,62,77,152,177,183,183,190,192,193,194,195,196,197,198,22,-311,22,22,152,208,-37,-38,-39,228,190,77,183,183,183,183,183,183,183,183,260,183,183,183,183,183,183,183,190,190,177,183,190,190,183,183,183,22,-15,323,62,22,367,183,369,-236,-237,-238,370,371,372,373,183,386,387,388,22,468,183,183,22,22,22,22,22,22,183,499,500,501,502,183,22,22,22,22,-24,-35,536,536,536,536,536,-46,558,564,568,569,571,183,183,183,595,596,597,598,22,22,22,22,183,615,-23,22,618,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,536,625,183,663,682,22,22,22,22,692,22,77,-45,702,190,190,736,737,22,739,22,745,-36,756,22,22,22,-386,22,-385,22,22,22,-411,-412,77,824,-410,-413,-415,-387,77,-403,-405,-404,-416,]),'R_IF':([0,2,3,14,28,29,30,31,32,33,34,35,36,37,38,42,48,50,56,57,122,205,317,402,403,414,518,519,523,524,525,526,527,528,529,530,531,532,533,616,696,749,778,779,780,798,799,800,801,817,818,825,832,848,],[16,16,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,115,121,121,133,133,121,-15,16,16,-24,-35,-23,16,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,619,16,-36,-386,16,-385,16,16,16,-411,-412,-410,-413,-415,-387,-416,]),'$end':([1,2,3,14,28,29,30,31,32,33,34,35,36,37,38,205,749,779,825,832,848,],[0,-1,-3,-14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-386,-385,-415,-387,-416,]),'S_PUNTOCOMA':([4,5,6,7,8,9,10,11,12,13,44,46,53,61,63,67,69,70,71,72,73,74,75,76,81,82,83,84,85,86,88,89,90,91,92,93,94,95,101,103,104,106,107,115,117,125,128,129,130,136,138,140,142,144,145,146,148,150,170,171,175,181,182,184,185,189,199,200,202,203,204,214,215,219,220,224,226,229,230,232,234,236,237,238,239,240,247,248,249,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,294,295,296,302,316,325,329,332,334,335,336,340,343,348,352,353,354,356,357,363,364,376,377,378,379,389,390,391,392,395,396,397,398,401,404,405,406,407,408,409,410,411,412,413,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,449,452,453,454,455,456,458,465,466,471,472,473,474,475,476,477,480,482,485,493,503,534,535,537,538,539,540,541,542,543,544,545,546,547,548,555,559,561,562,567,575,576,579,580,581,582,583,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,619,622,627,640,645,647,648,650,651,652,665,666,667,668,669,670,671,672,673,674,677,680,688,689,690,691,697,704,705,711,712,713,714,723,724,726,728,729,730,731,732,733,734,735,740,741,742,743,766,767,768,770,774,776,786,791,792,793,795,796,797,802,808,816,819,820,822,826,828,829,830,834,839,841,844,847,],[29,30,31,32,33,34,35,36,37,38,-40,-41,-383,-321,-342,-384,-310,-313,-314,-321,-317,-256,-129,-130,-184,-185,-186,-187,-188,-189,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,205,-256,-381,-37,-38,-39,-308,-324,-320,-377,-309,-323,-378,-342,-316,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-305,-306,-307,-382,-273,-274,-281,-297,-298,-342,-373,-319,-341,-342,-344,-342,-326,-328,-321,-257,-318,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-131,-190,-247,-134,-233,-66,-283,-282,-287,-288,-289,-284,-285,-371,-322,-344,-352,-344,-327,-315,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,523,524,525,526,527,528,529,530,531,532,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,-69,-275,-276,-277,-278,-279,-280,-294,-295,-372,-374,-375,-376,-325,-352,-365,-352,-256,-240,-197,-199,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,-61,-54,-62,-63,-286,-365,-302,-350,-347,-348,-365,-304,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,696,-104,-53,-124,-67,-64,-65,-291,-292,-293,-296,-368,-301,-367,-367,-351,-354,-359,-359,-343,-303,-331,-223,-227,-229,-231,-113,-122,-123,-68,-57,-290,-79,-81,-363,-364,-362,-357,-358,-362,-345,-346,-349,-329,-224,-228,-230,-232,-366,-353,-355,-356,-221,-218,-60,-360,-361,-330,-219,-222,-220,818,-342,825,-414,-402,-42,-407,-408,840,-409,843,-401,-82,-406,848,]),'R_UNION':([13,59,61,69,70,71,72,73,74,75,76,81,82,83,84,85,86,88,89,90,91,92,93,94,95,101,103,104,106,107,117,128,129,130,136,138,140,141,144,145,148,150,170,171,175,178,181,182,184,185,189,199,200,202,203,204,232,234,236,237,238,239,240,247,248,249,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,294,295,296,302,315,316,352,353,354,356,357,363,364,366,376,377,378,379,389,390,391,392,395,396,397,398,401,413,475,476,477,480,482,485,486,488,489,490,491,492,493,503,505,506,507,575,576,579,580,581,582,583,585,586,587,588,589,590,591,592,594,599,600,601,602,604,605,606,607,608,609,610,667,668,669,670,671,672,673,674,677,680,684,685,686,687,688,689,690,691,724,726,728,729,730,731,732,733,734,735,738,740,741,742,743,744,766,767,768,770,773,774,775,776,777,791,792,793,795,796,797,],[39,39,-321,-310,-313,-314,-321,-317,-256,-129,-130,-184,-185,-186,-187,-188,-189,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-308,-324,-320,39,-309,-323,-342,-316,-202,-203,-248,39,-183,-184,-161,-182,-246,-141,-142,-305,-306,-307,-319,-341,-342,-344,-342,-326,-328,-321,-257,-318,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-131,-190,-247,-134,39,-233,-322,-344,-352,-344,-327,-315,-132,39,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,39,-325,-352,-365,-352,-256,-240,39,39,39,39,39,39,-197,-199,39,39,39,-365,-302,-350,-347,-348,-365,-304,-321,-241,-200,-212,-213,-214,-215,-217,-198,39,39,39,39,-201,-225,-226,-216,-139,-140,-149,-301,-367,-367,-351,-354,-359,-359,-343,-303,-331,39,39,39,39,-223,-227,-229,-231,-363,-364,-362,-357,-358,-362,-345,-346,-349,-329,39,-224,-228,-230,-232,39,-366,-353,-355,-356,39,-221,39,-218,39,-360,-361,-330,-219,-222,-220,]),'R_INTERSECT':([13,59,61,69,70,71,72,73,74,75,76,81,82,83,84,85,86,88,89,90,91,92,93,94,95,101,103,104,106,107,117,128,129,130,136,138,140,141,144,145,148,150,170,171,175,178,181,182,184,185,189,199,200,202,203,204,232,234,236,237,238,239,240,247,248,249,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,294,295,296,302,315,316,352,353,354,356,357,363,364,366,376,377,378,379,389,390,391,392,395,396,397,398,401,413,475,476,477,480,482,485,486,488,489,490,491,492,493,503,505,506,507,575,576,579,580,581,582,583,585,586,587,588,589,590,591,592,594,599,600,601,602,604,605,606,607,608,609,610,667,668,669,670,671,672,673,674,677,680,684,685,686,687,688,689,690,691,724,726,728,729,730,731,732,733,734,735,738,740,741,742,743,744,766,767,768,770,773,774,775,776,777,791,792,793,795,796,797,],[40,40,-321,-310,-313,-314,-321,-317,-256,-129,-130,-184,-185,-186,-187,-188,-189,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-308,-324,-320,40,-309,-323,-342,-316,-202,-203,-248,40,-183,-184,-161,-182,-246,-141,-142,-305,-306,-307,-319,-341,-342,-344,-342,-326,-328,-321,-257,-318,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-131,-190,-247,-134,40,-233,-322,-344,-352,-344,-327,-315,-132,40,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,40,-325,-352,-365,-352,-256,-240,40,40,40,40,40,40,-197,-199,40,40,40,-365,-302,-350,-347,-348,-365,-304,-321,-241,-200,-212,-213,-214,-215,-217,-198,40,40,40,40,-201,-225,-226,-216,-139,-140,-149,-301,-367,-367,-351,-354,-359,-359,-343,-303,-331,40,40,40,40,-223,-227,-229,-231,-363,-364,-362,-357,-358,-362,-345,-346,-349,-329,40,-224,-228,-230,-232,40,-366,-353,-355,-356,40,-221,40,-218,40,-360,-361,-330,-219,-222,-220,]),'R_EXCEPT':([13,59,61,69,70,71,72,73,74,75,76,81,82,83,84,85,86,88,89,90,91,92,93,94,95,101,103,104,106,107,117,128,129,130,136,138,140,141,144,145,148,150,170,171,175,178,181,182,184,185,189,199,200,202,203,204,232,234,236,237,238,239,240,247,248,249,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,294,295,296,302,315,316,352,353,354,356,357,363,364,366,376,377,378,379,389,390,391,392,395,396,397,398,401,413,475,476,477,480,482,485,486,488,489,490,491,492,493,503,505,506,507,575,576,579,580,581,582,583,585,586,587,588,589,590,591,592,594,599,600,601,602,604,605,606,607,608,609,610,667,668,669,670,671,672,673,674,677,680,684,685,686,687,688,689,690,691,724,726,728,729,730,731,732,733,734,735,738,740,741,742,743,744,766,767,768,770,773,774,775,776,777,791,792,793,795,796,797,],[41,41,-321,-310,-313,-314,-321,-317,-256,-129,-130,-184,-185,-186,-187,-188,-189,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-308,-324,-320,41,-309,-323,-342,-316,-202,-203,-248,41,-183,-184,-161,-182,-246,-141,-142,-305,-306,-307,-319,-341,-342,-344,-342,-326,-328,-321,-257,-318,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-131,-190,-247,-134,41,-233,-322,-344,-352,-344,-327,-315,-132,41,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,41,-325,-352,-365,-352,-256,-240,41,41,41,41,41,41,-197,-199,41,41,41,-365,-302,-350,-347,-348,-365,-304,-321,-241,-200,-212,-213,-214,-215,-217,-198,41,41,41,41,-201,-225,-226,-216,-139,-140,-149,-301,-367,-367,-351,-354,-359,-359,-343,-303,-331,41,41,41,41,-223,-227,-229,-231,-363,-364,-362,-357,-358,-362,-345,-346,-349,-329,41,-224,-228,-230,-232,41,-366,-353,-355,-356,41,-221,41,-218,41,-360,-361,-330,-219,-222,-220,]),'R_END':([14,15,29,30,31,32,33,34,35,36,37,38,89,91,92,93,94,95,184,186,187,205,298,299,393,402,403,414,415,508,517,518,520,521,523,524,525,526,527,528,529,530,531,532,616,617,696,749,779,798,799,800,801,817,818,825,832,848,],[-14,42,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-160,-162,-163,-164,-165,-166,-161,-181,-178,-15,392,-177,-180,-19,-24,-35,533,-179,-16,-23,-18,-21,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-17,-20,-36,-386,-385,-22,816,-411,-412,-410,-413,-415,-387,-416,]),'R_RETURN':([14,29,30,31,32,33,34,35,36,37,38,205,749,779,780,799,800,801,817,818,825,832,848,],[-14,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-386,-385,803,803,-411,-412,-410,-413,-415,-387,-416,]),'R_FUNCTION':([17,],[45,]),'R_TABLE':([17,19,20,25,],[48,55,56,66,]),'R_TYPE':([17,457,],[50,566,]),'R_UNIQUE':([17,89,91,92,93,94,95,184,221,323,337,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,464,534,535,537,538,539,540,541,542,543,544,545,546,547,548,556,557,622,631,632,633,634,635,636,637,640,641,697,703,704,705,706,708,709,811,],[51,-160,-162,-163,-164,-165,-166,-161,-84,448,460,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,-83,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,448,-84,-104,-84,-116,-117,-118,-119,-120,-121,-124,706,-113,-115,-122,-123,-125,-127,-128,-126,]),'R_INDEX':([17,47,51,],[-44,119,-43,]),'R_OR':([17,76,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,170,171,175,180,181,182,184,185,189,199,200,234,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,301,302,316,364,376,377,378,379,389,390,391,392,395,396,397,398,401,485,493,503,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,688,689,690,691,734,735,740,741,742,743,774,776,795,796,797,],[52,174,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-202,-203,-248,174,-183,-184,-161,-182,174,-141,-142,174,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,174,-134,-233,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-240,-197,-199,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-223,-227,-229,-231,174,174,-224,-228,-230,-232,-221,-218,-219,-222,-220,]),'R_DATABASE':([17,19,20,49,124,],[-56,54,57,122,-55,]),'R_DATABASES':([18,],[53,]),'R_INTO':([21,],[58,]),'ID':([23,25,26,27,43,45,48,50,54,55,56,57,58,61,64,65,66,68,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,103,104,106,107,117,119,120,122,123,132,134,137,139,143,149,151,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,170,171,173,174,175,177,181,182,183,184,185,188,189,190,193,194,195,199,200,207,208,212,225,228,235,247,248,249,251,253,254,255,256,257,258,259,262,263,268,270,272,274,275,279,280,281,282,284,288,289,290,291,292,294,295,296,302,316,318,322,323,324,327,328,330,333,339,341,342,344,349,350,351,358,364,365,374,376,377,378,379,384,389,390,391,392,395,396,397,398,399,401,436,438,442,450,459,468,470,479,481,482,483,485,487,493,494,503,504,556,558,563,564,566,568,569,571,572,578,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,618,625,643,663,675,676,678,688,689,690,691,702,715,716,717,718,719,720,727,736,740,741,742,743,751,756,774,776,781,782,783,788,790,794,795,796,797,803,804,805,807,813,821,824,835,836,838,840,843,845,846,],[61,-380,67,74,117,118,-59,-59,128,128,-300,-300,135,128,61,146,-379,74,128,-317,-256,-129,-130,117,117,117,-184,-185,-186,-187,-188,-189,117,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,209,128,-59,213,128,128,231,128,117,74,248,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-202,-203,117,117,-248,117,-183,-184,117,-161,-182,117,-246,117,117,117,117,-141,-142,248,318,128,-299,347,61,128,-257,-318,-133,-169,-170,-171,-172,-173,-174,-175,117,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,117,-244,-245,-250,-251,-252,-131,-190,-247,-134,-233,416,439,442,-58,128,128,457,459,464,465,466,467,231,117,128,482,-132,117,117,-208,-209,-210,-211,117,-253,-254,-255,-176,-135,-136,-137,-138,482,-239,318,416,416,561,416,117,574,482,128,-256,482,-240,117,-197,117,-199,117,442,347,647,117,416,653,656,347,665,482,128,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,117,347,709,347,482,117,117,-223,-227,-229,-231,755,656,656,656,656,656,656,482,482,-224,-228,-230,-232,783,656,-221,-218,783,-396,-400,656,814,482,-219,-222,-220,117,-395,416,-399,656,828,347,117,-403,-405,-398,-397,-404,847,]),'R_FROM':([24,69,70,71,72,73,74,75,76,81,82,83,84,85,86,88,89,90,91,92,93,94,95,101,103,104,106,107,117,128,129,130,140,147,150,170,171,175,181,182,184,185,189,199,200,232,247,248,249,251,253,254,255,256,257,258,259,263,268,270,272,274,275,277,279,280,281,282,288,289,290,291,292,294,295,296,302,307,308,309,310,311,312,313,316,363,364,375,376,377,378,379,389,390,391,392,395,396,397,398,401,485,493,503,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,688,689,690,691,740,741,742,743,763,774,776,789,795,796,797,],[64,64,-313,-314,-321,-317,-256,-129,-130,-184,-185,-186,-187,-188,-189,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-320,64,-316,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-319,-321,-257,-318,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,374,-204,-205,-206,-207,-244,-245,-250,-251,-252,-131,-190,-247,-134,399,-143,-144,-145,-146,-147,-148,-233,-315,-132,494,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-240,-197,-199,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-223,-227,-229,-231,-224,-228,-230,-232,788,-221,-218,813,-219,-222,-220,]),'R_DISTINCT':([27,168,278,721,764,],[68,277,375,763,789,]),'O_PRODUCTO':([27,68,74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,151,179,181,182,184,185,191,193,199,200,248,251,252,253,254,255,256,257,258,259,263,268,270,272,274,275,283,295,297,302,303,305,306,364,368,385,392,395,396,397,398,473,484,493,503,587,594,604,608,609,610,],[70,70,-256,155,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,249,155,-183,-184,-161,-182,155,304,-141,-142,-257,-133,155,155,155,-171,-172,-173,-174,155,155,155,155,155,155,155,155,-190,155,-134,155,155,155,-132,155,155,-176,-135,-136,-137,-138,155,155,155,155,155,155,155,-139,-140,-149,]),'R_CASE':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,836,838,845,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-403,-405,-404,]),'O_RESTA':([27,43,68,74,75,77,78,79,81,82,83,84,85,86,87,89,90,91,92,93,94,95,101,103,104,117,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,179,181,182,183,184,185,188,190,191,193,194,195,199,200,248,251,252,253,254,255,256,257,258,259,262,263,268,270,272,274,275,283,284,295,297,302,303,305,306,350,364,365,368,374,384,385,392,395,396,397,398,468,473,484,487,493,494,503,504,564,587,594,604,608,609,610,618,676,678,803,835,836,838,845,],[79,79,79,-256,154,79,79,79,-184,-185,-186,-187,-188,-189,79,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,154,-183,-184,79,-161,-182,79,79,154,79,79,79,-141,-142,-257,-133,154,-169,-170,-171,-172,-173,-174,154,79,154,154,154,154,154,154,154,79,-190,154,-134,154,154,154,79,-132,79,154,79,79,154,-176,-135,-136,-137,-138,79,154,154,79,154,79,154,79,79,154,154,154,-139,-140,-149,79,79,79,79,79,-403,-405,-404,]),'O_SUMA':([27,43,68,74,75,77,78,79,81,82,83,84,85,86,87,89,90,91,92,93,94,95,101,103,104,117,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,179,181,182,183,184,185,188,190,191,193,194,195,199,200,248,251,252,253,254,255,256,257,258,259,262,263,268,270,272,274,275,283,284,295,297,302,303,305,306,350,364,365,368,374,384,385,392,395,396,397,398,468,473,484,487,493,494,503,504,564,587,594,604,608,609,610,618,676,678,803,835,836,838,845,],[78,78,78,-256,153,78,78,78,-184,-185,-186,-187,-188,-189,78,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,153,-183,-184,78,-161,-182,78,78,153,78,78,78,-141,-142,-257,-133,153,-169,-170,-171,-172,-173,-174,153,78,153,153,153,153,153,153,153,78,-190,153,-134,153,153,153,78,-132,78,153,78,78,153,-176,-135,-136,-137,-138,78,153,153,78,153,78,153,78,78,153,153,153,-139,-140,-149,78,78,78,78,78,-403,-405,-404,]),'R_NOT':([27,43,68,74,75,77,81,82,83,84,85,86,87,89,90,91,92,93,94,95,101,103,104,117,121,143,149,168,173,174,176,177,179,181,182,184,185,188,190,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,534,535,537,538,539,540,541,542,543,544,545,546,547,548,557,565,608,609,610,618,622,631,632,633,634,635,636,637,640,676,678,697,703,704,705,706,708,709,721,803,811,820,835,836,838,845,],[87,87,87,-256,161,87,-184,-185,-186,-187,-188,-189,87,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,211,87,87,278,87,87,293,87,161,-183,-184,-161,-182,87,87,161,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,639,639,-139,-140,-149,87,-104,639,-116,-117,-118,-119,-120,-121,-124,87,87,-113,-115,-122,-123,-125,-127,-128,764,87,-126,827,87,-403,-405,-404,]),'INTEGER':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,300,350,365,374,384,394,468,479,487,494,504,536,560,564,569,577,578,618,638,646,675,676,678,698,715,716,717,718,719,720,725,727,756,788,803,813,835,836,838,845,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,581,89,89,89,89,645,89,657,668,673,89,89,711,733,89,89,89,657,657,657,657,657,657,766,673,657,657,89,657,89,-403,-405,-404,]),'STRING':([27,43,48,54,55,56,57,61,68,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,103,104,106,107,108,109,117,120,122,126,132,134,139,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,170,171,173,174,175,177,181,182,183,184,185,188,189,190,193,194,195,197,199,200,201,212,225,247,248,249,251,253,254,255,256,257,258,259,262,263,268,270,272,274,275,279,280,281,282,284,288,289,290,291,292,294,295,296,300,302,316,324,327,328,350,351,364,365,374,376,377,378,379,384,389,390,391,392,394,395,396,397,398,401,450,468,481,482,485,487,493,494,503,504,512,513,514,515,536,563,564,569,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,618,638,676,678,688,689,690,691,698,715,716,717,718,719,720,740,741,742,743,756,774,776,788,795,796,797,803,813,835,836,838,845,],[90,90,-59,129,129,-300,-300,129,90,129,-317,-256,-129,-130,90,184,184,-184,-185,-186,-187,-188,-189,90,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,199,200,-256,129,-59,214,129,129,129,90,90,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,-202,-203,90,90,-248,90,-183,-184,184,-161,-182,90,-246,90,184,184,184,314,-141,-142,316,129,-299,129,-257,-318,-133,-169,-170,-171,-172,-173,-174,-175,184,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,184,-244,-245,-250,-251,-252,-131,-190,-247,184,-134,-233,-58,129,129,184,129,-132,184,184,-208,-209,-210,-211,184,-253,-254,-255,-176,184,-135,-136,-137,-138,-239,562,184,129,-256,-240,184,-197,184,-199,184,611,612,613,614,184,648,184,658,129,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,90,184,90,90,-223,-227,-229,-231,184,658,658,658,658,658,658,-224,-228,-230,-232,658,-221,-218,658,-219,-222,-220,90,658,90,-403,-405,-404,]),'DECIMAL':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,300,350,365,374,384,394,468,487,494,504,536,564,569,618,638,676,678,698,715,716,717,718,719,720,756,788,803,813,835,836,838,845,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,659,91,91,91,91,91,659,659,659,659,659,659,659,659,91,659,91,-403,-405,-404,]),'CHARACTER':([27,43,48,54,55,56,57,61,68,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,103,104,106,107,117,120,122,132,134,139,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,170,171,173,174,175,177,181,182,183,184,185,188,189,190,193,194,195,199,200,212,225,247,248,249,251,253,254,255,256,257,258,259,262,263,268,270,272,274,275,279,280,281,282,284,288,289,290,291,292,294,295,296,300,302,316,324,327,328,350,351,364,365,374,376,377,378,379,384,389,390,391,392,394,395,396,397,398,401,468,481,482,485,487,493,494,503,504,536,564,569,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,618,638,676,678,688,689,690,691,698,715,716,717,718,719,720,740,741,742,743,756,774,776,788,795,796,797,803,813,835,836,838,845,],[92,92,-59,130,130,-300,-300,130,92,130,-317,-256,-129,-130,92,92,92,-184,-185,-186,-187,-188,-189,92,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,130,-59,130,130,130,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-202,-203,92,92,-248,92,-183,-184,92,-161,-182,92,-246,92,92,92,92,-141,-142,130,-299,130,-257,-318,-133,-169,-170,-171,-172,-173,-174,-175,92,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,92,-244,-245,-250,-251,-252,-131,-190,-247,92,-134,-233,-58,130,130,92,130,-132,92,92,-208,-209,-210,-211,92,-253,-254,-255,-176,92,-135,-136,-137,-138,-239,92,130,-256,-240,92,-197,92,-199,92,92,92,660,130,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,92,92,92,92,-223,-227,-229,-231,92,660,660,660,660,660,660,-224,-228,-230,-232,660,-221,-218,660,-219,-222,-220,92,660,92,-403,-405,-404,]),'R_TRUE':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,168,169,173,174,176,177,183,188,190,193,194,195,262,278,284,293,300,350,365,374,384,394,468,487,494,504,536,564,569,618,638,676,678,698,715,716,717,718,719,720,756,788,803,813,835,836,838,845,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,280,93,93,93,290,93,93,93,93,93,93,93,93,377,93,389,93,93,93,93,93,93,93,93,93,93,93,93,661,93,93,93,93,93,661,661,661,661,661,661,661,661,93,661,93,-403,-405,-404,]),'R_FALSE':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,168,169,173,174,176,177,183,188,190,193,194,195,262,278,284,293,300,350,365,374,384,394,468,487,494,504,536,564,569,618,638,676,678,698,715,716,717,718,719,720,756,788,803,813,835,836,838,845,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,281,94,94,94,291,94,94,94,94,94,94,94,94,378,94,390,94,94,94,94,94,94,94,94,94,94,94,94,662,94,94,94,94,94,662,662,662,662,662,662,662,662,94,662,94,-403,-405,-404,]),'R_NULL':([27,43,68,77,78,79,87,89,91,92,93,94,95,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,168,169,173,174,177,183,184,188,190,193,194,195,248,262,278,284,300,350,365,374,384,394,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,468,482,487,494,504,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,557,564,565,618,622,631,632,633,634,635,636,637,638,639,640,672,673,676,678,697,698,703,704,705,706,708,709,728,729,730,731,803,811,827,835,836,838,845,],[95,95,95,95,95,95,95,-160,-162,-163,-164,-165,-166,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,279,95,95,95,95,95,-161,95,95,95,95,95,-257,95,376,95,95,95,95,95,95,95,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,95,-256,95,95,95,-92,-99,95,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,640,95,640,95,-104,640,-116,-117,-118,-119,-120,-121,95,705,-124,-359,-359,95,95,-113,95,-115,-122,-123,-125,-127,-128,769,-357,-358,769,95,-126,839,95,-403,-405,-404,]),'R_NOW':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,400,468,487,494,504,564,618,676,678,803,835,836,838,845,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,516,96,96,96,96,96,96,96,96,96,96,-403,-405,-404,]),'R_COUNT':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,836,838,845,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-403,-405,-404,]),'R_SUM':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,836,838,845,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-403,-405,-404,]),'R_PROM':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,836,838,845,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-403,-405,-404,]),'R_EXTRACT':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,836,838,845,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-403,-405,-404,]),'R_DATE_PART':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,836,838,845,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-403,-405,-404,]),'R_CURRENT_DATE':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,836,838,845,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-403,-405,-404,]),'R_CURRENT_TIME':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,836,838,845,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-403,-405,-404,]),'R_EXISTS':([27,43,68,77,87,133,143,149,173,174,177,188,190,211,618,676,678,803,835,836,838,845,],[105,105,105,105,105,225,105,105,105,105,105,105,105,324,105,105,105,105,105,-403,-405,-404,]),'R_TIMESTAMP':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,318,350,365,374,384,399,400,438,442,459,468,487,494,504,564,566,618,676,678,783,803,805,807,835,836,838,845,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,426,108,108,108,108,108,512,426,426,426,108,108,108,108,108,426,108,108,108,-400,108,426,-399,108,-403,-405,-404,]),'R_INTERVAL':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,318,350,365,374,384,399,400,438,442,459,468,487,494,504,564,566,618,676,678,783,803,805,807,835,836,838,845,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,434,109,109,109,109,109,515,434,434,434,109,109,109,109,109,434,109,109,109,-400,109,434,-399,109,-403,-405,-404,]),'R_ALL':([39,40,41,82,83,84,85,86,89,91,92,93,94,95,101,103,104,117,162,163,164,165,167,170,171,172,181,182,184,185,199,200,248,251,253,254,255,256,257,258,259,279,280,281,282,295,302,364,376,377,378,379,392,395,396,397,398,493,503,577,587,594,604,608,609,610,],[112,112,112,-185,-186,-187,-188,-189,-160,-162,-163,-164,-165,-166,-157,-155,-156,-256,265,265,265,265,265,265,265,265,-183,-184,-161,-182,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,265,265,265,265,-190,-134,-132,265,265,265,265,-176,-135,-136,-137,-138,265,265,669,265,265,265,-139,-140,-149,]),'R_REPLACE':([52,],[124,]),'R_LIKE':([53,74,81,90,110,117,248,],[126,-256,-235,-234,201,-256,-257,]),'S_PARDER':([59,61,69,70,71,72,73,74,75,76,81,82,83,84,85,86,88,89,90,91,92,93,94,95,101,103,104,106,107,116,117,128,129,130,136,138,140,141,144,145,148,150,152,170,171,175,178,179,180,181,182,184,185,189,192,199,200,202,203,204,208,232,234,236,237,238,239,240,247,248,249,250,251,252,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,294,295,296,297,302,303,304,305,306,315,316,319,321,346,347,352,353,354,356,357,363,364,366,376,377,378,379,389,390,391,392,395,396,397,398,401,416,417,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,440,441,443,444,445,446,475,476,477,480,482,484,485,486,488,489,490,491,492,493,503,505,506,507,509,510,511,534,535,537,538,539,540,541,542,543,544,545,546,547,548,550,557,573,574,575,576,579,580,581,582,583,585,586,587,588,589,590,591,592,594,599,600,601,602,604,605,606,607,608,609,610,611,612,613,614,615,620,621,622,629,630,631,632,633,634,635,636,637,640,644,649,653,654,656,657,658,659,660,661,662,664,667,668,669,670,671,672,673,674,677,680,684,685,686,687,688,689,690,691,694,695,697,701,703,704,705,706,708,709,710,714,722,723,724,726,728,729,730,731,732,733,734,735,738,740,741,742,743,744,747,752,753,754,755,757,758,759,760,761,762,766,767,768,770,771,772,773,774,775,776,777,784,787,791,792,793,795,796,797,809,810,811,812,815,823,831,841,],[136,-321,-310,-313,-314,-321,-317,-256,-129,-130,-184,-185,-186,-187,-188,-189,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,206,-256,-37,-38,-39,-308,-324,-320,233,-309,-323,-342,-316,251,-202,-203,-248,294,295,296,-183,-184,-161,-182,-246,302,-141,-142,-305,-306,-307,320,-319,-341,-342,-344,-342,-326,-328,-321,-257,-318,364,-133,-168,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-131,-190,-247,295,-134,395,396,397,398,401,-233,435,-389,469,-86,-322,-344,-352,-344,-327,-315,-132,485,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-87,-390,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,555,-71,-73,-74,-75,-76,-325,-352,-365,-352,-256,-167,-240,586,588,589,590,591,592,-197,-199,605,606,607,608,609,610,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,-388,-78,666,-85,-365,-302,-350,-347,-348,-365,-304,-321,-241,-200,-212,-213,-214,-215,-217,-198,688,689,690,691,-201,-225,-226,-216,-139,-140,-149,-150,-151,-152,-153,694,697,-159,-104,-70,-72,-77,-116,-117,-118,-119,-120,-121,-124,710,712,713,714,-266,-267,-268,-269,-270,-271,-272,723,-301,-367,-367,-351,-354,-359,-359,-343,-303,-331,740,741,742,743,-223,-227,-229,-231,-154,746,-113,-52,-115,-122,-123,-125,-127,-128,-80,-79,765,-81,-363,-364,-362,-357,-358,-362,-345,-346,-349,-329,774,-224,-228,-230,-232,776,-158,-49,-50,-51,786,-258,-259,-260,-261,-262,-263,-366,-353,-355,-356,-333,793,795,-221,796,-218,797,808,811,-360,-361,-330,-219,-222,-220,-47,-48,-126,-264,-332,-265,841,-82,]),'R_SET':([60,61,128,129,130,138,140,232,457,475,],[137,-321,-37,-38,-39,-324,-320,-319,565,-325,]),'R_AS':([61,72,73,74,75,76,81,82,83,84,85,86,88,89,90,91,92,93,94,95,101,103,104,106,107,117,170,171,175,181,182,184,185,189,199,200,213,233,247,248,249,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,294,295,296,302,316,320,364,376,377,378,379,389,390,391,392,395,396,397,398,401,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,435,437,481,482,485,493,503,534,535,537,538,539,540,541,542,543,544,545,546,547,548,549,552,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,622,688,689,690,691,697,740,741,742,743,774,776,795,796,797,],[139,139,-317,-256,-129,-130,-184,-185,-186,-187,-188,-189,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,326,351,139,-257,-318,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-131,-190,-247,-134,-233,-392,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,-392,551,139,-256,-240,-197,-199,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,623,-391,139,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-104,-223,-227,-229,-231,-113,-224,-228,-230,-232,-221,-218,-219,-222,-220,]),'S_COMA':([61,71,72,73,74,75,76,81,82,83,84,85,86,88,89,90,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,150,170,171,175,181,182,184,185,189,199,200,219,220,229,230,232,247,248,249,250,251,252,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,294,295,296,302,314,316,319,321,329,332,334,335,336,340,343,346,347,352,363,364,376,377,378,379,389,390,391,392,395,396,397,398,401,416,417,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,440,441,443,444,445,446,458,465,466,471,472,473,474,475,482,484,485,493,503,534,535,537,538,539,540,541,542,543,544,545,546,547,548,550,557,567,573,574,579,580,581,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,620,621,622,629,630,631,632,633,634,635,636,637,640,644,649,650,651,652,664,665,670,671,672,673,688,689,690,691,697,701,703,704,705,706,708,709,710,713,714,722,723,728,729,730,731,732,733,740,741,742,743,747,767,768,770,771,772,774,776,791,792,795,796,797,811,815,831,841,],[-321,149,-321,-317,-256,-129,-130,-184,-185,-186,-187,-188,-189,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,235,-323,-316,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,331,-281,349,-373,-319,-321,-257,-318,365,-133,-168,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-131,-190,-247,-134,400,-233,436,-389,-283,-282,-287,-288,-289,-284,-285,470,-86,-322,-315,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-87,-390,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,556,-71,-73,-74,-75,-76,-280,-294,-295,-372,-374,-375,-376,-325,-256,-167,-240,-197,-199,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,-388,-78,-286,365,-85,675,-347,-348,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,698,-159,-104,-70,-72,-77,-116,-117,-118,-119,-120,-121,-124,470,365,-291,-292,-293,470,-296,727,-354,-359,-359,-223,-227,-229,-231,-113,470,-115,-122,-123,-125,-127,-128,-80,-290,-79,470,-81,-362,-357,-358,-362,-345,-346,-224,-228,-230,-232,-158,-353,-355,-356,-333,794,-221,-218,-360,-361,-219,-222,-220,-126,-332,470,-82,]),'R_WHERE':([61,63,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,148,170,171,175,181,182,184,185,189,199,200,229,230,232,236,238,239,240,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,302,316,352,357,364,376,377,378,379,389,390,391,392,395,396,397,398,401,471,472,473,474,475,482,485,493,503,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,680,688,689,690,691,735,740,741,742,743,774,776,793,795,796,797,808,],[-321,143,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,-309,-323,143,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,143,-373,-319,143,143,-326,-328,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,-134,-233,-322,-327,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-372,-374,-375,-376,-325,-256,-240,-197,-199,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-331,-223,-227,-229,-231,-329,-224,-228,-230,-232,-221,-218,-330,-219,-222,-220,143,]),'R_NATURAL':([61,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,148,170,171,175,181,182,184,185,189,199,200,232,239,240,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,302,316,352,357,364,376,377,378,379,389,390,391,392,395,396,397,398,401,475,482,485,493,503,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,680,688,689,690,691,735,740,741,742,743,774,776,793,795,796,797,],[-321,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,-309,-323,242,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-319,242,-328,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,-134,-233,-322,-327,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-325,-256,-240,-197,-199,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-331,-223,-227,-229,-231,-329,-224,-228,-230,-232,-221,-218,-330,-219,-222,-220,]),'R_INNER':([61,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,148,170,171,175,181,182,184,185,189,199,200,232,239,240,242,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,302,316,352,357,364,376,377,378,379,389,390,391,392,395,396,397,398,401,475,482,485,493,503,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,680,688,689,690,691,735,740,741,742,743,774,776,793,795,796,797,],[-321,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,-309,-323,243,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-319,243,-328,243,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,-134,-233,-322,-327,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-325,-256,-240,-197,-199,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-331,-223,-227,-229,-231,-329,-224,-228,-230,-232,-221,-218,-330,-219,-222,-220,]),'R_LEFT':([61,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,148,170,171,175,181,182,184,185,189,199,200,232,239,240,242,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,302,316,352,357,364,376,377,378,379,389,390,391,392,395,396,397,398,401,475,482,485,493,503,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,680,688,689,690,691,735,740,741,742,743,774,776,793,795,796,797,],[-321,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,-309,-323,244,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-319,244,-328,244,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,-134,-233,-322,-327,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-325,-256,-240,-197,-199,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-331,-223,-227,-229,-231,-329,-224,-228,-230,-232,-221,-218,-330,-219,-222,-220,]),'R_RIGHT':([61,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,148,170,171,175,181,182,184,185,189,199,200,232,239,240,242,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,302,316,352,357,364,376,377,378,379,389,390,391,392,395,396,397,398,401,475,482,485,493,503,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,680,688,689,690,691,735,740,741,742,743,774,776,793,795,796,797,],[-321,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,-309,-323,245,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-319,245,-328,245,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,-134,-233,-322,-327,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-325,-256,-240,-197,-199,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-331,-223,-227,-229,-231,-329,-224,-228,-230,-232,-221,-218,-330,-219,-222,-220,]),'R_FULL':([61,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,148,170,171,175,181,182,184,185,189,199,200,232,239,240,242,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,302,316,352,357,364,376,377,378,379,389,390,391,392,395,396,397,398,401,475,482,485,493,503,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,680,688,689,690,691,735,740,741,742,743,774,776,793,795,796,797,],[-321,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,-309,-323,246,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-319,246,-328,246,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,-134,-233,-322,-327,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-325,-256,-240,-197,-199,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-331,-223,-227,-229,-231,-329,-224,-228,-230,-232,-221,-218,-330,-219,-222,-220,]),'R_GROUP':([61,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,148,170,171,175,181,182,184,185,189,199,200,232,234,236,237,238,239,240,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,302,316,352,353,356,357,364,376,377,378,379,389,390,391,392,395,396,397,398,401,475,482,485,493,503,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,680,688,689,690,691,735,740,741,742,743,774,776,793,795,796,797,],[-321,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,-309,-323,-342,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-319,-341,-342,355,-342,-326,-328,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,-134,-233,-322,355,355,-327,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-325,-256,-240,-197,-199,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-331,-223,-227,-229,-231,-329,-224,-228,-230,-232,-221,-218,-330,-219,-222,-220,]),'R_ORDER':([61,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,148,170,171,175,181,182,184,185,189,199,200,232,234,236,237,238,239,240,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,302,316,352,353,354,356,357,364,376,377,378,379,389,390,391,392,395,396,397,398,401,475,476,480,482,485,493,503,579,580,581,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,674,680,688,689,690,691,732,733,734,735,740,741,742,743,774,776,793,795,796,797,],[-321,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,-309,-323,-342,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-319,-341,-342,-344,-342,-326,-328,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,-134,-233,-322,-344,478,-344,-327,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-325,478,478,-256,-240,-197,-199,-350,-347,-348,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-343,-331,-223,-227,-229,-231,-345,-346,-349,-329,-224,-228,-230,-232,-221,-218,-330,-219,-222,-220,]),'R_LIMIT':([61,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,128,129,130,138,140,144,145,148,170,171,175,181,182,184,185,189,199,200,232,234,236,237,238,239,240,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,302,316,352,353,354,356,357,364,376,377,378,379,389,390,391,392,395,396,397,398,401,475,476,477,480,482,485,493,503,575,579,580,581,582,585,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,670,671,672,673,674,680,688,689,690,691,728,729,730,731,732,733,734,735,740,741,742,743,767,768,770,774,776,791,792,793,795,796,797,],[-321,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-37,-38,-39,-324,-320,-309,-323,-342,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,-319,-341,-342,-344,-342,-326,-328,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,-134,-233,-322,-344,-352,-344,-327,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-325,-352,577,577,-256,-240,-197,-199,577,-350,-347,-348,577,-321,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-351,-354,-359,-359,-343,-331,-223,-227,-229,-231,-362,-357,-358,-362,-345,-346,-349,-329,-224,-228,-230,-232,-353,-355,-356,-221,-218,-360,-361,-330,-219,-222,-220,]),'S_PUNTO':([74,117,482,],[151,207,207,]),'O_DIVISION':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,252,253,254,255,256,257,258,259,263,268,270,272,274,275,283,295,297,302,303,305,306,364,368,385,392,395,396,397,398,473,484,493,503,587,594,604,608,609,610,],[-256,156,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,156,-183,-184,-161,-182,156,-141,-142,-257,-133,156,156,156,-171,-172,-173,-174,156,156,156,156,156,156,156,156,-190,156,-134,156,156,156,-132,156,156,-176,-135,-136,-137,-138,156,156,156,156,156,156,156,-139,-140,-149,]),'O_EXPONENTE':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,252,253,254,255,256,257,258,259,263,268,270,272,274,275,283,295,297,302,303,305,306,364,368,385,392,395,396,397,398,473,484,493,503,587,594,604,608,609,610,],[-256,157,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,157,157,-184,-161,157,157,-141,-142,-257,-133,157,157,157,157,157,-173,157,157,157,157,157,157,157,157,157,-190,157,-134,157,157,157,-132,157,157,-176,-135,-136,-137,-138,157,157,157,157,157,157,157,-139,-140,-149,]),'O_MODULAR':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,252,253,254,255,256,257,258,259,263,268,270,272,274,275,283,295,297,302,303,305,306,364,368,385,392,395,396,397,398,473,484,493,503,587,594,604,608,609,610,],[-256,158,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,158,-183,-184,-161,-182,158,-141,-142,-257,-133,158,158,158,-171,-172,-173,-174,158,158,158,158,158,158,158,158,-190,158,-134,158,158,158,-132,158,158,-176,-135,-136,-137,-138,158,158,158,158,158,158,158,-139,-140,-149,]),'OC_CONCATENAR':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,252,253,254,255,256,257,258,259,263,268,270,272,274,275,283,295,297,302,303,305,306,364,368,385,392,395,396,397,398,473,484,493,503,587,594,604,608,609,610,],[-256,159,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,159,-183,-184,-161,-182,159,-141,-142,-257,-133,159,-169,-170,-171,-172,-173,-174,-175,159,159,159,159,159,159,159,-190,159,-134,159,159,159,-132,159,159,-176,-135,-136,-137,-138,159,159,159,159,159,159,159,-139,-140,-149,]),'R_IN':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,161,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,],[-256,160,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,261,160,-183,-184,-161,-182,160,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,]),'OL_MENORQUE':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,655,656,657,658,659,660,661,662,],[-256,162,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,162,-183,-184,-161,-182,162,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,715,-266,-267,-268,-269,-270,-271,-272,]),'OL_MAYORQUE':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,655,656,657,658,659,660,661,662,],[-256,163,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,163,-183,-184,-161,-182,163,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,716,-266,-267,-268,-269,-270,-271,-272,]),'OL_MAYORIGUALQUE':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,655,656,657,658,659,660,661,662,],[-256,164,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,164,-183,-184,-161,-182,164,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,717,-266,-267,-268,-269,-270,-271,-272,]),'OL_MENORIGUALQUE':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,655,656,657,658,659,660,661,662,],[-256,165,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,165,-183,-184,-161,-182,165,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,718,-266,-267,-268,-269,-270,-271,-272,]),'S_IGUAL':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,231,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,450,534,535,537,538,539,540,541,542,543,544,545,546,547,548,560,608,609,610,622,655,656,657,658,659,660,661,662,697,820,826,837,839,],[-256,166,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,166,-183,-184,-161,-182,166,-141,-142,350,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,563,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,646,-139,-140,-149,-104,719,-266,-267,-268,-269,-270,-271,-272,-113,-402,838,845,-401,]),'OL_DISTINTODE':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,655,656,657,658,659,660,661,662,],[-256,167,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,167,-183,-184,-161,-182,167,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,720,-266,-267,-268,-269,-270,-271,-272,]),'R_IS':([74,75,76,81,82,83,84,85,86,88,89,90,91,92,93,94,95,101,103,104,106,107,117,170,171,175,179,180,181,182,184,185,189,191,199,200,234,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,301,302,316,364,376,377,378,379,389,390,391,392,395,396,397,398,401,485,493,503,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,655,656,657,658,659,660,661,662,688,689,690,691,734,735,740,741,742,743,774,776,795,796,797,],[-256,168,176,-184,-185,-186,-187,-188,-189,-249,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-202,-203,-248,168,176,-183,-184,-161,-182,176,168,-141,-142,176,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,176,176,-250,-251,-252,-190,-247,176,-134,-233,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-240,-197,-199,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,721,-266,-267,-268,-269,-270,-271,-272,-223,-227,-229,-231,176,176,-224,-228,-230,-232,-221,-218,-219,-222,-220,]),'R_BETWEEN':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,161,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,],[-256,169,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,262,169,-183,-184,-161,-182,169,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,]),'R_ISNULL':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,],[-256,170,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,170,-183,-184,-161,-182,170,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,]),'R_NOTNULL':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,],[-256,171,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,171,-183,-184,-161,-182,171,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,]),'OL_ESIGUAL':([74,75,81,82,83,84,85,86,89,90,91,92,93,94,95,101,103,104,117,179,181,182,184,185,191,199,200,248,251,253,254,255,256,257,258,259,295,302,364,392,395,396,397,398,608,609,610,],[-256,172,-184,-185,-186,-187,-188,-189,-160,-161,-162,-163,-164,-165,-166,-157,-155,-156,-256,172,-183,-184,-161,-182,172,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,-190,-134,-132,-176,-135,-136,-137,-138,-139,-140,-149,]),'R_AND':([76,82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,170,171,175,180,181,182,184,185,189,199,200,234,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,283,288,289,290,291,292,295,296,301,302,316,364,368,376,377,378,379,385,389,390,391,392,395,396,397,398,401,485,493,503,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,688,689,690,691,734,735,740,741,742,743,774,776,795,796,797,],[173,-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-202,-203,-248,173,-183,-184,-161,-182,173,-141,-142,173,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,384,-244,-245,-250,-251,-252,-190,-247,173,-134,-233,-132,487,-208,-209,-210,-211,504,-253,-254,-255,-176,-135,-136,-137,-138,-239,-240,-197,-199,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-223,-227,-229,-231,173,173,-224,-228,-230,-232,-221,-218,-219,-222,-220,]),'R_WHEN':([80,89,91,92,93,94,95,184,186,187,299,508,],[188,-160,-162,-163,-164,-165,-166,-161,188,-178,-177,-179,]),'R_THEN':([82,83,84,85,86,88,89,91,92,93,94,95,101,103,104,106,107,117,170,171,175,181,182,184,185,189,199,200,206,248,251,253,254,255,256,257,258,259,263,268,270,272,274,275,279,280,281,282,288,289,290,291,292,295,296,301,302,316,364,376,377,378,379,389,390,391,392,395,396,397,398,401,485,493,503,586,587,588,589,590,591,592,594,604,605,606,607,608,609,610,688,689,690,691,740,741,742,743,746,774,776,795,796,797,],[-185,-186,-187,-188,-189,-249,-160,-162,-163,-164,-165,-166,-157,-155,-156,-242,-243,-256,-202,-203,-248,-183,-184,-161,-182,-246,-141,-142,317,-257,-133,-169,-170,-171,-172,-173,-174,-175,-191,-192,-193,-194,-195,-196,-204,-205,-206,-207,-244,-245,-250,-251,-252,-190,-247,394,-134,-233,-132,-208,-209,-210,-211,-253,-254,-255,-176,-135,-136,-137,-138,-239,-240,-197,-199,-241,-200,-212,-213,-214,-215,-217,-198,-201,-225,-226,-216,-139,-140,-149,-223,-227,-229,-231,-224,-228,-230,-232,778,-221,-218,-219,-222,-220,]),'R_ANY':([82,83,84,85,86,89,91,92,93,94,95,101,103,104,117,162,163,164,165,167,170,171,172,181,182,184,185,199,200,248,251,253,254,255,256,257,258,259,279,280,281,282,295,302,364,376,377,378,379,392,395,396,397,398,493,503,587,594,604,608,609,610,],[-185,-186,-187,-188,-189,-160,-162,-163,-164,-165,-166,-157,-155,-156,-256,266,266,266,266,266,266,266,266,-183,-184,-161,-182,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,266,266,266,266,-190,-134,-132,266,266,266,266,-176,-135,-136,-137,-138,266,266,266,266,266,-139,-140,-149,]),'R_SOME':([82,83,84,85,86,89,91,92,93,94,95,101,103,104,117,162,163,164,165,167,170,171,172,181,182,184,185,199,200,248,251,253,254,255,256,257,258,259,279,280,281,282,295,302,364,376,377,378,379,392,395,396,397,398,493,503,587,594,604,608,609,610,],[-185,-186,-187,-188,-189,-160,-162,-163,-164,-165,-166,-157,-155,-156,-256,267,267,267,267,267,267,267,267,-183,-184,-161,-182,-141,-142,-257,-133,-169,-170,-171,-172,-173,-174,-175,267,267,267,267,-190,-134,-132,267,267,267,267,-176,-135,-136,-137,-138,267,267,267,267,267,-139,-140,-149,]),'R_ELSE':([89,91,92,93,94,95,184,186,187,299,402,403,414,508,518,523,524,525,526,527,528,529,530,531,532,696,749,779,825,832,848,],[-160,-162,-163,-164,-165,-166,-161,300,-178,-177,519,-24,-35,-179,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-386,-385,-415,-387,-416,]),'R_DEFAULT':([89,91,92,93,94,95,184,350,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,534,535,537,538,539,540,541,542,543,544,545,546,547,548,557,565,622,631,632,633,634,635,636,637,640,697,703,704,705,706,708,709,811,820,826,839,],[-160,-162,-163,-164,-165,-166,-161,474,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,638,638,-104,638,-116,-117,-118,-119,-120,-121,-124,-113,-115,-122,-123,-125,-127,-128,-126,-402,836,-401,]),'R_PRIMARY':([89,91,92,93,94,95,184,221,323,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,534,535,537,538,539,540,541,542,543,544,545,546,547,548,556,557,622,631,632,633,634,635,636,637,640,697,703,704,705,706,708,709,811,],[-160,-162,-163,-164,-165,-166,-161,338,338,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,338,642,-104,642,-116,-117,-118,-119,-120,-121,-124,-113,-115,-122,-123,-125,-127,-128,-126,]),'R_REFERENCES':([89,91,92,93,94,95,184,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,534,535,537,538,539,540,541,542,543,544,545,546,547,548,557,622,631,632,633,634,635,636,637,640,697,703,704,705,706,708,709,765,811,],[-160,-162,-163,-164,-165,-166,-161,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,643,-104,643,-116,-117,-118,-119,-120,-121,-124,-113,-115,-122,-123,-125,-127,-128,790,-126,]),'R_CONSTRAINT':([89,91,92,93,94,95,184,221,222,323,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,534,535,537,538,539,540,541,542,543,544,545,546,547,548,556,557,622,631,632,633,634,635,636,637,640,697,703,704,705,706,708,709,811,],[-160,-162,-163,-164,-165,-166,-161,339,341,339,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,339,339,-104,339,-116,-117,-118,-119,-120,-121,-124,-113,-115,-122,-123,-125,-127,-128,-126,]),'R_CHECK':([89,91,92,93,94,95,184,221,323,337,416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,447,464,534,535,537,538,539,540,541,542,543,544,545,546,547,548,556,557,622,631,632,633,634,635,636,637,640,641,697,703,704,705,706,708,709,811,],[-160,-162,-163,-164,-165,-166,-161,-84,-84,461,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,461,-83,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,-84,-84,-104,-84,-116,-117,-118,-119,-120,-121,-124,707,-113,-115,-122,-123,-125,-127,-128,-126,]),'R_RENAME':([127,128,129,130,131,331,],[216,-37,-38,-39,223,223,]),'R_OWNER':([127,128,129,130,325,],[217,-37,-38,-39,450,]),'R_ADD':([128,129,130,131,331,],[-37,-38,-39,221,221,]),'R_ON':([128,129,130,140,209,232,248,481,482,584,],[-37,-38,-39,-320,322,-319,-257,-321,-256,678,]),'R_USING':([128,129,130,140,232,248,439,481,482,584,],[-37,-38,-39,-320,-319,-257,554,-321,-256,679,]),'R_MODE':([128,129,130,325,449,561,562,647,648,],[-37,-38,-39,-66,560,-62,-63,-64,-65,]),'R_VALUES':([135,227,469,],[-370,345,-369,]),'R_UNKNOWN':([168,176,278,293,],[282,292,379,391,]),'R_SYMMETRIC':([169,],[284,]),'R_YEAR':([196,434,],[308,543,]),'R_MONTH':([196,434,],[309,544,]),'R_DAY':([196,434,],[310,545,]),'R_HOUR':([196,434,],[311,546,]),'R_MINUTE':([196,434,],[312,547,]),'R_SECOND':([196,434,],[313,548,]),'R_TO':([216,217,467,],[327,328,572,]),'R_COLUMN':([218,221,222,223,],[330,333,342,344,]),'R_FOREIGN':([221,323,337,447,464,556,],[-84,-84,462,462,-83,-84,]),'R_JOIN':([241,243,244,245,246,359,360,361,362,],[358,-334,-335,-337,-339,483,-336,-338,-340,]),'R_OUTER':([244,245,246,],[360,361,362,]),'R_HAVING':([248,482,579,580,581,732,733,],[-257,-256,676,-347,-348,-345,-346,]),'R_ASC':([248,347,482,574,672,673,701,],[-257,-86,-256,-85,729,729,754,]),'R_DESC':([248,347,482,574,672,673,701,],[-257,-86,-256,-85,730,730,753,]),'T_SMALLINT':([318,438,442,459,566,783,805,807,],[418,418,418,418,418,-400,418,-399,]),'T_INTEGER':([318,438,442,459,566,783,805,807,],[419,419,419,419,419,-400,419,-399,]),'T_BIGINT':([318,438,442,459,566,783,805,807,],[420,420,420,420,420,-400,420,-399,]),'T_REAL':([318,438,442,459,566,783,805,807,],[421,421,421,421,421,-400,421,-399,]),'T_DOUBLE':([318,438,442,459,566,783,805,807,],[422,422,422,422,422,-400,422,-399,]),'T_MONEY':([318,438,442,459,566,783,805,807,],[423,423,423,423,423,-400,423,-399,]),'T_TEXT':([318,438,442,459,566,783,805,807,],[424,424,424,424,424,-400,424,-399,]),'T_BOOLEAN':([318,438,442,459,566,783,805,807,],[425,425,425,425,425,-400,425,-399,]),'T_DATE':([318,400,438,442,459,566,783,805,807,],[427,513,427,427,427,427,-400,427,-399,]),'T_TIME':([318,400,438,442,459,566,783,805,807,],[428,514,428,428,428,428,-400,428,-399,]),'T_DECIMAL':([318,438,442,459,566,783,805,807,],[429,429,429,429,429,-400,429,-399,]),'T_NUMERIC':([318,438,442,459,566,783,805,807,],[430,430,430,430,430,-400,430,-399,]),'T_VARCHAR':([318,438,442,459,566,783,805,807,],[431,431,431,431,431,-400,431,-399,]),'T_CHARACTER':([318,438,442,459,566,783,805,807,],[432,432,432,432,432,-400,432,-399,]),'T_CHAR':([318,438,442,459,566,783,805,807,],[433,433,433,433,433,-400,433,-399,]),'R_RETURNS':([320,435,],[438,438,]),'R_ENUM':([326,],[451,]),'R_CURRENT_USER':([328,],[455,]),'R_SESSION_USER':([328,],[456,]),'R_KEY':([338,462,642,],[463,570,708,]),'R_NULLS':([347,574,701,752,753,754,],[-86,-85,-52,785,-50,-51,]),'R_BY':([355,478,],[479,578,]),'R_ELSIF':([402,403,414,518,520,521,523,524,525,526,527,528,529,530,531,532,617,696,749,779,798,825,832,848,],[522,-24,-35,-23,522,-21,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-20,-36,-386,-385,-22,-415,-387,-416,]),'S_DOSPUNTOS':([416,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,534,535,537,538,539,540,541,542,543,544,545,546,547,548,622,697,820,826,839,],[-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-114,-114,-114,-114,-114,-112,-92,-99,-100,-101,-102,-114,-103,-105,-106,-107,-108,-109,-110,-111,-104,-113,-402,837,-401,]),'T_PRECISION':([422,],[534,]),'T_VARYING':([432,],[540,]),'S_DOLAR':([551,623,624,699,825,833,],[624,699,700,748,833,842,]),'R_HASH':([554,],[626,]),'R_INHERITS':([555,],[628,]),'R_OFFSET':([668,669,],[725,725,]),'R_DECLARE':([700,748,],[751,751,]),'R_BEGIN':([700,748,750,781,782,804,840,843,],[-394,-394,780,-393,-396,-395,-398,-397,]),'R_FIRST':([769,785,],[791,809,]),'R_LAST':([769,785,],[792,810,]),'R_ALIAS':([783,],[806,]),'R_CONSTANT':([783,],[807,]),'R_FOR':([806,],[821,]),'IDEspecial':([821,],[830,]),'R_LANGUAGE':([842,],[846,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'stmtList':([0,],[2,]),'stmt':([0,2,780,799,],[3,28,801,801,]),'createStmt':([0,2,317,402,519,616,778,780,798,799,],[4,4,404,404,404,404,404,4,404,4,]),'showStmt':([0,2,317,402,519,616,778,780,798,799,],[5,5,405,405,405,405,405,5,405,5,]),'alterStmt':([0,2,317,402,519,616,778,780,798,799,],[6,6,406,406,406,406,406,6,406,6,]),'dropStmt':([0,2,317,402,519,616,778,780,798,799,],[7,7,407,407,407,407,407,7,407,7,]),'insertStmt':([0,2,317,402,519,616,778,780,798,799,],[8,8,408,408,408,408,408,8,408,8,]),'updateStmt':([0,2,317,402,519,616,778,780,798,799,],[9,9,409,409,409,409,409,9,409,9,]),'deleteStmt':([0,2,317,402,519,616,778,780,798,799,],[10,10,410,410,410,410,410,10,410,10,]),'truncateStmt':([0,2,317,402,519,616,778,780,798,799,],[11,11,411,411,411,411,411,11,411,11,]),'useStmt':([0,2,317,402,519,616,778,780,798,799,],[12,12,412,412,412,412,412,12,412,12,]),'selectStmt':([0,2,22,62,77,111,113,114,177,198,260,317,367,369,370,371,372,373,386,387,388,402,499,500,501,502,519,595,596,597,598,616,682,692,737,739,745,778,780,798,799,],[13,13,59,141,178,202,203,204,59,315,366,413,486,488,489,490,491,492,505,506,507,413,599,600,601,602,413,684,685,686,687,413,738,744,773,775,777,413,13,413,13,]),'functionStmt':([0,2,317,402,519,616,778,780,798,799,],[14,14,414,414,414,414,414,14,414,14,]),'ifStmt':([0,2,317,402,519,616,778,780,798,799,],[15,15,415,415,415,415,415,15,415,15,]),'createBody':([17,],[44,]),'createOpts':([17,],[46,]),'unique_index':([17,],[47,]),'orReplace':([17,],[49,]),'fromBody':([23,64,235,],[60,145,352,]),'fromCl':([24,69,147,],[63,148,236,]),'tableOpt':([25,],[65,]),'selectParams':([27,68,],[69,147,]),'selectList':([27,68,],[71,71,]),'selectListParams':([27,68,149,],[72,72,247,]),'expresion':([27,43,68,149,618,803,835,],[73,116,73,73,695,819,844,]),'datatype':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,],[75,75,75,179,181,185,191,191,75,252,253,254,255,256,257,258,259,263,268,270,272,274,275,283,191,191,179,297,191,179,303,305,306,368,385,473,484,493,503,252,587,594,604,252,75,191,191,75,75,]),'expBool':([27,43,68,77,87,143,149,173,174,177,188,190,618,676,678,803,835,],[76,76,76,180,189,234,76,288,289,180,301,180,76,734,735,76,76,]),'columnName':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,358,365,374,384,399,468,479,483,487,494,504,564,578,618,675,676,678,727,736,794,803,835,],[81,81,81,81,182,182,81,81,81,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,81,81,81,182,81,81,182,182,182,182,182,182,481,182,182,182,510,182,580,585,182,182,182,182,672,81,732,81,81,672,771,815,81,81,]),'literal':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,300,350,365,374,384,394,468,487,494,504,536,564,618,638,676,678,698,803,835,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,393,82,82,82,82,508,82,82,82,82,621,82,82,704,82,82,747,82,82,]),'funcCall':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'extract':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'datePart':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'current':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,468,487,494,504,564,618,676,678,803,835,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'boolean':([27,43,68,77,87,143,149,173,174,177,188,190,618,676,678,803,835,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'timeStamp':([27,43,68,77,78,79,87,143,149,152,153,154,155,156,157,158,159,162,163,164,165,166,167,169,173,174,177,183,188,190,193,194,195,262,284,350,365,374,384,399,468,487,494,504,564,618,676,678,803,835,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,509,101,101,101,101,101,101,101,101,101,101,]),'expComp':([27,43,68,77,87,143,149,173,174,177,188,190,618,676,678,803,835,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'expSubq':([27,43,68,77,87,143,149,173,174,177,188,190,618,676,678,803,835,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'stringExp':([27,43,68,77,87,143,149,173,174,177,188,190,618,676,678,803,835,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'allOpt':([39,40,41,],[111,113,114,]),'ifNotExists':([48,50,122,],[120,123,212,]),'likeOpt':([53,],[125,]),'idOrString':([54,55,61,72,120,132,134,139,212,247,327,328,351,481,585,],[127,131,140,140,210,224,226,232,325,140,452,454,475,140,140,]),'ifExists':([56,57,],[132,134,]),'optAlias':([61,72,247,481,585,],[138,150,363,584,680,]),'whereCl':([63,148,229,236,238,808,],[142,237,348,353,356,822,]),'tableExp':([64,],[144,]),'optBoolPredicate':([76,180,189,234,288,289,301,734,735,],[175,175,175,175,175,175,175,175,175,]),'caseList':([80,],[186,]),'caseWhen':([80,186,],[187,299,]),'alterDb':([127,],[215,]),'alterTableList':([131,],[219,]),'alterTable':([131,331,],[220,458,]),'paramsColumn':([135,],[227,]),'updateCols':([137,],[229,]),'updateVals':([137,349,],[230,471,]),'joinList':([148,],[238,]),'joinList2':([148,],[239,]),'joinCl':([148,239,],[240,357,]),'joinOpt':([148,239,242,],[241,241,359,]),'paramsList':([152,468,564,],[250,573,649,]),'subqValues':([162,163,164,165,167,170,171,172,279,280,281,282,376,377,378,379,493,503,587,594,604,],[264,269,271,273,276,285,286,287,380,381,382,383,495,496,497,498,593,603,681,683,693,]),'optElse':([186,],[298,]),'optsExtract':([196,],[307,]),'params_list':([208,],[319,]),'param_item':([208,436,],[321,550,]),'alterAlter':([218,],[329,]),'alterAdd':([221,],[332,]),'createConstraint':([221,323,556,],[334,443,443,]),'createPrimary':([221,323,556,],[335,445,445,]),'createForeign':([221,323,556,],[336,446,446,]),'constrName':([221,323,556,557,631,],[337,447,447,641,641,]),'alterDrop':([222,],[340,]),'alterRename':([223,],[343,]),'idList':([228,558,571,625,663,824,],[346,644,664,701,722,831,]),'groupByCl':([237,353,356,],[354,476,480,]),'List_body':([317,519,778,],[402,616,798,]),'body':([317,402,519,616,778,798,],[403,518,403,518,403,518,]),'types':([318,438,442,459,566,805,],[417,552,557,567,652,820,]),'returnsStmt':([320,435,],[437,549,]),'createTableList':([323,],[440,]),'createTable':([323,556,],[441,629,]),'createUnique':([323,556,],[444,444,]),'createOwner':([325,],[449,]),'ownerOPts':([328,],[453,]),'updateExp':([350,],[472,]),'orderByCl':([354,476,480,],[477,575,582,]),'dateSource':([400,],[511,]),'else_':([402,],[517,]),'Lista_elsif_':([402,],[520,]),'elsif_':([402,520,],[521,617,]),'optParams':([429,430,431,432,433,540,],[535,537,538,539,541,622,]),'intervalFields':([434,],[542,]),'using_hash_index':([439,],[553,]),'createMode':([449,],[559,]),'limitCl':([477,480,575,582,],[576,583,667,677,]),'groupList':([479,],[579,]),'literalList':([536,],[620,]),'inheritsOpt':([555,],[627,]),'createColumns':([557,],[630,]),'colOptionsList':([557,],[631,]),'colOptions':([557,631,],[632,703,]),'defaultVal':([557,565,631,],[633,651,633,]),'nullOpt':([557,565,631,],[634,650,634,]),'constraintOpt':([557,631,],[635,635,]),'primaryOpt':([557,631,],[636,636,]),'referencesOpt':([557,631,],[637,637,]),'booleanCheck':([569,756,],[654,787,]),'idOrLiteral':([569,715,716,717,718,719,720,756,788,813,],[655,757,758,759,760,761,762,655,812,823,]),'orderList':([578,],[670,]),'orderByElem':([578,727,],[671,767,]),'havingCl':([579,],[674,]),'offsetLimit':([668,669,],[724,726,]),'orderOpts':([672,673,],[728,731,]),'bloqueFunction':([700,748,],[749,779,]),'declareStmt':([700,748,],[750,750,]),'indexasc_desc':([701,],[752,]),'orderNull':([728,731,],[768,770,]),'nameList':([736,],[772,]),'declaracion_list':([751,],[781,]),'declaracion_item':([751,781,],[782,804,]),'indexNullS':([752,],[784,]),'beginStmt':([780,],[799,]),'beginItem':([780,799,],[800,817,]),'returnStmt':([780,799,],[802,802,]),'constant_opt':([783,],[805,]),'null_opt':([820,],[826,]),'alias_declaracion':([821,],[829,]),'labelEnd':([825,],[832,]),'default_item':([826,],[834,]),'default_opt':([826,],[835,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> stmtList','init',1,'p_init','grammar.py',54),
  ('stmtList -> stmtList stmt','stmtList',2,'p_stmt_list','grammar.py',62),
  ('stmtList -> stmt','stmtList',1,'p_stmt_u','grammar.py',69),
  ('stmt -> createStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',76),
  ('stmt -> showStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',77),
  ('stmt -> alterStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',78),
  ('stmt -> dropStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',79),
  ('stmt -> insertStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',80),
  ('stmt -> updateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',81),
  ('stmt -> deleteStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',82),
  ('stmt -> truncateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',83),
  ('stmt -> useStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',84),
  ('stmt -> selectStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',85),
  ('stmt -> functionStmt','stmt',1,'p_stmt','grammar.py',86),
  ('stmt -> ifStmt R_END R_IF S_PUNTOCOMA','stmt',4,'p_stmt','grammar.py',87),
  ('ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_','ifStmt',7,'p_ifStmt','grammar.py',98),
  ('else_ -> R_ELSE List_body','else_',2,'p_els_','grammar.py',105),
  ('else_ -> Lista_elsif_','else_',1,'p_els_','grammar.py',106),
  ('else_ -> <empty>','else_',0,'p_els_','grammar.py',107),
  ('Lista_elsif_ -> Lista_elsif_ elsif_','Lista_elsif_',2,'p_Lista_elsif_','grammar.py',122),
  ('Lista_elsif_ -> elsif_','Lista_elsif_',1,'p_aux_Lista_elsif_','grammar.py',130),
  ('elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body','elsif_',6,'p_elsif_','grammar.py',136),
  ('List_body -> List_body body','List_body',2,'p_lista_cuerpo','grammar.py',151),
  ('List_body -> body','List_body',1,'p_aux_lista_cuerpo','grammar.py',159),
  ('body -> createStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',166),
  ('body -> showStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',167),
  ('body -> alterStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',168),
  ('body -> dropStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',169),
  ('body -> insertStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',170),
  ('body -> updateStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',171),
  ('body -> deleteStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',172),
  ('body -> truncateStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',173),
  ('body -> useStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',174),
  ('body -> selectStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',175),
  ('body -> functionStmt','body',1,'p_body','grammar.py',176),
  ('body -> ifStmt R_END R_IF S_PUNTOCOMA','body',4,'p_body','grammar.py',177),
  ('idOrString -> ID','idOrString',1,'p_id_string','grammar.py',192),
  ('idOrString -> STRING','idOrString',1,'p_id_string','grammar.py',193),
  ('idOrString -> CHARACTER','idOrString',1,'p_id_string','grammar.py',194),
  ('createStmt -> R_CREATE createBody','createStmt',2,'p_createstmt','grammar.py',201),
  ('createBody -> createOpts','createBody',1,'p_createbody','grammar.py',208),
  ('createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl','createOpts',12,'p_createopts_index','grammar.py',215),
  ('unique_index -> R_UNIQUE','unique_index',1,'p_unique_index','grammar.py',221),
  ('unique_index -> <empty>','unique_index',0,'p_unique_index','grammar.py',222),
  ('using_hash_index -> R_USING R_HASH','using_hash_index',2,'p_using_hash_index','grammar.py',232),
  ('using_hash_index -> <empty>','using_hash_index',0,'p_using_hash_index','grammar.py',233),
  ('indexNullS -> R_NULLS R_FIRST','indexNullS',2,'p_orderNullS','grammar.py',243),
  ('indexNullS -> R_NULLS R_LAST','indexNullS',2,'p_orderNullS','grammar.py',244),
  ('indexNullS -> <empty>','indexNullS',0,'p_orderNullS','grammar.py',245),
  ('indexasc_desc -> R_DESC','indexasc_desc',1,'p_indexasc_desc','grammar.py',257),
  ('indexasc_desc -> R_ASC','indexasc_desc',1,'p_indexasc_desc','grammar.py',258),
  ('indexasc_desc -> <empty>','indexasc_desc',0,'p_indexasc_desc','grammar.py',259),
  ('createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt','createOpts',7,'p_createopts_table','grammar.py',272),
  ('createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode','createOpts',6,'p_createopts_db','grammar.py',279),
  ('orReplace -> R_OR R_REPLACE','orReplace',2,'p_replace_true','grammar.py',287),
  ('orReplace -> <empty>','orReplace',0,'p_replace_false','grammar.py',295),
  ('createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER','createOpts',8,'p_createopts_type','grammar.py',303),
  ('ifNotExists -> R_IF R_NOT R_EXISTS','ifNotExists',3,'p_ifnotexists_true','grammar.py',311),
  ('ifNotExists -> <empty>','ifNotExists',0,'p_ifnotexists_false','grammar.py',319),
  ('inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER','inheritsOpt',4,'p_inheritsOpt','grammar.py',327),
  ('inheritsOpt -> <empty>','inheritsOpt',0,'p_inheritsOpt_none','grammar.py',335),
  ('createOwner -> R_OWNER ID','createOwner',2,'p_createowner','grammar.py',343),
  ('createOwner -> R_OWNER STRING','createOwner',2,'p_createowner','grammar.py',344),
  ('createOwner -> R_OWNER S_IGUAL ID','createOwner',3,'p_createowner_asg','grammar.py',352),
  ('createOwner -> R_OWNER S_IGUAL STRING','createOwner',3,'p_createowner_asg','grammar.py',353),
  ('createOwner -> <empty>','createOwner',0,'p_createowner_none','grammar.py',361),
  ('createMode -> R_MODE INTEGER','createMode',2,'p_createmode','grammar.py',369),
  ('createMode -> R_MODE S_IGUAL INTEGER','createMode',3,'p_createMode_asg','grammar.py',377),
  ('createMode -> <empty>','createMode',0,'p_createmode_none','grammar.py',385),
  ('createTableList -> createTableList S_COMA createTable','createTableList',3,'p_createtable_list','grammar.py',392),
  ('createTableList -> createTable','createTableList',1,'p_createtable_u','grammar.py',399),
  ('createTable -> ID types createColumns','createTable',3,'p_createTable_id','grammar.py',406),
  ('createTable -> createConstraint','createTable',1,'p_createTable','grammar.py',414),
  ('createTable -> createUnique','createTable',1,'p_createTable','grammar.py',415),
  ('createTable -> createPrimary','createTable',1,'p_createTable','grammar.py',416),
  ('createTable -> createForeign','createTable',1,'p_createTable','grammar.py',417),
  ('createColumns -> colOptionsList','createColumns',1,'p_createColumNs','grammar.py',425),
  ('createColumns -> <empty>','createColumns',0,'p_createColumNs_none','grammar.py',433),
  ('createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','createConstraint',5,'p_createConstraint','grammar.py',440),
  ('createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER','createUnique',4,'p_createUnique','grammar.py',446),
  ('createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER','createPrimary',5,'p_createPrimary','grammar.py',452),
  ('createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER','createForeign',11,'p_createForeign','grammar.py',459),
  ('constrName -> R_CONSTRAINT ID','constrName',2,'p_constrName','grammar.py',467),
  ('constrName -> <empty>','constrName',0,'p_constrName_none','grammar.py',475),
  ('idList -> idList S_COMA ID','idList',3,'p_id_list','grammar.py',482),
  ('idList -> ID','idList',1,'p_id_u','grammar.py',489),
  ('types -> ID','types',1,'p_types','grammar.py',496),
  ('types -> T_SMALLINT','types',1,'p_types_simple','grammar.py',504),
  ('types -> T_INTEGER','types',1,'p_types_simple','grammar.py',505),
  ('types -> T_BIGINT','types',1,'p_types_simple','grammar.py',506),
  ('types -> T_REAL','types',1,'p_types_simple','grammar.py',507),
  ('types -> T_DOUBLE T_PRECISION','types',2,'p_types_simple','grammar.py',508),
  ('types -> T_MONEY','types',1,'p_types_simple','grammar.py',509),
  ('types -> T_TEXT','types',1,'p_types_simple','grammar.py',510),
  ('types -> T_BOOLEAN','types',1,'p_types_simple','grammar.py',511),
  ('types -> R_TIMESTAMP','types',1,'p_types_simple','grammar.py',512),
  ('types -> T_DATE','types',1,'p_types_simple','grammar.py',513),
  ('types -> T_TIME','types',1,'p_types_simple','grammar.py',514),
  ('types -> T_DECIMAL optParams','types',2,'p_types_params','grammar.py',523),
  ('types -> T_NUMERIC optParams','types',2,'p_types_params','grammar.py',524),
  ('types -> T_VARCHAR optParams','types',2,'p_types_params','grammar.py',525),
  ('types -> T_CHARACTER optParams','types',2,'p_types_params','grammar.py',526),
  ('types -> T_CHAR optParams','types',2,'p_types_params','grammar.py',527),
  ('types -> T_CHARACTER T_VARYING optParams','types',3,'p_types_var','grammar.py',535),
  ('types -> R_INTERVAL intervalFields','types',2,'p_timeType_interval','grammar.py',543),
  ('intervalFields -> R_YEAR','intervalFields',1,'p_intervalFields','grammar.py',551),
  ('intervalFields -> R_MONTH','intervalFields',1,'p_intervalFields','grammar.py',552),
  ('intervalFields -> R_DAY','intervalFields',1,'p_intervalFields','grammar.py',553),
  ('intervalFields -> R_HOUR','intervalFields',1,'p_intervalFields','grammar.py',554),
  ('intervalFields -> R_MINUTE','intervalFields',1,'p_intervalFields','grammar.py',555),
  ('intervalFields -> R_SECOND','intervalFields',1,'p_intervalFields','grammar.py',556),
  ('intervalFields -> <empty>','intervalFields',0,'p_intervalFields_none','grammar.py',564),
  ('optParams -> S_PARIZQ literalList S_PARDER','optParams',3,'p_optParams','grammar.py',571),
  ('optParams -> <empty>','optParams',0,'p_optParams_none','grammar.py',577),
  ('colOptionsList -> colOptionsList colOptions','colOptionsList',2,'p_colOptions_list','grammar.py',583),
  ('colOptionsList -> colOptions','colOptionsList',1,'p_colOptions_u','grammar.py',590),
  ('colOptions -> defaultVal','colOptions',1,'p_colOptions','grammar.py',597),
  ('colOptions -> nullOpt','colOptions',1,'p_colOptions','grammar.py',598),
  ('colOptions -> constraintOpt','colOptions',1,'p_colOptions','grammar.py',599),
  ('colOptions -> primaryOpt','colOptions',1,'p_colOptions','grammar.py',600),
  ('colOptions -> referencesOpt','colOptions',1,'p_colOptions','grammar.py',601),
  ('defaultVal -> R_DEFAULT literal','defaultVal',2,'p_defaultVal','grammar.py',609),
  ('nullOpt -> R_NOT R_NULL','nullOpt',2,'p_nullOpt_true','grammar.py',616),
  ('nullOpt -> R_NULL','nullOpt',1,'p_nullOpt_false','grammar.py',624),
  ('constraintOpt -> constrName R_UNIQUE','constraintOpt',2,'p_constraintOpt_unique','grammar.py',635),
  ('constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','constraintOpt',5,'p_constraintOpt_check','grammar.py',643),
  ('primaryOpt -> R_PRIMARY R_KEY','primaryOpt',2,'p_primaryOpt','grammar.py',650),
  ('referencesOpt -> R_REFERENCES ID','referencesOpt',2,'p_referencesOpt','grammar.py',656),
  ('expresion -> datatype','expresion',1,'p_expresion','grammar.py',667),
  ('expresion -> expBool','expresion',1,'p_expresion','grammar.py',668),
  ('expresion -> S_PARIZQ selectStmt S_PARDER','expresion',3,'p_expresion_','grammar.py',676),
  ('funcCall -> ID S_PARIZQ paramsList S_PARDER','funcCall',4,'p_funcCall_1','grammar.py',684),
  ('funcCall -> ID S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',692),
  ('funcCall -> R_NOW S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',693),
  ('funcCall -> R_COUNT S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',701),
  ('funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',702),
  ('funcCall -> R_SUM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',703),
  ('funcCall -> R_PROM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',704),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER','extract',6,'p_extract_1','grammar.py',714),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER','extract',6,'p_extract_2','grammar.py',725),
  ('timeStamp -> R_TIMESTAMP STRING','timeStamp',2,'p_timeStamp','grammar.py',735),
  ('timeStamp -> R_INTERVAL STRING','timeStamp',2,'p_timeStamp','grammar.py',736),
  ('optsExtract -> R_YEAR','optsExtract',1,'p_optsExtract','grammar.py',744),
  ('optsExtract -> R_MONTH','optsExtract',1,'p_optsExtract','grammar.py',745),
  ('optsExtract -> R_DAY','optsExtract',1,'p_optsExtract','grammar.py',746),
  ('optsExtract -> R_HOUR','optsExtract',1,'p_optsExtract','grammar.py',747),
  ('optsExtract -> R_MINUTE','optsExtract',1,'p_optsExtract','grammar.py',748),
  ('optsExtract -> R_SECOND','optsExtract',1,'p_optsExtract','grammar.py',749),
  ('datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER','datePart',6,'p_datePart','grammar.py',757),
  ('dateSource -> R_TIMESTAMP STRING','dateSource',2,'p_dateSource','grammar.py',767),
  ('dateSource -> T_DATE STRING','dateSource',2,'p_dateSource','grammar.py',768),
  ('dateSource -> T_TIME STRING','dateSource',2,'p_dateSource','grammar.py',769),
  ('dateSource -> R_INTERVAL STRING','dateSource',2,'p_dateSource','grammar.py',770),
  ('dateSource -> R_NOW S_PARIZQ S_PARDER','dateSource',3,'p_dateSource','grammar.py',771),
  ('current -> R_CURRENT_DATE','current',1,'p_current','grammar.py',779),
  ('current -> R_CURRENT_TIME','current',1,'p_current','grammar.py',780),
  ('current -> timeStamp','current',1,'p_current_1','grammar.py',789),
  ('literalList -> literalList S_COMA literal','literalList',3,'p_literal_list','grammar.py',796),
  ('literalList -> literal','literalList',1,'p_literal_u','grammar.py',803),
  ('literal -> INTEGER','literal',1,'p_literal','grammar.py',810),
  ('literal -> STRING','literal',1,'p_literal','grammar.py',811),
  ('literal -> DECIMAL','literal',1,'p_literal','grammar.py',812),
  ('literal -> CHARACTER','literal',1,'p_literal','grammar.py',813),
  ('literal -> R_TRUE','literal',1,'p_literal','grammar.py',814),
  ('literal -> R_FALSE','literal',1,'p_literal','grammar.py',815),
  ('literal -> R_NULL','literal',1,'p_literal','grammar.py',816),
  ('paramsList -> paramsList S_COMA datatype','paramsList',3,'p_params_list','grammar.py',835),
  ('paramsList -> datatype','paramsList',1,'p_params_u','grammar.py',842),
  ('datatype -> datatype O_SUMA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',849),
  ('datatype -> datatype O_RESTA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',850),
  ('datatype -> datatype O_PRODUCTO datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',851),
  ('datatype -> datatype O_DIVISION datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',852),
  ('datatype -> datatype O_EXPONENTE datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',853),
  ('datatype -> datatype O_MODULAR datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',854),
  ('datatype -> datatype OC_CONCATENAR datatype','datatype',3,'p_datatype_operadores_binarios2','grammar.py',863),
  ('datatype -> R_CASE caseList optElse R_END','datatype',4,'p_datatype_case_when','grammar.py',871),
  ('caseList -> caseList caseWhen','caseList',2,'p_case_list','grammar.py',877),
  ('caseList -> caseWhen','caseList',1,'p_case_list','grammar.py',878),
  ('caseWhen -> R_WHEN expBool R_THEN literal','caseWhen',4,'p_caseWhen','grammar.py',883),
  ('optElse -> R_ELSE literal','optElse',2,'p_caseWhen_2','grammar.py',887),
  ('optElse -> <empty>','optElse',0,'p_caseWhen_2','grammar.py',888),
  ('datatype -> O_RESTA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',894),
  ('datatype -> O_SUMA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',895),
  ('datatype -> columnName','datatype',1,'p_datatype_operandos','grammar.py',903),
  ('datatype -> literal','datatype',1,'p_datatype_operandos','grammar.py',904),
  ('datatype -> funcCall','datatype',1,'p_datatype_operandos','grammar.py',905),
  ('datatype -> extract','datatype',1,'p_datatype_operandos','grammar.py',906),
  ('datatype -> datePart','datatype',1,'p_datatype_operandos','grammar.py',907),
  ('datatype -> current','datatype',1,'p_datatype_operandos','grammar.py',908),
  ('datatype -> S_PARIZQ datatype S_PARDER','datatype',3,'p_datatype_agrupacion','grammar.py',916),
  ('expComp -> datatype OL_MENORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',924),
  ('expComp -> datatype OL_MAYORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',925),
  ('expComp -> datatype OL_MAYORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',926),
  ('expComp -> datatype OL_MENORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',927),
  ('expComp -> datatype S_IGUAL datatype','expComp',3,'p_expCompBinario_1','grammar.py',928),
  ('expComp -> datatype OL_DISTINTODE datatype','expComp',3,'p_expCompBinario_1','grammar.py',929),
  ('expComp -> datatype R_IS R_DISTINCT R_FROM datatype','expComp',5,'p_expCompBinario_2','grammar.py',937),
  ('expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype','expComp',6,'p_expCompBinario_3','grammar.py',947),
  ('expComp -> datatype R_BETWEEN datatype R_AND datatype','expComp',5,'p_expComp_ternario_1','grammar.py',957),
  ('expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',967),
  ('expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',968),
  ('expComp -> datatype R_ISNULL','expComp',2,'p_expComp_unario_1','grammar.py',979),
  ('expComp -> datatype R_NOTNULL','expComp',2,'p_expComp_unario_1','grammar.py',980),
  ('expComp -> datatype R_IS R_NULL','expComp',3,'p_expComp_unario_2','grammar.py',989),
  ('expComp -> datatype R_IS R_TRUE','expComp',3,'p_expComp_unario_2','grammar.py',990),
  ('expComp -> datatype R_IS R_FALSE','expComp',3,'p_expComp_unario_2','grammar.py',991),
  ('expComp -> datatype R_IS R_UNKNOWN','expComp',3,'p_expComp_unario_2','grammar.py',992),
  ('expComp -> datatype R_IS R_NOT R_NULL','expComp',4,'p_expComp_unario_3','grammar.py',1000),
  ('expComp -> datatype R_IS R_NOT R_TRUE','expComp',4,'p_expComp_unario_3','grammar.py',1001),
  ('expComp -> datatype R_IS R_NOT R_FALSE','expComp',4,'p_expComp_unario_3','grammar.py',1002),
  ('expComp -> datatype R_IS R_NOT R_UNKNOWN','expComp',4,'p_expComp_unario_3','grammar.py',1003),
  ('expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1013),
  ('expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1014),
  ('expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1015),
  ('expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1016),
  ('expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1017),
  ('expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1018),
  ('expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',1019),
  ('expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1020),
  ('expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1021),
  ('expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',1022),
  ('expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1023),
  ('expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1024),
  ('expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1025),
  ('expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1026),
  ('expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1027),
  ('expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1028),
  ('expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1029),
  ('expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1030),
  ('expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1031),
  ('expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1032),
  ('expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1033),
  ('expSubq -> stringExp R_LIKE STRING','expSubq',3,'p_expSubq','grammar.py',1034),
  ('stringExp -> STRING','stringExp',1,'p_stringExp','grammar.py',1041),
  ('stringExp -> columnName','stringExp',1,'p_stringExp','grammar.py',1042),
  ('subqValues -> R_ALL','subqValues',1,'p_subqValues','grammar.py',1049),
  ('subqValues -> R_ANY','subqValues',1,'p_subqValues','grammar.py',1050),
  ('subqValues -> R_SOME','subqValues',1,'p_subqValues','grammar.py',1051),
  ('boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER','boolean',4,'p_boolean_1','grammar.py',1058),
  ('boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER','boolean',5,'p_boolean_2','grammar.py',1068),
  ('boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER','boolean',6,'p_boolean_3','grammar.py',1076),
  ('boolean -> expComp','boolean',1,'p_boolean_4','grammar.py',1084),
  ('boolean -> expSubq','boolean',1,'p_boolean_4','grammar.py',1085),
  ('expBool -> expBool R_AND expBool','expBool',3,'p_expBool_1','grammar.py',1093),
  ('expBool -> expBool R_OR expBool','expBool',3,'p_expBool_1','grammar.py',1094),
  ('expBool -> R_NOT expBool','expBool',2,'p_expBool_2','grammar.py',1102),
  ('expBool -> S_PARIZQ expBool S_PARDER','expBool',3,'p_expBool_3','grammar.py',1110),
  ('expBool -> expBool optBoolPredicate','expBool',2,'p_expBool_5','grammar.py',1118),
  ('expBool -> boolean','expBool',1,'p_expBool_4','grammar.py',1126),
  ('optBoolPredicate -> R_IS R_TRUE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1134),
  ('optBoolPredicate -> R_IS R_FALSE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1135),
  ('optBoolPredicate -> R_IS R_UNKNOWN','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1136),
  ('optBoolPredicate -> R_IS R_NOT R_TRUE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1144),
  ('optBoolPredicate -> R_IS R_NOT R_FALSE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1145),
  ('optBoolPredicate -> R_IS R_NOT R_UNKNOWN','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1146),
  ('columnName -> ID','columnName',1,'p_columnName_id','grammar.py',1154),
  ('columnName -> ID S_PUNTO ID','columnName',3,'p_columnName_table_id','grammar.py',1163),
  ('booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1181),
  ('booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1182),
  ('booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1183),
  ('booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1184),
  ('booleanCheck -> idOrLiteral S_IGUAL idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1185),
  ('booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1186),
  ('booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral','booleanCheck',5,'p_booleanCheck_2','grammar.py',1196),
  ('booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral','booleanCheck',6,'p_booleanCheck_3','grammar.py',1208),
  ('idOrLiteral -> ID','idOrLiteral',1,'p_idOrLiteral','grammar.py',1219),
  ('idOrLiteral -> INTEGER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1220),
  ('idOrLiteral -> STRING','idOrLiteral',1,'p_idOrLiteral','grammar.py',1221),
  ('idOrLiteral -> DECIMAL','idOrLiteral',1,'p_idOrLiteral','grammar.py',1222),
  ('idOrLiteral -> CHARACTER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1223),
  ('idOrLiteral -> R_TRUE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1224),
  ('idOrLiteral -> R_FALSE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1225),
  ('alterStmt -> R_ALTER R_DATABASE idOrString alterDb','alterStmt',4,'p_alterStmt','grammar.py',1254),
  ('alterStmt -> R_ALTER R_TABLE idOrString alterTableList','alterStmt',4,'p_alterStmt','grammar.py',1255),
  ('alterDb -> R_RENAME R_TO idOrString','alterDb',3,'p_alterDb','grammar.py',1265),
  ('alterDb -> R_OWNER R_TO ownerOPts','alterDb',3,'p_alterDb','grammar.py',1266),
  ('ownerOPts -> idOrString','ownerOPts',1,'p_ownerOpts','grammar.py',1275),
  ('ownerOPts -> R_CURRENT_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1276),
  ('ownerOPts -> R_SESSION_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1277),
  ('alterTableList -> alterTableList S_COMA alterTable','alterTableList',3,'p_alterTableList','grammar.py',1285),
  ('alterTableList -> alterTable','alterTableList',1,'p_alterTableList_u','grammar.py',1294),
  ('alterTable -> R_ADD alterAdd','alterTable',2,'p_alterTable','grammar.py',1302),
  ('alterTable -> R_ALTER alterAlter','alterTable',2,'p_alterTable','grammar.py',1303),
  ('alterTable -> R_DROP alterDrop','alterTable',2,'p_alterTable','grammar.py',1304),
  ('alterTable -> R_RENAME alterRename','alterTable',2,'p_alterTable','grammar.py',1305),
  ('alterAdd -> R_COLUMN ID types','alterAdd',3,'p_alterAdd_column','grammar.py',1313),
  ('alterAdd -> createConstraint','alterAdd',1,'p_alterAdd_constraint','grammar.py',1321),
  ('alterAdd -> createPrimary','alterAdd',1,'p_alterAdd_constraint','grammar.py',1322),
  ('alterAdd -> createForeign','alterAdd',1,'p_alterAdd_constraint','grammar.py',1323),
  ('alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER','alterAdd',5,'p_alterAdd_unique','grammar.py',1331),
  ('alterAlter -> R_COLUMN ID R_SET nullOpt','alterAlter',4,'p_alterAlter','grammar.py',1339),
  ('alterAlter -> R_COLUMN ID R_SET defaultVal','alterAlter',4,'p_alterAlter','grammar.py',1340),
  ('alterAlter -> R_COLUMN ID R_TYPE types','alterAlter',4,'p_alterAlter','grammar.py',1341),
  ('alterDrop -> R_CONSTRAINT ID','alterDrop',2,'p_alterDrop','grammar.py',1349),
  ('alterDrop -> R_COLUMN ID','alterDrop',2,'p_alterDrop','grammar.py',1350),
  ('alterRename -> R_COLUMN ID R_TO ID','alterRename',4,'p_alterRename','grammar.py',1358),
  ('dropStmt -> R_DROP R_TABLE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1372),
  ('dropStmt -> R_DROP R_DATABASE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1373),
  ('ifExists -> R_IF R_EXISTS','ifExists',2,'p_ifExists','grammar.py',1383),
  ('ifExists -> <empty>','ifExists',0,'p_ifExists','grammar.py',1384),
  ('selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt_1','grammar.py',1397),
  ('selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',7,'p_selectStmt_2','grammar.py',1415),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt__1','grammar.py',1432),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl','selectStmt',7,'p_selectStmt__3','grammar.py',1437),
  ('selectStmt -> selectStmt R_UNION allOpt selectStmt','selectStmt',4,'p_selectStmt_union','grammar.py',1442),
  ('selectStmt -> selectStmt R_INTERSECT allOpt selectStmt','selectStmt',4,'p_selectStmt_intersect','grammar.py',1448),
  ('selectStmt -> selectStmt R_EXCEPT allOpt selectStmt','selectStmt',4,'p_selectStmt_except','grammar.py',1454),
  ('selectStmt -> S_PARIZQ selectStmt S_PARDER','selectStmt',3,'p_selectStmt_agrupacion','grammar.py',1460),
  ('fromCl -> R_FROM tableExp','fromCl',2,'p_fromClause','grammar.py',1467),
  ('selectStmt -> R_SELECT selectParams','selectStmt',2,'p_selectstmt_only_params','grammar.py',1479),
  ('allOpt -> R_ALL','allOpt',1,'p_allOpt','grammar.py',1488),
  ('allOpt -> <empty>','allOpt',0,'p_allOpt','grammar.py',1489),
  ('selectParams -> O_PRODUCTO','selectParams',1,'p_selectparams_all','grammar.py',1496),
  ('selectParams -> selectList','selectParams',1,'p_selectparams_params','grammar.py',1503),
  ('selectList -> selectList S_COMA selectListParams optAlias','selectList',4,'p_selectList_list','grammar.py',1511),
  ('selectList -> selectListParams optAlias','selectList',2,'p_selectList_u','grammar.py',1521),
  ('selectListParams -> expresion','selectListParams',1,'p_selectListParams_1','grammar.py',1530),
  ('selectListParams -> ID S_PUNTO O_PRODUCTO','selectListParams',3,'p_selectListParams_2','grammar.py',1537),
  ('optAlias -> R_AS idOrString','optAlias',2,'p_optalias_as','grammar.py',1544),
  ('optAlias -> idOrString','optAlias',1,'p_optalias_id','grammar.py',1552),
  ('optAlias -> <empty>','optAlias',0,'p_optalias_none','grammar.py',1559),
  ('tableExp -> tableExp S_COMA fromBody','tableExp',3,'p_tableexp_list','grammar.py',1565),
  ('tableExp -> fromBody','tableExp',1,'p_tableexp_u','grammar.py',1573),
  ('fromBody -> ID optAlias','fromBody',2,'p_fromBody','grammar.py',1579),
  ('fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString','fromBody',5,'p_tableexp_subq','grammar.py',1588),
  ('joinList -> joinList2','joinList',1,'p_joinList','grammar.py',1595),
  ('joinList2 -> joinList2 joinCl','joinList2',2,'p_joinList_2','grammar.py',1600),
  ('joinList2 -> joinCl','joinList2',1,'p_joinList_2','grammar.py',1601),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool','joinCl',6,'p_joinCl','grammar.py',1606),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER','joinCl',8,'p_joinCl','grammar.py',1607),
  ('joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias','joinCl',5,'p_joinCl','grammar.py',1608),
  ('nameList -> nameList S_COMA columnName','nameList',3,'p_nameList','grammar.py',1615),
  ('nameList -> columnName','nameList',1,'p_nameList','grammar.py',1616),
  ('joinOpt -> R_INNER','joinOpt',1,'p_joinOpt','grammar.py',1622),
  ('joinOpt -> R_LEFT','joinOpt',1,'p_joinOpt','grammar.py',1623),
  ('joinOpt -> R_LEFT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1624),
  ('joinOpt -> R_RIGHT','joinOpt',1,'p_joinOpt','grammar.py',1625),
  ('joinOpt -> R_RIGHT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1626),
  ('joinOpt -> R_FULL','joinOpt',1,'p_joinOpt','grammar.py',1627),
  ('joinOpt -> R_FULL R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1628),
  ('whereCl -> R_WHERE expBool','whereCl',2,'p_whereCl','grammar.py',1635),
  ('whereCl -> <empty>','whereCl',0,'p_whereCl_none','grammar.py',1644),
  ('groupByCl -> R_GROUP R_BY groupList havingCl','groupByCl',4,'p_groupByCl_1','grammar.py',1654),
  ('groupByCl -> <empty>','groupByCl',0,'p_groupByCl_2','grammar.py',1662),
  ('groupList -> groupList S_COMA columnName','groupList',3,'p_groupList_1','grammar.py',1670),
  ('groupList -> groupList S_COMA INTEGER','groupList',3,'p_groupList_1','grammar.py',1671),
  ('groupList -> columnName','groupList',1,'p_groupList_2','grammar.py',1680),
  ('groupList -> INTEGER','groupList',1,'p_groupList_2','grammar.py',1681),
  ('havingCl -> R_HAVING expBool','havingCl',2,'p_havingCl_1','grammar.py',1691),
  ('havingCl -> <empty>','havingCl',0,'p_havingCl_2','grammar.py',1697),
  ('orderByCl -> R_ORDER R_BY orderList','orderByCl',3,'p_orderByCl','grammar.py',1706),
  ('orderByCl -> <empty>','orderByCl',0,'p_orderByCl2','grammar.py',1712),
  ('orderList -> orderList S_COMA orderByElem','orderList',3,'p_orderList','grammar.py',1718),
  ('orderList -> orderByElem','orderList',1,'p_orderList2','grammar.py',1725),
  ('orderByElem -> columnName orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1732),
  ('orderByElem -> INTEGER orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1733),
  ('orderOpts -> R_ASC','orderOpts',1,'p_orderOpts','grammar.py',1740),
  ('orderOpts -> R_DESC','orderOpts',1,'p_orderOpts','grammar.py',1741),
  ('orderOpts -> <empty>','orderOpts',0,'p_orderOpts2','grammar.py',1747),
  ('orderNull -> R_NULL R_FIRST','orderNull',2,'p_orderNull','grammar.py',1752),
  ('orderNull -> R_NULL R_LAST','orderNull',2,'p_orderNull','grammar.py',1753),
  ('orderNull -> <empty>','orderNull',0,'p_ordenNull2','grammar.py',1758),
  ('limitCl -> R_LIMIT INTEGER offsetLimit','limitCl',3,'p_limitCl','grammar.py',1767),
  ('limitCl -> R_LIMIT R_ALL offsetLimit','limitCl',3,'p_limitCl','grammar.py',1768),
  ('limitCl -> <empty>','limitCl',0,'p_limitCl_n','grammar.py',1775),
  ('offsetLimit -> R_OFFSET INTEGER','offsetLimit',2,'p_offsetLimit','grammar.py',1781),
  ('offsetLimit -> <empty>','offsetLimit',0,'p_offsetLimit_n','grammar.py',1787),
  ('insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER','insertStmt',8,'p_insertStmt','grammar.py',1800),
  ('paramsColumn -> S_PARIZQ idList S_PARDER','paramsColumn',3,'p_paramsColumn','grammar.py',1807),
  ('paramsColumn -> <empty>','paramsColumn',0,'p_paramsColumn_none','grammar.py',1813),
  ('updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl','updateStmt',5,'p_updateStmt','grammar.py',1826),
  ('updateCols -> updateCols S_COMA updateVals','updateCols',3,'p_updateCols_list','grammar.py',1836),
  ('updateCols -> updateVals','updateCols',1,'p_updateCols_u','grammar.py',1843),
  ('updateVals -> ID S_IGUAL updateExp','updateVals',3,'p_updateVals','grammar.py',1849),
  ('updateExp -> datatype','updateExp',1,'p_updateExp','grammar.py',1856),
  ('updateExp -> R_DEFAULT','updateExp',1,'p_updateExp','grammar.py',1857),
  ('deleteStmt -> R_DELETE fromCl whereCl','deleteStmt',3,'p_deleteStmt','grammar.py',1870),
  ('truncateStmt -> R_TRUNCATE tableOpt ID','truncateStmt',3,'p_truncateStmt','grammar.py',1876),
  ('tableOpt -> R_TABLE','tableOpt',1,'p_tableOpt','grammar.py',1882),
  ('tableOpt -> <empty>','tableOpt',0,'p_tableOpt','grammar.py',1883),
  ('showStmt -> R_SHOW R_DATABASES likeOpt','showStmt',3,'p_showStmt','grammar.py',1889),
  ('likeOpt -> R_LIKE STRING','likeOpt',2,'p_likeOpt','grammar.py',1896),
  ('likeOpt -> <empty>','likeOpt',0,'p_likeOpt','grammar.py',1897),
  ('useStmt -> R_USE ID','useStmt',2,'p_useStmt','grammar.py',1907),
  ('functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction','functionStmt',11,'p_functionStmt','grammar.py',1919),
  ('functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction','functionStmt',10,'p_functionStmt2','grammar.py',1924),
  ('bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd','bloqueFunction',6,'p_functionBloque','grammar.py',1929),
  ('params_list -> params_list S_COMA param_item','params_list',3,'p_params_list_func','grammar.py',1935),
  ('params_list -> param_item','params_list',1,'p_params_list_func_aux','grammar.py',1941),
  ('param_item -> ID types','param_item',2,'p_param_item_func','grammar.py',1946),
  ('returnsStmt -> R_RETURNS types','returnsStmt',2,'p_returnsStmt','grammar.py',1952),
  ('returnsStmt -> <empty>','returnsStmt',0,'p_returnsStmt_aux','grammar.py',1957),
  ('declareStmt -> R_DECLARE declaracion_list','declareStmt',2,'p_declareStmt2','grammar.py',1963),
  ('declareStmt -> <empty>','declareStmt',0,'p_declareStmt','grammar.py',1968),
  ('declaracion_list -> declaracion_list declaracion_item','declaracion_list',2,'p_declaracion_list','grammar.py',1973),
  ('declaracion_list -> declaracion_item','declaracion_list',1,'p_declaracion_list_aux','grammar.py',1979),
  ('declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA','declaracion_item',6,'p_declaracion_item','grammar.py',1984),
  ('declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA','declaracion_item',5,'p_declaracion_item_aux','grammar.py',1989),
  ('constant_opt -> R_CONSTANT','constant_opt',1,'p_constant_item','grammar.py',1994),
  ('constant_opt -> <empty>','constant_opt',0,'p_constant_item2','grammar.py',1999),
  ('null_opt -> R_NOT R_NULL','null_opt',2,'p_null_option','grammar.py',2004),
  ('null_opt -> <empty>','null_opt',0,'p_null_option2','grammar.py',2009),
  ('default_opt -> R_DEFAULT','default_opt',1,'p_default_item','grammar.py',2014),
  ('default_opt -> S_DOSPUNTOS S_IGUAL','default_opt',2,'p_default_item','grammar.py',2015),
  ('default_opt -> S_IGUAL','default_opt',1,'p_default_item','grammar.py',2016),
  ('default_item -> default_opt expresion','default_item',2,'p_default_item2','grammar.py',2020),
  ('default_item -> <empty>','default_item',0,'p_default_item3','grammar.py',2025),
  ('alias_declaracion -> ID','alias_declaracion',1,'p_alias_declaracion','grammar.py',2030),
  ('alias_declaracion -> IDEspecial','alias_declaracion',1,'p_alias_declaracion','grammar.py',2031),
  ('beginStmt -> beginStmt beginItem','beginStmt',2,'p_beingStmt','grammar.py',2036),
  ('beginStmt -> beginItem','beginStmt',1,'p_beingStmt2','grammar.py',2042),
  ('beginItem -> stmt','beginItem',1,'p_beginItem','grammar.py',2047),
  ('beginItem -> returnStmt S_PUNTOCOMA','beginItem',2,'p_beginItem','grammar.py',2048),
  ('returnStmt -> R_RETURN expresion','returnStmt',2,'p_returnStmt','grammar.py',2053),
  ('labelEnd -> <empty>','labelEnd',0,'p_labelEnd2','grammar.py',2058),
  ('labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA','labelEnd',5,'p_labelEnd','grammar.py',2063),
]
