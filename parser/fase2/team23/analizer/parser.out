Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OC_AND
    OC_NOT
    OC_OR
    OC_SHIFTL
    OC_SHIFTR
    OC_XOR
    R_DECLARE
    R_LANGUAGE

Grammar

Rule 0     S' -> init
Rule 1     init -> stmtList
Rule 2     stmtList -> stmtList stmt
Rule 3     stmtList -> stmt
Rule 4     stmt -> createStmt S_PUNTOCOMA
Rule 5     stmt -> showStmt S_PUNTOCOMA
Rule 6     stmt -> alterStmt S_PUNTOCOMA
Rule 7     stmt -> dropStmt S_PUNTOCOMA
Rule 8     stmt -> insertStmt S_PUNTOCOMA
Rule 9     stmt -> updateStmt S_PUNTOCOMA
Rule 10    stmt -> deleteStmt S_PUNTOCOMA
Rule 11    stmt -> truncateStmt S_PUNTOCOMA
Rule 12    stmt -> useStmt S_PUNTOCOMA
Rule 13    stmt -> selectStmt S_PUNTOCOMA
<<<<<<< HEAD
Rule 14    stmt -> functionStmt S_PUNTOCOMA
Rule 15    idOrString -> ID
Rule 16    idOrString -> STRING
Rule 17    idOrString -> CHARACTER
Rule 18    createStmt -> R_CREATE createBody
Rule 19    createBody -> createOpts
Rule 20    createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
Rule 21    createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode
Rule 22    orReplace -> R_OR R_REPLACE
Rule 23    orReplace -> <empty>
Rule 24    createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
Rule 25    ifNotExists -> R_IF R_NOT R_EXISTS
Rule 26    ifNotExists -> <empty>
Rule 27    inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER
Rule 28    inheritsOpt -> <empty>
Rule 29    createOwner -> R_OWNER ID
Rule 30    createOwner -> R_OWNER STRING
Rule 31    createOwner -> R_OWNER S_IGUAL ID
Rule 32    createOwner -> R_OWNER S_IGUAL STRING
Rule 33    createOwner -> <empty>
Rule 34    createMode -> R_MODE INTEGER
Rule 35    createMode -> R_MODE S_IGUAL INTEGER
Rule 36    createMode -> <empty>
Rule 37    createTableList -> createTableList S_COMA createTable
Rule 38    createTableList -> createTable
Rule 39    createTable -> ID types createColumns
Rule 40    createTable -> createConstraint
Rule 41    createTable -> createUnique
Rule 42    createTable -> createPrimary
Rule 43    createTable -> createForeign
Rule 44    createColumns -> colOptionsList
Rule 45    createColumns -> <empty>
Rule 46    createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 47    createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER
Rule 48    createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
Rule 49    createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
Rule 50    constrName -> R_CONSTRAINT ID
Rule 51    constrName -> <empty>
Rule 52    idList -> idList S_COMA ID
Rule 53    idList -> ID
Rule 54    types -> ID
Rule 55    types -> T_SMALLINT
Rule 56    types -> T_INTEGER
Rule 57    types -> T_BIGINT
Rule 58    types -> T_REAL
Rule 59    types -> T_DOUBLE T_PRECISION
Rule 60    types -> T_MONEY
Rule 61    types -> T_TEXT
Rule 62    types -> T_BOOLEAN
Rule 63    types -> R_TIMESTAMP
Rule 64    types -> T_DATE
Rule 65    types -> T_TIME
Rule 66    types -> T_DECIMAL optParams
Rule 67    types -> T_NUMERIC optParams
Rule 68    types -> T_VARCHAR optParams
Rule 69    types -> T_CHARACTER optParams
Rule 70    types -> T_CHAR optParams
Rule 71    types -> T_CHARACTER T_VARYING optParams
Rule 72    types -> R_INTERVAL intervalFields
Rule 73    intervalFields -> R_YEAR
Rule 74    intervalFields -> R_MONTH
Rule 75    intervalFields -> R_DAY
Rule 76    intervalFields -> R_HOUR
Rule 77    intervalFields -> R_MINUTE
Rule 78    intervalFields -> R_SECOND
Rule 79    intervalFields -> <empty>
Rule 80    optParams -> S_PARIZQ literalList S_PARDER
Rule 81    optParams -> <empty>
Rule 82    colOptionsList -> colOptionsList colOptions
Rule 83    colOptionsList -> colOptions
Rule 84    colOptions -> defaultVal
Rule 85    colOptions -> nullOpt
Rule 86    colOptions -> constraintOpt
Rule 87    colOptions -> primaryOpt
Rule 88    colOptions -> referencesOpt
Rule 89    defaultVal -> R_DEFAULT literal
Rule 90    nullOpt -> R_NOT R_NULL
Rule 91    nullOpt -> R_NULL
Rule 92    constraintOpt -> constrName R_UNIQUE
Rule 93    constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 94    primaryOpt -> R_PRIMARY R_KEY
Rule 95    referencesOpt -> R_REFERENCES ID
Rule 96    expresion -> datatype
Rule 97    expresion -> expBool
Rule 98    expresion -> S_PARIZQ selectStmt S_PARDER
Rule 99    funcCall -> ID S_PARIZQ paramsList S_PARDER
Rule 100   funcCall -> ID S_PARIZQ S_PARDER
Rule 101   funcCall -> R_NOW S_PARIZQ S_PARDER
Rule 102   funcCall -> R_COUNT S_PARIZQ datatype S_PARDER
Rule 103   funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
Rule 104   funcCall -> R_SUM S_PARIZQ datatype S_PARDER
Rule 105   funcCall -> R_PROM S_PARIZQ datatype S_PARDER
Rule 106   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
Rule 107   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
Rule 108   timeStamp -> R_TIMESTAMP STRING
Rule 109   timeStamp -> R_INTERVAL STRING
Rule 110   optsExtract -> R_YEAR
Rule 111   optsExtract -> R_MONTH
Rule 112   optsExtract -> R_DAY
Rule 113   optsExtract -> R_HOUR
Rule 114   optsExtract -> R_MINUTE
Rule 115   optsExtract -> R_SECOND
Rule 116   datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
Rule 117   dateSource -> R_TIMESTAMP STRING
Rule 118   dateSource -> T_DATE STRING
Rule 119   dateSource -> T_TIME STRING
Rule 120   dateSource -> R_INTERVAL STRING
Rule 121   dateSource -> R_NOW S_PARIZQ S_PARDER
Rule 122   current -> R_CURRENT_DATE
Rule 123   current -> R_CURRENT_TIME
Rule 124   current -> timeStamp
Rule 125   literalList -> literalList S_COMA literal
Rule 126   literalList -> literal
Rule 127   literal -> INTEGER
Rule 128   literal -> STRING
Rule 129   literal -> DECIMAL
Rule 130   literal -> CHARACTER
Rule 131   literal -> R_TRUE
Rule 132   literal -> R_FALSE
Rule 133   literal -> R_NULL
Rule 134   paramsList -> paramsList S_COMA datatype
Rule 135   paramsList -> datatype
Rule 136   datatype -> datatype O_SUMA datatype
Rule 137   datatype -> datatype O_RESTA datatype
Rule 138   datatype -> datatype O_PRODUCTO datatype
Rule 139   datatype -> datatype O_DIVISION datatype
Rule 140   datatype -> datatype O_EXPONENTE datatype
Rule 141   datatype -> datatype O_MODULAR datatype
Rule 142   datatype -> datatype OC_CONCATENAR datatype
Rule 143   datatype -> R_CASE caseList optElse R_END
Rule 144   caseList -> caseList caseWhen
Rule 145   caseList -> caseWhen
Rule 146   caseWhen -> R_WHEN expBool R_THEN literal
Rule 147   optElse -> R_ELSE literal
Rule 148   optElse -> <empty>
Rule 149   datatype -> O_RESTA datatype
Rule 150   datatype -> O_SUMA datatype
Rule 151   datatype -> columnName
Rule 152   datatype -> literal
Rule 153   datatype -> funcCall
Rule 154   datatype -> extract
Rule 155   datatype -> datePart
Rule 156   datatype -> current
Rule 157   datatype -> S_PARIZQ datatype S_PARDER
Rule 158   expComp -> datatype OL_MENORQUE datatype
Rule 159   expComp -> datatype OL_MAYORQUE datatype
Rule 160   expComp -> datatype OL_MAYORIGUALQUE datatype
Rule 161   expComp -> datatype OL_MENORIGUALQUE datatype
Rule 162   expComp -> datatype S_IGUAL datatype
Rule 163   expComp -> datatype OL_DISTINTODE datatype
Rule 164   expComp -> datatype R_IS R_DISTINCT R_FROM datatype
Rule 165   expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype
Rule 166   expComp -> datatype R_BETWEEN datatype R_AND datatype
Rule 167   expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype
Rule 168   expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
Rule 169   expComp -> datatype R_ISNULL
Rule 170   expComp -> datatype R_NOTNULL
Rule 171   expComp -> datatype R_IS R_NULL
Rule 172   expComp -> datatype R_IS R_TRUE
Rule 173   expComp -> datatype R_IS R_FALSE
Rule 174   expComp -> datatype R_IS R_UNKNOWN
Rule 175   expComp -> datatype R_IS R_NOT R_NULL
Rule 176   expComp -> datatype R_IS R_NOT R_TRUE
Rule 177   expComp -> datatype R_IS R_NOT R_FALSE
Rule 178   expComp -> datatype R_IS R_NOT R_UNKNOWN
Rule 179   expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 180   expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 181   expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 182   expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 183   expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
Rule 184   expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
Rule 185   expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 186   expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 187   expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 188   expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 189   expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 190   expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 191   expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 192   expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 193   expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 194   expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 195   expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 196   expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 197   expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 198   expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 199   expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 200   expSubq -> stringExp R_LIKE STRING
Rule 201   stringExp -> STRING
Rule 202   stringExp -> columnName
Rule 203   subqValues -> R_ALL
Rule 204   subqValues -> R_ANY
Rule 205   subqValues -> R_SOME
Rule 206   boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER
Rule 207   boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER
Rule 208   boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
Rule 209   boolean -> expComp
Rule 210   boolean -> expSubq
Rule 211   expBool -> expBool R_AND expBool
Rule 212   expBool -> expBool R_OR expBool
Rule 213   expBool -> R_NOT expBool
Rule 214   expBool -> S_PARIZQ expBool S_PARDER
Rule 215   expBool -> expBool optBoolPredicate
Rule 216   expBool -> boolean
Rule 217   optBoolPredicate -> R_IS R_TRUE
Rule 218   optBoolPredicate -> R_IS R_FALSE
Rule 219   optBoolPredicate -> R_IS R_UNKNOWN
Rule 220   optBoolPredicate -> R_IS R_NOT R_TRUE
Rule 221   optBoolPredicate -> R_IS R_NOT R_FALSE
Rule 222   optBoolPredicate -> R_IS R_NOT R_UNKNOWN
Rule 223   columnName -> ID
Rule 224   columnName -> ID S_PUNTO ID
Rule 225   booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral
Rule 226   booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral
Rule 227   booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral
Rule 228   booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral
Rule 229   booleanCheck -> idOrLiteral S_IGUAL idOrLiteral
Rule 230   booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral
Rule 231   booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
Rule 232   booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
Rule 233   idOrLiteral -> ID
Rule 234   idOrLiteral -> INTEGER
Rule 235   idOrLiteral -> STRING
Rule 236   idOrLiteral -> DECIMAL
Rule 237   idOrLiteral -> CHARACTER
Rule 238   idOrLiteral -> R_TRUE
Rule 239   idOrLiteral -> R_FALSE
Rule 240   alterStmt -> R_ALTER R_DATABASE idOrString alterDb
Rule 241   alterStmt -> R_ALTER R_TABLE idOrString alterTableList
Rule 242   alterDb -> R_RENAME R_TO idOrString
Rule 243   alterDb -> R_OWNER R_TO ownerOPts
Rule 244   ownerOPts -> idOrString
Rule 245   ownerOPts -> R_CURRENT_USER
Rule 246   ownerOPts -> R_SESSION_USER
Rule 247   alterTableList -> alterTableList S_COMA alterTable
Rule 248   alterTableList -> alterTable
Rule 249   alterTable -> R_ADD alterAdd
Rule 250   alterTable -> R_ALTER alterAlter
Rule 251   alterTable -> R_DROP alterDrop
Rule 252   alterTable -> R_RENAME alterRename
Rule 253   alterAdd -> R_COLUMN ID types
Rule 254   alterAdd -> createConstraint
Rule 255   alterAdd -> createPrimary
Rule 256   alterAdd -> createForeign
Rule 257   alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER
Rule 258   alterAlter -> R_COLUMN ID R_SET nullOpt
Rule 259   alterAlter -> R_COLUMN ID R_SET defaultVal
Rule 260   alterAlter -> R_COLUMN ID R_TYPE types
Rule 261   alterDrop -> R_CONSTRAINT ID
Rule 262   alterDrop -> R_COLUMN ID
Rule 263   alterRename -> R_COLUMN ID R_TO ID
Rule 264   dropStmt -> R_DROP R_TABLE ifExists idOrString
Rule 265   dropStmt -> R_DROP R_DATABASE ifExists idOrString
Rule 266   ifExists -> R_IF R_EXISTS
Rule 267   ifExists -> <empty>
Rule 268   selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 269   selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 270   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
Rule 271   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
Rule 272   selectStmt -> selectStmt R_UNION allOpt selectStmt
Rule 273   selectStmt -> selectStmt R_INTERSECT allOpt selectStmt
Rule 274   selectStmt -> selectStmt R_EXCEPT allOpt selectStmt
Rule 275   selectStmt -> S_PARIZQ selectStmt S_PARDER
Rule 276   fromCl -> R_FROM tableExp
Rule 277   selectStmt -> R_SELECT selectParams
Rule 278   allOpt -> R_ALL
Rule 279   allOpt -> <empty>
Rule 280   selectParams -> O_PRODUCTO
Rule 281   selectParams -> selectList
Rule 282   selectList -> selectList S_COMA selectListParams optAlias
Rule 283   selectList -> selectListParams optAlias
Rule 284   selectListParams -> expresion
Rule 285   selectListParams -> ID S_PUNTO O_PRODUCTO
Rule 286   optAlias -> R_AS idOrString
Rule 287   optAlias -> idOrString
Rule 288   optAlias -> <empty>
Rule 289   tableExp -> tableExp S_COMA fromBody
Rule 290   tableExp -> fromBody
Rule 291   fromBody -> ID optAlias
Rule 292   fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString
Rule 293   joinList -> joinList2
Rule 294   joinList2 -> joinList2 joinCl
Rule 295   joinList2 -> joinCl
Rule 296   joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool
Rule 297   joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
Rule 298   joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias
Rule 299   nameList -> nameList S_COMA columnName
Rule 300   nameList -> columnName
Rule 301   joinOpt -> R_INNER
Rule 302   joinOpt -> R_LEFT
Rule 303   joinOpt -> R_LEFT R_OUTER
Rule 304   joinOpt -> R_RIGHT
Rule 305   joinOpt -> R_RIGHT R_OUTER
Rule 306   joinOpt -> R_FULL
Rule 307   joinOpt -> R_FULL R_OUTER
Rule 308   whereCl -> R_WHERE expBool
Rule 309   whereCl -> <empty>
Rule 310   groupByCl -> R_GROUP R_BY groupList havingCl
Rule 311   groupByCl -> <empty>
Rule 312   groupList -> groupList S_COMA columnName
Rule 313   groupList -> groupList S_COMA INTEGER
Rule 314   groupList -> columnName
Rule 315   groupList -> INTEGER
Rule 316   havingCl -> R_HAVING expBool
Rule 317   havingCl -> <empty>
Rule 318   orderByCl -> R_ORDER R_BY orderList
Rule 319   orderByCl -> <empty>
Rule 320   orderList -> orderList S_COMA orderByElem
Rule 321   orderList -> orderByElem
Rule 322   orderByElem -> columnName orderOpts orderNull
Rule 323   orderByElem -> INTEGER orderOpts orderNull
Rule 324   orderOpts -> R_ASC
Rule 325   orderOpts -> R_DESC
Rule 326   orderOpts -> <empty>
Rule 327   orderNull -> R_NULL R_FIRST
Rule 328   orderNull -> R_NULL R_LAST
Rule 329   orderNull -> <empty>
Rule 330   limitCl -> R_LIMIT INTEGER offsetLimit
Rule 331   limitCl -> R_LIMIT R_ALL offsetLimit
Rule 332   limitCl -> <empty>
Rule 333   offsetLimit -> R_OFFSET INTEGER
Rule 334   offsetLimit -> <empty>
Rule 335   insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
Rule 336   paramsColumn -> S_PARIZQ idList S_PARDER
Rule 337   paramsColumn -> <empty>
Rule 338   updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl
Rule 339   updateCols -> updateCols S_COMA updateVals
Rule 340   updateCols -> updateVals
Rule 341   updateVals -> ID S_IGUAL updateExp
Rule 342   updateExp -> datatype
Rule 343   updateExp -> R_DEFAULT
Rule 344   deleteStmt -> R_DELETE fromCl whereCl
Rule 345   truncateStmt -> R_TRUNCATE tableOpt ID
Rule 346   tableOpt -> R_TABLE
Rule 347   tableOpt -> <empty>
Rule 348   showStmt -> R_SHOW R_DATABASES likeOpt
Rule 349   likeOpt -> R_LIKE STRING
Rule 350   likeOpt -> <empty>
Rule 351   useStmt -> R_USE ID
Rule 352   functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
Rule 353   bloqueFunction -> declareStmt R_BEGIN beginStmt R_END labelEnd
Rule 354   params_list -> params_list param_item
Rule 355   params_list -> param_item
Rule 356   param_item -> R_NULL
Rule 357   returnsStmt -> R_RETURNS item_returns
Rule 358   returnsStmt -> <empty>
Rule 359   item_returns -> R_NULL
Rule 360   declareStmt -> <empty>
Rule 361   declaracion_list -> declaracion_list declaracion_item
Rule 362   declaracion_list -> declaracion_item
Rule 363   declaracion_item -> ID types
Rule 364   declaracion_item -> ID R_ALIAS R_FOR alias_declaracion
Rule 365   alias_declaracion -> ID
Rule 366   alias_declaracion -> IDEspecial
Rule 367   beginStmt -> R_NULL
Rule 368   labelEnd -> R_NULL

Terminals, with rules where they appear

CHARACTER            : 17 130 237
COMMENT              : 
DECIMAL              : 129 236
ID                   : 15 24 27 29 31 39 49 50 52 53 54 95 99 100 223 224 224 233 253 257 258 259 260 261 262 263 263 285 291 335 341 345 351 352 363 364 365
IDEspecial           : 366
INTEGER              : 34 35 127 234 313 315 323 330 333
OC_AND               : 
OC_CONCATENAR        : 142
=======
Rule 14    idOrString -> ID
Rule 15    idOrString -> STRING
Rule 16    idOrString -> CHARACTER
Rule 17    createStmt -> R_CREATE createBody
Rule 18    createBody -> createOpts
Rule 19    createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
Rule 20    unique_index -> R_UNIQUE
Rule 21    unique_index -> <empty>
Rule 22    using_hash_index -> R_USING R_HASH
Rule 23    using_hash_index -> <empty>
Rule 24    indexNullS -> R_NULLS R_FIRST
Rule 25    indexNullS -> R_NULLS R_LAST
Rule 26    indexNullS -> <empty>
Rule 27    indexasc_desc -> R_DESC
Rule 28    indexasc_desc -> R_ASC
Rule 29    indexasc_desc -> <empty>
Rule 30    createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
Rule 31    createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode
Rule 32    orReplace -> R_OR R_REPLACE
Rule 33    orReplace -> <empty>
Rule 34    createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
Rule 35    ifNotExists -> R_IF R_NOT R_EXISTS
Rule 36    ifNotExists -> <empty>
Rule 37    inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER
Rule 38    inheritsOpt -> <empty>
Rule 39    createOwner -> R_OWNER ID
Rule 40    createOwner -> R_OWNER STRING
Rule 41    createOwner -> R_OWNER S_IGUAL ID
Rule 42    createOwner -> R_OWNER S_IGUAL STRING
Rule 43    createOwner -> <empty>
Rule 44    createMode -> R_MODE INTEGER
Rule 45    createMode -> R_MODE S_IGUAL INTEGER
Rule 46    createMode -> <empty>
Rule 47    createTableList -> createTableList S_COMA createTable
Rule 48    createTableList -> createTable
Rule 49    createTable -> ID types createColumns
Rule 50    createTable -> createConstraint
Rule 51    createTable -> createUnique
Rule 52    createTable -> createPrimary
Rule 53    createTable -> createForeign
Rule 54    createColumns -> colOptionsList
Rule 55    createColumns -> <empty>
Rule 56    createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 57    createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER
Rule 58    createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
Rule 59    createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
Rule 60    constrName -> R_CONSTRAINT ID
Rule 61    constrName -> <empty>
Rule 62    idList -> idList S_COMA ID
Rule 63    idList -> ID
Rule 64    types -> ID
Rule 65    types -> T_SMALLINT
Rule 66    types -> T_INTEGER
Rule 67    types -> T_BIGINT
Rule 68    types -> T_REAL
Rule 69    types -> T_DOUBLE T_PRECISION
Rule 70    types -> T_MONEY
Rule 71    types -> T_TEXT
Rule 72    types -> T_BOOLEAN
Rule 73    types -> R_TIMESTAMP
Rule 74    types -> T_DATE
Rule 75    types -> T_TIME
Rule 76    types -> T_DECIMAL optParams
Rule 77    types -> T_NUMERIC optParams
Rule 78    types -> T_VARCHAR optParams
Rule 79    types -> T_CHARACTER optParams
Rule 80    types -> T_CHAR optParams
Rule 81    types -> T_CHARACTER T_VARYING optParams
Rule 82    types -> R_INTERVAL intervalFields
Rule 83    intervalFields -> R_YEAR
Rule 84    intervalFields -> R_MONTH
Rule 85    intervalFields -> R_DAY
Rule 86    intervalFields -> R_HOUR
Rule 87    intervalFields -> R_MINUTE
Rule 88    intervalFields -> R_SECOND
Rule 89    intervalFields -> <empty>
Rule 90    optParams -> S_PARIZQ literalList S_PARDER
Rule 91    optParams -> <empty>
Rule 92    colOptionsList -> colOptionsList colOptions
Rule 93    colOptionsList -> colOptions
Rule 94    colOptions -> defaultVal
Rule 95    colOptions -> nullOpt
Rule 96    colOptions -> constraintOpt
Rule 97    colOptions -> primaryOpt
Rule 98    colOptions -> referencesOpt
Rule 99    defaultVal -> R_DEFAULT literal
Rule 100   nullOpt -> R_NOT R_NULL
Rule 101   nullOpt -> R_NULL
Rule 102   constraintOpt -> constrName R_UNIQUE
Rule 103   constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 104   primaryOpt -> R_PRIMARY R_KEY
Rule 105   referencesOpt -> R_REFERENCES ID
Rule 106   expresion -> datatype
Rule 107   expresion -> expBool
Rule 108   expresion -> S_PARIZQ selectStmt S_PARDER
Rule 109   funcCall -> ID S_PARIZQ paramsList S_PARDER
Rule 110   funcCall -> ID S_PARIZQ S_PARDER
Rule 111   funcCall -> R_NOW S_PARIZQ S_PARDER
Rule 112   funcCall -> R_COUNT S_PARIZQ datatype S_PARDER
Rule 113   funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
Rule 114   funcCall -> R_SUM S_PARIZQ datatype S_PARDER
Rule 115   funcCall -> R_PROM S_PARIZQ datatype S_PARDER
Rule 116   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
Rule 117   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
Rule 118   timeStamp -> R_TIMESTAMP STRING
Rule 119   timeStamp -> R_INTERVAL STRING
Rule 120   optsExtract -> R_YEAR
Rule 121   optsExtract -> R_MONTH
Rule 122   optsExtract -> R_DAY
Rule 123   optsExtract -> R_HOUR
Rule 124   optsExtract -> R_MINUTE
Rule 125   optsExtract -> R_SECOND
Rule 126   datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
Rule 127   dateSource -> R_TIMESTAMP STRING
Rule 128   dateSource -> T_DATE STRING
Rule 129   dateSource -> T_TIME STRING
Rule 130   dateSource -> R_INTERVAL STRING
Rule 131   dateSource -> R_NOW S_PARIZQ S_PARDER
Rule 132   current -> R_CURRENT_DATE
Rule 133   current -> R_CURRENT_TIME
Rule 134   current -> timeStamp
Rule 135   literalList -> literalList S_COMA literal
Rule 136   literalList -> literal
Rule 137   literal -> INTEGER
Rule 138   literal -> STRING
Rule 139   literal -> DECIMAL
Rule 140   literal -> CHARACTER
Rule 141   literal -> R_TRUE
Rule 142   literal -> R_FALSE
Rule 143   literal -> R_NULL
Rule 144   paramsList -> paramsList S_COMA datatype
Rule 145   paramsList -> datatype
Rule 146   datatype -> datatype O_SUMA datatype
Rule 147   datatype -> datatype O_RESTA datatype
Rule 148   datatype -> datatype O_PRODUCTO datatype
Rule 149   datatype -> datatype O_DIVISION datatype
Rule 150   datatype -> datatype O_EXPONENTE datatype
Rule 151   datatype -> datatype O_MODULAR datatype
Rule 152   datatype -> datatype OC_CONCATENAR datatype
Rule 153   datatype -> R_CASE caseList optElse R_END
Rule 154   caseList -> caseList caseWhen
Rule 155   caseList -> caseWhen
Rule 156   caseWhen -> R_WHEN expBool R_THEN literal
Rule 157   optElse -> R_ELSE literal
Rule 158   optElse -> <empty>
Rule 159   datatype -> O_RESTA datatype
Rule 160   datatype -> O_SUMA datatype
Rule 161   datatype -> columnName
Rule 162   datatype -> literal
Rule 163   datatype -> funcCall
Rule 164   datatype -> extract
Rule 165   datatype -> datePart
Rule 166   datatype -> current
Rule 167   datatype -> S_PARIZQ datatype S_PARDER
Rule 168   expComp -> datatype OL_MENORQUE datatype
Rule 169   expComp -> datatype OL_MAYORQUE datatype
Rule 170   expComp -> datatype OL_MAYORIGUALQUE datatype
Rule 171   expComp -> datatype OL_MENORIGUALQUE datatype
Rule 172   expComp -> datatype S_IGUAL datatype
Rule 173   expComp -> datatype OL_DISTINTODE datatype
Rule 174   expComp -> datatype R_IS R_DISTINCT R_FROM datatype
Rule 175   expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype
Rule 176   expComp -> datatype R_BETWEEN datatype R_AND datatype
Rule 177   expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype
Rule 178   expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
Rule 179   expComp -> datatype R_ISNULL
Rule 180   expComp -> datatype R_NOTNULL
Rule 181   expComp -> datatype R_IS R_NULL
Rule 182   expComp -> datatype R_IS R_TRUE
Rule 183   expComp -> datatype R_IS R_FALSE
Rule 184   expComp -> datatype R_IS R_UNKNOWN
Rule 185   expComp -> datatype R_IS R_NOT R_NULL
Rule 186   expComp -> datatype R_IS R_NOT R_TRUE
Rule 187   expComp -> datatype R_IS R_NOT R_FALSE
Rule 188   expComp -> datatype R_IS R_NOT R_UNKNOWN
Rule 189   expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 190   expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 191   expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 192   expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 193   expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
Rule 194   expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
Rule 195   expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 196   expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 197   expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 198   expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 199   expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 200   expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 201   expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 202   expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 203   expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 204   expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 205   expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 206   expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 207   expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 208   expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 209   expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 210   expSubq -> stringExp R_LIKE STRING
Rule 211   stringExp -> STRING
Rule 212   stringExp -> columnName
Rule 213   subqValues -> R_ALL
Rule 214   subqValues -> R_ANY
Rule 215   subqValues -> R_SOME
Rule 216   boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER
Rule 217   boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER
Rule 218   boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
Rule 219   boolean -> expComp
Rule 220   boolean -> expSubq
Rule 221   expBool -> expBool R_AND expBool
Rule 222   expBool -> expBool R_OR expBool
Rule 223   expBool -> R_NOT expBool
Rule 224   expBool -> S_PARIZQ expBool S_PARDER
Rule 225   expBool -> expBool optBoolPredicate
Rule 226   expBool -> boolean
Rule 227   optBoolPredicate -> R_IS R_TRUE
Rule 228   optBoolPredicate -> R_IS R_FALSE
Rule 229   optBoolPredicate -> R_IS R_UNKNOWN
Rule 230   optBoolPredicate -> R_IS R_NOT R_TRUE
Rule 231   optBoolPredicate -> R_IS R_NOT R_FALSE
Rule 232   optBoolPredicate -> R_IS R_NOT R_UNKNOWN
Rule 233   columnName -> ID
Rule 234   columnName -> ID S_PUNTO ID
Rule 235   booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral
Rule 236   booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral
Rule 237   booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral
Rule 238   booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral
Rule 239   booleanCheck -> idOrLiteral S_IGUAL idOrLiteral
Rule 240   booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral
Rule 241   booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
Rule 242   booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
Rule 243   idOrLiteral -> ID
Rule 244   idOrLiteral -> INTEGER
Rule 245   idOrLiteral -> STRING
Rule 246   idOrLiteral -> DECIMAL
Rule 247   idOrLiteral -> CHARACTER
Rule 248   idOrLiteral -> R_TRUE
Rule 249   idOrLiteral -> R_FALSE
Rule 250   alterStmt -> R_ALTER R_DATABASE idOrString alterDb
Rule 251   alterStmt -> R_ALTER R_TABLE idOrString alterTableList
Rule 252   alterDb -> R_RENAME R_TO idOrString
Rule 253   alterDb -> R_OWNER R_TO ownerOPts
Rule 254   ownerOPts -> idOrString
Rule 255   ownerOPts -> R_CURRENT_USER
Rule 256   ownerOPts -> R_SESSION_USER
Rule 257   alterTableList -> alterTableList S_COMA alterTable
Rule 258   alterTableList -> alterTable
Rule 259   alterTable -> R_ADD alterAdd
Rule 260   alterTable -> R_ALTER alterAlter
Rule 261   alterTable -> R_DROP alterDrop
Rule 262   alterTable -> R_RENAME alterRename
Rule 263   alterAdd -> R_COLUMN ID types
Rule 264   alterAdd -> createConstraint
Rule 265   alterAdd -> createPrimary
Rule 266   alterAdd -> createForeign
Rule 267   alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER
Rule 268   alterAlter -> R_COLUMN ID R_SET nullOpt
Rule 269   alterAlter -> R_COLUMN ID R_SET defaultVal
Rule 270   alterAlter -> R_COLUMN ID R_TYPE types
Rule 271   alterDrop -> R_CONSTRAINT ID
Rule 272   alterDrop -> R_COLUMN ID
Rule 273   alterRename -> R_COLUMN ID R_TO ID
Rule 274   dropStmt -> R_DROP R_TABLE ifExists idOrString
Rule 275   dropStmt -> R_DROP R_DATABASE ifExists idOrString
Rule 276   ifExists -> R_IF R_EXISTS
Rule 277   ifExists -> <empty>
Rule 278   selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
Rule 279   selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl
Rule 280   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
Rule 281   selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 282   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
Rule 283   selectStmt -> selectStmt R_UNION allOpt selectStmt
Rule 284   selectStmt -> selectStmt R_INTERSECT allOpt selectStmt
Rule 285   selectStmt -> selectStmt R_EXCEPT allOpt selectStmt
Rule 286   selectStmt -> S_PARIZQ selectStmt S_PARDER
Rule 287   fromCl -> R_FROM tableExp
Rule 288   selectStmt -> R_SELECT selectParams
Rule 289   allOpt -> R_ALL
Rule 290   allOpt -> <empty>
Rule 291   selectParams -> O_PRODUCTO
Rule 292   selectParams -> selectList
Rule 293   selectList -> selectList S_COMA selectListParams optAlias
Rule 294   selectList -> selectListParams optAlias
Rule 295   selectListParams -> expresion
Rule 296   selectListParams -> ID S_PUNTO O_PRODUCTO
Rule 297   optAlias -> R_AS idOrString
Rule 298   optAlias -> idOrString
Rule 299   optAlias -> <empty>
Rule 300   tableExp -> tableExp S_COMA fromBody
Rule 301   tableExp -> fromBody
Rule 302   fromBody -> ID optAlias
Rule 303   fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString
Rule 304   joinList -> joinList2
Rule 305   joinList2 -> joinList2 joinCl
Rule 306   joinList2 -> joinCl
Rule 307   joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool
Rule 308   joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
Rule 309   joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias
Rule 310   nameList -> nameList S_COMA columnName
Rule 311   nameList -> columnName
Rule 312   joinOpt -> R_INNER
Rule 313   joinOpt -> R_LEFT
Rule 314   joinOpt -> R_LEFT R_OUTER
Rule 315   joinOpt -> R_RIGHT
Rule 316   joinOpt -> R_RIGHT R_OUTER
Rule 317   joinOpt -> R_FULL
Rule 318   joinOpt -> R_FULL R_OUTER
Rule 319   whereCl -> R_WHERE expBool
Rule 320   whereCl -> <empty>
Rule 321   groupByCl -> R_GROUP R_BY groupList havingCl
Rule 322   groupByCl -> <empty>
Rule 323   groupList -> groupList S_COMA columnName
Rule 324   groupList -> groupList S_COMA INTEGER
Rule 325   groupList -> columnName
Rule 326   groupList -> INTEGER
Rule 327   havingCl -> R_HAVING expBool
Rule 328   havingCl -> <empty>
Rule 329   orderByCl -> R_ORDER R_BY orderList
Rule 330   orderList -> orderList S_COMA orderByElem
Rule 331   orderList -> orderByElem
Rule 332   orderByElem -> columnName orderOpts orderNull
Rule 333   orderByElem -> INTEGER orderOpts orderNull
Rule 334   orderOpts -> R_ASC
Rule 335   orderOpts -> R_DESC
Rule 336   orderOpts -> <empty>
Rule 337   orderNull -> R_NULL R_FIRST
Rule 338   orderNull -> R_NULL R_LAST
Rule 339   orderNull -> <empty>
Rule 340   limitCl -> R_LIMIT INTEGER offsetLimit
Rule 341   limitCl -> R_LIMIT R_ALL offsetLimit
Rule 342   limitCl -> <empty>
Rule 343   offsetLimit -> R_OFFSET INTEGER
Rule 344   offsetLimit -> <empty>
Rule 345   insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
Rule 346   paramsColumn -> S_PARIZQ idList S_PARDER
Rule 347   paramsColumn -> <empty>
Rule 348   updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl
Rule 349   updateCols -> updateCols S_COMA updateVals
Rule 350   updateCols -> updateVals
Rule 351   updateVals -> ID S_IGUAL updateExp
Rule 352   updateExp -> datatype
Rule 353   updateExp -> R_DEFAULT
Rule 354   deleteStmt -> R_DELETE fromCl whereCl
Rule 355   truncateStmt -> R_TRUNCATE tableOpt ID
Rule 356   tableOpt -> R_TABLE
Rule 357   tableOpt -> <empty>
Rule 358   showStmt -> R_SHOW R_DATABASES likeOpt
Rule 359   likeOpt -> R_LIKE STRING
Rule 360   likeOpt -> <empty>
Rule 361   useStmt -> R_USE ID

Terminals, with rules where they appear

CHARACTER            : 16 140 247
COMMENT              : 
DECIMAL              : 139 246
ID                   : 14 19 19 34 37 39 41 49 59 60 62 63 64 105 109 110 233 234 234 243 263 267 268 269 270 271 272 273 273 296 302 345 351 355 361
INTEGER              : 44 45 137 244 324 326 333 340 343
OC_AND               : 
OC_CONCATENAR        : 152
>>>>>>> main
OC_NOT               : 
OC_OR                : 
OC_SHIFTL            : 
OC_SHIFTR            : 
OC_XOR               : 
<<<<<<< HEAD
OL_DISTINTODE        : 163 184 230
OL_ESIGUAL           : 183
OL_MAYORIGUALQUE     : 160 181 227
OL_MAYORQUE          : 159 180 226
OL_MENORIGUALQUE     : 161 182 228
OL_MENORQUE          : 158 179 225
O_DIVISION           : 139
O_EXPONENTE          : 140
O_MODULAR            : 141
O_PRODUCTO           : 103 138 280 285
O_RESTA              : 137 149
O_SUMA               : 136 150
R_ADD                : 249
R_ALIAS              : 364
R_ALL                : 203 278 331
R_ALTER              : 240 241 250
R_AND                : 166 167 168 185 186 187 211
R_ANY                : 204
R_AS                 : 24 286 292 352
R_ASC                : 324
R_BEGIN              : 353
R_BETWEEN            : 166 167 168 185 186 187
R_BY                 : 310 318
R_CASE               : 143
R_CHECK              : 46 93
R_COLUMN             : 253 258 259 260 262 263
R_CONSTRAINT         : 50 261
R_COUNT              : 102 103
R_CREATE             : 18 352
R_CURRENT_DATE       : 122
R_CURRENT_TIME       : 123
R_CURRENT_USER       : 245
R_DATABASE           : 21 240 265
R_DATABASES          : 348
R_DATE_PART          : 116
R_DAY                : 75 112
R_DECLARE            : 
R_DEFAULT            : 89 343
R_DELETE             : 344
R_DESC               : 325
R_DISTINCT           : 164 165 188 189 231 232 268
R_DROP               : 251 264 265
R_ELSE               : 147
R_END                : 143 353
R_ENUM               : 24
R_EXCEPT             : 274
R_EXISTS             : 25 206 266
R_EXTRACT            : 106 107
R_FALSE              : 132 173 177 196 197 218 221 239
R_FIRST              : 327
R_FOR                : 364
R_FOREIGN            : 49
R_FROM               : 106 107 164 165 188 189 231 232 276
R_FULL               : 306 307
R_FUNCTION           : 352
R_GROUP              : 310
R_HAVING             : 316
R_HOUR               : 76 113
R_IF                 : 25 266
R_IN                 : 207 208
R_INHERITS           : 27
R_INNER              : 301
R_INSERT             : 335
R_INTERSECT          : 273
R_INTERVAL           : 72 109 120
R_INTO               : 335
R_IS                 : 164 165 171 172 173 174 175 176 177 178 188 189 190 191 194 195 196 197 198 199 217 218 219 220 221 222 231 232
R_ISNULL             : 169 192
R_JOIN               : 296 297 298
R_KEY                : 48 49 94
R_LANGUAGE           : 
R_LAST               : 328
R_LEFT               : 302 303
R_LIKE               : 200 349
R_LIMIT              : 330 331
R_MINUTE             : 77 114
R_MODE               : 34 35
R_MONTH              : 74 111
R_NATURAL            : 298
R_NOT                : 25 90 165 167 175 176 177 178 186 189 191 195 197 199 208 213 220 221 222 232
R_NOTNULL            : 170 193
R_NOW                : 101 121
R_NULL               : 90 91 133 171 175 190 191 327 328 356 359 367 368
R_OFFSET             : 333
R_ON                 : 296
R_OR                 : 22 212
R_ORDER              : 318
R_OUTER              : 303 305 307
R_OWNER              : 29 30 31 32 243
R_PRIMARY            : 48 94
R_PROM               : 105
R_REFERENCES         : 49 95
R_RENAME             : 242 252
R_REPLACE            : 22
R_RETURNS            : 357
R_RIGHT              : 304 305
R_SECOND             : 78 115
R_SELECT             : 268 269 270 271 277
R_SESSION_USER       : 246
R_SET                : 258 259 338
R_SHOW               : 348
R_SOME               : 205
R_SUM                : 104
R_SYMMETRIC          : 168 187
R_TABLE              : 20 241 264 346
R_THEN               : 146
R_TIMESTAMP          : 63 108 117
R_TO                 : 242 243 263
R_TRUE               : 131 172 176 194 195 217 220 238
R_TRUNCATE           : 345
R_TYPE               : 24 260
R_UNION              : 272
R_UNIQUE             : 47 92 257
R_UNKNOWN            : 174 178 198 199 219 222
R_UPDATE             : 338
R_USE                : 351
R_USING              : 297
R_VALUES             : 335
R_WHEN               : 146
R_WHERE              : 308
R_YEAR               : 73 110
STRING               : 16 30 32 108 109 116 117 118 119 120 128 200 201 235 349
S_COMA               : 37 52 116 125 134 247 282 289 299 312 313 320 339
S_DOLAR              : 352 352
S_IGUAL              : 31 32 35 162 229 341
S_PARDER             : 20 24 27 46 47 48 49 49 80 93 98 99 100 101 102 103 104 105 106 107 116 121 157 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 206 207 208 214 257 275 292 297 335 336 352
S_PARIZQ             : 20 24 27 46 47 48 49 49 80 93 98 99 100 101 102 103 104 105 106 107 116 121 157 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 206 207 208 214 257 275 292 297 335 336 352
S_PUNTO              : 224 285
S_PUNTOCOMA          : 4 5 6 7 8 9 10 11 12 13 14
T_BIGINT             : 57
T_BOOLEAN            : 62
T_CHAR               : 70
T_CHARACTER          : 69 71
T_DATE               : 64 118
T_DECIMAL            : 66
T_DOUBLE             : 59
T_INTEGER            : 56
T_MONEY              : 60
T_NUMERIC            : 67
T_PRECISION          : 59
T_REAL               : 58
T_SMALLINT           : 55
T_TEXT               : 61
T_TIME               : 65 119
T_VARCHAR            : 68
T_VARYING            : 71
=======
OL_DISTINTODE        : 173 194 240
OL_ESIGUAL           : 193
OL_MAYORIGUALQUE     : 170 191 237
OL_MAYORQUE          : 169 190 236
OL_MENORIGUALQUE     : 171 192 238
OL_MENORQUE          : 168 189 235
O_DIVISION           : 149
O_EXPONENTE          : 150
O_MODULAR            : 151
O_PRODUCTO           : 113 148 291 296
O_RESTA              : 147 159
O_SUMA               : 146 160
R_ADD                : 259
R_ALL                : 213 289 341
R_ALTER              : 250 251 260
R_AND                : 176 177 178 195 196 197 221
R_ANY                : 214
R_AS                 : 34 297 303
R_ASC                : 28 334
R_BETWEEN            : 176 177 178 195 196 197
R_BY                 : 321 329
R_CASE               : 153
R_CHECK              : 56 103
R_COLUMN             : 263 268 269 270 272 273
R_CONSTRAINT         : 60 271
R_COUNT              : 112 113
R_CREATE             : 17
R_CURRENT_DATE       : 132
R_CURRENT_TIME       : 133
R_CURRENT_USER       : 255
R_DATABASE           : 31 250 275
R_DATABASES          : 358
R_DATE_PART          : 126
R_DAY                : 85 122
R_DEFAULT            : 99 353
R_DELETE             : 354
R_DESC               : 27 335
R_DISTINCT           : 174 175 198 199 241 242 278
R_DROP               : 261 274 275
R_ELSE               : 157
R_END                : 153
R_ENUM               : 34
R_EXCEPT             : 285
R_EXISTS             : 35 216 276
R_EXTRACT            : 116 117
R_FALSE              : 142 183 187 206 207 228 231 249
R_FIRST              : 24 337
R_FOREIGN            : 59
R_FROM               : 116 117 174 175 198 199 241 242 287
R_FULL               : 317 318
R_GROUP              : 321
R_HASH               : 22
R_HAVING             : 327
R_HOUR               : 86 123
R_IF                 : 35 276
R_IN                 : 217 218
R_INDEX              : 19
R_INHERITS           : 37
R_INNER              : 312
R_INSERT             : 345
R_INTERSECT          : 284
R_INTERVAL           : 82 119 130
R_INTO               : 345
R_IS                 : 174 175 181 182 183 184 185 186 187 188 198 199 200 201 204 205 206 207 208 209 227 228 229 230 231 232 241 242
R_ISNULL             : 179 202
R_JOIN               : 307 308 309
R_KEY                : 58 59 104
R_LAST               : 25 338
R_LEFT               : 313 314
R_LIKE               : 210 359
R_LIMIT              : 340 341
R_MINUTE             : 87 124
R_MODE               : 44 45
R_MONTH              : 84 121
R_NATURAL            : 309
R_NOT                : 35 100 175 177 185 186 187 188 196 199 201 205 207 209 218 223 230 231 232 242
R_NOTNULL            : 180 203
R_NOW                : 111 131
R_NULL               : 100 101 143 181 185 200 201 337 338
R_NULLS              : 24 25
R_OFFSET             : 343
R_ON                 : 19 307
R_OR                 : 32 222
R_ORDER              : 329
R_OUTER              : 314 316 318
R_OWNER              : 39 40 41 42 253
R_PRIMARY            : 58 104
R_PROM               : 115
R_REFERENCES         : 59 105
R_RENAME             : 252 262
R_REPLACE            : 32
R_RIGHT              : 315 316
R_SECOND             : 88 125
R_SELECT             : 278 279 280 281 282 288
R_SESSION_USER       : 256
R_SET                : 268 269 348
R_SHOW               : 358
R_SOME               : 215
R_SUM                : 114
R_SYMMETRIC          : 178 197
R_TABLE              : 30 251 274 356
R_THEN               : 156
R_TIMESTAMP          : 73 118 127
R_TO                 : 252 253 273
R_TRUE               : 141 182 186 204 205 227 230 248
R_TRUNCATE           : 355
R_TYPE               : 34 270
R_UNION              : 283
R_UNIQUE             : 20 57 102 267
R_UNKNOWN            : 184 188 208 209 229 232
R_UPDATE             : 348
R_USE                : 361
R_USING              : 22 308
R_VALUES             : 345
R_WHEN               : 156
R_WHERE              : 319
R_YEAR               : 83 120
STRING               : 15 40 42 118 119 126 127 128 129 130 138 210 211 245 359
S_COMA               : 47 62 126 135 144 257 293 300 310 323 324 330 349
S_IGUAL              : 41 42 45 172 239 351
S_PARDER             : 19 30 34 37 56 57 58 59 59 90 103 108 109 110 111 112 113 114 115 116 117 126 131 167 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 216 217 218 224 267 286 303 308 345 346
S_PARIZQ             : 19 30 34 37 56 57 58 59 59 90 103 108 109 110 111 112 113 114 115 116 117 126 131 167 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 216 217 218 224 267 286 303 308 345 346
S_PUNTO              : 234 296
S_PUNTOCOMA          : 4 5 6 7 8 9 10 11 12 13
T_BIGINT             : 67
T_BOOLEAN            : 72
T_CHAR               : 80
T_CHARACTER          : 79 81
T_DATE               : 74 128
T_DECIMAL            : 76
T_DOUBLE             : 69
T_INTEGER            : 66
T_MONEY              : 70
T_NUMERIC            : 77
T_PRECISION          : 69
T_REAL               : 68
T_SMALLINT           : 65
T_TEXT               : 71
T_TIME               : 75 129
T_VARCHAR            : 78
T_VARYING            : 81
>>>>>>> main
error                : 

Nonterminals, with rules where they appear

<<<<<<< HEAD
alias_declaracion    : 364
allOpt               : 272 273 274
alterAdd             : 249
alterAlter           : 250
alterDb              : 240
alterDrop            : 251
alterRename          : 252
alterStmt            : 6
alterTable           : 247 248
alterTableList       : 241 247
beginStmt            : 353
bloqueFunction       : 352
boolean              : 216
booleanCheck         : 46 93
caseList             : 143 144
caseWhen             : 144 145
colOptions           : 82 83
colOptionsList       : 44 82
columnName           : 107 151 202 296 297 298 299 300 312 314 322
constrName           : 46 49 92 93 257
constraintOpt        : 86
createBody           : 18
createColumns        : 39
createConstraint     : 40 254
createForeign        : 43 256
createMode           : 21
createOpts           : 19
createOwner          : 21
createPrimary        : 42 255
createStmt           : 4
createTable          : 37 38
createTableList      : 20 37
createUnique         : 41
current              : 156
datatype             : 96 102 104 105 134 135 136 136 137 137 138 138 139 139 140 140 141 141 142 142 149 150 157 158 158 159 159 160 160 161 161 162 162 163 163 164 164 165 165 166 166 166 167 167 167 168 168 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 185 185 186 186 186 187 187 187 188 188 189 189 190 191 192 193 194 195 196 197 198 199 207 208 342
datePart             : 155
dateSource           : 116
declaracion_item     : 361 362
declaracion_list     : 361
declareStmt          : 353
defaultVal           : 84 259
deleteStmt           : 10
dropStmt             : 7
expBool              : 97 146 211 211 212 212 213 214 215 296 308 316
expComp              : 209
expSubq              : 210
expresion            : 284
extract              : 154
fromBody             : 289 290 338
fromCl               : 268 269 270 271 344
funcCall             : 153
functionStmt         : 14
groupByCl            : 268 269 270 271
groupList            : 310 312 313
havingCl             : 310
idList               : 47 48 49 49 52 336
idOrLiteral          : 225 225 226 226 227 227 228 228 229 229 230 230 231 231 232 232
idOrString           : 20 21 240 241 242 244 264 265 286 287 292
ifExists             : 264 265
ifNotExists          : 20 21 24
inheritsOpt          : 20
init                 : 0
insertStmt           : 8
intervalFields       : 72
item_returns         : 357
joinCl               : 294 295
joinList             : 270 271
joinList2            : 293 294
joinOpt              : 296 297 298
labelEnd             : 353
likeOpt              : 348
limitCl              : 268 269 270 271
literal              : 89 125 126 146 147 152
literalList          : 80 125
nameList             : 297 299
nullOpt              : 85 258
offsetLimit          : 330 331
optAlias             : 282 283 291 296 297 298
optBoolPredicate     : 215
optElse              : 143
optParams            : 66 67 68 69 70 71
optsExtract          : 106 107
orReplace            : 21
orderByCl            : 268 269 270
orderByElem          : 320 321
orderList            : 318 320
orderNull            : 322 323
orderOpts            : 322 323
ownerOPts            : 243
param_item           : 354 355
paramsColumn         : 335
paramsList           : 24 99 134 335
params_list          : 352 354
primaryOpt           : 87
referencesOpt        : 88
returnsStmt          : 352
selectList           : 281 282
selectListParams     : 282 283
selectParams         : 268 269 270 271 277
selectStmt           : 13 98 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 206 207 208 272 272 273 273 274 274 275 292
showStmt             : 5
stmt                 : 2 3
stmtList             : 1 2
stringExp            : 200
subqValues           : 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199
tableExp             : 276 289
tableOpt             : 345
timeStamp            : 106 124
truncateStmt         : 11
types                : 39 253 260 363
updateCols           : 338 339
updateExp            : 341
updateStmt           : 9
updateVals           : 339 340
useStmt              : 12
whereCl              : 268 269 270 271 338 344
=======
allOpt               : 283 284 285
alterAdd             : 259
alterAlter           : 260
alterDb              : 250
alterDrop            : 261
alterRename          : 262
alterStmt            : 6
alterTable           : 257 258
alterTableList       : 251 257
boolean              : 226
booleanCheck         : 56 103
caseList             : 153 154
caseWhen             : 154 155
colOptions           : 92 93
colOptionsList       : 54 92
columnName           : 117 161 212 307 308 309 310 311 323 325 332
constrName           : 56 59 102 103 267
constraintOpt        : 96
createBody           : 17
createColumns        : 49
createConstraint     : 50 264
createForeign        : 53 266
createMode           : 31
createOpts           : 18
createOwner          : 31
createPrimary        : 52 265
createStmt           : 4
createTable          : 47 48
createTableList      : 30 47
createUnique         : 51
current              : 166
datatype             : 106 112 114 115 144 145 146 146 147 147 148 148 149 149 150 150 151 151 152 152 159 160 167 168 168 169 169 170 170 171 171 172 172 173 173 174 174 175 175 176 176 176 177 177 177 178 178 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 195 195 196 196 196 197 197 197 198 198 199 199 200 201 202 203 204 205 206 207 208 209 217 218 352
datePart             : 165
dateSource           : 126
defaultVal           : 94 269
deleteStmt           : 10
dropStmt             : 7
expBool              : 107 156 221 221 222 222 223 224 225 307 319 327
expComp              : 219
expSubq              : 220
expresion            : 295
extract              : 164
fromBody             : 300 301 348
fromCl               : 278 279 280 281 282 354
funcCall             : 163
groupByCl            : 278 279 280 281 282
groupList            : 321 323 324
havingCl             : 321
idList               : 19 57 58 59 59 62 346
idOrLiteral          : 235 235 236 236 237 237 238 238 239 239 240 240 241 241 242 242
idOrString           : 30 31 250 251 252 254 274 275 297 298 303
ifExists             : 274 275
ifNotExists          : 30 31 34
indexNullS           : 19
indexasc_desc        : 19
inheritsOpt          : 30
init                 : 0
insertStmt           : 8
intervalFields       : 82
joinCl               : 305 306
joinList             : 280 282
joinList2            : 304 305
joinOpt              : 307 308 309
likeOpt              : 358
limitCl              : 278 279 280 281 282
literal              : 99 135 136 156 157 162
literalList          : 90 135
nameList             : 308 310
nullOpt              : 95 268
offsetLimit          : 340 341
optAlias             : 293 294 302 307 308 309
optBoolPredicate     : 225
optElse              : 153
optParams            : 76 77 78 79 80 81
optsExtract          : 116 117
orReplace            : 31
orderByCl            : 280 281
orderByElem          : 330 331
orderList            : 329 330
orderNull            : 332 333
orderOpts            : 332 333
ownerOPts            : 253
paramsColumn         : 345
paramsList           : 34 109 144 345
primaryOpt           : 97
referencesOpt        : 98
selectList           : 292 293
selectListParams     : 293 294
selectParams         : 278 279 280 281 282 288
selectStmt           : 13 108 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 216 217 218 283 283 284 284 285 285 286 303
showStmt             : 5
stmt                 : 2 3
stmtList             : 1 2
stringExp            : 210
subqValues           : 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209
tableExp             : 287 300
tableOpt             : 355
timeStamp            : 116 134
truncateStmt         : 11
types                : 49 263 270
unique_index         : 19
updateCols           : 348 349
updateExp            : 351
updateStmt           : 9
updateVals           : 349 350
useStmt              : 12
using_hash_index     : 19
whereCl              : 19 278 279 280 281 282 348 354
>>>>>>> main

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . stmtList
    (2) stmtList -> . stmtList stmt
    (3) stmtList -> . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
<<<<<<< HEAD
    (14) stmt -> . functionStmt S_PUNTOCOMA
    (18) createStmt -> . R_CREATE createBody
    (348) showStmt -> . R_SHOW R_DATABASES likeOpt
    (240) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (241) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (264) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (265) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (335) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (338) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (344) deleteStmt -> . R_DELETE fromCl whereCl
    (345) truncateStmt -> . R_TRUNCATE tableOpt ID
    (351) useStmt -> . R_USE ID
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
    (352) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction

    R_CREATE        shift and go to state 15
    R_SHOW          shift and go to state 16
    R_ALTER         shift and go to state 17
    R_DROP          shift and go to state 18
    R_INSERT        shift and go to state 19
    R_UPDATE        shift and go to state 21
    R_DELETE        shift and go to state 22
    R_TRUNCATE      shift and go to state 23
    R_USE           shift and go to state 24
    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20
=======
    (17) createStmt -> . R_CREATE createBody
    (358) showStmt -> . R_SHOW R_DATABASES likeOpt
    (250) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (251) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (274) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (275) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (345) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (348) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (354) deleteStmt -> . R_DELETE fromCl whereCl
    (355) truncateStmt -> . R_TRUNCATE tableOpt ID
    (361) useStmt -> . R_USE ID
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_CREATE        shift and go to state 14
    R_SHOW          shift and go to state 15
    R_ALTER         shift and go to state 16
    R_DROP          shift and go to state 17
    R_INSERT        shift and go to state 18
    R_UPDATE        shift and go to state 20
    R_DELETE        shift and go to state 21
    R_TRUNCATE      shift and go to state 22
    R_USE           shift and go to state 23
    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19
>>>>>>> main

    init                           shift and go to state 1
    stmtList                       shift and go to state 2
    stmt                           shift and go to state 3
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14

state 1

    (0) S' -> init .



state 2

    (1) init -> stmtList .
    (2) stmtList -> stmtList . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
<<<<<<< HEAD
    (14) stmt -> . functionStmt S_PUNTOCOMA
    (18) createStmt -> . R_CREATE createBody
    (348) showStmt -> . R_SHOW R_DATABASES likeOpt
    (240) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (241) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (264) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (265) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (335) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (338) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (344) deleteStmt -> . R_DELETE fromCl whereCl
    (345) truncateStmt -> . R_TRUNCATE tableOpt ID
    (351) useStmt -> . R_USE ID
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
    (352) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
=======
    (17) createStmt -> . R_CREATE createBody
    (358) showStmt -> . R_SHOW R_DATABASES likeOpt
    (250) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (251) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (274) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (275) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (345) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (348) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (354) deleteStmt -> . R_DELETE fromCl whereCl
    (355) truncateStmt -> . R_TRUNCATE tableOpt ID
    (361) useStmt -> . R_USE ID
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams
>>>>>>> main

    $end            reduce using rule 1 (init -> stmtList .)
    R_CREATE        shift and go to state 15
    R_SHOW          shift and go to state 16
    R_ALTER         shift and go to state 17
    R_DROP          shift and go to state 18
    R_INSERT        shift and go to state 19
    R_UPDATE        shift and go to state 21
    R_DELETE        shift and go to state 22
    R_TRUNCATE      shift and go to state 23
    R_USE           shift and go to state 24
    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    stmt                           shift and go to state 26
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14

state 3

    (3) stmtList -> stmt .

    R_CREATE        reduce using rule 3 (stmtList -> stmt .)
    R_SHOW          reduce using rule 3 (stmtList -> stmt .)
    R_ALTER         reduce using rule 3 (stmtList -> stmt .)
    R_DROP          reduce using rule 3 (stmtList -> stmt .)
    R_INSERT        reduce using rule 3 (stmtList -> stmt .)
    R_UPDATE        reduce using rule 3 (stmtList -> stmt .)
    R_DELETE        reduce using rule 3 (stmtList -> stmt .)
    R_TRUNCATE      reduce using rule 3 (stmtList -> stmt .)
    R_USE           reduce using rule 3 (stmtList -> stmt .)
    R_SELECT        reduce using rule 3 (stmtList -> stmt .)
    S_PARIZQ        reduce using rule 3 (stmtList -> stmt .)
    $end            reduce using rule 3 (stmtList -> stmt .)


state 4

    (4) stmt -> createStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 27


state 5

    (5) stmt -> showStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 28


state 6

    (6) stmt -> alterStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 29


state 7

    (7) stmt -> dropStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 30


state 8

    (8) stmt -> insertStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 31


state 9

    (9) stmt -> updateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 32


state 10

    (10) stmt -> deleteStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 33


state 11

    (11) stmt -> truncateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 34


state 12

    (12) stmt -> useStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 35


state 13

    (13) stmt -> selectStmt . S_PUNTOCOMA
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     shift and go to state 36
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39


state 14

<<<<<<< HEAD
    (14) stmt -> functionStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 40


state 15

    (18) createStmt -> R_CREATE . createBody
    (352) functionStmt -> R_CREATE . R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (19) createBody -> . createOpts
    (20) createOpts -> . R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (21) createOpts -> . orReplace R_DATABASE ifNotExists idOrString createOwner createMode
    (24) createOpts -> . R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (22) orReplace -> . R_OR R_REPLACE
    (23) orReplace -> .

    R_FUNCTION      shift and go to state 42
    R_TABLE         shift and go to state 44
    R_TYPE          shift and go to state 46
    R_OR            shift and go to state 47
    R_DATABASE      reduce using rule 23 (orReplace -> .)

    createBody                     shift and go to state 41
    createOpts                     shift and go to state 43
    orReplace                      shift and go to state 45

state 16

    (348) showStmt -> R_SHOW . R_DATABASES likeOpt

    R_DATABASES     shift and go to state 48
=======
    (17) createStmt -> R_CREATE . createBody
    (18) createBody -> . createOpts
    (19) createOpts -> . unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
    (30) createOpts -> . R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (31) createOpts -> . orReplace R_DATABASE ifNotExists idOrString createOwner createMode
    (34) createOpts -> . R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (20) unique_index -> . R_UNIQUE
    (21) unique_index -> .
    (32) orReplace -> . R_OR R_REPLACE
    (33) orReplace -> .

    R_TABLE         shift and go to state 42
    R_TYPE          shift and go to state 44
    R_UNIQUE        shift and go to state 45
    R_INDEX         reduce using rule 21 (unique_index -> .)
    R_OR            shift and go to state 46
    R_DATABASE      reduce using rule 33 (orReplace -> .)

    createBody                     shift and go to state 39
    createOpts                     shift and go to state 40
    unique_index                   shift and go to state 41
    orReplace                      shift and go to state 43

state 15

    (358) showStmt -> R_SHOW . R_DATABASES likeOpt

    R_DATABASES     shift and go to state 47


state 16

    (250) alterStmt -> R_ALTER . R_DATABASE idOrString alterDb
    (251) alterStmt -> R_ALTER . R_TABLE idOrString alterTableList

    R_DATABASE      shift and go to state 48
    R_TABLE         shift and go to state 49
>>>>>>> main


state 17

<<<<<<< HEAD
    (240) alterStmt -> R_ALTER . R_DATABASE idOrString alterDb
    (241) alterStmt -> R_ALTER . R_TABLE idOrString alterTableList

    R_DATABASE      shift and go to state 49
    R_TABLE         shift and go to state 50
=======
    (274) dropStmt -> R_DROP . R_TABLE ifExists idOrString
    (275) dropStmt -> R_DROP . R_DATABASE ifExists idOrString

    R_TABLE         shift and go to state 50
    R_DATABASE      shift and go to state 51
>>>>>>> main


state 18

<<<<<<< HEAD
    (264) dropStmt -> R_DROP . R_TABLE ifExists idOrString
    (265) dropStmt -> R_DROP . R_DATABASE ifExists idOrString

    R_TABLE         shift and go to state 51
    R_DATABASE      shift and go to state 52
=======
    (345) insertStmt -> R_INSERT . R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    R_INTO          shift and go to state 52
>>>>>>> main


state 19

<<<<<<< HEAD
    (335) insertStmt -> R_INSERT . R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    R_INTO          shift and go to state 53


state 20

    (275) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
=======
    (286) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams
>>>>>>> main

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

<<<<<<< HEAD
    selectStmt                     shift and go to state 54
=======
    selectStmt                     shift and go to state 53
>>>>>>> main

state 21

<<<<<<< HEAD
    (338) updateStmt -> R_UPDATE . fromBody R_SET updateCols whereCl
    (291) fromBody -> . ID optAlias
    (292) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 56
    S_PARIZQ        shift and go to state 57

    fromBody                       shift and go to state 55
=======
    (348) updateStmt -> R_UPDATE . fromBody R_SET updateCols whereCl
    (302) fromBody -> . ID optAlias
    (303) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 55
    S_PARIZQ        shift and go to state 56

    fromBody                       shift and go to state 54
>>>>>>> main

state 22

<<<<<<< HEAD
    (344) deleteStmt -> R_DELETE . fromCl whereCl
    (276) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 59

    fromCl                         shift and go to state 58
=======
    (354) deleteStmt -> R_DELETE . fromCl whereCl
    (287) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 58

    fromCl                         shift and go to state 57
>>>>>>> main

state 23

<<<<<<< HEAD
    (345) truncateStmt -> R_TRUNCATE . tableOpt ID
    (346) tableOpt -> . R_TABLE
    (347) tableOpt -> .

    R_TABLE         shift and go to state 61
    ID              reduce using rule 347 (tableOpt -> .)

    tableOpt                       shift and go to state 60
=======
    (355) truncateStmt -> R_TRUNCATE . tableOpt ID
    (356) tableOpt -> . R_TABLE
    (357) tableOpt -> .

    R_TABLE         shift and go to state 60
    ID              reduce using rule 357 (tableOpt -> .)

    tableOpt                       shift and go to state 59
>>>>>>> main

state 24

<<<<<<< HEAD
    (351) useStmt -> R_USE . ID

    ID              shift and go to state 62
=======
    (361) useStmt -> R_USE . ID

    ID              shift and go to state 61
>>>>>>> main


state 25

<<<<<<< HEAD
    (268) selectStmt -> R_SELECT . R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> R_SELECT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl limitCl
    (277) selectStmt -> R_SELECT . selectParams
    (280) selectParams -> . O_PRODUCTO
    (281) selectParams -> . selectList
    (282) selectList -> . selectList S_COMA selectListParams optAlias
    (283) selectList -> . selectListParams optAlias
    (284) selectListParams -> . expresion
    (285) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (96) expresion -> . datatype
    (97) expresion -> . expBool
    (98) expresion -> . S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName

    R_DISTINCT      shift and go to state 63
    O_PRODUCTO      shift and go to state 65
    ID              shift and go to state 69
    S_PARIZQ        shift and go to state 72
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    R_NOT           shift and go to state 82
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_EXISTS        shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectParams                   shift and go to state 64
    selectList                     shift and go to state 66
    selectListParams               shift and go to state 67
    expresion                      shift and go to state 68
    datatype                       shift and go to state 70
    expBool                        shift and go to state 71
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    boolean                        shift and go to state 83
    timeStamp                      shift and go to state 96
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    stringExp                      shift and go to state 105
=======
    (278) selectStmt -> R_SELECT . R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> R_SELECT . selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> R_SELECT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl limitCl
    (288) selectStmt -> R_SELECT . selectParams
    (291) selectParams -> . O_PRODUCTO
    (292) selectParams -> . selectList
    (293) selectList -> . selectList S_COMA selectListParams optAlias
    (294) selectList -> . selectListParams optAlias
    (295) selectListParams -> . expresion
    (296) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (106) expresion -> . datatype
    (107) expresion -> . expBool
    (108) expresion -> . S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName

    R_DISTINCT      shift and go to state 62
    O_PRODUCTO      shift and go to state 64
    ID              shift and go to state 68
    S_PARIZQ        shift and go to state 71
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    R_NOT           shift and go to state 81
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_EXISTS        shift and go to state 99
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    selectParams                   shift and go to state 63
    selectList                     shift and go to state 65
    selectListParams               shift and go to state 66
    expresion                      shift and go to state 67
    datatype                       shift and go to state 69
    expBool                        shift and go to state 70
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    boolean                        shift and go to state 82
    timeStamp                      shift and go to state 95
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    stringExp                      shift and go to state 104
>>>>>>> main

state 26

    (2) stmtList -> stmtList stmt .

    R_CREATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SHOW          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_ALTER         reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DROP          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_INSERT        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_UPDATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DELETE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_TRUNCATE      reduce using rule 2 (stmtList -> stmtList stmt .)
    R_USE           reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SELECT        reduce using rule 2 (stmtList -> stmtList stmt .)
    S_PARIZQ        reduce using rule 2 (stmtList -> stmtList stmt .)
    $end            reduce using rule 2 (stmtList -> stmtList stmt .)


state 27

    (4) stmt -> createStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    $end            reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)


state 28

    (5) stmt -> showStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    $end            reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)


state 29

    (6) stmt -> alterStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    $end            reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)


state 30

    (7) stmt -> dropStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    $end            reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)


state 31

    (8) stmt -> insertStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    $end            reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)


state 32

    (9) stmt -> updateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    $end            reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)


state 33

    (10) stmt -> deleteStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    $end            reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)


state 34

    (11) stmt -> truncateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    $end            reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)


state 35

    (12) stmt -> useStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    $end            reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)


state 36

    (13) stmt -> selectStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    $end            reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)


state 37

    (283) selectStmt -> selectStmt R_UNION . allOpt selectStmt
    (289) allOpt -> . R_ALL
    (290) allOpt -> .

<<<<<<< HEAD
    R_ALL           shift and go to state 107
    R_SELECT        reduce using rule 279 (allOpt -> .)
    S_PARIZQ        reduce using rule 279 (allOpt -> .)

    allOpt                         shift and go to state 106
=======
    R_ALL           shift and go to state 106
    R_SELECT        reduce using rule 290 (allOpt -> .)
    S_PARIZQ        reduce using rule 290 (allOpt -> .)

    allOpt                         shift and go to state 105
>>>>>>> main

state 38

    (284) selectStmt -> selectStmt R_INTERSECT . allOpt selectStmt
    (289) allOpt -> . R_ALL
    (290) allOpt -> .

<<<<<<< HEAD
    R_ALL           shift and go to state 107
    R_SELECT        reduce using rule 279 (allOpt -> .)
    S_PARIZQ        reduce using rule 279 (allOpt -> .)

    allOpt                         shift and go to state 108
=======
    R_ALL           shift and go to state 106
    R_SELECT        reduce using rule 290 (allOpt -> .)
    S_PARIZQ        reduce using rule 290 (allOpt -> .)

    allOpt                         shift and go to state 107
>>>>>>> main

state 39

    (285) selectStmt -> selectStmt R_EXCEPT . allOpt selectStmt
    (289) allOpt -> . R_ALL
    (290) allOpt -> .

<<<<<<< HEAD
    R_ALL           shift and go to state 107
    R_SELECT        reduce using rule 279 (allOpt -> .)
    S_PARIZQ        reduce using rule 279 (allOpt -> .)

    allOpt                         shift and go to state 109
=======
    R_ALL           shift and go to state 106
    R_SELECT        reduce using rule 290 (allOpt -> .)
    S_PARIZQ        reduce using rule 290 (allOpt -> .)

    allOpt                         shift and go to state 108

state 39

    (17) createStmt -> R_CREATE createBody .

    S_PUNTOCOMA     reduce using rule 17 (createStmt -> R_CREATE createBody .)

>>>>>>> main

state 40

    (14) stmt -> functionStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)
    $end            reduce using rule 14 (stmt -> functionStmt S_PUNTOCOMA .)


state 41

<<<<<<< HEAD
    (18) createStmt -> R_CREATE createBody .

    S_PUNTOCOMA     reduce using rule 18 (createStmt -> R_CREATE createBody .)
=======
    (19) createOpts -> unique_index . R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    R_INDEX         shift and go to state 109
>>>>>>> main


state 42

<<<<<<< HEAD
    (352) functionStmt -> R_CREATE R_FUNCTION . ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction

    ID              shift and go to state 110
=======
    (30) createOpts -> R_TABLE . ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (35) ifNotExists -> . R_IF R_NOT R_EXISTS
    (36) ifNotExists -> .

    R_IF            shift and go to state 111
    ID              reduce using rule 36 (ifNotExists -> .)
    STRING          reduce using rule 36 (ifNotExists -> .)
    CHARACTER       reduce using rule 36 (ifNotExists -> .)
>>>>>>> main

    ifNotExists                    shift and go to state 110

state 43

<<<<<<< HEAD
    (19) createBody -> createOpts .

    S_PUNTOCOMA     reduce using rule 19 (createBody -> createOpts .)
=======
    (31) createOpts -> orReplace . R_DATABASE ifNotExists idOrString createOwner createMode

    R_DATABASE      shift and go to state 112
>>>>>>> main


state 44

<<<<<<< HEAD
    (20) createOpts -> R_TABLE . ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (25) ifNotExists -> . R_IF R_NOT R_EXISTS
    (26) ifNotExists -> .

    R_IF            shift and go to state 112
    ID              reduce using rule 26 (ifNotExists -> .)
    STRING          reduce using rule 26 (ifNotExists -> .)
    CHARACTER       reduce using rule 26 (ifNotExists -> .)

    ifNotExists                    shift and go to state 111

state 45

    (21) createOpts -> orReplace . R_DATABASE ifNotExists idOrString createOwner createMode

    R_DATABASE      shift and go to state 113
=======
    (34) createOpts -> R_TYPE . ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (35) ifNotExists -> . R_IF R_NOT R_EXISTS
    (36) ifNotExists -> .

    R_IF            shift and go to state 111
    ID              reduce using rule 36 (ifNotExists -> .)

    ifNotExists                    shift and go to state 113

state 45

    (20) unique_index -> R_UNIQUE .

    R_INDEX         reduce using rule 20 (unique_index -> R_UNIQUE .)
>>>>>>> main


state 46

<<<<<<< HEAD
    (24) createOpts -> R_TYPE . ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (25) ifNotExists -> . R_IF R_NOT R_EXISTS
    (26) ifNotExists -> .

    R_IF            shift and go to state 112
    ID              reduce using rule 26 (ifNotExists -> .)

    ifNotExists                    shift and go to state 114

state 47

    (22) orReplace -> R_OR . R_REPLACE

    R_REPLACE       shift and go to state 115


state 48

    (348) showStmt -> R_SHOW R_DATABASES . likeOpt
    (349) likeOpt -> . R_LIKE STRING
    (350) likeOpt -> .

    R_LIKE          shift and go to state 117
    S_PUNTOCOMA     reduce using rule 350 (likeOpt -> .)

    likeOpt                        shift and go to state 116

state 49

    (240) alterStmt -> R_ALTER R_DATABASE . idOrString alterDb
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    idOrString                     shift and go to state 118

state 50

    (241) alterStmt -> R_ALTER R_TABLE . idOrString alterTableList
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    idOrString                     shift and go to state 122

state 51

    (264) dropStmt -> R_DROP R_TABLE . ifExists idOrString
    (266) ifExists -> . R_IF R_EXISTS
    (267) ifExists -> .

    R_IF            shift and go to state 124
    ID              reduce using rule 267 (ifExists -> .)
    STRING          reduce using rule 267 (ifExists -> .)
    CHARACTER       reduce using rule 267 (ifExists -> .)

    ifExists                       shift and go to state 123

state 52

    (265) dropStmt -> R_DROP R_DATABASE . ifExists idOrString
    (266) ifExists -> . R_IF R_EXISTS
    (267) ifExists -> .

    R_IF            shift and go to state 124
    ID              reduce using rule 267 (ifExists -> .)
    STRING          reduce using rule 267 (ifExists -> .)
    CHARACTER       reduce using rule 267 (ifExists -> .)

    ifExists                       shift and go to state 125

state 53

    (335) insertStmt -> R_INSERT R_INTO . ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 126


state 54

    (275) selectStmt -> S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 127
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (32) orReplace -> R_OR . R_REPLACE

    R_REPLACE       shift and go to state 114


state 47

    (358) showStmt -> R_SHOW R_DATABASES . likeOpt
    (359) likeOpt -> . R_LIKE STRING
    (360) likeOpt -> .

    R_LIKE          shift and go to state 116
    S_PUNTOCOMA     reduce using rule 360 (likeOpt -> .)

    likeOpt                        shift and go to state 115

state 48

    (250) alterStmt -> R_ALTER R_DATABASE . idOrString alterDb
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 117

state 49

    (251) alterStmt -> R_ALTER R_TABLE . idOrString alterTableList
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 121

state 50

    (274) dropStmt -> R_DROP R_TABLE . ifExists idOrString
    (276) ifExists -> . R_IF R_EXISTS
    (277) ifExists -> .

    R_IF            shift and go to state 123
    ID              reduce using rule 277 (ifExists -> .)
    STRING          reduce using rule 277 (ifExists -> .)
    CHARACTER       reduce using rule 277 (ifExists -> .)

    ifExists                       shift and go to state 122

state 51

    (275) dropStmt -> R_DROP R_DATABASE . ifExists idOrString
    (276) ifExists -> . R_IF R_EXISTS
    (277) ifExists -> .

    R_IF            shift and go to state 123
    ID              reduce using rule 277 (ifExists -> .)
    STRING          reduce using rule 277 (ifExists -> .)
    CHARACTER       reduce using rule 277 (ifExists -> .)
>>>>>>> main

    ifExists                       shift and go to state 124

state 55

<<<<<<< HEAD
    (338) updateStmt -> R_UPDATE fromBody . R_SET updateCols whereCl

    R_SET           shift and go to state 128
=======
    (345) insertStmt -> R_INSERT R_INTO . ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 125
>>>>>>> main


state 56

<<<<<<< HEAD
    (291) fromBody -> ID . optAlias
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    R_AS            shift and go to state 130
    R_SET           reduce using rule 288 (optAlias -> .)
    S_COMA          reduce using rule 288 (optAlias -> .)
    R_WHERE         reduce using rule 288 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 288 (optAlias -> .)
    R_NATURAL       reduce using rule 288 (optAlias -> .)
    R_INNER         reduce using rule 288 (optAlias -> .)
    R_LEFT          reduce using rule 288 (optAlias -> .)
    R_RIGHT         reduce using rule 288 (optAlias -> .)
    R_FULL          reduce using rule 288 (optAlias -> .)
    R_GROUP         reduce using rule 288 (optAlias -> .)
    R_ORDER         reduce using rule 288 (optAlias -> .)
    R_LIMIT         reduce using rule 288 (optAlias -> .)
    R_UNION         reduce using rule 288 (optAlias -> .)
    R_INTERSECT     reduce using rule 288 (optAlias -> .)
    R_EXCEPT        reduce using rule 288 (optAlias -> .)
    S_PARDER        reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    optAlias                       shift and go to state 129
    idOrString                     shift and go to state 131
=======
    (286) selectStmt -> S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 126
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38

>>>>>>> main

state 57

<<<<<<< HEAD
    (292) fromBody -> S_PARIZQ . selectStmt S_PARDER R_AS idOrString
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 132
=======
    (348) updateStmt -> R_UPDATE fromBody . R_SET updateCols whereCl

    R_SET           shift and go to state 127

>>>>>>> main

state 58

<<<<<<< HEAD
    (344) deleteStmt -> R_DELETE fromCl . whereCl
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .

    R_WHERE         shift and go to state 134
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)

    whereCl                        shift and go to state 133
=======
    (302) fromBody -> ID . optAlias
    (297) optAlias -> . R_AS idOrString
    (298) optAlias -> . idOrString
    (299) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 129
    R_SET           reduce using rule 299 (optAlias -> .)
    S_COMA          reduce using rule 299 (optAlias -> .)
    R_WHERE         reduce using rule 299 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 299 (optAlias -> .)
    R_NATURAL       reduce using rule 299 (optAlias -> .)
    R_INNER         reduce using rule 299 (optAlias -> .)
    R_LEFT          reduce using rule 299 (optAlias -> .)
    R_RIGHT         reduce using rule 299 (optAlias -> .)
    R_FULL          reduce using rule 299 (optAlias -> .)
    R_GROUP         reduce using rule 299 (optAlias -> .)
    R_LIMIT         reduce using rule 299 (optAlias -> .)
    R_ORDER         reduce using rule 299 (optAlias -> .)
    R_UNION         reduce using rule 299 (optAlias -> .)
    R_INTERSECT     reduce using rule 299 (optAlias -> .)
    R_EXCEPT        reduce using rule 299 (optAlias -> .)
    S_PARDER        reduce using rule 299 (optAlias -> .)
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    optAlias                       shift and go to state 128
    idOrString                     shift and go to state 130
>>>>>>> main

state 59

    (303) fromBody -> S_PARIZQ . selectStmt S_PARDER R_AS idOrString
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

<<<<<<< HEAD
    ID              shift and go to state 56
    S_PARIZQ        shift and go to state 57

    tableExp                       shift and go to state 135
    fromBody                       shift and go to state 136
=======
    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 131
>>>>>>> main

state 60

<<<<<<< HEAD
    (345) truncateStmt -> R_TRUNCATE tableOpt . ID

    ID              shift and go to state 137
=======
    (354) deleteStmt -> R_DELETE fromCl . whereCl
    (319) whereCl -> . R_WHERE expBool
    (320) whereCl -> .

    R_WHERE         shift and go to state 133
    S_PUNTOCOMA     reduce using rule 320 (whereCl -> .)
>>>>>>> main

    whereCl                        shift and go to state 132

state 61

<<<<<<< HEAD
    (346) tableOpt -> R_TABLE .

    ID              reduce using rule 346 (tableOpt -> R_TABLE .)
=======
    (287) fromCl -> R_FROM . tableExp
    (300) tableExp -> . tableExp S_COMA fromBody
    (301) tableExp -> . fromBody
    (302) fromBody -> . ID optAlias
    (303) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 55
    S_PARIZQ        shift and go to state 56
>>>>>>> main

    tableExp                       shift and go to state 134
    fromBody                       shift and go to state 135

state 62

<<<<<<< HEAD
    (351) useStmt -> R_USE ID .

    S_PUNTOCOMA     reduce using rule 351 (useStmt -> R_USE ID .)
=======
    (355) truncateStmt -> R_TRUNCATE tableOpt . ID

    ID              shift and go to state 136
>>>>>>> main


state 63

<<<<<<< HEAD
    (268) selectStmt -> R_SELECT R_DISTINCT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (280) selectParams -> . O_PRODUCTO
    (281) selectParams -> . selectList
    (282) selectList -> . selectList S_COMA selectListParams optAlias
    (283) selectList -> . selectListParams optAlias
    (284) selectListParams -> . expresion
    (285) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (96) expresion -> . datatype
    (97) expresion -> . expBool
    (98) expresion -> . S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName

    O_PRODUCTO      shift and go to state 65
    ID              shift and go to state 69
    S_PARIZQ        shift and go to state 72
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    R_NOT           shift and go to state 82
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_EXISTS        shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectParams                   shift and go to state 138
    selectList                     shift and go to state 66
    selectListParams               shift and go to state 67
    expresion                      shift and go to state 68
    datatype                       shift and go to state 70
    expBool                        shift and go to state 71
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    boolean                        shift and go to state 83
    timeStamp                      shift and go to state 96
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    stringExp                      shift and go to state 105

state 64

    (269) selectStmt -> R_SELECT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl limitCl
    (277) selectStmt -> R_SELECT selectParams .
    (276) fromCl -> . R_FROM tableExp

    S_PUNTOCOMA     reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    R_UNION         reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    R_INTERSECT     reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    R_EXCEPT        reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    S_PARDER        reduce using rule 277 (selectStmt -> R_SELECT selectParams .)
    R_FROM          shift and go to state 59

    fromCl                         shift and go to state 139

state 65
=======
    (356) tableOpt -> R_TABLE .

    ID              reduce using rule 356 (tableOpt -> R_TABLE .)


state 61

    (361) useStmt -> R_USE ID .

    S_PUNTOCOMA     reduce using rule 361 (useStmt -> R_USE ID .)
>>>>>>> main


state 62

    (278) selectStmt -> R_SELECT R_DISTINCT . selectParams fromCl whereCl groupByCl limitCl
    (291) selectParams -> . O_PRODUCTO
    (292) selectParams -> . selectList
    (293) selectList -> . selectList S_COMA selectListParams optAlias
    (294) selectList -> . selectListParams optAlias
    (295) selectListParams -> . expresion
    (296) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (106) expresion -> . datatype
    (107) expresion -> . expBool
    (108) expresion -> . S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName

    O_PRODUCTO      shift and go to state 64
    ID              shift and go to state 68
    S_PARIZQ        shift and go to state 71
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    R_NOT           shift and go to state 81
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_EXISTS        shift and go to state 99
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    selectParams                   shift and go to state 137
    selectList                     shift and go to state 65
    selectListParams               shift and go to state 66
    expresion                      shift and go to state 67
    datatype                       shift and go to state 69
    expBool                        shift and go to state 70
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    boolean                        shift and go to state 82
    timeStamp                      shift and go to state 95
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    stringExp                      shift and go to state 104

state 66

    (279) selectStmt -> R_SELECT selectParams . fromCl whereCl groupByCl limitCl
    (280) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> R_SELECT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl limitCl
    (288) selectStmt -> R_SELECT selectParams .
    (287) fromCl -> . R_FROM tableExp

<<<<<<< HEAD
    R_FROM          reduce using rule 281 (selectParams -> selectList .)
    S_PUNTOCOMA     reduce using rule 281 (selectParams -> selectList .)
    R_UNION         reduce using rule 281 (selectParams -> selectList .)
    R_INTERSECT     reduce using rule 281 (selectParams -> selectList .)
    R_EXCEPT        reduce using rule 281 (selectParams -> selectList .)
    S_PARDER        reduce using rule 281 (selectParams -> selectList .)
    S_COMA          shift and go to state 140
=======
    S_PUNTOCOMA     reduce using rule 288 (selectStmt -> R_SELECT selectParams .)
    R_UNION         reduce using rule 288 (selectStmt -> R_SELECT selectParams .)
    R_INTERSECT     reduce using rule 288 (selectStmt -> R_SELECT selectParams .)
    R_EXCEPT        reduce using rule 288 (selectStmt -> R_SELECT selectParams .)
    S_PARDER        reduce using rule 288 (selectStmt -> R_SELECT selectParams .)
    R_FROM          shift and go to state 58
>>>>>>> main

    fromCl                         shift and go to state 138

state 67

<<<<<<< HEAD
    (283) selectList -> selectListParams . optAlias
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    R_AS            shift and go to state 130
    S_COMA          reduce using rule 288 (optAlias -> .)
    R_FROM          reduce using rule 288 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 288 (optAlias -> .)
    R_UNION         reduce using rule 288 (optAlias -> .)
    R_INTERSECT     reduce using rule 288 (optAlias -> .)
    R_EXCEPT        reduce using rule 288 (optAlias -> .)
    S_PARDER        reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    optAlias                       shift and go to state 141
    idOrString                     shift and go to state 131
=======
    (291) selectParams -> O_PRODUCTO .

    R_FROM          reduce using rule 291 (selectParams -> O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 291 (selectParams -> O_PRODUCTO .)
    R_UNION         reduce using rule 291 (selectParams -> O_PRODUCTO .)
    R_INTERSECT     reduce using rule 291 (selectParams -> O_PRODUCTO .)
    R_EXCEPT        reduce using rule 291 (selectParams -> O_PRODUCTO .)
    S_PARDER        reduce using rule 291 (selectParams -> O_PRODUCTO .)

>>>>>>> main

state 68

    (292) selectParams -> selectList .
    (293) selectList -> selectList . S_COMA selectListParams optAlias

    R_FROM          reduce using rule 292 (selectParams -> selectList .)
    S_PUNTOCOMA     reduce using rule 292 (selectParams -> selectList .)
    R_UNION         reduce using rule 292 (selectParams -> selectList .)
    R_INTERSECT     reduce using rule 292 (selectParams -> selectList .)
    R_EXCEPT        reduce using rule 292 (selectParams -> selectList .)
    S_PARDER        reduce using rule 292 (selectParams -> selectList .)
    S_COMA          shift and go to state 139


state 69

<<<<<<< HEAD
    (285) selectListParams -> ID . S_PUNTO O_PRODUCTO
    (223) columnName -> ID .
    (224) columnName -> ID . S_PUNTO ID
    (99) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (100) funcCall -> ID . S_PARIZQ S_PARDER

    S_PUNTO         shift and go to state 142
    O_SUMA          reduce using rule 223 (columnName -> ID .)
    O_RESTA         reduce using rule 223 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 223 (columnName -> ID .)
    O_DIVISION      reduce using rule 223 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 223 (columnName -> ID .)
    O_MODULAR       reduce using rule 223 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 223 (columnName -> ID .)
    R_IN            reduce using rule 223 (columnName -> ID .)
    R_NOT           reduce using rule 223 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 223 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 223 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 223 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 223 (columnName -> ID .)
    S_IGUAL         reduce using rule 223 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 223 (columnName -> ID .)
    R_IS            reduce using rule 223 (columnName -> ID .)
    R_BETWEEN       reduce using rule 223 (columnName -> ID .)
    R_ISNULL        reduce using rule 223 (columnName -> ID .)
    R_NOTNULL       reduce using rule 223 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 223 (columnName -> ID .)
    R_AS            reduce using rule 223 (columnName -> ID .)
    ID              reduce using rule 223 (columnName -> ID .)
    STRING          reduce using rule 223 (columnName -> ID .)
    CHARACTER       reduce using rule 223 (columnName -> ID .)
    S_COMA          reduce using rule 223 (columnName -> ID .)
    R_FROM          reduce using rule 223 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 223 (columnName -> ID .)
    R_UNION         reduce using rule 223 (columnName -> ID .)
    R_INTERSECT     reduce using rule 223 (columnName -> ID .)
    R_EXCEPT        reduce using rule 223 (columnName -> ID .)
    S_PARDER        reduce using rule 223 (columnName -> ID .)
    R_LIKE          reduce using rule 223 (columnName -> ID .)
    S_PARIZQ        shift and go to state 143
=======
    (294) selectList -> selectListParams . optAlias
    (297) optAlias -> . R_AS idOrString
    (298) optAlias -> . idOrString
    (299) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER
>>>>>>> main

    R_AS            shift and go to state 129
    S_COMA          reduce using rule 299 (optAlias -> .)
    R_FROM          reduce using rule 299 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 299 (optAlias -> .)
    R_UNION         reduce using rule 299 (optAlias -> .)
    R_INTERSECT     reduce using rule 299 (optAlias -> .)
    R_EXCEPT        reduce using rule 299 (optAlias -> .)
    S_PARDER        reduce using rule 299 (optAlias -> .)
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    optAlias                       shift and go to state 140
    idOrString                     shift and go to state 130

state 70

<<<<<<< HEAD
    (96) expresion -> datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype
    (207) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (158) expComp -> datatype . OL_MENORQUE datatype
    (159) expComp -> datatype . OL_MAYORQUE datatype
    (160) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (161) expComp -> datatype . OL_MENORIGUALQUE datatype
    (162) expComp -> datatype . S_IGUAL datatype
    (163) expComp -> datatype . OL_DISTINTODE datatype
    (164) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (167) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> datatype . R_ISNULL
    (170) expComp -> datatype . R_NOTNULL
    (171) expComp -> datatype . R_IS R_NULL
    (172) expComp -> datatype . R_IS R_TRUE
    (173) expComp -> datatype . R_IS R_FALSE
    (174) expComp -> datatype . R_IS R_UNKNOWN
    (175) expComp -> datatype . R_IS R_NOT R_NULL
    (176) expComp -> datatype . R_IS R_NOT R_TRUE
    (177) expComp -> datatype . R_IS R_NOT R_FALSE
    (178) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (179) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_AS            reduce using rule 96 (expresion -> datatype .)
    ID              reduce using rule 96 (expresion -> datatype .)
    STRING          reduce using rule 96 (expresion -> datatype .)
    CHARACTER       reduce using rule 96 (expresion -> datatype .)
    S_COMA          reduce using rule 96 (expresion -> datatype .)
    R_FROM          reduce using rule 96 (expresion -> datatype .)
    S_PUNTOCOMA     reduce using rule 96 (expresion -> datatype .)
    R_UNION         reduce using rule 96 (expresion -> datatype .)
    R_INTERSECT     reduce using rule 96 (expresion -> datatype .)
    R_EXCEPT        reduce using rule 96 (expresion -> datatype .)
    S_PARDER        reduce using rule 96 (expresion -> datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
    R_IN            shift and go to state 151
    R_NOT           shift and go to state 152
    OL_MENORQUE     shift and go to state 153
    OL_MAYORQUE     shift and go to state 154
    OL_MAYORIGUALQUE shift and go to state 155
    OL_MENORIGUALQUE shift and go to state 156
    S_IGUAL         shift and go to state 157
    OL_DISTINTODE   shift and go to state 158
    R_IS            shift and go to state 159
    R_BETWEEN       shift and go to state 160
    R_ISNULL        shift and go to state 161
    R_NOTNULL       shift and go to state 162
    OL_ESIGUAL      shift and go to state 163
=======
    (295) selectListParams -> expresion .

    R_AS            reduce using rule 295 (selectListParams -> expresion .)
    ID              reduce using rule 295 (selectListParams -> expresion .)
    STRING          reduce using rule 295 (selectListParams -> expresion .)
    CHARACTER       reduce using rule 295 (selectListParams -> expresion .)
    S_COMA          reduce using rule 295 (selectListParams -> expresion .)
    R_FROM          reduce using rule 295 (selectListParams -> expresion .)
    S_PUNTOCOMA     reduce using rule 295 (selectListParams -> expresion .)
    R_UNION         reduce using rule 295 (selectListParams -> expresion .)
    R_INTERSECT     reduce using rule 295 (selectListParams -> expresion .)
    R_EXCEPT        reduce using rule 295 (selectListParams -> expresion .)
    S_PARDER        reduce using rule 295 (selectListParams -> expresion .)
>>>>>>> main


state 71

<<<<<<< HEAD
    (97) expresion -> expBool .
    (211) expBool -> expBool . R_AND expBool
    (212) expBool -> expBool . R_OR expBool
    (215) expBool -> expBool . optBoolPredicate
    (217) optBoolPredicate -> . R_IS R_TRUE
    (218) optBoolPredicate -> . R_IS R_FALSE
    (219) optBoolPredicate -> . R_IS R_UNKNOWN
    (220) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (221) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (222) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 97 (expresion -> expBool .)
    ID              reduce using rule 97 (expresion -> expBool .)
    STRING          reduce using rule 97 (expresion -> expBool .)
    CHARACTER       reduce using rule 97 (expresion -> expBool .)
    S_COMA          reduce using rule 97 (expresion -> expBool .)
    R_FROM          reduce using rule 97 (expresion -> expBool .)
    S_PUNTOCOMA     reduce using rule 97 (expresion -> expBool .)
    R_UNION         reduce using rule 97 (expresion -> expBool .)
    R_INTERSECT     reduce using rule 97 (expresion -> expBool .)
    R_EXCEPT        reduce using rule 97 (expresion -> expBool .)
    S_PARDER        reduce using rule 97 (expresion -> expBool .)
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166
=======
    (296) selectListParams -> ID . S_PUNTO O_PRODUCTO
    (233) columnName -> ID .
    (234) columnName -> ID . S_PUNTO ID
    (109) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (110) funcCall -> ID . S_PARIZQ S_PARDER

    S_PUNTO         shift and go to state 141
    O_SUMA          reduce using rule 233 (columnName -> ID .)
    O_RESTA         reduce using rule 233 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 233 (columnName -> ID .)
    O_DIVISION      reduce using rule 233 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 233 (columnName -> ID .)
    O_MODULAR       reduce using rule 233 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 233 (columnName -> ID .)
    R_IN            reduce using rule 233 (columnName -> ID .)
    R_NOT           reduce using rule 233 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 233 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 233 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 233 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 233 (columnName -> ID .)
    S_IGUAL         reduce using rule 233 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 233 (columnName -> ID .)
    R_IS            reduce using rule 233 (columnName -> ID .)
    R_BETWEEN       reduce using rule 233 (columnName -> ID .)
    R_ISNULL        reduce using rule 233 (columnName -> ID .)
    R_NOTNULL       reduce using rule 233 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 233 (columnName -> ID .)
    R_AS            reduce using rule 233 (columnName -> ID .)
    ID              reduce using rule 233 (columnName -> ID .)
    STRING          reduce using rule 233 (columnName -> ID .)
    CHARACTER       reduce using rule 233 (columnName -> ID .)
    S_COMA          reduce using rule 233 (columnName -> ID .)
    R_FROM          reduce using rule 233 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 233 (columnName -> ID .)
    R_UNION         reduce using rule 233 (columnName -> ID .)
    R_INTERSECT     reduce using rule 233 (columnName -> ID .)
    R_EXCEPT        reduce using rule 233 (columnName -> ID .)
    S_PARDER        reduce using rule 233 (columnName -> ID .)
    R_LIKE          reduce using rule 233 (columnName -> ID .)
    S_PARIZQ        shift and go to state 142

>>>>>>> main

state 72

<<<<<<< HEAD
    (98) expresion -> S_PARIZQ . selectStmt S_PARDER
    (157) datatype -> S_PARIZQ . datatype S_PARDER
    (214) expBool -> S_PARIZQ . expBool S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 168
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    R_NOT           shift and go to state 82
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_EXISTS        shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectStmt                     shift and go to state 169
    datatype                       shift and go to state 170
    expBool                        shift and go to state 171
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    boolean                        shift and go to state 83
    timeStamp                      shift and go to state 96
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    stringExp                      shift and go to state 105

state 73

    (150) datatype -> O_SUMA . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 173
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 74

    (149) datatype -> O_RESTA . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 177
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 75

    (143) datatype -> R_CASE . caseList optElse R_END
    (144) caseList -> . caseList caseWhen
    (145) caseList -> . caseWhen
    (146) caseWhen -> . R_WHEN expBool R_THEN literal

    R_WHEN          shift and go to state 180
=======
    (106) expresion -> datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype
    (217) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (168) expComp -> datatype . OL_MENORQUE datatype
    (169) expComp -> datatype . OL_MAYORQUE datatype
    (170) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (171) expComp -> datatype . OL_MENORIGUALQUE datatype
    (172) expComp -> datatype . S_IGUAL datatype
    (173) expComp -> datatype . OL_DISTINTODE datatype
    (174) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (177) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> datatype . R_ISNULL
    (180) expComp -> datatype . R_NOTNULL
    (181) expComp -> datatype . R_IS R_NULL
    (182) expComp -> datatype . R_IS R_TRUE
    (183) expComp -> datatype . R_IS R_FALSE
    (184) expComp -> datatype . R_IS R_UNKNOWN
    (185) expComp -> datatype . R_IS R_NOT R_NULL
    (186) expComp -> datatype . R_IS R_NOT R_TRUE
    (187) expComp -> datatype . R_IS R_NOT R_FALSE
    (188) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (189) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_AS            reduce using rule 106 (expresion -> datatype .)
    ID              reduce using rule 106 (expresion -> datatype .)
    STRING          reduce using rule 106 (expresion -> datatype .)
    CHARACTER       reduce using rule 106 (expresion -> datatype .)
    S_COMA          reduce using rule 106 (expresion -> datatype .)
    R_FROM          reduce using rule 106 (expresion -> datatype .)
    S_PUNTOCOMA     reduce using rule 106 (expresion -> datatype .)
    R_UNION         reduce using rule 106 (expresion -> datatype .)
    R_INTERSECT     reduce using rule 106 (expresion -> datatype .)
    R_EXCEPT        reduce using rule 106 (expresion -> datatype .)
    S_PARDER        reduce using rule 106 (expresion -> datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
    R_IN            shift and go to state 150
    R_NOT           shift and go to state 151
    OL_MENORQUE     shift and go to state 152
    OL_MAYORQUE     shift and go to state 153
    OL_MAYORIGUALQUE shift and go to state 154
    OL_MENORIGUALQUE shift and go to state 155
    S_IGUAL         shift and go to state 156
    OL_DISTINTODE   shift and go to state 157
    R_IS            shift and go to state 158
    R_BETWEEN       shift and go to state 159
    R_ISNULL        shift and go to state 160
    R_NOTNULL       shift and go to state 161
    OL_ESIGUAL      shift and go to state 162


state 70

    (107) expresion -> expBool .
    (221) expBool -> expBool . R_AND expBool
    (222) expBool -> expBool . R_OR expBool
    (225) expBool -> expBool . optBoolPredicate
    (227) optBoolPredicate -> . R_IS R_TRUE
    (228) optBoolPredicate -> . R_IS R_FALSE
    (229) optBoolPredicate -> . R_IS R_UNKNOWN
    (230) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (231) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (232) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 107 (expresion -> expBool .)
    ID              reduce using rule 107 (expresion -> expBool .)
    STRING          reduce using rule 107 (expresion -> expBool .)
    CHARACTER       reduce using rule 107 (expresion -> expBool .)
    S_COMA          reduce using rule 107 (expresion -> expBool .)
    R_FROM          reduce using rule 107 (expresion -> expBool .)
    S_PUNTOCOMA     reduce using rule 107 (expresion -> expBool .)
    R_UNION         reduce using rule 107 (expresion -> expBool .)
    R_INTERSECT     reduce using rule 107 (expresion -> expBool .)
    R_EXCEPT        reduce using rule 107 (expresion -> expBool .)
    S_PARDER        reduce using rule 107 (expresion -> expBool .)
    R_AND           shift and go to state 163
    R_OR            shift and go to state 164
    R_IS            shift and go to state 166

    optBoolPredicate               shift and go to state 165

state 71

    (108) expresion -> S_PARIZQ . selectStmt S_PARDER
    (167) datatype -> S_PARIZQ . datatype S_PARDER
    (224) expBool -> S_PARIZQ . expBool S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 167
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    R_NOT           shift and go to state 81
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_EXISTS        shift and go to state 99
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    selectStmt                     shift and go to state 168
    datatype                       shift and go to state 169
    expBool                        shift and go to state 170
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    boolean                        shift and go to state 82
    timeStamp                      shift and go to state 95
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    stringExp                      shift and go to state 104

state 72

    (160) datatype -> O_SUMA . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 172
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 73

    (159) datatype -> O_RESTA . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 176
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 74

    (153) datatype -> R_CASE . caseList optElse R_END
    (154) caseList -> . caseList caseWhen
    (155) caseList -> . caseWhen
    (156) caseWhen -> . R_WHEN expBool R_THEN literal

    R_WHEN          shift and go to state 179

    caseList                       shift and go to state 177
    caseWhen                       shift and go to state 178

state 75

    (161) datatype -> columnName .
    (212) stringExp -> columnName .

    O_SUMA          reduce using rule 161 (datatype -> columnName .)
    O_RESTA         reduce using rule 161 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 161 (datatype -> columnName .)
    O_DIVISION      reduce using rule 161 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 161 (datatype -> columnName .)
    O_MODULAR       reduce using rule 161 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 161 (datatype -> columnName .)
    R_IN            reduce using rule 161 (datatype -> columnName .)
    R_NOT           reduce using rule 161 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 161 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 161 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 161 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 161 (datatype -> columnName .)
    S_IGUAL         reduce using rule 161 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 161 (datatype -> columnName .)
    R_IS            reduce using rule 161 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 161 (datatype -> columnName .)
    R_ISNULL        reduce using rule 161 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 161 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 161 (datatype -> columnName .)
    R_AS            reduce using rule 161 (datatype -> columnName .)
    ID              reduce using rule 161 (datatype -> columnName .)
    STRING          reduce using rule 161 (datatype -> columnName .)
    CHARACTER       reduce using rule 161 (datatype -> columnName .)
    S_COMA          reduce using rule 161 (datatype -> columnName .)
    R_FROM          reduce using rule 161 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 161 (datatype -> columnName .)
    R_UNION         reduce using rule 161 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 161 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 161 (datatype -> columnName .)
    S_PARDER        reduce using rule 161 (datatype -> columnName .)
    R_LIKE          reduce using rule 212 (stringExp -> columnName .)
>>>>>>> main

    caseList                       shift and go to state 178
    caseWhen                       shift and go to state 179

state 76

<<<<<<< HEAD
    (151) datatype -> columnName .
    (202) stringExp -> columnName .

    O_SUMA          reduce using rule 151 (datatype -> columnName .)
    O_RESTA         reduce using rule 151 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 151 (datatype -> columnName .)
    O_DIVISION      reduce using rule 151 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 151 (datatype -> columnName .)
    O_MODULAR       reduce using rule 151 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 151 (datatype -> columnName .)
    R_IN            reduce using rule 151 (datatype -> columnName .)
    R_NOT           reduce using rule 151 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 151 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 151 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 151 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 151 (datatype -> columnName .)
    S_IGUAL         reduce using rule 151 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 151 (datatype -> columnName .)
    R_IS            reduce using rule 151 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 151 (datatype -> columnName .)
    R_ISNULL        reduce using rule 151 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 151 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 151 (datatype -> columnName .)
    R_AS            reduce using rule 151 (datatype -> columnName .)
    ID              reduce using rule 151 (datatype -> columnName .)
    STRING          reduce using rule 151 (datatype -> columnName .)
    CHARACTER       reduce using rule 151 (datatype -> columnName .)
    S_COMA          reduce using rule 151 (datatype -> columnName .)
    R_FROM          reduce using rule 151 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 151 (datatype -> columnName .)
    R_UNION         reduce using rule 151 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 151 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 151 (datatype -> columnName .)
    S_PARDER        reduce using rule 151 (datatype -> columnName .)
    R_LIKE          reduce using rule 202 (stringExp -> columnName .)
=======
    (162) datatype -> literal .

    O_SUMA          reduce using rule 162 (datatype -> literal .)
    O_RESTA         reduce using rule 162 (datatype -> literal .)
    O_PRODUCTO      reduce using rule 162 (datatype -> literal .)
    O_DIVISION      reduce using rule 162 (datatype -> literal .)
    O_EXPONENTE     reduce using rule 162 (datatype -> literal .)
    O_MODULAR       reduce using rule 162 (datatype -> literal .)
    OC_CONCATENAR   reduce using rule 162 (datatype -> literal .)
    R_IN            reduce using rule 162 (datatype -> literal .)
    R_NOT           reduce using rule 162 (datatype -> literal .)
    OL_MENORQUE     reduce using rule 162 (datatype -> literal .)
    OL_MAYORQUE     reduce using rule 162 (datatype -> literal .)
    OL_MAYORIGUALQUE reduce using rule 162 (datatype -> literal .)
    OL_MENORIGUALQUE reduce using rule 162 (datatype -> literal .)
    S_IGUAL         reduce using rule 162 (datatype -> literal .)
    OL_DISTINTODE   reduce using rule 162 (datatype -> literal .)
    R_IS            reduce using rule 162 (datatype -> literal .)
    R_BETWEEN       reduce using rule 162 (datatype -> literal .)
    R_ISNULL        reduce using rule 162 (datatype -> literal .)
    R_NOTNULL       reduce using rule 162 (datatype -> literal .)
    OL_ESIGUAL      reduce using rule 162 (datatype -> literal .)
    R_AS            reduce using rule 162 (datatype -> literal .)
    ID              reduce using rule 162 (datatype -> literal .)
    STRING          reduce using rule 162 (datatype -> literal .)
    CHARACTER       reduce using rule 162 (datatype -> literal .)
    S_COMA          reduce using rule 162 (datatype -> literal .)
    R_FROM          reduce using rule 162 (datatype -> literal .)
    S_PUNTOCOMA     reduce using rule 162 (datatype -> literal .)
    R_UNION         reduce using rule 162 (datatype -> literal .)
    R_INTERSECT     reduce using rule 162 (datatype -> literal .)
    R_EXCEPT        reduce using rule 162 (datatype -> literal .)
    S_PARDER        reduce using rule 162 (datatype -> literal .)
    R_AND           reduce using rule 162 (datatype -> literal .)
    R_OR            reduce using rule 162 (datatype -> literal .)
    R_GROUP         reduce using rule 162 (datatype -> literal .)
    R_LIMIT         reduce using rule 162 (datatype -> literal .)
    R_ORDER         reduce using rule 162 (datatype -> literal .)
    R_THEN          reduce using rule 162 (datatype -> literal .)
    R_NATURAL       reduce using rule 162 (datatype -> literal .)
    R_INNER         reduce using rule 162 (datatype -> literal .)
    R_LEFT          reduce using rule 162 (datatype -> literal .)
    R_RIGHT         reduce using rule 162 (datatype -> literal .)
    R_FULL          reduce using rule 162 (datatype -> literal .)
    R_WHERE         reduce using rule 162 (datatype -> literal .)
    R_ALL           reduce using rule 162 (datatype -> literal .)
    R_ANY           reduce using rule 162 (datatype -> literal .)
    R_SOME          reduce using rule 162 (datatype -> literal .)
>>>>>>> main


state 77

<<<<<<< HEAD
    (152) datatype -> literal .

    O_SUMA          reduce using rule 152 (datatype -> literal .)
    O_RESTA         reduce using rule 152 (datatype -> literal .)
    O_PRODUCTO      reduce using rule 152 (datatype -> literal .)
    O_DIVISION      reduce using rule 152 (datatype -> literal .)
    O_EXPONENTE     reduce using rule 152 (datatype -> literal .)
    O_MODULAR       reduce using rule 152 (datatype -> literal .)
    OC_CONCATENAR   reduce using rule 152 (datatype -> literal .)
    R_IN            reduce using rule 152 (datatype -> literal .)
    R_NOT           reduce using rule 152 (datatype -> literal .)
    OL_MENORQUE     reduce using rule 152 (datatype -> literal .)
    OL_MAYORQUE     reduce using rule 152 (datatype -> literal .)
    OL_MAYORIGUALQUE reduce using rule 152 (datatype -> literal .)
    OL_MENORIGUALQUE reduce using rule 152 (datatype -> literal .)
    S_IGUAL         reduce using rule 152 (datatype -> literal .)
    OL_DISTINTODE   reduce using rule 152 (datatype -> literal .)
    R_IS            reduce using rule 152 (datatype -> literal .)
    R_BETWEEN       reduce using rule 152 (datatype -> literal .)
    R_ISNULL        reduce using rule 152 (datatype -> literal .)
    R_NOTNULL       reduce using rule 152 (datatype -> literal .)
    OL_ESIGUAL      reduce using rule 152 (datatype -> literal .)
    R_AS            reduce using rule 152 (datatype -> literal .)
    ID              reduce using rule 152 (datatype -> literal .)
    STRING          reduce using rule 152 (datatype -> literal .)
    CHARACTER       reduce using rule 152 (datatype -> literal .)
    S_COMA          reduce using rule 152 (datatype -> literal .)
    R_FROM          reduce using rule 152 (datatype -> literal .)
    S_PUNTOCOMA     reduce using rule 152 (datatype -> literal .)
    R_UNION         reduce using rule 152 (datatype -> literal .)
    R_INTERSECT     reduce using rule 152 (datatype -> literal .)
    R_EXCEPT        reduce using rule 152 (datatype -> literal .)
    S_PARDER        reduce using rule 152 (datatype -> literal .)
    R_AND           reduce using rule 152 (datatype -> literal .)
    R_OR            reduce using rule 152 (datatype -> literal .)
    R_GROUP         reduce using rule 152 (datatype -> literal .)
    R_ORDER         reduce using rule 152 (datatype -> literal .)
    R_LIMIT         reduce using rule 152 (datatype -> literal .)
    R_THEN          reduce using rule 152 (datatype -> literal .)
    R_NATURAL       reduce using rule 152 (datatype -> literal .)
    R_INNER         reduce using rule 152 (datatype -> literal .)
    R_LEFT          reduce using rule 152 (datatype -> literal .)
    R_RIGHT         reduce using rule 152 (datatype -> literal .)
    R_FULL          reduce using rule 152 (datatype -> literal .)
    R_WHERE         reduce using rule 152 (datatype -> literal .)
    R_ALL           reduce using rule 152 (datatype -> literal .)
    R_ANY           reduce using rule 152 (datatype -> literal .)
    R_SOME          reduce using rule 152 (datatype -> literal .)
=======
    (163) datatype -> funcCall .

    O_SUMA          reduce using rule 163 (datatype -> funcCall .)
    O_RESTA         reduce using rule 163 (datatype -> funcCall .)
    O_PRODUCTO      reduce using rule 163 (datatype -> funcCall .)
    O_DIVISION      reduce using rule 163 (datatype -> funcCall .)
    O_EXPONENTE     reduce using rule 163 (datatype -> funcCall .)
    O_MODULAR       reduce using rule 163 (datatype -> funcCall .)
    OC_CONCATENAR   reduce using rule 163 (datatype -> funcCall .)
    R_IN            reduce using rule 163 (datatype -> funcCall .)
    R_NOT           reduce using rule 163 (datatype -> funcCall .)
    OL_MENORQUE     reduce using rule 163 (datatype -> funcCall .)
    OL_MAYORQUE     reduce using rule 163 (datatype -> funcCall .)
    OL_MAYORIGUALQUE reduce using rule 163 (datatype -> funcCall .)
    OL_MENORIGUALQUE reduce using rule 163 (datatype -> funcCall .)
    S_IGUAL         reduce using rule 163 (datatype -> funcCall .)
    OL_DISTINTODE   reduce using rule 163 (datatype -> funcCall .)
    R_IS            reduce using rule 163 (datatype -> funcCall .)
    R_BETWEEN       reduce using rule 163 (datatype -> funcCall .)
    R_ISNULL        reduce using rule 163 (datatype -> funcCall .)
    R_NOTNULL       reduce using rule 163 (datatype -> funcCall .)
    OL_ESIGUAL      reduce using rule 163 (datatype -> funcCall .)
    R_AS            reduce using rule 163 (datatype -> funcCall .)
    ID              reduce using rule 163 (datatype -> funcCall .)
    STRING          reduce using rule 163 (datatype -> funcCall .)
    CHARACTER       reduce using rule 163 (datatype -> funcCall .)
    S_COMA          reduce using rule 163 (datatype -> funcCall .)
    R_FROM          reduce using rule 163 (datatype -> funcCall .)
    S_PUNTOCOMA     reduce using rule 163 (datatype -> funcCall .)
    R_UNION         reduce using rule 163 (datatype -> funcCall .)
    R_INTERSECT     reduce using rule 163 (datatype -> funcCall .)
    R_EXCEPT        reduce using rule 163 (datatype -> funcCall .)
    S_PARDER        reduce using rule 163 (datatype -> funcCall .)
    R_AND           reduce using rule 163 (datatype -> funcCall .)
    R_OR            reduce using rule 163 (datatype -> funcCall .)
    R_GROUP         reduce using rule 163 (datatype -> funcCall .)
    R_LIMIT         reduce using rule 163 (datatype -> funcCall .)
    R_ORDER         reduce using rule 163 (datatype -> funcCall .)
    R_THEN          reduce using rule 163 (datatype -> funcCall .)
    R_NATURAL       reduce using rule 163 (datatype -> funcCall .)
    R_INNER         reduce using rule 163 (datatype -> funcCall .)
    R_LEFT          reduce using rule 163 (datatype -> funcCall .)
    R_RIGHT         reduce using rule 163 (datatype -> funcCall .)
    R_FULL          reduce using rule 163 (datatype -> funcCall .)
    R_WHERE         reduce using rule 163 (datatype -> funcCall .)
    R_ALL           reduce using rule 163 (datatype -> funcCall .)
    R_ANY           reduce using rule 163 (datatype -> funcCall .)
    R_SOME          reduce using rule 163 (datatype -> funcCall .)
>>>>>>> main


state 78

<<<<<<< HEAD
    (153) datatype -> funcCall .

    O_SUMA          reduce using rule 153 (datatype -> funcCall .)
    O_RESTA         reduce using rule 153 (datatype -> funcCall .)
    O_PRODUCTO      reduce using rule 153 (datatype -> funcCall .)
    O_DIVISION      reduce using rule 153 (datatype -> funcCall .)
    O_EXPONENTE     reduce using rule 153 (datatype -> funcCall .)
    O_MODULAR       reduce using rule 153 (datatype -> funcCall .)
    OC_CONCATENAR   reduce using rule 153 (datatype -> funcCall .)
    R_IN            reduce using rule 153 (datatype -> funcCall .)
    R_NOT           reduce using rule 153 (datatype -> funcCall .)
    OL_MENORQUE     reduce using rule 153 (datatype -> funcCall .)
    OL_MAYORQUE     reduce using rule 153 (datatype -> funcCall .)
    OL_MAYORIGUALQUE reduce using rule 153 (datatype -> funcCall .)
    OL_MENORIGUALQUE reduce using rule 153 (datatype -> funcCall .)
    S_IGUAL         reduce using rule 153 (datatype -> funcCall .)
    OL_DISTINTODE   reduce using rule 153 (datatype -> funcCall .)
    R_IS            reduce using rule 153 (datatype -> funcCall .)
    R_BETWEEN       reduce using rule 153 (datatype -> funcCall .)
    R_ISNULL        reduce using rule 153 (datatype -> funcCall .)
    R_NOTNULL       reduce using rule 153 (datatype -> funcCall .)
    OL_ESIGUAL      reduce using rule 153 (datatype -> funcCall .)
    R_AS            reduce using rule 153 (datatype -> funcCall .)
    ID              reduce using rule 153 (datatype -> funcCall .)
    STRING          reduce using rule 153 (datatype -> funcCall .)
    CHARACTER       reduce using rule 153 (datatype -> funcCall .)
    S_COMA          reduce using rule 153 (datatype -> funcCall .)
    R_FROM          reduce using rule 153 (datatype -> funcCall .)
    S_PUNTOCOMA     reduce using rule 153 (datatype -> funcCall .)
    R_UNION         reduce using rule 153 (datatype -> funcCall .)
    R_INTERSECT     reduce using rule 153 (datatype -> funcCall .)
    R_EXCEPT        reduce using rule 153 (datatype -> funcCall .)
    S_PARDER        reduce using rule 153 (datatype -> funcCall .)
    R_AND           reduce using rule 153 (datatype -> funcCall .)
    R_OR            reduce using rule 153 (datatype -> funcCall .)
    R_GROUP         reduce using rule 153 (datatype -> funcCall .)
    R_ORDER         reduce using rule 153 (datatype -> funcCall .)
    R_LIMIT         reduce using rule 153 (datatype -> funcCall .)
    R_THEN          reduce using rule 153 (datatype -> funcCall .)
    R_NATURAL       reduce using rule 153 (datatype -> funcCall .)
    R_INNER         reduce using rule 153 (datatype -> funcCall .)
    R_LEFT          reduce using rule 153 (datatype -> funcCall .)
    R_RIGHT         reduce using rule 153 (datatype -> funcCall .)
    R_FULL          reduce using rule 153 (datatype -> funcCall .)
    R_WHERE         reduce using rule 153 (datatype -> funcCall .)
    R_ALL           reduce using rule 153 (datatype -> funcCall .)
    R_ANY           reduce using rule 153 (datatype -> funcCall .)
    R_SOME          reduce using rule 153 (datatype -> funcCall .)
=======
    (164) datatype -> extract .

    O_SUMA          reduce using rule 164 (datatype -> extract .)
    O_RESTA         reduce using rule 164 (datatype -> extract .)
    O_PRODUCTO      reduce using rule 164 (datatype -> extract .)
    O_DIVISION      reduce using rule 164 (datatype -> extract .)
    O_EXPONENTE     reduce using rule 164 (datatype -> extract .)
    O_MODULAR       reduce using rule 164 (datatype -> extract .)
    OC_CONCATENAR   reduce using rule 164 (datatype -> extract .)
    R_IN            reduce using rule 164 (datatype -> extract .)
    R_NOT           reduce using rule 164 (datatype -> extract .)
    OL_MENORQUE     reduce using rule 164 (datatype -> extract .)
    OL_MAYORQUE     reduce using rule 164 (datatype -> extract .)
    OL_MAYORIGUALQUE reduce using rule 164 (datatype -> extract .)
    OL_MENORIGUALQUE reduce using rule 164 (datatype -> extract .)
    S_IGUAL         reduce using rule 164 (datatype -> extract .)
    OL_DISTINTODE   reduce using rule 164 (datatype -> extract .)
    R_IS            reduce using rule 164 (datatype -> extract .)
    R_BETWEEN       reduce using rule 164 (datatype -> extract .)
    R_ISNULL        reduce using rule 164 (datatype -> extract .)
    R_NOTNULL       reduce using rule 164 (datatype -> extract .)
    OL_ESIGUAL      reduce using rule 164 (datatype -> extract .)
    R_AS            reduce using rule 164 (datatype -> extract .)
    ID              reduce using rule 164 (datatype -> extract .)
    STRING          reduce using rule 164 (datatype -> extract .)
    CHARACTER       reduce using rule 164 (datatype -> extract .)
    S_COMA          reduce using rule 164 (datatype -> extract .)
    R_FROM          reduce using rule 164 (datatype -> extract .)
    S_PUNTOCOMA     reduce using rule 164 (datatype -> extract .)
    R_UNION         reduce using rule 164 (datatype -> extract .)
    R_INTERSECT     reduce using rule 164 (datatype -> extract .)
    R_EXCEPT        reduce using rule 164 (datatype -> extract .)
    S_PARDER        reduce using rule 164 (datatype -> extract .)
    R_AND           reduce using rule 164 (datatype -> extract .)
    R_OR            reduce using rule 164 (datatype -> extract .)
    R_GROUP         reduce using rule 164 (datatype -> extract .)
    R_LIMIT         reduce using rule 164 (datatype -> extract .)
    R_ORDER         reduce using rule 164 (datatype -> extract .)
    R_THEN          reduce using rule 164 (datatype -> extract .)
    R_NATURAL       reduce using rule 164 (datatype -> extract .)
    R_INNER         reduce using rule 164 (datatype -> extract .)
    R_LEFT          reduce using rule 164 (datatype -> extract .)
    R_RIGHT         reduce using rule 164 (datatype -> extract .)
    R_FULL          reduce using rule 164 (datatype -> extract .)
    R_WHERE         reduce using rule 164 (datatype -> extract .)
    R_ALL           reduce using rule 164 (datatype -> extract .)
    R_ANY           reduce using rule 164 (datatype -> extract .)
    R_SOME          reduce using rule 164 (datatype -> extract .)
>>>>>>> main


state 79

<<<<<<< HEAD
    (154) datatype -> extract .

    O_SUMA          reduce using rule 154 (datatype -> extract .)
    O_RESTA         reduce using rule 154 (datatype -> extract .)
    O_PRODUCTO      reduce using rule 154 (datatype -> extract .)
    O_DIVISION      reduce using rule 154 (datatype -> extract .)
    O_EXPONENTE     reduce using rule 154 (datatype -> extract .)
    O_MODULAR       reduce using rule 154 (datatype -> extract .)
    OC_CONCATENAR   reduce using rule 154 (datatype -> extract .)
    R_IN            reduce using rule 154 (datatype -> extract .)
    R_NOT           reduce using rule 154 (datatype -> extract .)
    OL_MENORQUE     reduce using rule 154 (datatype -> extract .)
    OL_MAYORQUE     reduce using rule 154 (datatype -> extract .)
    OL_MAYORIGUALQUE reduce using rule 154 (datatype -> extract .)
    OL_MENORIGUALQUE reduce using rule 154 (datatype -> extract .)
    S_IGUAL         reduce using rule 154 (datatype -> extract .)
    OL_DISTINTODE   reduce using rule 154 (datatype -> extract .)
    R_IS            reduce using rule 154 (datatype -> extract .)
    R_BETWEEN       reduce using rule 154 (datatype -> extract .)
    R_ISNULL        reduce using rule 154 (datatype -> extract .)
    R_NOTNULL       reduce using rule 154 (datatype -> extract .)
    OL_ESIGUAL      reduce using rule 154 (datatype -> extract .)
    R_AS            reduce using rule 154 (datatype -> extract .)
    ID              reduce using rule 154 (datatype -> extract .)
    STRING          reduce using rule 154 (datatype -> extract .)
    CHARACTER       reduce using rule 154 (datatype -> extract .)
    S_COMA          reduce using rule 154 (datatype -> extract .)
    R_FROM          reduce using rule 154 (datatype -> extract .)
    S_PUNTOCOMA     reduce using rule 154 (datatype -> extract .)
    R_UNION         reduce using rule 154 (datatype -> extract .)
    R_INTERSECT     reduce using rule 154 (datatype -> extract .)
    R_EXCEPT        reduce using rule 154 (datatype -> extract .)
    S_PARDER        reduce using rule 154 (datatype -> extract .)
    R_AND           reduce using rule 154 (datatype -> extract .)
    R_OR            reduce using rule 154 (datatype -> extract .)
    R_GROUP         reduce using rule 154 (datatype -> extract .)
    R_ORDER         reduce using rule 154 (datatype -> extract .)
    R_LIMIT         reduce using rule 154 (datatype -> extract .)
    R_THEN          reduce using rule 154 (datatype -> extract .)
    R_NATURAL       reduce using rule 154 (datatype -> extract .)
    R_INNER         reduce using rule 154 (datatype -> extract .)
    R_LEFT          reduce using rule 154 (datatype -> extract .)
    R_RIGHT         reduce using rule 154 (datatype -> extract .)
    R_FULL          reduce using rule 154 (datatype -> extract .)
    R_WHERE         reduce using rule 154 (datatype -> extract .)
    R_ALL           reduce using rule 154 (datatype -> extract .)
    R_ANY           reduce using rule 154 (datatype -> extract .)
    R_SOME          reduce using rule 154 (datatype -> extract .)
=======
    (165) datatype -> datePart .

    O_SUMA          reduce using rule 165 (datatype -> datePart .)
    O_RESTA         reduce using rule 165 (datatype -> datePart .)
    O_PRODUCTO      reduce using rule 165 (datatype -> datePart .)
    O_DIVISION      reduce using rule 165 (datatype -> datePart .)
    O_EXPONENTE     reduce using rule 165 (datatype -> datePart .)
    O_MODULAR       reduce using rule 165 (datatype -> datePart .)
    OC_CONCATENAR   reduce using rule 165 (datatype -> datePart .)
    R_IN            reduce using rule 165 (datatype -> datePart .)
    R_NOT           reduce using rule 165 (datatype -> datePart .)
    OL_MENORQUE     reduce using rule 165 (datatype -> datePart .)
    OL_MAYORQUE     reduce using rule 165 (datatype -> datePart .)
    OL_MAYORIGUALQUE reduce using rule 165 (datatype -> datePart .)
    OL_MENORIGUALQUE reduce using rule 165 (datatype -> datePart .)
    S_IGUAL         reduce using rule 165 (datatype -> datePart .)
    OL_DISTINTODE   reduce using rule 165 (datatype -> datePart .)
    R_IS            reduce using rule 165 (datatype -> datePart .)
    R_BETWEEN       reduce using rule 165 (datatype -> datePart .)
    R_ISNULL        reduce using rule 165 (datatype -> datePart .)
    R_NOTNULL       reduce using rule 165 (datatype -> datePart .)
    OL_ESIGUAL      reduce using rule 165 (datatype -> datePart .)
    R_AS            reduce using rule 165 (datatype -> datePart .)
    ID              reduce using rule 165 (datatype -> datePart .)
    STRING          reduce using rule 165 (datatype -> datePart .)
    CHARACTER       reduce using rule 165 (datatype -> datePart .)
    S_COMA          reduce using rule 165 (datatype -> datePart .)
    R_FROM          reduce using rule 165 (datatype -> datePart .)
    S_PUNTOCOMA     reduce using rule 165 (datatype -> datePart .)
    R_UNION         reduce using rule 165 (datatype -> datePart .)
    R_INTERSECT     reduce using rule 165 (datatype -> datePart .)
    R_EXCEPT        reduce using rule 165 (datatype -> datePart .)
    S_PARDER        reduce using rule 165 (datatype -> datePart .)
    R_AND           reduce using rule 165 (datatype -> datePart .)
    R_OR            reduce using rule 165 (datatype -> datePart .)
    R_GROUP         reduce using rule 165 (datatype -> datePart .)
    R_LIMIT         reduce using rule 165 (datatype -> datePart .)
    R_ORDER         reduce using rule 165 (datatype -> datePart .)
    R_THEN          reduce using rule 165 (datatype -> datePart .)
    R_NATURAL       reduce using rule 165 (datatype -> datePart .)
    R_INNER         reduce using rule 165 (datatype -> datePart .)
    R_LEFT          reduce using rule 165 (datatype -> datePart .)
    R_RIGHT         reduce using rule 165 (datatype -> datePart .)
    R_FULL          reduce using rule 165 (datatype -> datePart .)
    R_WHERE         reduce using rule 165 (datatype -> datePart .)
    R_ALL           reduce using rule 165 (datatype -> datePart .)
    R_ANY           reduce using rule 165 (datatype -> datePart .)
    R_SOME          reduce using rule 165 (datatype -> datePart .)
>>>>>>> main


state 80

<<<<<<< HEAD
    (155) datatype -> datePart .

    O_SUMA          reduce using rule 155 (datatype -> datePart .)
    O_RESTA         reduce using rule 155 (datatype -> datePart .)
    O_PRODUCTO      reduce using rule 155 (datatype -> datePart .)
    O_DIVISION      reduce using rule 155 (datatype -> datePart .)
    O_EXPONENTE     reduce using rule 155 (datatype -> datePart .)
    O_MODULAR       reduce using rule 155 (datatype -> datePart .)
    OC_CONCATENAR   reduce using rule 155 (datatype -> datePart .)
    R_IN            reduce using rule 155 (datatype -> datePart .)
    R_NOT           reduce using rule 155 (datatype -> datePart .)
    OL_MENORQUE     reduce using rule 155 (datatype -> datePart .)
    OL_MAYORQUE     reduce using rule 155 (datatype -> datePart .)
    OL_MAYORIGUALQUE reduce using rule 155 (datatype -> datePart .)
    OL_MENORIGUALQUE reduce using rule 155 (datatype -> datePart .)
    S_IGUAL         reduce using rule 155 (datatype -> datePart .)
    OL_DISTINTODE   reduce using rule 155 (datatype -> datePart .)
    R_IS            reduce using rule 155 (datatype -> datePart .)
    R_BETWEEN       reduce using rule 155 (datatype -> datePart .)
    R_ISNULL        reduce using rule 155 (datatype -> datePart .)
    R_NOTNULL       reduce using rule 155 (datatype -> datePart .)
    OL_ESIGUAL      reduce using rule 155 (datatype -> datePart .)
    R_AS            reduce using rule 155 (datatype -> datePart .)
    ID              reduce using rule 155 (datatype -> datePart .)
    STRING          reduce using rule 155 (datatype -> datePart .)
    CHARACTER       reduce using rule 155 (datatype -> datePart .)
    S_COMA          reduce using rule 155 (datatype -> datePart .)
    R_FROM          reduce using rule 155 (datatype -> datePart .)
    S_PUNTOCOMA     reduce using rule 155 (datatype -> datePart .)
    R_UNION         reduce using rule 155 (datatype -> datePart .)
    R_INTERSECT     reduce using rule 155 (datatype -> datePart .)
    R_EXCEPT        reduce using rule 155 (datatype -> datePart .)
    S_PARDER        reduce using rule 155 (datatype -> datePart .)
    R_AND           reduce using rule 155 (datatype -> datePart .)
    R_OR            reduce using rule 155 (datatype -> datePart .)
    R_GROUP         reduce using rule 155 (datatype -> datePart .)
    R_ORDER         reduce using rule 155 (datatype -> datePart .)
    R_LIMIT         reduce using rule 155 (datatype -> datePart .)
    R_THEN          reduce using rule 155 (datatype -> datePart .)
    R_NATURAL       reduce using rule 155 (datatype -> datePart .)
    R_INNER         reduce using rule 155 (datatype -> datePart .)
    R_LEFT          reduce using rule 155 (datatype -> datePart .)
    R_RIGHT         reduce using rule 155 (datatype -> datePart .)
    R_FULL          reduce using rule 155 (datatype -> datePart .)
    R_WHERE         reduce using rule 155 (datatype -> datePart .)
    R_ALL           reduce using rule 155 (datatype -> datePart .)
    R_ANY           reduce using rule 155 (datatype -> datePart .)
    R_SOME          reduce using rule 155 (datatype -> datePart .)
=======
    (166) datatype -> current .

    O_SUMA          reduce using rule 166 (datatype -> current .)
    O_RESTA         reduce using rule 166 (datatype -> current .)
    O_PRODUCTO      reduce using rule 166 (datatype -> current .)
    O_DIVISION      reduce using rule 166 (datatype -> current .)
    O_EXPONENTE     reduce using rule 166 (datatype -> current .)
    O_MODULAR       reduce using rule 166 (datatype -> current .)
    OC_CONCATENAR   reduce using rule 166 (datatype -> current .)
    R_IN            reduce using rule 166 (datatype -> current .)
    R_NOT           reduce using rule 166 (datatype -> current .)
    OL_MENORQUE     reduce using rule 166 (datatype -> current .)
    OL_MAYORQUE     reduce using rule 166 (datatype -> current .)
    OL_MAYORIGUALQUE reduce using rule 166 (datatype -> current .)
    OL_MENORIGUALQUE reduce using rule 166 (datatype -> current .)
    S_IGUAL         reduce using rule 166 (datatype -> current .)
    OL_DISTINTODE   reduce using rule 166 (datatype -> current .)
    R_IS            reduce using rule 166 (datatype -> current .)
    R_BETWEEN       reduce using rule 166 (datatype -> current .)
    R_ISNULL        reduce using rule 166 (datatype -> current .)
    R_NOTNULL       reduce using rule 166 (datatype -> current .)
    OL_ESIGUAL      reduce using rule 166 (datatype -> current .)
    R_AS            reduce using rule 166 (datatype -> current .)
    ID              reduce using rule 166 (datatype -> current .)
    STRING          reduce using rule 166 (datatype -> current .)
    CHARACTER       reduce using rule 166 (datatype -> current .)
    S_COMA          reduce using rule 166 (datatype -> current .)
    R_FROM          reduce using rule 166 (datatype -> current .)
    S_PUNTOCOMA     reduce using rule 166 (datatype -> current .)
    R_UNION         reduce using rule 166 (datatype -> current .)
    R_INTERSECT     reduce using rule 166 (datatype -> current .)
    R_EXCEPT        reduce using rule 166 (datatype -> current .)
    S_PARDER        reduce using rule 166 (datatype -> current .)
    R_AND           reduce using rule 166 (datatype -> current .)
    R_OR            reduce using rule 166 (datatype -> current .)
    R_GROUP         reduce using rule 166 (datatype -> current .)
    R_LIMIT         reduce using rule 166 (datatype -> current .)
    R_ORDER         reduce using rule 166 (datatype -> current .)
    R_THEN          reduce using rule 166 (datatype -> current .)
    R_NATURAL       reduce using rule 166 (datatype -> current .)
    R_INNER         reduce using rule 166 (datatype -> current .)
    R_LEFT          reduce using rule 166 (datatype -> current .)
    R_RIGHT         reduce using rule 166 (datatype -> current .)
    R_FULL          reduce using rule 166 (datatype -> current .)
    R_WHERE         reduce using rule 166 (datatype -> current .)
    R_ALL           reduce using rule 166 (datatype -> current .)
    R_ANY           reduce using rule 166 (datatype -> current .)
    R_SOME          reduce using rule 166 (datatype -> current .)
>>>>>>> main


state 81

<<<<<<< HEAD
    (156) datatype -> current .

    O_SUMA          reduce using rule 156 (datatype -> current .)
    O_RESTA         reduce using rule 156 (datatype -> current .)
    O_PRODUCTO      reduce using rule 156 (datatype -> current .)
    O_DIVISION      reduce using rule 156 (datatype -> current .)
    O_EXPONENTE     reduce using rule 156 (datatype -> current .)
    O_MODULAR       reduce using rule 156 (datatype -> current .)
    OC_CONCATENAR   reduce using rule 156 (datatype -> current .)
    R_IN            reduce using rule 156 (datatype -> current .)
    R_NOT           reduce using rule 156 (datatype -> current .)
    OL_MENORQUE     reduce using rule 156 (datatype -> current .)
    OL_MAYORQUE     reduce using rule 156 (datatype -> current .)
    OL_MAYORIGUALQUE reduce using rule 156 (datatype -> current .)
    OL_MENORIGUALQUE reduce using rule 156 (datatype -> current .)
    S_IGUAL         reduce using rule 156 (datatype -> current .)
    OL_DISTINTODE   reduce using rule 156 (datatype -> current .)
    R_IS            reduce using rule 156 (datatype -> current .)
    R_BETWEEN       reduce using rule 156 (datatype -> current .)
    R_ISNULL        reduce using rule 156 (datatype -> current .)
    R_NOTNULL       reduce using rule 156 (datatype -> current .)
    OL_ESIGUAL      reduce using rule 156 (datatype -> current .)
    R_AS            reduce using rule 156 (datatype -> current .)
    ID              reduce using rule 156 (datatype -> current .)
    STRING          reduce using rule 156 (datatype -> current .)
    CHARACTER       reduce using rule 156 (datatype -> current .)
    S_COMA          reduce using rule 156 (datatype -> current .)
    R_FROM          reduce using rule 156 (datatype -> current .)
    S_PUNTOCOMA     reduce using rule 156 (datatype -> current .)
    R_UNION         reduce using rule 156 (datatype -> current .)
    R_INTERSECT     reduce using rule 156 (datatype -> current .)
    R_EXCEPT        reduce using rule 156 (datatype -> current .)
    S_PARDER        reduce using rule 156 (datatype -> current .)
    R_AND           reduce using rule 156 (datatype -> current .)
    R_OR            reduce using rule 156 (datatype -> current .)
    R_GROUP         reduce using rule 156 (datatype -> current .)
    R_ORDER         reduce using rule 156 (datatype -> current .)
    R_LIMIT         reduce using rule 156 (datatype -> current .)
    R_THEN          reduce using rule 156 (datatype -> current .)
    R_NATURAL       reduce using rule 156 (datatype -> current .)
    R_INNER         reduce using rule 156 (datatype -> current .)
    R_LEFT          reduce using rule 156 (datatype -> current .)
    R_RIGHT         reduce using rule 156 (datatype -> current .)
    R_FULL          reduce using rule 156 (datatype -> current .)
    R_WHERE         reduce using rule 156 (datatype -> current .)
    R_ALL           reduce using rule 156 (datatype -> current .)
    R_ANY           reduce using rule 156 (datatype -> current .)
    R_SOME          reduce using rule 156 (datatype -> current .)


state 82

    (213) expBool -> R_NOT . expBool
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 82
    S_PARIZQ        shift and go to state 182
    R_EXISTS        shift and go to state 100
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 181
    boolean                        shift and go to state 83
    datatype                       shift and go to state 183
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    stringExp                      shift and go to state 105
    timeStamp                      shift and go to state 96

state 83

    (216) expBool -> boolean .

    R_AND           reduce using rule 216 (expBool -> boolean .)
    R_OR            reduce using rule 216 (expBool -> boolean .)
    R_IS            reduce using rule 216 (expBool -> boolean .)
    R_AS            reduce using rule 216 (expBool -> boolean .)
    ID              reduce using rule 216 (expBool -> boolean .)
    STRING          reduce using rule 216 (expBool -> boolean .)
    CHARACTER       reduce using rule 216 (expBool -> boolean .)
    S_COMA          reduce using rule 216 (expBool -> boolean .)
    R_FROM          reduce using rule 216 (expBool -> boolean .)
    S_PUNTOCOMA     reduce using rule 216 (expBool -> boolean .)
    R_UNION         reduce using rule 216 (expBool -> boolean .)
    R_INTERSECT     reduce using rule 216 (expBool -> boolean .)
    R_EXCEPT        reduce using rule 216 (expBool -> boolean .)
    S_PARDER        reduce using rule 216 (expBool -> boolean .)
    R_GROUP         reduce using rule 216 (expBool -> boolean .)
    R_ORDER         reduce using rule 216 (expBool -> boolean .)
    R_LIMIT         reduce using rule 216 (expBool -> boolean .)
    R_THEN          reduce using rule 216 (expBool -> boolean .)
    R_NATURAL       reduce using rule 216 (expBool -> boolean .)
    R_INNER         reduce using rule 216 (expBool -> boolean .)
    R_LEFT          reduce using rule 216 (expBool -> boolean .)
    R_RIGHT         reduce using rule 216 (expBool -> boolean .)
    R_FULL          reduce using rule 216 (expBool -> boolean .)
    R_WHERE         reduce using rule 216 (expBool -> boolean .)
=======
    (223) expBool -> R_NOT . expBool
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 81
    S_PARIZQ        shift and go to state 181
    R_EXISTS        shift and go to state 99
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    expBool                        shift and go to state 180
    boolean                        shift and go to state 82
    datatype                       shift and go to state 182
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    stringExp                      shift and go to state 104
    timeStamp                      shift and go to state 95

state 82

    (226) expBool -> boolean .

    R_AND           reduce using rule 226 (expBool -> boolean .)
    R_OR            reduce using rule 226 (expBool -> boolean .)
    R_IS            reduce using rule 226 (expBool -> boolean .)
    R_AS            reduce using rule 226 (expBool -> boolean .)
    ID              reduce using rule 226 (expBool -> boolean .)
    STRING          reduce using rule 226 (expBool -> boolean .)
    CHARACTER       reduce using rule 226 (expBool -> boolean .)
    S_COMA          reduce using rule 226 (expBool -> boolean .)
    R_FROM          reduce using rule 226 (expBool -> boolean .)
    S_PUNTOCOMA     reduce using rule 226 (expBool -> boolean .)
    R_UNION         reduce using rule 226 (expBool -> boolean .)
    R_INTERSECT     reduce using rule 226 (expBool -> boolean .)
    R_EXCEPT        reduce using rule 226 (expBool -> boolean .)
    S_PARDER        reduce using rule 226 (expBool -> boolean .)
    R_GROUP         reduce using rule 226 (expBool -> boolean .)
    R_LIMIT         reduce using rule 226 (expBool -> boolean .)
    R_ORDER         reduce using rule 226 (expBool -> boolean .)
    R_THEN          reduce using rule 226 (expBool -> boolean .)
    R_NATURAL       reduce using rule 226 (expBool -> boolean .)
    R_INNER         reduce using rule 226 (expBool -> boolean .)
    R_LEFT          reduce using rule 226 (expBool -> boolean .)
    R_RIGHT         reduce using rule 226 (expBool -> boolean .)
    R_FULL          reduce using rule 226 (expBool -> boolean .)
    R_WHERE         reduce using rule 226 (expBool -> boolean .)


state 83

    (137) literal -> INTEGER .

    O_SUMA          reduce using rule 137 (literal -> INTEGER .)
    O_RESTA         reduce using rule 137 (literal -> INTEGER .)
    O_PRODUCTO      reduce using rule 137 (literal -> INTEGER .)
    O_DIVISION      reduce using rule 137 (literal -> INTEGER .)
    O_EXPONENTE     reduce using rule 137 (literal -> INTEGER .)
    O_MODULAR       reduce using rule 137 (literal -> INTEGER .)
    OC_CONCATENAR   reduce using rule 137 (literal -> INTEGER .)
    R_IN            reduce using rule 137 (literal -> INTEGER .)
    R_NOT           reduce using rule 137 (literal -> INTEGER .)
    OL_MENORQUE     reduce using rule 137 (literal -> INTEGER .)
    OL_MAYORQUE     reduce using rule 137 (literal -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 137 (literal -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 137 (literal -> INTEGER .)
    S_IGUAL         reduce using rule 137 (literal -> INTEGER .)
    OL_DISTINTODE   reduce using rule 137 (literal -> INTEGER .)
    R_IS            reduce using rule 137 (literal -> INTEGER .)
    R_BETWEEN       reduce using rule 137 (literal -> INTEGER .)
    R_ISNULL        reduce using rule 137 (literal -> INTEGER .)
    R_NOTNULL       reduce using rule 137 (literal -> INTEGER .)
    OL_ESIGUAL      reduce using rule 137 (literal -> INTEGER .)
    R_AS            reduce using rule 137 (literal -> INTEGER .)
    ID              reduce using rule 137 (literal -> INTEGER .)
    STRING          reduce using rule 137 (literal -> INTEGER .)
    CHARACTER       reduce using rule 137 (literal -> INTEGER .)
    S_COMA          reduce using rule 137 (literal -> INTEGER .)
    R_FROM          reduce using rule 137 (literal -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 137 (literal -> INTEGER .)
    R_UNION         reduce using rule 137 (literal -> INTEGER .)
    R_INTERSECT     reduce using rule 137 (literal -> INTEGER .)
    R_EXCEPT        reduce using rule 137 (literal -> INTEGER .)
    S_PARDER        reduce using rule 137 (literal -> INTEGER .)
    R_AND           reduce using rule 137 (literal -> INTEGER .)
    R_OR            reduce using rule 137 (literal -> INTEGER .)
    R_GROUP         reduce using rule 137 (literal -> INTEGER .)
    R_LIMIT         reduce using rule 137 (literal -> INTEGER .)
    R_ORDER         reduce using rule 137 (literal -> INTEGER .)
    R_THEN          reduce using rule 137 (literal -> INTEGER .)
    R_NATURAL       reduce using rule 137 (literal -> INTEGER .)
    R_INNER         reduce using rule 137 (literal -> INTEGER .)
    R_LEFT          reduce using rule 137 (literal -> INTEGER .)
    R_RIGHT         reduce using rule 137 (literal -> INTEGER .)
    R_FULL          reduce using rule 137 (literal -> INTEGER .)
    R_WHERE         reduce using rule 137 (literal -> INTEGER .)
    R_ALL           reduce using rule 137 (literal -> INTEGER .)
    R_ANY           reduce using rule 137 (literal -> INTEGER .)
    R_SOME          reduce using rule 137 (literal -> INTEGER .)
    R_END           reduce using rule 137 (literal -> INTEGER .)
    R_ELSE          reduce using rule 137 (literal -> INTEGER .)
    R_WHEN          reduce using rule 137 (literal -> INTEGER .)
    R_DEFAULT       reduce using rule 137 (literal -> INTEGER .)
    R_NULL          reduce using rule 137 (literal -> INTEGER .)
    R_PRIMARY       reduce using rule 137 (literal -> INTEGER .)
    R_REFERENCES    reduce using rule 137 (literal -> INTEGER .)
    R_CONSTRAINT    reduce using rule 137 (literal -> INTEGER .)
    R_UNIQUE        reduce using rule 137 (literal -> INTEGER .)
    R_CHECK         reduce using rule 137 (literal -> INTEGER .)
>>>>>>> main


state 84

<<<<<<< HEAD
    (127) literal -> INTEGER .

    O_SUMA          reduce using rule 127 (literal -> INTEGER .)
    O_RESTA         reduce using rule 127 (literal -> INTEGER .)
    O_PRODUCTO      reduce using rule 127 (literal -> INTEGER .)
    O_DIVISION      reduce using rule 127 (literal -> INTEGER .)
    O_EXPONENTE     reduce using rule 127 (literal -> INTEGER .)
    O_MODULAR       reduce using rule 127 (literal -> INTEGER .)
    OC_CONCATENAR   reduce using rule 127 (literal -> INTEGER .)
    R_IN            reduce using rule 127 (literal -> INTEGER .)
    R_NOT           reduce using rule 127 (literal -> INTEGER .)
    OL_MENORQUE     reduce using rule 127 (literal -> INTEGER .)
    OL_MAYORQUE     reduce using rule 127 (literal -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 127 (literal -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 127 (literal -> INTEGER .)
    S_IGUAL         reduce using rule 127 (literal -> INTEGER .)
    OL_DISTINTODE   reduce using rule 127 (literal -> INTEGER .)
    R_IS            reduce using rule 127 (literal -> INTEGER .)
    R_BETWEEN       reduce using rule 127 (literal -> INTEGER .)
    R_ISNULL        reduce using rule 127 (literal -> INTEGER .)
    R_NOTNULL       reduce using rule 127 (literal -> INTEGER .)
    OL_ESIGUAL      reduce using rule 127 (literal -> INTEGER .)
    R_AS            reduce using rule 127 (literal -> INTEGER .)
    ID              reduce using rule 127 (literal -> INTEGER .)
    STRING          reduce using rule 127 (literal -> INTEGER .)
    CHARACTER       reduce using rule 127 (literal -> INTEGER .)
    S_COMA          reduce using rule 127 (literal -> INTEGER .)
    R_FROM          reduce using rule 127 (literal -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 127 (literal -> INTEGER .)
    R_UNION         reduce using rule 127 (literal -> INTEGER .)
    R_INTERSECT     reduce using rule 127 (literal -> INTEGER .)
    R_EXCEPT        reduce using rule 127 (literal -> INTEGER .)
    S_PARDER        reduce using rule 127 (literal -> INTEGER .)
    R_AND           reduce using rule 127 (literal -> INTEGER .)
    R_OR            reduce using rule 127 (literal -> INTEGER .)
    R_GROUP         reduce using rule 127 (literal -> INTEGER .)
    R_ORDER         reduce using rule 127 (literal -> INTEGER .)
    R_LIMIT         reduce using rule 127 (literal -> INTEGER .)
    R_THEN          reduce using rule 127 (literal -> INTEGER .)
    R_NATURAL       reduce using rule 127 (literal -> INTEGER .)
    R_INNER         reduce using rule 127 (literal -> INTEGER .)
    R_LEFT          reduce using rule 127 (literal -> INTEGER .)
    R_RIGHT         reduce using rule 127 (literal -> INTEGER .)
    R_FULL          reduce using rule 127 (literal -> INTEGER .)
    R_WHERE         reduce using rule 127 (literal -> INTEGER .)
    R_ALL           reduce using rule 127 (literal -> INTEGER .)
    R_ANY           reduce using rule 127 (literal -> INTEGER .)
    R_SOME          reduce using rule 127 (literal -> INTEGER .)
    R_END           reduce using rule 127 (literal -> INTEGER .)
    R_ELSE          reduce using rule 127 (literal -> INTEGER .)
    R_WHEN          reduce using rule 127 (literal -> INTEGER .)
    R_DEFAULT       reduce using rule 127 (literal -> INTEGER .)
    R_NULL          reduce using rule 127 (literal -> INTEGER .)
    R_PRIMARY       reduce using rule 127 (literal -> INTEGER .)
    R_REFERENCES    reduce using rule 127 (literal -> INTEGER .)
    R_CONSTRAINT    reduce using rule 127 (literal -> INTEGER .)
    R_UNIQUE        reduce using rule 127 (literal -> INTEGER .)
    R_CHECK         reduce using rule 127 (literal -> INTEGER .)
=======
    (138) literal -> STRING .
    (211) stringExp -> STRING .

    O_SUMA          reduce using rule 138 (literal -> STRING .)
    O_RESTA         reduce using rule 138 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 138 (literal -> STRING .)
    O_DIVISION      reduce using rule 138 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 138 (literal -> STRING .)
    O_MODULAR       reduce using rule 138 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 138 (literal -> STRING .)
    R_IN            reduce using rule 138 (literal -> STRING .)
    R_NOT           reduce using rule 138 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 138 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 138 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 138 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 138 (literal -> STRING .)
    S_IGUAL         reduce using rule 138 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 138 (literal -> STRING .)
    R_IS            reduce using rule 138 (literal -> STRING .)
    R_BETWEEN       reduce using rule 138 (literal -> STRING .)
    R_ISNULL        reduce using rule 138 (literal -> STRING .)
    R_NOTNULL       reduce using rule 138 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 138 (literal -> STRING .)
    R_AS            reduce using rule 138 (literal -> STRING .)
    ID              reduce using rule 138 (literal -> STRING .)
    STRING          reduce using rule 138 (literal -> STRING .)
    CHARACTER       reduce using rule 138 (literal -> STRING .)
    S_COMA          reduce using rule 138 (literal -> STRING .)
    R_FROM          reduce using rule 138 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 138 (literal -> STRING .)
    R_UNION         reduce using rule 138 (literal -> STRING .)
    R_INTERSECT     reduce using rule 138 (literal -> STRING .)
    R_EXCEPT        reduce using rule 138 (literal -> STRING .)
    S_PARDER        reduce using rule 138 (literal -> STRING .)
    R_LIKE          reduce using rule 211 (stringExp -> STRING .)
>>>>>>> main


state 85

<<<<<<< HEAD
    (128) literal -> STRING .
    (201) stringExp -> STRING .

    O_SUMA          reduce using rule 128 (literal -> STRING .)
    O_RESTA         reduce using rule 128 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 128 (literal -> STRING .)
    O_DIVISION      reduce using rule 128 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 128 (literal -> STRING .)
    O_MODULAR       reduce using rule 128 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 128 (literal -> STRING .)
    R_IN            reduce using rule 128 (literal -> STRING .)
    R_NOT           reduce using rule 128 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 128 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 128 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 128 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 128 (literal -> STRING .)
    S_IGUAL         reduce using rule 128 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 128 (literal -> STRING .)
    R_IS            reduce using rule 128 (literal -> STRING .)
    R_BETWEEN       reduce using rule 128 (literal -> STRING .)
    R_ISNULL        reduce using rule 128 (literal -> STRING .)
    R_NOTNULL       reduce using rule 128 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 128 (literal -> STRING .)
    R_AS            reduce using rule 128 (literal -> STRING .)
    ID              reduce using rule 128 (literal -> STRING .)
    STRING          reduce using rule 128 (literal -> STRING .)
    CHARACTER       reduce using rule 128 (literal -> STRING .)
    S_COMA          reduce using rule 128 (literal -> STRING .)
    R_FROM          reduce using rule 128 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 128 (literal -> STRING .)
    R_UNION         reduce using rule 128 (literal -> STRING .)
    R_INTERSECT     reduce using rule 128 (literal -> STRING .)
    R_EXCEPT        reduce using rule 128 (literal -> STRING .)
    S_PARDER        reduce using rule 128 (literal -> STRING .)
    R_LIKE          reduce using rule 201 (stringExp -> STRING .)
=======
    (139) literal -> DECIMAL .

    O_SUMA          reduce using rule 139 (literal -> DECIMAL .)
    O_RESTA         reduce using rule 139 (literal -> DECIMAL .)
    O_PRODUCTO      reduce using rule 139 (literal -> DECIMAL .)
    O_DIVISION      reduce using rule 139 (literal -> DECIMAL .)
    O_EXPONENTE     reduce using rule 139 (literal -> DECIMAL .)
    O_MODULAR       reduce using rule 139 (literal -> DECIMAL .)
    OC_CONCATENAR   reduce using rule 139 (literal -> DECIMAL .)
    R_IN            reduce using rule 139 (literal -> DECIMAL .)
    R_NOT           reduce using rule 139 (literal -> DECIMAL .)
    OL_MENORQUE     reduce using rule 139 (literal -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 139 (literal -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 139 (literal -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 139 (literal -> DECIMAL .)
    S_IGUAL         reduce using rule 139 (literal -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 139 (literal -> DECIMAL .)
    R_IS            reduce using rule 139 (literal -> DECIMAL .)
    R_BETWEEN       reduce using rule 139 (literal -> DECIMAL .)
    R_ISNULL        reduce using rule 139 (literal -> DECIMAL .)
    R_NOTNULL       reduce using rule 139 (literal -> DECIMAL .)
    OL_ESIGUAL      reduce using rule 139 (literal -> DECIMAL .)
    R_AS            reduce using rule 139 (literal -> DECIMAL .)
    ID              reduce using rule 139 (literal -> DECIMAL .)
    STRING          reduce using rule 139 (literal -> DECIMAL .)
    CHARACTER       reduce using rule 139 (literal -> DECIMAL .)
    S_COMA          reduce using rule 139 (literal -> DECIMAL .)
    R_FROM          reduce using rule 139 (literal -> DECIMAL .)
    S_PUNTOCOMA     reduce using rule 139 (literal -> DECIMAL .)
    R_UNION         reduce using rule 139 (literal -> DECIMAL .)
    R_INTERSECT     reduce using rule 139 (literal -> DECIMAL .)
    R_EXCEPT        reduce using rule 139 (literal -> DECIMAL .)
    S_PARDER        reduce using rule 139 (literal -> DECIMAL .)
    R_AND           reduce using rule 139 (literal -> DECIMAL .)
    R_OR            reduce using rule 139 (literal -> DECIMAL .)
    R_GROUP         reduce using rule 139 (literal -> DECIMAL .)
    R_LIMIT         reduce using rule 139 (literal -> DECIMAL .)
    R_ORDER         reduce using rule 139 (literal -> DECIMAL .)
    R_THEN          reduce using rule 139 (literal -> DECIMAL .)
    R_NATURAL       reduce using rule 139 (literal -> DECIMAL .)
    R_INNER         reduce using rule 139 (literal -> DECIMAL .)
    R_LEFT          reduce using rule 139 (literal -> DECIMAL .)
    R_RIGHT         reduce using rule 139 (literal -> DECIMAL .)
    R_FULL          reduce using rule 139 (literal -> DECIMAL .)
    R_WHERE         reduce using rule 139 (literal -> DECIMAL .)
    R_ALL           reduce using rule 139 (literal -> DECIMAL .)
    R_ANY           reduce using rule 139 (literal -> DECIMAL .)
    R_SOME          reduce using rule 139 (literal -> DECIMAL .)
    R_END           reduce using rule 139 (literal -> DECIMAL .)
    R_ELSE          reduce using rule 139 (literal -> DECIMAL .)
    R_WHEN          reduce using rule 139 (literal -> DECIMAL .)
    R_DEFAULT       reduce using rule 139 (literal -> DECIMAL .)
    R_NULL          reduce using rule 139 (literal -> DECIMAL .)
    R_PRIMARY       reduce using rule 139 (literal -> DECIMAL .)
    R_REFERENCES    reduce using rule 139 (literal -> DECIMAL .)
    R_CONSTRAINT    reduce using rule 139 (literal -> DECIMAL .)
    R_UNIQUE        reduce using rule 139 (literal -> DECIMAL .)
    R_CHECK         reduce using rule 139 (literal -> DECIMAL .)
>>>>>>> main


state 86

<<<<<<< HEAD
    (129) literal -> DECIMAL .

    O_SUMA          reduce using rule 129 (literal -> DECIMAL .)
    O_RESTA         reduce using rule 129 (literal -> DECIMAL .)
    O_PRODUCTO      reduce using rule 129 (literal -> DECIMAL .)
    O_DIVISION      reduce using rule 129 (literal -> DECIMAL .)
    O_EXPONENTE     reduce using rule 129 (literal -> DECIMAL .)
    O_MODULAR       reduce using rule 129 (literal -> DECIMAL .)
    OC_CONCATENAR   reduce using rule 129 (literal -> DECIMAL .)
    R_IN            reduce using rule 129 (literal -> DECIMAL .)
    R_NOT           reduce using rule 129 (literal -> DECIMAL .)
    OL_MENORQUE     reduce using rule 129 (literal -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 129 (literal -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 129 (literal -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 129 (literal -> DECIMAL .)
    S_IGUAL         reduce using rule 129 (literal -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 129 (literal -> DECIMAL .)
    R_IS            reduce using rule 129 (literal -> DECIMAL .)
    R_BETWEEN       reduce using rule 129 (literal -> DECIMAL .)
    R_ISNULL        reduce using rule 129 (literal -> DECIMAL .)
    R_NOTNULL       reduce using rule 129 (literal -> DECIMAL .)
    OL_ESIGUAL      reduce using rule 129 (literal -> DECIMAL .)
    R_AS            reduce using rule 129 (literal -> DECIMAL .)
    ID              reduce using rule 129 (literal -> DECIMAL .)
    STRING          reduce using rule 129 (literal -> DECIMAL .)
    CHARACTER       reduce using rule 129 (literal -> DECIMAL .)
    S_COMA          reduce using rule 129 (literal -> DECIMAL .)
    R_FROM          reduce using rule 129 (literal -> DECIMAL .)
    S_PUNTOCOMA     reduce using rule 129 (literal -> DECIMAL .)
    R_UNION         reduce using rule 129 (literal -> DECIMAL .)
    R_INTERSECT     reduce using rule 129 (literal -> DECIMAL .)
    R_EXCEPT        reduce using rule 129 (literal -> DECIMAL .)
    S_PARDER        reduce using rule 129 (literal -> DECIMAL .)
    R_AND           reduce using rule 129 (literal -> DECIMAL .)
    R_OR            reduce using rule 129 (literal -> DECIMAL .)
    R_GROUP         reduce using rule 129 (literal -> DECIMAL .)
    R_ORDER         reduce using rule 129 (literal -> DECIMAL .)
    R_LIMIT         reduce using rule 129 (literal -> DECIMAL .)
    R_THEN          reduce using rule 129 (literal -> DECIMAL .)
    R_NATURAL       reduce using rule 129 (literal -> DECIMAL .)
    R_INNER         reduce using rule 129 (literal -> DECIMAL .)
    R_LEFT          reduce using rule 129 (literal -> DECIMAL .)
    R_RIGHT         reduce using rule 129 (literal -> DECIMAL .)
    R_FULL          reduce using rule 129 (literal -> DECIMAL .)
    R_WHERE         reduce using rule 129 (literal -> DECIMAL .)
    R_ALL           reduce using rule 129 (literal -> DECIMAL .)
    R_ANY           reduce using rule 129 (literal -> DECIMAL .)
    R_SOME          reduce using rule 129 (literal -> DECIMAL .)
    R_END           reduce using rule 129 (literal -> DECIMAL .)
    R_ELSE          reduce using rule 129 (literal -> DECIMAL .)
    R_WHEN          reduce using rule 129 (literal -> DECIMAL .)
    R_DEFAULT       reduce using rule 129 (literal -> DECIMAL .)
    R_NULL          reduce using rule 129 (literal -> DECIMAL .)
    R_PRIMARY       reduce using rule 129 (literal -> DECIMAL .)
    R_REFERENCES    reduce using rule 129 (literal -> DECIMAL .)
    R_CONSTRAINT    reduce using rule 129 (literal -> DECIMAL .)
    R_UNIQUE        reduce using rule 129 (literal -> DECIMAL .)
    R_CHECK         reduce using rule 129 (literal -> DECIMAL .)
=======
    (140) literal -> CHARACTER .

    O_SUMA          reduce using rule 140 (literal -> CHARACTER .)
    O_RESTA         reduce using rule 140 (literal -> CHARACTER .)
    O_PRODUCTO      reduce using rule 140 (literal -> CHARACTER .)
    O_DIVISION      reduce using rule 140 (literal -> CHARACTER .)
    O_EXPONENTE     reduce using rule 140 (literal -> CHARACTER .)
    O_MODULAR       reduce using rule 140 (literal -> CHARACTER .)
    OC_CONCATENAR   reduce using rule 140 (literal -> CHARACTER .)
    R_IN            reduce using rule 140 (literal -> CHARACTER .)
    R_NOT           reduce using rule 140 (literal -> CHARACTER .)
    OL_MENORQUE     reduce using rule 140 (literal -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 140 (literal -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 140 (literal -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 140 (literal -> CHARACTER .)
    S_IGUAL         reduce using rule 140 (literal -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 140 (literal -> CHARACTER .)
    R_IS            reduce using rule 140 (literal -> CHARACTER .)
    R_BETWEEN       reduce using rule 140 (literal -> CHARACTER .)
    R_ISNULL        reduce using rule 140 (literal -> CHARACTER .)
    R_NOTNULL       reduce using rule 140 (literal -> CHARACTER .)
    OL_ESIGUAL      reduce using rule 140 (literal -> CHARACTER .)
    R_AS            reduce using rule 140 (literal -> CHARACTER .)
    ID              reduce using rule 140 (literal -> CHARACTER .)
    STRING          reduce using rule 140 (literal -> CHARACTER .)
    CHARACTER       reduce using rule 140 (literal -> CHARACTER .)
    S_COMA          reduce using rule 140 (literal -> CHARACTER .)
    R_FROM          reduce using rule 140 (literal -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 140 (literal -> CHARACTER .)
    R_UNION         reduce using rule 140 (literal -> CHARACTER .)
    R_INTERSECT     reduce using rule 140 (literal -> CHARACTER .)
    R_EXCEPT        reduce using rule 140 (literal -> CHARACTER .)
    S_PARDER        reduce using rule 140 (literal -> CHARACTER .)
    R_AND           reduce using rule 140 (literal -> CHARACTER .)
    R_OR            reduce using rule 140 (literal -> CHARACTER .)
    R_GROUP         reduce using rule 140 (literal -> CHARACTER .)
    R_LIMIT         reduce using rule 140 (literal -> CHARACTER .)
    R_ORDER         reduce using rule 140 (literal -> CHARACTER .)
    R_THEN          reduce using rule 140 (literal -> CHARACTER .)
    R_NATURAL       reduce using rule 140 (literal -> CHARACTER .)
    R_INNER         reduce using rule 140 (literal -> CHARACTER .)
    R_LEFT          reduce using rule 140 (literal -> CHARACTER .)
    R_RIGHT         reduce using rule 140 (literal -> CHARACTER .)
    R_FULL          reduce using rule 140 (literal -> CHARACTER .)
    R_WHERE         reduce using rule 140 (literal -> CHARACTER .)
    R_ALL           reduce using rule 140 (literal -> CHARACTER .)
    R_ANY           reduce using rule 140 (literal -> CHARACTER .)
    R_SOME          reduce using rule 140 (literal -> CHARACTER .)
    R_END           reduce using rule 140 (literal -> CHARACTER .)
    R_ELSE          reduce using rule 140 (literal -> CHARACTER .)
    R_WHEN          reduce using rule 140 (literal -> CHARACTER .)
    R_DEFAULT       reduce using rule 140 (literal -> CHARACTER .)
    R_NULL          reduce using rule 140 (literal -> CHARACTER .)
    R_PRIMARY       reduce using rule 140 (literal -> CHARACTER .)
    R_REFERENCES    reduce using rule 140 (literal -> CHARACTER .)
    R_CONSTRAINT    reduce using rule 140 (literal -> CHARACTER .)
    R_UNIQUE        reduce using rule 140 (literal -> CHARACTER .)
    R_CHECK         reduce using rule 140 (literal -> CHARACTER .)
>>>>>>> main


state 87

<<<<<<< HEAD
    (130) literal -> CHARACTER .

    O_SUMA          reduce using rule 130 (literal -> CHARACTER .)
    O_RESTA         reduce using rule 130 (literal -> CHARACTER .)
    O_PRODUCTO      reduce using rule 130 (literal -> CHARACTER .)
    O_DIVISION      reduce using rule 130 (literal -> CHARACTER .)
    O_EXPONENTE     reduce using rule 130 (literal -> CHARACTER .)
    O_MODULAR       reduce using rule 130 (literal -> CHARACTER .)
    OC_CONCATENAR   reduce using rule 130 (literal -> CHARACTER .)
    R_IN            reduce using rule 130 (literal -> CHARACTER .)
    R_NOT           reduce using rule 130 (literal -> CHARACTER .)
    OL_MENORQUE     reduce using rule 130 (literal -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 130 (literal -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 130 (literal -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 130 (literal -> CHARACTER .)
    S_IGUAL         reduce using rule 130 (literal -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 130 (literal -> CHARACTER .)
    R_IS            reduce using rule 130 (literal -> CHARACTER .)
    R_BETWEEN       reduce using rule 130 (literal -> CHARACTER .)
    R_ISNULL        reduce using rule 130 (literal -> CHARACTER .)
    R_NOTNULL       reduce using rule 130 (literal -> CHARACTER .)
    OL_ESIGUAL      reduce using rule 130 (literal -> CHARACTER .)
    R_AS            reduce using rule 130 (literal -> CHARACTER .)
    ID              reduce using rule 130 (literal -> CHARACTER .)
    STRING          reduce using rule 130 (literal -> CHARACTER .)
    CHARACTER       reduce using rule 130 (literal -> CHARACTER .)
    S_COMA          reduce using rule 130 (literal -> CHARACTER .)
    R_FROM          reduce using rule 130 (literal -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 130 (literal -> CHARACTER .)
    R_UNION         reduce using rule 130 (literal -> CHARACTER .)
    R_INTERSECT     reduce using rule 130 (literal -> CHARACTER .)
    R_EXCEPT        reduce using rule 130 (literal -> CHARACTER .)
    S_PARDER        reduce using rule 130 (literal -> CHARACTER .)
    R_AND           reduce using rule 130 (literal -> CHARACTER .)
    R_OR            reduce using rule 130 (literal -> CHARACTER .)
    R_GROUP         reduce using rule 130 (literal -> CHARACTER .)
    R_ORDER         reduce using rule 130 (literal -> CHARACTER .)
    R_LIMIT         reduce using rule 130 (literal -> CHARACTER .)
    R_THEN          reduce using rule 130 (literal -> CHARACTER .)
    R_NATURAL       reduce using rule 130 (literal -> CHARACTER .)
    R_INNER         reduce using rule 130 (literal -> CHARACTER .)
    R_LEFT          reduce using rule 130 (literal -> CHARACTER .)
    R_RIGHT         reduce using rule 130 (literal -> CHARACTER .)
    R_FULL          reduce using rule 130 (literal -> CHARACTER .)
    R_WHERE         reduce using rule 130 (literal -> CHARACTER .)
    R_ALL           reduce using rule 130 (literal -> CHARACTER .)
    R_ANY           reduce using rule 130 (literal -> CHARACTER .)
    R_SOME          reduce using rule 130 (literal -> CHARACTER .)
    R_END           reduce using rule 130 (literal -> CHARACTER .)
    R_ELSE          reduce using rule 130 (literal -> CHARACTER .)
    R_WHEN          reduce using rule 130 (literal -> CHARACTER .)
    R_DEFAULT       reduce using rule 130 (literal -> CHARACTER .)
    R_NULL          reduce using rule 130 (literal -> CHARACTER .)
    R_PRIMARY       reduce using rule 130 (literal -> CHARACTER .)
    R_REFERENCES    reduce using rule 130 (literal -> CHARACTER .)
    R_CONSTRAINT    reduce using rule 130 (literal -> CHARACTER .)
    R_UNIQUE        reduce using rule 130 (literal -> CHARACTER .)
    R_CHECK         reduce using rule 130 (literal -> CHARACTER .)
=======
    (141) literal -> R_TRUE .

    O_SUMA          reduce using rule 141 (literal -> R_TRUE .)
    O_RESTA         reduce using rule 141 (literal -> R_TRUE .)
    O_PRODUCTO      reduce using rule 141 (literal -> R_TRUE .)
    O_DIVISION      reduce using rule 141 (literal -> R_TRUE .)
    O_EXPONENTE     reduce using rule 141 (literal -> R_TRUE .)
    O_MODULAR       reduce using rule 141 (literal -> R_TRUE .)
    OC_CONCATENAR   reduce using rule 141 (literal -> R_TRUE .)
    R_IN            reduce using rule 141 (literal -> R_TRUE .)
    R_NOT           reduce using rule 141 (literal -> R_TRUE .)
    OL_MENORQUE     reduce using rule 141 (literal -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 141 (literal -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 141 (literal -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 141 (literal -> R_TRUE .)
    S_IGUAL         reduce using rule 141 (literal -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 141 (literal -> R_TRUE .)
    R_IS            reduce using rule 141 (literal -> R_TRUE .)
    R_BETWEEN       reduce using rule 141 (literal -> R_TRUE .)
    R_ISNULL        reduce using rule 141 (literal -> R_TRUE .)
    R_NOTNULL       reduce using rule 141 (literal -> R_TRUE .)
    OL_ESIGUAL      reduce using rule 141 (literal -> R_TRUE .)
    R_AS            reduce using rule 141 (literal -> R_TRUE .)
    ID              reduce using rule 141 (literal -> R_TRUE .)
    STRING          reduce using rule 141 (literal -> R_TRUE .)
    CHARACTER       reduce using rule 141 (literal -> R_TRUE .)
    S_COMA          reduce using rule 141 (literal -> R_TRUE .)
    R_FROM          reduce using rule 141 (literal -> R_TRUE .)
    S_PUNTOCOMA     reduce using rule 141 (literal -> R_TRUE .)
    R_UNION         reduce using rule 141 (literal -> R_TRUE .)
    R_INTERSECT     reduce using rule 141 (literal -> R_TRUE .)
    R_EXCEPT        reduce using rule 141 (literal -> R_TRUE .)
    S_PARDER        reduce using rule 141 (literal -> R_TRUE .)
    R_AND           reduce using rule 141 (literal -> R_TRUE .)
    R_OR            reduce using rule 141 (literal -> R_TRUE .)
    R_GROUP         reduce using rule 141 (literal -> R_TRUE .)
    R_LIMIT         reduce using rule 141 (literal -> R_TRUE .)
    R_ORDER         reduce using rule 141 (literal -> R_TRUE .)
    R_THEN          reduce using rule 141 (literal -> R_TRUE .)
    R_NATURAL       reduce using rule 141 (literal -> R_TRUE .)
    R_INNER         reduce using rule 141 (literal -> R_TRUE .)
    R_LEFT          reduce using rule 141 (literal -> R_TRUE .)
    R_RIGHT         reduce using rule 141 (literal -> R_TRUE .)
    R_FULL          reduce using rule 141 (literal -> R_TRUE .)
    R_WHERE         reduce using rule 141 (literal -> R_TRUE .)
    R_ALL           reduce using rule 141 (literal -> R_TRUE .)
    R_ANY           reduce using rule 141 (literal -> R_TRUE .)
    R_SOME          reduce using rule 141 (literal -> R_TRUE .)
    R_END           reduce using rule 141 (literal -> R_TRUE .)
    R_ELSE          reduce using rule 141 (literal -> R_TRUE .)
    R_WHEN          reduce using rule 141 (literal -> R_TRUE .)
    R_DEFAULT       reduce using rule 141 (literal -> R_TRUE .)
    R_NULL          reduce using rule 141 (literal -> R_TRUE .)
    R_PRIMARY       reduce using rule 141 (literal -> R_TRUE .)
    R_REFERENCES    reduce using rule 141 (literal -> R_TRUE .)
    R_CONSTRAINT    reduce using rule 141 (literal -> R_TRUE .)
    R_UNIQUE        reduce using rule 141 (literal -> R_TRUE .)
    R_CHECK         reduce using rule 141 (literal -> R_TRUE .)
>>>>>>> main


state 88

<<<<<<< HEAD
    (131) literal -> R_TRUE .

    O_SUMA          reduce using rule 131 (literal -> R_TRUE .)
    O_RESTA         reduce using rule 131 (literal -> R_TRUE .)
    O_PRODUCTO      reduce using rule 131 (literal -> R_TRUE .)
    O_DIVISION      reduce using rule 131 (literal -> R_TRUE .)
    O_EXPONENTE     reduce using rule 131 (literal -> R_TRUE .)
    O_MODULAR       reduce using rule 131 (literal -> R_TRUE .)
    OC_CONCATENAR   reduce using rule 131 (literal -> R_TRUE .)
    R_IN            reduce using rule 131 (literal -> R_TRUE .)
    R_NOT           reduce using rule 131 (literal -> R_TRUE .)
    OL_MENORQUE     reduce using rule 131 (literal -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 131 (literal -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 131 (literal -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 131 (literal -> R_TRUE .)
    S_IGUAL         reduce using rule 131 (literal -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 131 (literal -> R_TRUE .)
    R_IS            reduce using rule 131 (literal -> R_TRUE .)
    R_BETWEEN       reduce using rule 131 (literal -> R_TRUE .)
    R_ISNULL        reduce using rule 131 (literal -> R_TRUE .)
    R_NOTNULL       reduce using rule 131 (literal -> R_TRUE .)
    OL_ESIGUAL      reduce using rule 131 (literal -> R_TRUE .)
    R_AS            reduce using rule 131 (literal -> R_TRUE .)
    ID              reduce using rule 131 (literal -> R_TRUE .)
    STRING          reduce using rule 131 (literal -> R_TRUE .)
    CHARACTER       reduce using rule 131 (literal -> R_TRUE .)
    S_COMA          reduce using rule 131 (literal -> R_TRUE .)
    R_FROM          reduce using rule 131 (literal -> R_TRUE .)
    S_PUNTOCOMA     reduce using rule 131 (literal -> R_TRUE .)
    R_UNION         reduce using rule 131 (literal -> R_TRUE .)
    R_INTERSECT     reduce using rule 131 (literal -> R_TRUE .)
    R_EXCEPT        reduce using rule 131 (literal -> R_TRUE .)
    S_PARDER        reduce using rule 131 (literal -> R_TRUE .)
    R_AND           reduce using rule 131 (literal -> R_TRUE .)
    R_OR            reduce using rule 131 (literal -> R_TRUE .)
    R_GROUP         reduce using rule 131 (literal -> R_TRUE .)
    R_ORDER         reduce using rule 131 (literal -> R_TRUE .)
    R_LIMIT         reduce using rule 131 (literal -> R_TRUE .)
    R_THEN          reduce using rule 131 (literal -> R_TRUE .)
    R_NATURAL       reduce using rule 131 (literal -> R_TRUE .)
    R_INNER         reduce using rule 131 (literal -> R_TRUE .)
    R_LEFT          reduce using rule 131 (literal -> R_TRUE .)
    R_RIGHT         reduce using rule 131 (literal -> R_TRUE .)
    R_FULL          reduce using rule 131 (literal -> R_TRUE .)
    R_WHERE         reduce using rule 131 (literal -> R_TRUE .)
    R_ALL           reduce using rule 131 (literal -> R_TRUE .)
    R_ANY           reduce using rule 131 (literal -> R_TRUE .)
    R_SOME          reduce using rule 131 (literal -> R_TRUE .)
    R_END           reduce using rule 131 (literal -> R_TRUE .)
    R_ELSE          reduce using rule 131 (literal -> R_TRUE .)
    R_WHEN          reduce using rule 131 (literal -> R_TRUE .)
    R_DEFAULT       reduce using rule 131 (literal -> R_TRUE .)
    R_NULL          reduce using rule 131 (literal -> R_TRUE .)
    R_PRIMARY       reduce using rule 131 (literal -> R_TRUE .)
    R_REFERENCES    reduce using rule 131 (literal -> R_TRUE .)
    R_CONSTRAINT    reduce using rule 131 (literal -> R_TRUE .)
    R_UNIQUE        reduce using rule 131 (literal -> R_TRUE .)
    R_CHECK         reduce using rule 131 (literal -> R_TRUE .)
=======
    (142) literal -> R_FALSE .

    O_SUMA          reduce using rule 142 (literal -> R_FALSE .)
    O_RESTA         reduce using rule 142 (literal -> R_FALSE .)
    O_PRODUCTO      reduce using rule 142 (literal -> R_FALSE .)
    O_DIVISION      reduce using rule 142 (literal -> R_FALSE .)
    O_EXPONENTE     reduce using rule 142 (literal -> R_FALSE .)
    O_MODULAR       reduce using rule 142 (literal -> R_FALSE .)
    OC_CONCATENAR   reduce using rule 142 (literal -> R_FALSE .)
    R_IN            reduce using rule 142 (literal -> R_FALSE .)
    R_NOT           reduce using rule 142 (literal -> R_FALSE .)
    OL_MENORQUE     reduce using rule 142 (literal -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 142 (literal -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 142 (literal -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 142 (literal -> R_FALSE .)
    S_IGUAL         reduce using rule 142 (literal -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 142 (literal -> R_FALSE .)
    R_IS            reduce using rule 142 (literal -> R_FALSE .)
    R_BETWEEN       reduce using rule 142 (literal -> R_FALSE .)
    R_ISNULL        reduce using rule 142 (literal -> R_FALSE .)
    R_NOTNULL       reduce using rule 142 (literal -> R_FALSE .)
    OL_ESIGUAL      reduce using rule 142 (literal -> R_FALSE .)
    R_AS            reduce using rule 142 (literal -> R_FALSE .)
    ID              reduce using rule 142 (literal -> R_FALSE .)
    STRING          reduce using rule 142 (literal -> R_FALSE .)
    CHARACTER       reduce using rule 142 (literal -> R_FALSE .)
    S_COMA          reduce using rule 142 (literal -> R_FALSE .)
    R_FROM          reduce using rule 142 (literal -> R_FALSE .)
    S_PUNTOCOMA     reduce using rule 142 (literal -> R_FALSE .)
    R_UNION         reduce using rule 142 (literal -> R_FALSE .)
    R_INTERSECT     reduce using rule 142 (literal -> R_FALSE .)
    R_EXCEPT        reduce using rule 142 (literal -> R_FALSE .)
    S_PARDER        reduce using rule 142 (literal -> R_FALSE .)
    R_AND           reduce using rule 142 (literal -> R_FALSE .)
    R_OR            reduce using rule 142 (literal -> R_FALSE .)
    R_GROUP         reduce using rule 142 (literal -> R_FALSE .)
    R_LIMIT         reduce using rule 142 (literal -> R_FALSE .)
    R_ORDER         reduce using rule 142 (literal -> R_FALSE .)
    R_THEN          reduce using rule 142 (literal -> R_FALSE .)
    R_NATURAL       reduce using rule 142 (literal -> R_FALSE .)
    R_INNER         reduce using rule 142 (literal -> R_FALSE .)
    R_LEFT          reduce using rule 142 (literal -> R_FALSE .)
    R_RIGHT         reduce using rule 142 (literal -> R_FALSE .)
    R_FULL          reduce using rule 142 (literal -> R_FALSE .)
    R_WHERE         reduce using rule 142 (literal -> R_FALSE .)
    R_ALL           reduce using rule 142 (literal -> R_FALSE .)
    R_ANY           reduce using rule 142 (literal -> R_FALSE .)
    R_SOME          reduce using rule 142 (literal -> R_FALSE .)
    R_END           reduce using rule 142 (literal -> R_FALSE .)
    R_ELSE          reduce using rule 142 (literal -> R_FALSE .)
    R_WHEN          reduce using rule 142 (literal -> R_FALSE .)
    R_DEFAULT       reduce using rule 142 (literal -> R_FALSE .)
    R_NULL          reduce using rule 142 (literal -> R_FALSE .)
    R_PRIMARY       reduce using rule 142 (literal -> R_FALSE .)
    R_REFERENCES    reduce using rule 142 (literal -> R_FALSE .)
    R_CONSTRAINT    reduce using rule 142 (literal -> R_FALSE .)
    R_UNIQUE        reduce using rule 142 (literal -> R_FALSE .)
    R_CHECK         reduce using rule 142 (literal -> R_FALSE .)
>>>>>>> main


state 89

<<<<<<< HEAD
    (132) literal -> R_FALSE .

    O_SUMA          reduce using rule 132 (literal -> R_FALSE .)
    O_RESTA         reduce using rule 132 (literal -> R_FALSE .)
    O_PRODUCTO      reduce using rule 132 (literal -> R_FALSE .)
    O_DIVISION      reduce using rule 132 (literal -> R_FALSE .)
    O_EXPONENTE     reduce using rule 132 (literal -> R_FALSE .)
    O_MODULAR       reduce using rule 132 (literal -> R_FALSE .)
    OC_CONCATENAR   reduce using rule 132 (literal -> R_FALSE .)
    R_IN            reduce using rule 132 (literal -> R_FALSE .)
    R_NOT           reduce using rule 132 (literal -> R_FALSE .)
    OL_MENORQUE     reduce using rule 132 (literal -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 132 (literal -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 132 (literal -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 132 (literal -> R_FALSE .)
    S_IGUAL         reduce using rule 132 (literal -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 132 (literal -> R_FALSE .)
    R_IS            reduce using rule 132 (literal -> R_FALSE .)
    R_BETWEEN       reduce using rule 132 (literal -> R_FALSE .)
    R_ISNULL        reduce using rule 132 (literal -> R_FALSE .)
    R_NOTNULL       reduce using rule 132 (literal -> R_FALSE .)
    OL_ESIGUAL      reduce using rule 132 (literal -> R_FALSE .)
    R_AS            reduce using rule 132 (literal -> R_FALSE .)
    ID              reduce using rule 132 (literal -> R_FALSE .)
    STRING          reduce using rule 132 (literal -> R_FALSE .)
    CHARACTER       reduce using rule 132 (literal -> R_FALSE .)
    S_COMA          reduce using rule 132 (literal -> R_FALSE .)
    R_FROM          reduce using rule 132 (literal -> R_FALSE .)
    S_PUNTOCOMA     reduce using rule 132 (literal -> R_FALSE .)
    R_UNION         reduce using rule 132 (literal -> R_FALSE .)
    R_INTERSECT     reduce using rule 132 (literal -> R_FALSE .)
    R_EXCEPT        reduce using rule 132 (literal -> R_FALSE .)
    S_PARDER        reduce using rule 132 (literal -> R_FALSE .)
    R_AND           reduce using rule 132 (literal -> R_FALSE .)
    R_OR            reduce using rule 132 (literal -> R_FALSE .)
    R_GROUP         reduce using rule 132 (literal -> R_FALSE .)
    R_ORDER         reduce using rule 132 (literal -> R_FALSE .)
    R_LIMIT         reduce using rule 132 (literal -> R_FALSE .)
    R_THEN          reduce using rule 132 (literal -> R_FALSE .)
    R_NATURAL       reduce using rule 132 (literal -> R_FALSE .)
    R_INNER         reduce using rule 132 (literal -> R_FALSE .)
    R_LEFT          reduce using rule 132 (literal -> R_FALSE .)
    R_RIGHT         reduce using rule 132 (literal -> R_FALSE .)
    R_FULL          reduce using rule 132 (literal -> R_FALSE .)
    R_WHERE         reduce using rule 132 (literal -> R_FALSE .)
    R_ALL           reduce using rule 132 (literal -> R_FALSE .)
    R_ANY           reduce using rule 132 (literal -> R_FALSE .)
    R_SOME          reduce using rule 132 (literal -> R_FALSE .)
    R_END           reduce using rule 132 (literal -> R_FALSE .)
    R_ELSE          reduce using rule 132 (literal -> R_FALSE .)
    R_WHEN          reduce using rule 132 (literal -> R_FALSE .)
    R_DEFAULT       reduce using rule 132 (literal -> R_FALSE .)
    R_NULL          reduce using rule 132 (literal -> R_FALSE .)
    R_PRIMARY       reduce using rule 132 (literal -> R_FALSE .)
    R_REFERENCES    reduce using rule 132 (literal -> R_FALSE .)
    R_CONSTRAINT    reduce using rule 132 (literal -> R_FALSE .)
    R_UNIQUE        reduce using rule 132 (literal -> R_FALSE .)
    R_CHECK         reduce using rule 132 (literal -> R_FALSE .)
=======
    (143) literal -> R_NULL .

    O_SUMA          reduce using rule 143 (literal -> R_NULL .)
    O_RESTA         reduce using rule 143 (literal -> R_NULL .)
    O_PRODUCTO      reduce using rule 143 (literal -> R_NULL .)
    O_DIVISION      reduce using rule 143 (literal -> R_NULL .)
    O_EXPONENTE     reduce using rule 143 (literal -> R_NULL .)
    O_MODULAR       reduce using rule 143 (literal -> R_NULL .)
    OC_CONCATENAR   reduce using rule 143 (literal -> R_NULL .)
    R_IN            reduce using rule 143 (literal -> R_NULL .)
    R_NOT           reduce using rule 143 (literal -> R_NULL .)
    OL_MENORQUE     reduce using rule 143 (literal -> R_NULL .)
    OL_MAYORQUE     reduce using rule 143 (literal -> R_NULL .)
    OL_MAYORIGUALQUE reduce using rule 143 (literal -> R_NULL .)
    OL_MENORIGUALQUE reduce using rule 143 (literal -> R_NULL .)
    S_IGUAL         reduce using rule 143 (literal -> R_NULL .)
    OL_DISTINTODE   reduce using rule 143 (literal -> R_NULL .)
    R_IS            reduce using rule 143 (literal -> R_NULL .)
    R_BETWEEN       reduce using rule 143 (literal -> R_NULL .)
    R_ISNULL        reduce using rule 143 (literal -> R_NULL .)
    R_NOTNULL       reduce using rule 143 (literal -> R_NULL .)
    OL_ESIGUAL      reduce using rule 143 (literal -> R_NULL .)
    R_AS            reduce using rule 143 (literal -> R_NULL .)
    ID              reduce using rule 143 (literal -> R_NULL .)
    STRING          reduce using rule 143 (literal -> R_NULL .)
    CHARACTER       reduce using rule 143 (literal -> R_NULL .)
    S_COMA          reduce using rule 143 (literal -> R_NULL .)
    R_FROM          reduce using rule 143 (literal -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 143 (literal -> R_NULL .)
    R_UNION         reduce using rule 143 (literal -> R_NULL .)
    R_INTERSECT     reduce using rule 143 (literal -> R_NULL .)
    R_EXCEPT        reduce using rule 143 (literal -> R_NULL .)
    S_PARDER        reduce using rule 143 (literal -> R_NULL .)
    R_AND           reduce using rule 143 (literal -> R_NULL .)
    R_OR            reduce using rule 143 (literal -> R_NULL .)
    R_GROUP         reduce using rule 143 (literal -> R_NULL .)
    R_LIMIT         reduce using rule 143 (literal -> R_NULL .)
    R_ORDER         reduce using rule 143 (literal -> R_NULL .)
    R_THEN          reduce using rule 143 (literal -> R_NULL .)
    R_NATURAL       reduce using rule 143 (literal -> R_NULL .)
    R_INNER         reduce using rule 143 (literal -> R_NULL .)
    R_LEFT          reduce using rule 143 (literal -> R_NULL .)
    R_RIGHT         reduce using rule 143 (literal -> R_NULL .)
    R_FULL          reduce using rule 143 (literal -> R_NULL .)
    R_WHERE         reduce using rule 143 (literal -> R_NULL .)
    R_ALL           reduce using rule 143 (literal -> R_NULL .)
    R_ANY           reduce using rule 143 (literal -> R_NULL .)
    R_SOME          reduce using rule 143 (literal -> R_NULL .)
    R_END           reduce using rule 143 (literal -> R_NULL .)
    R_ELSE          reduce using rule 143 (literal -> R_NULL .)
    R_WHEN          reduce using rule 143 (literal -> R_NULL .)
    R_DEFAULT       reduce using rule 143 (literal -> R_NULL .)
    R_NULL          reduce using rule 143 (literal -> R_NULL .)
    R_PRIMARY       reduce using rule 143 (literal -> R_NULL .)
    R_REFERENCES    reduce using rule 143 (literal -> R_NULL .)
    R_CONSTRAINT    reduce using rule 143 (literal -> R_NULL .)
    R_UNIQUE        reduce using rule 143 (literal -> R_NULL .)
    R_CHECK         reduce using rule 143 (literal -> R_NULL .)
>>>>>>> main


state 90

<<<<<<< HEAD
    (133) literal -> R_NULL .

    O_SUMA          reduce using rule 133 (literal -> R_NULL .)
    O_RESTA         reduce using rule 133 (literal -> R_NULL .)
    O_PRODUCTO      reduce using rule 133 (literal -> R_NULL .)
    O_DIVISION      reduce using rule 133 (literal -> R_NULL .)
    O_EXPONENTE     reduce using rule 133 (literal -> R_NULL .)
    O_MODULAR       reduce using rule 133 (literal -> R_NULL .)
    OC_CONCATENAR   reduce using rule 133 (literal -> R_NULL .)
    R_IN            reduce using rule 133 (literal -> R_NULL .)
    R_NOT           reduce using rule 133 (literal -> R_NULL .)
    OL_MENORQUE     reduce using rule 133 (literal -> R_NULL .)
    OL_MAYORQUE     reduce using rule 133 (literal -> R_NULL .)
    OL_MAYORIGUALQUE reduce using rule 133 (literal -> R_NULL .)
    OL_MENORIGUALQUE reduce using rule 133 (literal -> R_NULL .)
    S_IGUAL         reduce using rule 133 (literal -> R_NULL .)
    OL_DISTINTODE   reduce using rule 133 (literal -> R_NULL .)
    R_IS            reduce using rule 133 (literal -> R_NULL .)
    R_BETWEEN       reduce using rule 133 (literal -> R_NULL .)
    R_ISNULL        reduce using rule 133 (literal -> R_NULL .)
    R_NOTNULL       reduce using rule 133 (literal -> R_NULL .)
    OL_ESIGUAL      reduce using rule 133 (literal -> R_NULL .)
    R_AS            reduce using rule 133 (literal -> R_NULL .)
    ID              reduce using rule 133 (literal -> R_NULL .)
    STRING          reduce using rule 133 (literal -> R_NULL .)
    CHARACTER       reduce using rule 133 (literal -> R_NULL .)
    S_COMA          reduce using rule 133 (literal -> R_NULL .)
    R_FROM          reduce using rule 133 (literal -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 133 (literal -> R_NULL .)
    R_UNION         reduce using rule 133 (literal -> R_NULL .)
    R_INTERSECT     reduce using rule 133 (literal -> R_NULL .)
    R_EXCEPT        reduce using rule 133 (literal -> R_NULL .)
    S_PARDER        reduce using rule 133 (literal -> R_NULL .)
    R_AND           reduce using rule 133 (literal -> R_NULL .)
    R_OR            reduce using rule 133 (literal -> R_NULL .)
    R_GROUP         reduce using rule 133 (literal -> R_NULL .)
    R_ORDER         reduce using rule 133 (literal -> R_NULL .)
    R_LIMIT         reduce using rule 133 (literal -> R_NULL .)
    R_THEN          reduce using rule 133 (literal -> R_NULL .)
    R_NATURAL       reduce using rule 133 (literal -> R_NULL .)
    R_INNER         reduce using rule 133 (literal -> R_NULL .)
    R_LEFT          reduce using rule 133 (literal -> R_NULL .)
    R_RIGHT         reduce using rule 133 (literal -> R_NULL .)
    R_FULL          reduce using rule 133 (literal -> R_NULL .)
    R_WHERE         reduce using rule 133 (literal -> R_NULL .)
    R_ALL           reduce using rule 133 (literal -> R_NULL .)
    R_ANY           reduce using rule 133 (literal -> R_NULL .)
    R_SOME          reduce using rule 133 (literal -> R_NULL .)
    R_END           reduce using rule 133 (literal -> R_NULL .)
    R_ELSE          reduce using rule 133 (literal -> R_NULL .)
    R_WHEN          reduce using rule 133 (literal -> R_NULL .)
    R_DEFAULT       reduce using rule 133 (literal -> R_NULL .)
    R_NULL          reduce using rule 133 (literal -> R_NULL .)
    R_PRIMARY       reduce using rule 133 (literal -> R_NULL .)
    R_REFERENCES    reduce using rule 133 (literal -> R_NULL .)
    R_CONSTRAINT    reduce using rule 133 (literal -> R_NULL .)
    R_UNIQUE        reduce using rule 133 (literal -> R_NULL .)
    R_CHECK         reduce using rule 133 (literal -> R_NULL .)
=======
    (111) funcCall -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 183
>>>>>>> main


state 91

<<<<<<< HEAD
    (101) funcCall -> R_NOW . S_PARIZQ S_PARDER
=======
    (112) funcCall -> R_COUNT . S_PARIZQ datatype S_PARDER
    (113) funcCall -> R_COUNT . S_PARIZQ O_PRODUCTO S_PARDER
>>>>>>> main

    S_PARIZQ        shift and go to state 184


state 92

<<<<<<< HEAD
    (102) funcCall -> R_COUNT . S_PARIZQ datatype S_PARDER
    (103) funcCall -> R_COUNT . S_PARIZQ O_PRODUCTO S_PARDER
=======
    (114) funcCall -> R_SUM . S_PARIZQ datatype S_PARDER
>>>>>>> main

    S_PARIZQ        shift and go to state 185


state 93

<<<<<<< HEAD
    (104) funcCall -> R_SUM . S_PARIZQ datatype S_PARDER
=======
    (115) funcCall -> R_PROM . S_PARIZQ datatype S_PARDER
>>>>>>> main

    S_PARIZQ        shift and go to state 186


state 94

<<<<<<< HEAD
    (105) funcCall -> R_PROM . S_PARIZQ datatype S_PARDER
=======
    (116) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM columnName S_PARDER
>>>>>>> main

    S_PARIZQ        shift and go to state 187


state 95

<<<<<<< HEAD
    (106) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM columnName S_PARDER

    S_PARIZQ        shift and go to state 188
=======
    (134) current -> timeStamp .

    O_SUMA          reduce using rule 134 (current -> timeStamp .)
    O_RESTA         reduce using rule 134 (current -> timeStamp .)
    O_PRODUCTO      reduce using rule 134 (current -> timeStamp .)
    O_DIVISION      reduce using rule 134 (current -> timeStamp .)
    O_EXPONENTE     reduce using rule 134 (current -> timeStamp .)
    O_MODULAR       reduce using rule 134 (current -> timeStamp .)
    OC_CONCATENAR   reduce using rule 134 (current -> timeStamp .)
    R_IN            reduce using rule 134 (current -> timeStamp .)
    R_NOT           reduce using rule 134 (current -> timeStamp .)
    OL_MENORQUE     reduce using rule 134 (current -> timeStamp .)
    OL_MAYORQUE     reduce using rule 134 (current -> timeStamp .)
    OL_MAYORIGUALQUE reduce using rule 134 (current -> timeStamp .)
    OL_MENORIGUALQUE reduce using rule 134 (current -> timeStamp .)
    S_IGUAL         reduce using rule 134 (current -> timeStamp .)
    OL_DISTINTODE   reduce using rule 134 (current -> timeStamp .)
    R_IS            reduce using rule 134 (current -> timeStamp .)
    R_BETWEEN       reduce using rule 134 (current -> timeStamp .)
    R_ISNULL        reduce using rule 134 (current -> timeStamp .)
    R_NOTNULL       reduce using rule 134 (current -> timeStamp .)
    OL_ESIGUAL      reduce using rule 134 (current -> timeStamp .)
    R_AS            reduce using rule 134 (current -> timeStamp .)
    ID              reduce using rule 134 (current -> timeStamp .)
    STRING          reduce using rule 134 (current -> timeStamp .)
    CHARACTER       reduce using rule 134 (current -> timeStamp .)
    S_COMA          reduce using rule 134 (current -> timeStamp .)
    R_FROM          reduce using rule 134 (current -> timeStamp .)
    S_PUNTOCOMA     reduce using rule 134 (current -> timeStamp .)
    R_UNION         reduce using rule 134 (current -> timeStamp .)
    R_INTERSECT     reduce using rule 134 (current -> timeStamp .)
    R_EXCEPT        reduce using rule 134 (current -> timeStamp .)
    S_PARDER        reduce using rule 134 (current -> timeStamp .)
    R_AND           reduce using rule 134 (current -> timeStamp .)
    R_OR            reduce using rule 134 (current -> timeStamp .)
    R_GROUP         reduce using rule 134 (current -> timeStamp .)
    R_LIMIT         reduce using rule 134 (current -> timeStamp .)
    R_ORDER         reduce using rule 134 (current -> timeStamp .)
    R_THEN          reduce using rule 134 (current -> timeStamp .)
    R_NATURAL       reduce using rule 134 (current -> timeStamp .)
    R_INNER         reduce using rule 134 (current -> timeStamp .)
    R_LEFT          reduce using rule 134 (current -> timeStamp .)
    R_RIGHT         reduce using rule 134 (current -> timeStamp .)
    R_FULL          reduce using rule 134 (current -> timeStamp .)
    R_WHERE         reduce using rule 134 (current -> timeStamp .)
    R_ALL           reduce using rule 134 (current -> timeStamp .)
    R_ANY           reduce using rule 134 (current -> timeStamp .)
    R_SOME          reduce using rule 134 (current -> timeStamp .)
>>>>>>> main


state 96

<<<<<<< HEAD
    (124) current -> timeStamp .

    O_SUMA          reduce using rule 124 (current -> timeStamp .)
    O_RESTA         reduce using rule 124 (current -> timeStamp .)
    O_PRODUCTO      reduce using rule 124 (current -> timeStamp .)
    O_DIVISION      reduce using rule 124 (current -> timeStamp .)
    O_EXPONENTE     reduce using rule 124 (current -> timeStamp .)
    O_MODULAR       reduce using rule 124 (current -> timeStamp .)
    OC_CONCATENAR   reduce using rule 124 (current -> timeStamp .)
    R_IN            reduce using rule 124 (current -> timeStamp .)
    R_NOT           reduce using rule 124 (current -> timeStamp .)
    OL_MENORQUE     reduce using rule 124 (current -> timeStamp .)
    OL_MAYORQUE     reduce using rule 124 (current -> timeStamp .)
    OL_MAYORIGUALQUE reduce using rule 124 (current -> timeStamp .)
    OL_MENORIGUALQUE reduce using rule 124 (current -> timeStamp .)
    S_IGUAL         reduce using rule 124 (current -> timeStamp .)
    OL_DISTINTODE   reduce using rule 124 (current -> timeStamp .)
    R_IS            reduce using rule 124 (current -> timeStamp .)
    R_BETWEEN       reduce using rule 124 (current -> timeStamp .)
    R_ISNULL        reduce using rule 124 (current -> timeStamp .)
    R_NOTNULL       reduce using rule 124 (current -> timeStamp .)
    OL_ESIGUAL      reduce using rule 124 (current -> timeStamp .)
    R_AS            reduce using rule 124 (current -> timeStamp .)
    ID              reduce using rule 124 (current -> timeStamp .)
    STRING          reduce using rule 124 (current -> timeStamp .)
    CHARACTER       reduce using rule 124 (current -> timeStamp .)
    S_COMA          reduce using rule 124 (current -> timeStamp .)
    R_FROM          reduce using rule 124 (current -> timeStamp .)
    S_PUNTOCOMA     reduce using rule 124 (current -> timeStamp .)
    R_UNION         reduce using rule 124 (current -> timeStamp .)
    R_INTERSECT     reduce using rule 124 (current -> timeStamp .)
    R_EXCEPT        reduce using rule 124 (current -> timeStamp .)
    S_PARDER        reduce using rule 124 (current -> timeStamp .)
    R_AND           reduce using rule 124 (current -> timeStamp .)
    R_OR            reduce using rule 124 (current -> timeStamp .)
    R_GROUP         reduce using rule 124 (current -> timeStamp .)
    R_ORDER         reduce using rule 124 (current -> timeStamp .)
    R_LIMIT         reduce using rule 124 (current -> timeStamp .)
    R_THEN          reduce using rule 124 (current -> timeStamp .)
    R_NATURAL       reduce using rule 124 (current -> timeStamp .)
    R_INNER         reduce using rule 124 (current -> timeStamp .)
    R_LEFT          reduce using rule 124 (current -> timeStamp .)
    R_RIGHT         reduce using rule 124 (current -> timeStamp .)
    R_FULL          reduce using rule 124 (current -> timeStamp .)
    R_WHERE         reduce using rule 124 (current -> timeStamp .)
    R_ALL           reduce using rule 124 (current -> timeStamp .)
    R_ANY           reduce using rule 124 (current -> timeStamp .)
    R_SOME          reduce using rule 124 (current -> timeStamp .)
=======
    (126) datePart -> R_DATE_PART . S_PARIZQ STRING S_COMA dateSource S_PARDER
>>>>>>> main

    S_PARIZQ        shift and go to state 188


<<<<<<< HEAD
    (116) datePart -> R_DATE_PART . S_PARIZQ STRING S_COMA dateSource S_PARDER

    S_PARIZQ        shift and go to state 189
=======
state 97

    (132) current -> R_CURRENT_DATE .

    O_SUMA          reduce using rule 132 (current -> R_CURRENT_DATE .)
    O_RESTA         reduce using rule 132 (current -> R_CURRENT_DATE .)
    O_PRODUCTO      reduce using rule 132 (current -> R_CURRENT_DATE .)
    O_DIVISION      reduce using rule 132 (current -> R_CURRENT_DATE .)
    O_EXPONENTE     reduce using rule 132 (current -> R_CURRENT_DATE .)
    O_MODULAR       reduce using rule 132 (current -> R_CURRENT_DATE .)
    OC_CONCATENAR   reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_IN            reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_NOT           reduce using rule 132 (current -> R_CURRENT_DATE .)
    OL_MENORQUE     reduce using rule 132 (current -> R_CURRENT_DATE .)
    OL_MAYORQUE     reduce using rule 132 (current -> R_CURRENT_DATE .)
    OL_MAYORIGUALQUE reduce using rule 132 (current -> R_CURRENT_DATE .)
    OL_MENORIGUALQUE reduce using rule 132 (current -> R_CURRENT_DATE .)
    S_IGUAL         reduce using rule 132 (current -> R_CURRENT_DATE .)
    OL_DISTINTODE   reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_IS            reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_BETWEEN       reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_ISNULL        reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_NOTNULL       reduce using rule 132 (current -> R_CURRENT_DATE .)
    OL_ESIGUAL      reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_AS            reduce using rule 132 (current -> R_CURRENT_DATE .)
    ID              reduce using rule 132 (current -> R_CURRENT_DATE .)
    STRING          reduce using rule 132 (current -> R_CURRENT_DATE .)
    CHARACTER       reduce using rule 132 (current -> R_CURRENT_DATE .)
    S_COMA          reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_FROM          reduce using rule 132 (current -> R_CURRENT_DATE .)
    S_PUNTOCOMA     reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_UNION         reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_INTERSECT     reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_EXCEPT        reduce using rule 132 (current -> R_CURRENT_DATE .)
    S_PARDER        reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_AND           reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_OR            reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_GROUP         reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_LIMIT         reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_ORDER         reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_THEN          reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_NATURAL       reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_INNER         reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_LEFT          reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_RIGHT         reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_FULL          reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_WHERE         reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_ALL           reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_ANY           reduce using rule 132 (current -> R_CURRENT_DATE .)
    R_SOME          reduce using rule 132 (current -> R_CURRENT_DATE .)
>>>>>>> main


state 98

<<<<<<< HEAD
    (122) current -> R_CURRENT_DATE .

    O_SUMA          reduce using rule 122 (current -> R_CURRENT_DATE .)
    O_RESTA         reduce using rule 122 (current -> R_CURRENT_DATE .)
    O_PRODUCTO      reduce using rule 122 (current -> R_CURRENT_DATE .)
    O_DIVISION      reduce using rule 122 (current -> R_CURRENT_DATE .)
    O_EXPONENTE     reduce using rule 122 (current -> R_CURRENT_DATE .)
    O_MODULAR       reduce using rule 122 (current -> R_CURRENT_DATE .)
    OC_CONCATENAR   reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_IN            reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_NOT           reduce using rule 122 (current -> R_CURRENT_DATE .)
    OL_MENORQUE     reduce using rule 122 (current -> R_CURRENT_DATE .)
    OL_MAYORQUE     reduce using rule 122 (current -> R_CURRENT_DATE .)
    OL_MAYORIGUALQUE reduce using rule 122 (current -> R_CURRENT_DATE .)
    OL_MENORIGUALQUE reduce using rule 122 (current -> R_CURRENT_DATE .)
    S_IGUAL         reduce using rule 122 (current -> R_CURRENT_DATE .)
    OL_DISTINTODE   reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_IS            reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_BETWEEN       reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_ISNULL        reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_NOTNULL       reduce using rule 122 (current -> R_CURRENT_DATE .)
    OL_ESIGUAL      reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_AS            reduce using rule 122 (current -> R_CURRENT_DATE .)
    ID              reduce using rule 122 (current -> R_CURRENT_DATE .)
    STRING          reduce using rule 122 (current -> R_CURRENT_DATE .)
    CHARACTER       reduce using rule 122 (current -> R_CURRENT_DATE .)
    S_COMA          reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_FROM          reduce using rule 122 (current -> R_CURRENT_DATE .)
    S_PUNTOCOMA     reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_UNION         reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_INTERSECT     reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_EXCEPT        reduce using rule 122 (current -> R_CURRENT_DATE .)
    S_PARDER        reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_AND           reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_OR            reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_GROUP         reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_ORDER         reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_LIMIT         reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_THEN          reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_NATURAL       reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_INNER         reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_LEFT          reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_RIGHT         reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_FULL          reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_WHERE         reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_ALL           reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_ANY           reduce using rule 122 (current -> R_CURRENT_DATE .)
    R_SOME          reduce using rule 122 (current -> R_CURRENT_DATE .)
=======
    (133) current -> R_CURRENT_TIME .

    O_SUMA          reduce using rule 133 (current -> R_CURRENT_TIME .)
    O_RESTA         reduce using rule 133 (current -> R_CURRENT_TIME .)
    O_PRODUCTO      reduce using rule 133 (current -> R_CURRENT_TIME .)
    O_DIVISION      reduce using rule 133 (current -> R_CURRENT_TIME .)
    O_EXPONENTE     reduce using rule 133 (current -> R_CURRENT_TIME .)
    O_MODULAR       reduce using rule 133 (current -> R_CURRENT_TIME .)
    OC_CONCATENAR   reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_IN            reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_NOT           reduce using rule 133 (current -> R_CURRENT_TIME .)
    OL_MENORQUE     reduce using rule 133 (current -> R_CURRENT_TIME .)
    OL_MAYORQUE     reduce using rule 133 (current -> R_CURRENT_TIME .)
    OL_MAYORIGUALQUE reduce using rule 133 (current -> R_CURRENT_TIME .)
    OL_MENORIGUALQUE reduce using rule 133 (current -> R_CURRENT_TIME .)
    S_IGUAL         reduce using rule 133 (current -> R_CURRENT_TIME .)
    OL_DISTINTODE   reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_IS            reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_BETWEEN       reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_ISNULL        reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_NOTNULL       reduce using rule 133 (current -> R_CURRENT_TIME .)
    OL_ESIGUAL      reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_AS            reduce using rule 133 (current -> R_CURRENT_TIME .)
    ID              reduce using rule 133 (current -> R_CURRENT_TIME .)
    STRING          reduce using rule 133 (current -> R_CURRENT_TIME .)
    CHARACTER       reduce using rule 133 (current -> R_CURRENT_TIME .)
    S_COMA          reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_FROM          reduce using rule 133 (current -> R_CURRENT_TIME .)
    S_PUNTOCOMA     reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_UNION         reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_INTERSECT     reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_EXCEPT        reduce using rule 133 (current -> R_CURRENT_TIME .)
    S_PARDER        reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_AND           reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_OR            reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_GROUP         reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_LIMIT         reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_ORDER         reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_THEN          reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_NATURAL       reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_INNER         reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_LEFT          reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_RIGHT         reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_FULL          reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_WHERE         reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_ALL           reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_ANY           reduce using rule 133 (current -> R_CURRENT_TIME .)
    R_SOME          reduce using rule 133 (current -> R_CURRENT_TIME .)
>>>>>>> main


state 99

<<<<<<< HEAD
    (123) current -> R_CURRENT_TIME .

    O_SUMA          reduce using rule 123 (current -> R_CURRENT_TIME .)
    O_RESTA         reduce using rule 123 (current -> R_CURRENT_TIME .)
    O_PRODUCTO      reduce using rule 123 (current -> R_CURRENT_TIME .)
    O_DIVISION      reduce using rule 123 (current -> R_CURRENT_TIME .)
    O_EXPONENTE     reduce using rule 123 (current -> R_CURRENT_TIME .)
    O_MODULAR       reduce using rule 123 (current -> R_CURRENT_TIME .)
    OC_CONCATENAR   reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_IN            reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_NOT           reduce using rule 123 (current -> R_CURRENT_TIME .)
    OL_MENORQUE     reduce using rule 123 (current -> R_CURRENT_TIME .)
    OL_MAYORQUE     reduce using rule 123 (current -> R_CURRENT_TIME .)
    OL_MAYORIGUALQUE reduce using rule 123 (current -> R_CURRENT_TIME .)
    OL_MENORIGUALQUE reduce using rule 123 (current -> R_CURRENT_TIME .)
    S_IGUAL         reduce using rule 123 (current -> R_CURRENT_TIME .)
    OL_DISTINTODE   reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_IS            reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_BETWEEN       reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_ISNULL        reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_NOTNULL       reduce using rule 123 (current -> R_CURRENT_TIME .)
    OL_ESIGUAL      reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_AS            reduce using rule 123 (current -> R_CURRENT_TIME .)
    ID              reduce using rule 123 (current -> R_CURRENT_TIME .)
    STRING          reduce using rule 123 (current -> R_CURRENT_TIME .)
    CHARACTER       reduce using rule 123 (current -> R_CURRENT_TIME .)
    S_COMA          reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_FROM          reduce using rule 123 (current -> R_CURRENT_TIME .)
    S_PUNTOCOMA     reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_UNION         reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_INTERSECT     reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_EXCEPT        reduce using rule 123 (current -> R_CURRENT_TIME .)
    S_PARDER        reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_AND           reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_OR            reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_GROUP         reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_ORDER         reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_LIMIT         reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_THEN          reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_NATURAL       reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_INNER         reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_LEFT          reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_RIGHT         reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_FULL          reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_WHERE         reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_ALL           reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_ANY           reduce using rule 123 (current -> R_CURRENT_TIME .)
    R_SOME          reduce using rule 123 (current -> R_CURRENT_TIME .)
=======
    (216) boolean -> R_EXISTS . S_PARIZQ selectStmt S_PARDER
>>>>>>> main

    S_PARIZQ        shift and go to state 189


<<<<<<< HEAD
    (206) boolean -> R_EXISTS . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 190
=======
state 100

    (219) boolean -> expComp .

    R_AND           reduce using rule 219 (boolean -> expComp .)
    R_OR            reduce using rule 219 (boolean -> expComp .)
    R_IS            reduce using rule 219 (boolean -> expComp .)
    R_AS            reduce using rule 219 (boolean -> expComp .)
    ID              reduce using rule 219 (boolean -> expComp .)
    STRING          reduce using rule 219 (boolean -> expComp .)
    CHARACTER       reduce using rule 219 (boolean -> expComp .)
    S_COMA          reduce using rule 219 (boolean -> expComp .)
    R_FROM          reduce using rule 219 (boolean -> expComp .)
    S_PUNTOCOMA     reduce using rule 219 (boolean -> expComp .)
    R_UNION         reduce using rule 219 (boolean -> expComp .)
    R_INTERSECT     reduce using rule 219 (boolean -> expComp .)
    R_EXCEPT        reduce using rule 219 (boolean -> expComp .)
    S_PARDER        reduce using rule 219 (boolean -> expComp .)
    R_GROUP         reduce using rule 219 (boolean -> expComp .)
    R_LIMIT         reduce using rule 219 (boolean -> expComp .)
    R_ORDER         reduce using rule 219 (boolean -> expComp .)
    R_THEN          reduce using rule 219 (boolean -> expComp .)
    R_NATURAL       reduce using rule 219 (boolean -> expComp .)
    R_INNER         reduce using rule 219 (boolean -> expComp .)
    R_LEFT          reduce using rule 219 (boolean -> expComp .)
    R_RIGHT         reduce using rule 219 (boolean -> expComp .)
    R_FULL          reduce using rule 219 (boolean -> expComp .)
    R_WHERE         reduce using rule 219 (boolean -> expComp .)
>>>>>>> main


state 101

<<<<<<< HEAD
    (209) boolean -> expComp .

    R_AND           reduce using rule 209 (boolean -> expComp .)
    R_OR            reduce using rule 209 (boolean -> expComp .)
    R_IS            reduce using rule 209 (boolean -> expComp .)
    R_AS            reduce using rule 209 (boolean -> expComp .)
    ID              reduce using rule 209 (boolean -> expComp .)
    STRING          reduce using rule 209 (boolean -> expComp .)
    CHARACTER       reduce using rule 209 (boolean -> expComp .)
    S_COMA          reduce using rule 209 (boolean -> expComp .)
    R_FROM          reduce using rule 209 (boolean -> expComp .)
    S_PUNTOCOMA     reduce using rule 209 (boolean -> expComp .)
    R_UNION         reduce using rule 209 (boolean -> expComp .)
    R_INTERSECT     reduce using rule 209 (boolean -> expComp .)
    R_EXCEPT        reduce using rule 209 (boolean -> expComp .)
    S_PARDER        reduce using rule 209 (boolean -> expComp .)
    R_GROUP         reduce using rule 209 (boolean -> expComp .)
    R_ORDER         reduce using rule 209 (boolean -> expComp .)
    R_LIMIT         reduce using rule 209 (boolean -> expComp .)
    R_THEN          reduce using rule 209 (boolean -> expComp .)
    R_NATURAL       reduce using rule 209 (boolean -> expComp .)
    R_INNER         reduce using rule 209 (boolean -> expComp .)
    R_LEFT          reduce using rule 209 (boolean -> expComp .)
    R_RIGHT         reduce using rule 209 (boolean -> expComp .)
    R_FULL          reduce using rule 209 (boolean -> expComp .)
    R_WHERE         reduce using rule 209 (boolean -> expComp .)
=======
    (220) boolean -> expSubq .

    R_AND           reduce using rule 220 (boolean -> expSubq .)
    R_OR            reduce using rule 220 (boolean -> expSubq .)
    R_IS            reduce using rule 220 (boolean -> expSubq .)
    R_AS            reduce using rule 220 (boolean -> expSubq .)
    ID              reduce using rule 220 (boolean -> expSubq .)
    STRING          reduce using rule 220 (boolean -> expSubq .)
    CHARACTER       reduce using rule 220 (boolean -> expSubq .)
    S_COMA          reduce using rule 220 (boolean -> expSubq .)
    R_FROM          reduce using rule 220 (boolean -> expSubq .)
    S_PUNTOCOMA     reduce using rule 220 (boolean -> expSubq .)
    R_UNION         reduce using rule 220 (boolean -> expSubq .)
    R_INTERSECT     reduce using rule 220 (boolean -> expSubq .)
    R_EXCEPT        reduce using rule 220 (boolean -> expSubq .)
    S_PARDER        reduce using rule 220 (boolean -> expSubq .)
    R_GROUP         reduce using rule 220 (boolean -> expSubq .)
    R_LIMIT         reduce using rule 220 (boolean -> expSubq .)
    R_ORDER         reduce using rule 220 (boolean -> expSubq .)
    R_THEN          reduce using rule 220 (boolean -> expSubq .)
    R_NATURAL       reduce using rule 220 (boolean -> expSubq .)
    R_INNER         reduce using rule 220 (boolean -> expSubq .)
    R_LEFT          reduce using rule 220 (boolean -> expSubq .)
    R_RIGHT         reduce using rule 220 (boolean -> expSubq .)
    R_FULL          reduce using rule 220 (boolean -> expSubq .)
    R_WHERE         reduce using rule 220 (boolean -> expSubq .)
>>>>>>> main


state 102

<<<<<<< HEAD
    (210) boolean -> expSubq .

    R_AND           reduce using rule 210 (boolean -> expSubq .)
    R_OR            reduce using rule 210 (boolean -> expSubq .)
    R_IS            reduce using rule 210 (boolean -> expSubq .)
    R_AS            reduce using rule 210 (boolean -> expSubq .)
    ID              reduce using rule 210 (boolean -> expSubq .)
    STRING          reduce using rule 210 (boolean -> expSubq .)
    CHARACTER       reduce using rule 210 (boolean -> expSubq .)
    S_COMA          reduce using rule 210 (boolean -> expSubq .)
    R_FROM          reduce using rule 210 (boolean -> expSubq .)
    S_PUNTOCOMA     reduce using rule 210 (boolean -> expSubq .)
    R_UNION         reduce using rule 210 (boolean -> expSubq .)
    R_INTERSECT     reduce using rule 210 (boolean -> expSubq .)
    R_EXCEPT        reduce using rule 210 (boolean -> expSubq .)
    S_PARDER        reduce using rule 210 (boolean -> expSubq .)
    R_GROUP         reduce using rule 210 (boolean -> expSubq .)
    R_ORDER         reduce using rule 210 (boolean -> expSubq .)
    R_LIMIT         reduce using rule 210 (boolean -> expSubq .)
    R_THEN          reduce using rule 210 (boolean -> expSubq .)
    R_NATURAL       reduce using rule 210 (boolean -> expSubq .)
    R_INNER         reduce using rule 210 (boolean -> expSubq .)
    R_LEFT          reduce using rule 210 (boolean -> expSubq .)
    R_RIGHT         reduce using rule 210 (boolean -> expSubq .)
    R_FULL          reduce using rule 210 (boolean -> expSubq .)
    R_WHERE         reduce using rule 210 (boolean -> expSubq .)
=======
    (118) timeStamp -> R_TIMESTAMP . STRING

    STRING          shift and go to state 190
>>>>>>> main


state 103

<<<<<<< HEAD
    (108) timeStamp -> R_TIMESTAMP . STRING

    STRING          shift and go to state 191


state 104

    (109) timeStamp -> R_INTERVAL . STRING

    STRING          shift and go to state 192


state 105

    (200) expSubq -> stringExp . R_LIKE STRING

    R_LIKE          shift and go to state 193


state 106

    (272) selectStmt -> selectStmt R_UNION allOpt . selectStmt
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 194
=======
    (119) timeStamp -> R_INTERVAL . STRING

    STRING          shift and go to state 191

>>>>>>> main

state 107

    (210) expSubq -> stringExp . R_LIKE STRING

    R_LIKE          shift and go to state 192


state 108

<<<<<<< HEAD
    (273) selectStmt -> selectStmt R_INTERSECT allOpt . selectStmt
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
=======
    (283) selectStmt -> selectStmt R_UNION allOpt . selectStmt
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams
>>>>>>> main

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

<<<<<<< HEAD
    selectStmt                     shift and go to state 195
=======
    selectStmt                     shift and go to state 193
>>>>>>> main

state 109

<<<<<<< HEAD
    (274) selectStmt -> selectStmt R_EXCEPT allOpt . selectStmt
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 196
=======
    (289) allOpt -> R_ALL .

    R_SELECT        reduce using rule 289 (allOpt -> R_ALL .)
    S_PARIZQ        reduce using rule 289 (allOpt -> R_ALL .)

>>>>>>> main

state 110

<<<<<<< HEAD
    (352) functionStmt -> R_CREATE R_FUNCTION ID . S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction

    S_PARIZQ        shift and go to state 197

=======
    (284) selectStmt -> selectStmt R_INTERSECT allOpt . selectStmt
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 194
>>>>>>> main

state 111

<<<<<<< HEAD
    (20) createOpts -> R_TABLE ifNotExists . idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    idOrString                     shift and go to state 198
=======
    (285) selectStmt -> selectStmt R_EXCEPT allOpt . selectStmt
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 195
>>>>>>> main

state 112

<<<<<<< HEAD
    (25) ifNotExists -> R_IF . R_NOT R_EXISTS

    R_NOT           shift and go to state 199
=======
    (19) createOpts -> unique_index R_INDEX . ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    ID              shift and go to state 196
>>>>>>> main


state 113

<<<<<<< HEAD
    (21) createOpts -> orReplace R_DATABASE . ifNotExists idOrString createOwner createMode
    (25) ifNotExists -> . R_IF R_NOT R_EXISTS
    (26) ifNotExists -> .

    R_IF            shift and go to state 112
    ID              reduce using rule 26 (ifNotExists -> .)
    STRING          reduce using rule 26 (ifNotExists -> .)
    CHARACTER       reduce using rule 26 (ifNotExists -> .)

    ifNotExists                    shift and go to state 200
=======
    (30) createOpts -> R_TABLE ifNotExists . idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 197
>>>>>>> main

state 114

<<<<<<< HEAD
    (24) createOpts -> R_TYPE ifNotExists . ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 201
=======
    (35) ifNotExists -> R_IF . R_NOT R_EXISTS

    R_NOT           shift and go to state 198
>>>>>>> main


state 115

<<<<<<< HEAD
    (22) orReplace -> R_OR R_REPLACE .

    R_DATABASE      reduce using rule 22 (orReplace -> R_OR R_REPLACE .)
=======
    (31) createOpts -> orReplace R_DATABASE . ifNotExists idOrString createOwner createMode
    (35) ifNotExists -> . R_IF R_NOT R_EXISTS
    (36) ifNotExists -> .

    R_IF            shift and go to state 111
    ID              reduce using rule 36 (ifNotExists -> .)
    STRING          reduce using rule 36 (ifNotExists -> .)
    CHARACTER       reduce using rule 36 (ifNotExists -> .)
>>>>>>> main

    ifNotExists                    shift and go to state 199

state 116

<<<<<<< HEAD
    (348) showStmt -> R_SHOW R_DATABASES likeOpt .

    S_PUNTOCOMA     reduce using rule 348 (showStmt -> R_SHOW R_DATABASES likeOpt .)
=======
    (34) createOpts -> R_TYPE ifNotExists . ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 200
>>>>>>> main


state 117

<<<<<<< HEAD
    (349) likeOpt -> R_LIKE . STRING

    STRING          shift and go to state 202
=======
    (32) orReplace -> R_OR R_REPLACE .

    R_DATABASE      reduce using rule 32 (orReplace -> R_OR R_REPLACE .)
>>>>>>> main


state 118

<<<<<<< HEAD
    (240) alterStmt -> R_ALTER R_DATABASE idOrString . alterDb
    (242) alterDb -> . R_RENAME R_TO idOrString
    (243) alterDb -> . R_OWNER R_TO ownerOPts
=======
    (358) showStmt -> R_SHOW R_DATABASES likeOpt .

    S_PUNTOCOMA     reduce using rule 358 (showStmt -> R_SHOW R_DATABASES likeOpt .)


state 116

    (359) likeOpt -> R_LIKE . STRING

    STRING          shift and go to state 201


state 117

    (250) alterStmt -> R_ALTER R_DATABASE idOrString . alterDb
    (252) alterDb -> . R_RENAME R_TO idOrString
    (253) alterDb -> . R_OWNER R_TO ownerOPts

    R_RENAME        shift and go to state 203
    R_OWNER         shift and go to state 204

    alterDb                        shift and go to state 202

state 118

    (14) idOrString -> ID .

    R_RENAME        reduce using rule 14 (idOrString -> ID .)
    R_OWNER         reduce using rule 14 (idOrString -> ID .)
    R_ADD           reduce using rule 14 (idOrString -> ID .)
    R_ALTER         reduce using rule 14 (idOrString -> ID .)
    R_DROP          reduce using rule 14 (idOrString -> ID .)
    R_SET           reduce using rule 14 (idOrString -> ID .)
    S_COMA          reduce using rule 14 (idOrString -> ID .)
    R_WHERE         reduce using rule 14 (idOrString -> ID .)
    S_PUNTOCOMA     reduce using rule 14 (idOrString -> ID .)
    R_NATURAL       reduce using rule 14 (idOrString -> ID .)
    R_INNER         reduce using rule 14 (idOrString -> ID .)
    R_LEFT          reduce using rule 14 (idOrString -> ID .)
    R_RIGHT         reduce using rule 14 (idOrString -> ID .)
    R_FULL          reduce using rule 14 (idOrString -> ID .)
    R_GROUP         reduce using rule 14 (idOrString -> ID .)
    R_LIMIT         reduce using rule 14 (idOrString -> ID .)
    R_ORDER         reduce using rule 14 (idOrString -> ID .)
    R_UNION         reduce using rule 14 (idOrString -> ID .)
    R_INTERSECT     reduce using rule 14 (idOrString -> ID .)
    R_EXCEPT        reduce using rule 14 (idOrString -> ID .)
    S_PARDER        reduce using rule 14 (idOrString -> ID .)
    R_FROM          reduce using rule 14 (idOrString -> ID .)
    S_PARIZQ        reduce using rule 14 (idOrString -> ID .)
    R_ON            reduce using rule 14 (idOrString -> ID .)
    R_USING         reduce using rule 14 (idOrString -> ID .)
    R_MODE          reduce using rule 14 (idOrString -> ID .)
>>>>>>> main

    R_RENAME        shift and go to state 204
    R_OWNER         shift and go to state 205

<<<<<<< HEAD
    alterDb                        shift and go to state 203
=======
state 119
>>>>>>> main

state 119

    (15) idOrString -> ID .

    R_RENAME        reduce using rule 15 (idOrString -> ID .)
    R_OWNER         reduce using rule 15 (idOrString -> ID .)
    R_ADD           reduce using rule 15 (idOrString -> ID .)
    R_ALTER         reduce using rule 15 (idOrString -> ID .)
    R_DROP          reduce using rule 15 (idOrString -> ID .)
    R_SET           reduce using rule 15 (idOrString -> ID .)
    S_COMA          reduce using rule 15 (idOrString -> ID .)
    R_WHERE         reduce using rule 15 (idOrString -> ID .)
    S_PUNTOCOMA     reduce using rule 15 (idOrString -> ID .)
    R_NATURAL       reduce using rule 15 (idOrString -> ID .)
    R_INNER         reduce using rule 15 (idOrString -> ID .)
    R_LEFT          reduce using rule 15 (idOrString -> ID .)
    R_RIGHT         reduce using rule 15 (idOrString -> ID .)
    R_FULL          reduce using rule 15 (idOrString -> ID .)
    R_GROUP         reduce using rule 15 (idOrString -> ID .)
    R_ORDER         reduce using rule 15 (idOrString -> ID .)
    R_LIMIT         reduce using rule 15 (idOrString -> ID .)
    R_UNION         reduce using rule 15 (idOrString -> ID .)
    R_INTERSECT     reduce using rule 15 (idOrString -> ID .)
    R_EXCEPT        reduce using rule 15 (idOrString -> ID .)
    S_PARDER        reduce using rule 15 (idOrString -> ID .)
    R_FROM          reduce using rule 15 (idOrString -> ID .)
    S_PARIZQ        reduce using rule 15 (idOrString -> ID .)
    R_ON            reduce using rule 15 (idOrString -> ID .)
    R_USING         reduce using rule 15 (idOrString -> ID .)
    R_MODE          reduce using rule 15 (idOrString -> ID .)

<<<<<<< HEAD
=======
state 120
>>>>>>> main

state 120

    (16) idOrString -> STRING .

    R_RENAME        reduce using rule 16 (idOrString -> STRING .)
    R_OWNER         reduce using rule 16 (idOrString -> STRING .)
    R_ADD           reduce using rule 16 (idOrString -> STRING .)
    R_ALTER         reduce using rule 16 (idOrString -> STRING .)
    R_DROP          reduce using rule 16 (idOrString -> STRING .)
    R_SET           reduce using rule 16 (idOrString -> STRING .)
    S_COMA          reduce using rule 16 (idOrString -> STRING .)
    R_WHERE         reduce using rule 16 (idOrString -> STRING .)
    S_PUNTOCOMA     reduce using rule 16 (idOrString -> STRING .)
    R_NATURAL       reduce using rule 16 (idOrString -> STRING .)
    R_INNER         reduce using rule 16 (idOrString -> STRING .)
    R_LEFT          reduce using rule 16 (idOrString -> STRING .)
    R_RIGHT         reduce using rule 16 (idOrString -> STRING .)
    R_FULL          reduce using rule 16 (idOrString -> STRING .)
    R_GROUP         reduce using rule 16 (idOrString -> STRING .)
    R_ORDER         reduce using rule 16 (idOrString -> STRING .)
    R_LIMIT         reduce using rule 16 (idOrString -> STRING .)
    R_UNION         reduce using rule 16 (idOrString -> STRING .)
    R_INTERSECT     reduce using rule 16 (idOrString -> STRING .)
    R_EXCEPT        reduce using rule 16 (idOrString -> STRING .)
    S_PARDER        reduce using rule 16 (idOrString -> STRING .)
    R_FROM          reduce using rule 16 (idOrString -> STRING .)
    S_PARIZQ        reduce using rule 16 (idOrString -> STRING .)
    R_ON            reduce using rule 16 (idOrString -> STRING .)
    R_USING         reduce using rule 16 (idOrString -> STRING .)
    R_MODE          reduce using rule 16 (idOrString -> STRING .)

<<<<<<< HEAD

state 121

    (17) idOrString -> CHARACTER .

    R_RENAME        reduce using rule 17 (idOrString -> CHARACTER .)
    R_OWNER         reduce using rule 17 (idOrString -> CHARACTER .)
    R_ADD           reduce using rule 17 (idOrString -> CHARACTER .)
    R_ALTER         reduce using rule 17 (idOrString -> CHARACTER .)
    R_DROP          reduce using rule 17 (idOrString -> CHARACTER .)
    R_SET           reduce using rule 17 (idOrString -> CHARACTER .)
    S_COMA          reduce using rule 17 (idOrString -> CHARACTER .)
    R_WHERE         reduce using rule 17 (idOrString -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 17 (idOrString -> CHARACTER .)
    R_NATURAL       reduce using rule 17 (idOrString -> CHARACTER .)
    R_INNER         reduce using rule 17 (idOrString -> CHARACTER .)
    R_LEFT          reduce using rule 17 (idOrString -> CHARACTER .)
    R_RIGHT         reduce using rule 17 (idOrString -> CHARACTER .)
    R_FULL          reduce using rule 17 (idOrString -> CHARACTER .)
    R_GROUP         reduce using rule 17 (idOrString -> CHARACTER .)
    R_ORDER         reduce using rule 17 (idOrString -> CHARACTER .)
    R_LIMIT         reduce using rule 17 (idOrString -> CHARACTER .)
    R_UNION         reduce using rule 17 (idOrString -> CHARACTER .)
    R_INTERSECT     reduce using rule 17 (idOrString -> CHARACTER .)
    R_EXCEPT        reduce using rule 17 (idOrString -> CHARACTER .)
    S_PARDER        reduce using rule 17 (idOrString -> CHARACTER .)
    R_FROM          reduce using rule 17 (idOrString -> CHARACTER .)
    S_PARIZQ        reduce using rule 17 (idOrString -> CHARACTER .)
    R_ON            reduce using rule 17 (idOrString -> CHARACTER .)
    R_USING         reduce using rule 17 (idOrString -> CHARACTER .)
    R_MODE          reduce using rule 17 (idOrString -> CHARACTER .)


state 122

    (241) alterStmt -> R_ALTER R_TABLE idOrString . alterTableList
    (247) alterTableList -> . alterTableList S_COMA alterTable
    (248) alterTableList -> . alterTable
    (249) alterTable -> . R_ADD alterAdd
    (250) alterTable -> . R_ALTER alterAlter
    (251) alterTable -> . R_DROP alterDrop
    (252) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 209
    R_ALTER         shift and go to state 206
    R_DROP          shift and go to state 210
    R_RENAME        shift and go to state 211

    alterTableList                 shift and go to state 207
    alterTable                     shift and go to state 208

state 123

    (264) dropStmt -> R_DROP R_TABLE ifExists . idOrString
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121
=======
state 121

    (251) alterStmt -> R_ALTER R_TABLE idOrString . alterTableList
    (257) alterTableList -> . alterTableList S_COMA alterTable
    (258) alterTableList -> . alterTable
    (259) alterTable -> . R_ADD alterAdd
    (260) alterTable -> . R_ALTER alterAlter
    (261) alterTable -> . R_DROP alterDrop
    (262) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 208
    R_ALTER         shift and go to state 205
    R_DROP          shift and go to state 209
    R_RENAME        shift and go to state 210

    alterTableList                 shift and go to state 206
    alterTable                     shift and go to state 207

state 122

    (274) dropStmt -> R_DROP R_TABLE ifExists . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 211

state 123

    (276) ifExists -> R_IF . R_EXISTS

    R_EXISTS        shift and go to state 212
>>>>>>> main

    idOrString                     shift and go to state 212

state 124

<<<<<<< HEAD
    (266) ifExists -> R_IF . R_EXISTS

    R_EXISTS        shift and go to state 213


state 125

    (265) dropStmt -> R_DROP R_DATABASE ifExists . idOrString
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    idOrString                     shift and go to state 214

state 126

    (335) insertStmt -> R_INSERT R_INTO ID . paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (336) paramsColumn -> . S_PARIZQ idList S_PARDER
    (337) paramsColumn -> .

    S_PARIZQ        shift and go to state 216
    R_VALUES        reduce using rule 337 (paramsColumn -> .)

    paramsColumn                   shift and go to state 215

state 127
=======
    (275) dropStmt -> R_DROP R_DATABASE ifExists . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 213

state 125

    (345) insertStmt -> R_INSERT R_INTO ID . paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (346) paramsColumn -> . S_PARIZQ idList S_PARDER
    (347) paramsColumn -> .

    S_PARIZQ        shift and go to state 215
    R_VALUES        reduce using rule 347 (paramsColumn -> .)

    paramsColumn                   shift and go to state 214

state 126
>>>>>>> main

    (286) selectStmt -> S_PARIZQ selectStmt S_PARDER .

    S_PUNTOCOMA     reduce using rule 286 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 286 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 286 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 286 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 286 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)


<<<<<<< HEAD
state 128

    (338) updateStmt -> R_UPDATE fromBody R_SET . updateCols whereCl
    (339) updateCols -> . updateCols S_COMA updateVals
    (340) updateCols -> . updateVals
    (341) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 219

    updateCols                     shift and go to state 217
    updateVals                     shift and go to state 218

state 129

    (291) fromBody -> ID optAlias .

    R_SET           reduce using rule 291 (fromBody -> ID optAlias .)
    S_COMA          reduce using rule 291 (fromBody -> ID optAlias .)
    R_WHERE         reduce using rule 291 (fromBody -> ID optAlias .)
    S_PUNTOCOMA     reduce using rule 291 (fromBody -> ID optAlias .)
    R_NATURAL       reduce using rule 291 (fromBody -> ID optAlias .)
    R_INNER         reduce using rule 291 (fromBody -> ID optAlias .)
    R_LEFT          reduce using rule 291 (fromBody -> ID optAlias .)
    R_RIGHT         reduce using rule 291 (fromBody -> ID optAlias .)
    R_FULL          reduce using rule 291 (fromBody -> ID optAlias .)
    R_GROUP         reduce using rule 291 (fromBody -> ID optAlias .)
    R_ORDER         reduce using rule 291 (fromBody -> ID optAlias .)
    R_LIMIT         reduce using rule 291 (fromBody -> ID optAlias .)
    R_UNION         reduce using rule 291 (fromBody -> ID optAlias .)
    R_INTERSECT     reduce using rule 291 (fromBody -> ID optAlias .)
    R_EXCEPT        reduce using rule 291 (fromBody -> ID optAlias .)
    S_PARDER        reduce using rule 291 (fromBody -> ID optAlias .)


state 130

    (286) optAlias -> R_AS . idOrString
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    idOrString                     shift and go to state 220

state 131

    (287) optAlias -> idOrString .

    R_SET           reduce using rule 287 (optAlias -> idOrString .)
    S_COMA          reduce using rule 287 (optAlias -> idOrString .)
    R_WHERE         reduce using rule 287 (optAlias -> idOrString .)
    S_PUNTOCOMA     reduce using rule 287 (optAlias -> idOrString .)
    R_NATURAL       reduce using rule 287 (optAlias -> idOrString .)
    R_INNER         reduce using rule 287 (optAlias -> idOrString .)
    R_LEFT          reduce using rule 287 (optAlias -> idOrString .)
    R_RIGHT         reduce using rule 287 (optAlias -> idOrString .)
    R_FULL          reduce using rule 287 (optAlias -> idOrString .)
    R_GROUP         reduce using rule 287 (optAlias -> idOrString .)
    R_ORDER         reduce using rule 287 (optAlias -> idOrString .)
    R_LIMIT         reduce using rule 287 (optAlias -> idOrString .)
    R_UNION         reduce using rule 287 (optAlias -> idOrString .)
    R_INTERSECT     reduce using rule 287 (optAlias -> idOrString .)
    R_EXCEPT        reduce using rule 287 (optAlias -> idOrString .)
    S_PARDER        reduce using rule 287 (optAlias -> idOrString .)
    R_FROM          reduce using rule 287 (optAlias -> idOrString .)
    R_ON            reduce using rule 287 (optAlias -> idOrString .)
    R_USING         reduce using rule 287 (optAlias -> idOrString .)


state 132
=======
state 127

    (348) updateStmt -> R_UPDATE fromBody R_SET . updateCols whereCl
    (349) updateCols -> . updateCols S_COMA updateVals
    (350) updateCols -> . updateVals
    (351) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 218

    updateCols                     shift and go to state 216
    updateVals                     shift and go to state 217

state 128

    (302) fromBody -> ID optAlias .

    R_SET           reduce using rule 302 (fromBody -> ID optAlias .)
    S_COMA          reduce using rule 302 (fromBody -> ID optAlias .)
    R_WHERE         reduce using rule 302 (fromBody -> ID optAlias .)
    S_PUNTOCOMA     reduce using rule 302 (fromBody -> ID optAlias .)
    R_NATURAL       reduce using rule 302 (fromBody -> ID optAlias .)
    R_INNER         reduce using rule 302 (fromBody -> ID optAlias .)
    R_LEFT          reduce using rule 302 (fromBody -> ID optAlias .)
    R_RIGHT         reduce using rule 302 (fromBody -> ID optAlias .)
    R_FULL          reduce using rule 302 (fromBody -> ID optAlias .)
    R_GROUP         reduce using rule 302 (fromBody -> ID optAlias .)
    R_LIMIT         reduce using rule 302 (fromBody -> ID optAlias .)
    R_ORDER         reduce using rule 302 (fromBody -> ID optAlias .)
    R_UNION         reduce using rule 302 (fromBody -> ID optAlias .)
    R_INTERSECT     reduce using rule 302 (fromBody -> ID optAlias .)
    R_EXCEPT        reduce using rule 302 (fromBody -> ID optAlias .)
    S_PARDER        reduce using rule 302 (fromBody -> ID optAlias .)


state 129

    (297) optAlias -> R_AS . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 219

state 130

    (298) optAlias -> idOrString .

    R_SET           reduce using rule 298 (optAlias -> idOrString .)
    S_COMA          reduce using rule 298 (optAlias -> idOrString .)
    R_WHERE         reduce using rule 298 (optAlias -> idOrString .)
    S_PUNTOCOMA     reduce using rule 298 (optAlias -> idOrString .)
    R_NATURAL       reduce using rule 298 (optAlias -> idOrString .)
    R_INNER         reduce using rule 298 (optAlias -> idOrString .)
    R_LEFT          reduce using rule 298 (optAlias -> idOrString .)
    R_RIGHT         reduce using rule 298 (optAlias -> idOrString .)
    R_FULL          reduce using rule 298 (optAlias -> idOrString .)
    R_GROUP         reduce using rule 298 (optAlias -> idOrString .)
    R_LIMIT         reduce using rule 298 (optAlias -> idOrString .)
    R_ORDER         reduce using rule 298 (optAlias -> idOrString .)
    R_UNION         reduce using rule 298 (optAlias -> idOrString .)
    R_INTERSECT     reduce using rule 298 (optAlias -> idOrString .)
    R_EXCEPT        reduce using rule 298 (optAlias -> idOrString .)
    S_PARDER        reduce using rule 298 (optAlias -> idOrString .)
    R_FROM          reduce using rule 298 (optAlias -> idOrString .)
    R_ON            reduce using rule 298 (optAlias -> idOrString .)
    R_USING         reduce using rule 298 (optAlias -> idOrString .)


state 131
>>>>>>> main

    (303) fromBody -> S_PARIZQ selectStmt . S_PARDER R_AS idOrString
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

<<<<<<< HEAD
    S_PARDER        shift and go to state 221
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39


state 133

    (344) deleteStmt -> R_DELETE fromCl whereCl .

    S_PUNTOCOMA     reduce using rule 344 (deleteStmt -> R_DELETE fromCl whereCl .)


state 134

    (308) whereCl -> R_WHERE . expBool
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 82
    S_PARIZQ        shift and go to state 182
    R_EXISTS        shift and go to state 100
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 222
    boolean                        shift and go to state 83
    datatype                       shift and go to state 183
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    stringExp                      shift and go to state 105
    timeStamp                      shift and go to state 96

state 135

    (276) fromCl -> R_FROM tableExp .
    (289) tableExp -> tableExp . S_COMA fromBody

    R_WHERE         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    S_PUNTOCOMA     reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_NATURAL       reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_INNER         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_LEFT          reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_RIGHT         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_FULL          reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_GROUP         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_ORDER         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_LIMIT         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_UNION         reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_INTERSECT     reduce using rule 276 (fromCl -> R_FROM tableExp .)
    R_EXCEPT        reduce using rule 276 (fromCl -> R_FROM tableExp .)
    S_PARDER        reduce using rule 276 (fromCl -> R_FROM tableExp .)
    S_COMA          shift and go to state 223


state 136

    (290) tableExp -> fromBody .

    S_COMA          reduce using rule 290 (tableExp -> fromBody .)
    R_WHERE         reduce using rule 290 (tableExp -> fromBody .)
    S_PUNTOCOMA     reduce using rule 290 (tableExp -> fromBody .)
    R_NATURAL       reduce using rule 290 (tableExp -> fromBody .)
    R_INNER         reduce using rule 290 (tableExp -> fromBody .)
    R_LEFT          reduce using rule 290 (tableExp -> fromBody .)
    R_RIGHT         reduce using rule 290 (tableExp -> fromBody .)
    R_FULL          reduce using rule 290 (tableExp -> fromBody .)
    R_GROUP         reduce using rule 290 (tableExp -> fromBody .)
    R_ORDER         reduce using rule 290 (tableExp -> fromBody .)
    R_LIMIT         reduce using rule 290 (tableExp -> fromBody .)
    R_UNION         reduce using rule 290 (tableExp -> fromBody .)
    R_INTERSECT     reduce using rule 290 (tableExp -> fromBody .)
    R_EXCEPT        reduce using rule 290 (tableExp -> fromBody .)
    S_PARDER        reduce using rule 290 (tableExp -> fromBody .)


state 137

    (345) truncateStmt -> R_TRUNCATE tableOpt ID .

    S_PUNTOCOMA     reduce using rule 345 (truncateStmt -> R_TRUNCATE tableOpt ID .)
=======
    S_PARDER        shift and go to state 220
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 132

    (354) deleteStmt -> R_DELETE fromCl whereCl .

    S_PUNTOCOMA     reduce using rule 354 (deleteStmt -> R_DELETE fromCl whereCl .)


state 133
>>>>>>> main

    (319) whereCl -> R_WHERE . expBool
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 81
    S_PARIZQ        shift and go to state 181
    R_EXISTS        shift and go to state 99
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    expBool                        shift and go to state 221
    boolean                        shift and go to state 82
    datatype                       shift and go to state 182
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    stringExp                      shift and go to state 104
    timeStamp                      shift and go to state 95

state 138

<<<<<<< HEAD
    (268) selectStmt -> R_SELECT R_DISTINCT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (276) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 59

    fromCl                         shift and go to state 224
=======
    (287) fromCl -> R_FROM tableExp .
    (300) tableExp -> tableExp . S_COMA fromBody

    R_WHERE         reduce using rule 287 (fromCl -> R_FROM tableExp .)
    S_PUNTOCOMA     reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_NATURAL       reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_INNER         reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_LEFT          reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_RIGHT         reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_FULL          reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_GROUP         reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_LIMIT         reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_ORDER         reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_UNION         reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_INTERSECT     reduce using rule 287 (fromCl -> R_FROM tableExp .)
    R_EXCEPT        reduce using rule 287 (fromCl -> R_FROM tableExp .)
    S_PARDER        reduce using rule 287 (fromCl -> R_FROM tableExp .)
    S_COMA          shift and go to state 222

>>>>>>> main

state 139

<<<<<<< HEAD
    (269) selectStmt -> R_SELECT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl limitCl
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .
    (293) joinList -> . joinList2
    (294) joinList2 -> . joinList2 joinCl
    (295) joinList2 -> . joinCl
    (296) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (297) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (298) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (301) joinOpt -> . R_INNER
    (302) joinOpt -> . R_LEFT
    (303) joinOpt -> . R_LEFT R_OUTER
    (304) joinOpt -> . R_RIGHT
    (305) joinOpt -> . R_RIGHT R_OUTER
    (306) joinOpt -> . R_FULL
    (307) joinOpt -> . R_FULL R_OUTER

    R_WHERE         shift and go to state 134
    R_GROUP         reduce using rule 309 (whereCl -> .)
    R_ORDER         reduce using rule 309 (whereCl -> .)
    R_LIMIT         reduce using rule 309 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)
    R_UNION         reduce using rule 309 (whereCl -> .)
    R_INTERSECT     reduce using rule 309 (whereCl -> .)
    R_EXCEPT        reduce using rule 309 (whereCl -> .)
    S_PARDER        reduce using rule 309 (whereCl -> .)
    R_NATURAL       shift and go to state 230
    R_INNER         shift and go to state 231
    R_LEFT          shift and go to state 232
    R_RIGHT         shift and go to state 233
    R_FULL          shift and go to state 234

    whereCl                        shift and go to state 225
    joinList                       shift and go to state 226
    joinList2                      shift and go to state 227
    joinCl                         shift and go to state 228
    joinOpt                        shift and go to state 229
=======
    (301) tableExp -> fromBody .

    S_COMA          reduce using rule 301 (tableExp -> fromBody .)
    R_WHERE         reduce using rule 301 (tableExp -> fromBody .)
    S_PUNTOCOMA     reduce using rule 301 (tableExp -> fromBody .)
    R_NATURAL       reduce using rule 301 (tableExp -> fromBody .)
    R_INNER         reduce using rule 301 (tableExp -> fromBody .)
    R_LEFT          reduce using rule 301 (tableExp -> fromBody .)
    R_RIGHT         reduce using rule 301 (tableExp -> fromBody .)
    R_FULL          reduce using rule 301 (tableExp -> fromBody .)
    R_GROUP         reduce using rule 301 (tableExp -> fromBody .)
    R_LIMIT         reduce using rule 301 (tableExp -> fromBody .)
    R_ORDER         reduce using rule 301 (tableExp -> fromBody .)
    R_UNION         reduce using rule 301 (tableExp -> fromBody .)
    R_INTERSECT     reduce using rule 301 (tableExp -> fromBody .)
    R_EXCEPT        reduce using rule 301 (tableExp -> fromBody .)
    S_PARDER        reduce using rule 301 (tableExp -> fromBody .)

>>>>>>> main

state 140

<<<<<<< HEAD
    (282) selectList -> selectList S_COMA . selectListParams optAlias
    (284) selectListParams -> . expresion
    (285) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (96) expresion -> . datatype
    (97) expresion -> . expBool
    (98) expresion -> . S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName

    ID              shift and go to state 69
    S_PARIZQ        shift and go to state 72
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    R_NOT           shift and go to state 82
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_EXISTS        shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectListParams               shift and go to state 235
    expresion                      shift and go to state 68
    datatype                       shift and go to state 70
    expBool                        shift and go to state 71
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    boolean                        shift and go to state 83
    timeStamp                      shift and go to state 96
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    stringExp                      shift and go to state 105

state 141
=======
    (355) truncateStmt -> R_TRUNCATE tableOpt ID .

    S_PUNTOCOMA     reduce using rule 355 (truncateStmt -> R_TRUNCATE tableOpt ID .)
>>>>>>> main


state 137

    (278) selectStmt -> R_SELECT R_DISTINCT selectParams . fromCl whereCl groupByCl limitCl
    (287) fromCl -> . R_FROM tableExp

<<<<<<< HEAD
state 142

    (285) selectListParams -> ID S_PUNTO . O_PRODUCTO
    (224) columnName -> ID S_PUNTO . ID

    O_PRODUCTO      shift and go to state 237
    ID              shift and go to state 236

=======
    R_FROM          shift and go to state 58

    fromCl                         shift and go to state 223

state 138

    (279) selectStmt -> R_SELECT selectParams fromCl . whereCl groupByCl limitCl
    (280) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> R_SELECT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl limitCl
    (319) whereCl -> . R_WHERE expBool
    (320) whereCl -> .
    (304) joinList -> . joinList2
    (305) joinList2 -> . joinList2 joinCl
    (306) joinList2 -> . joinCl
    (307) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (308) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (309) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (312) joinOpt -> . R_INNER
    (313) joinOpt -> . R_LEFT
    (314) joinOpt -> . R_LEFT R_OUTER
    (315) joinOpt -> . R_RIGHT
    (316) joinOpt -> . R_RIGHT R_OUTER
    (317) joinOpt -> . R_FULL
    (318) joinOpt -> . R_FULL R_OUTER

    R_WHERE         shift and go to state 133
    R_GROUP         reduce using rule 320 (whereCl -> .)
    R_LIMIT         reduce using rule 320 (whereCl -> .)
    R_ORDER         reduce using rule 320 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 320 (whereCl -> .)
    R_UNION         reduce using rule 320 (whereCl -> .)
    R_INTERSECT     reduce using rule 320 (whereCl -> .)
    R_EXCEPT        reduce using rule 320 (whereCl -> .)
    S_PARDER        reduce using rule 320 (whereCl -> .)
    R_NATURAL       shift and go to state 229
    R_INNER         shift and go to state 230
    R_LEFT          shift and go to state 231
    R_RIGHT         shift and go to state 232
    R_FULL          shift and go to state 233

    whereCl                        shift and go to state 224
    joinList                       shift and go to state 225
    joinList2                      shift and go to state 226
    joinCl                         shift and go to state 227
    joinOpt                        shift and go to state 228

state 139

    (293) selectList -> selectList S_COMA . selectListParams optAlias
    (295) selectListParams -> . expresion
    (296) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (106) expresion -> . datatype
    (107) expresion -> . expBool
    (108) expresion -> . S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName

    ID              shift and go to state 68
    S_PARIZQ        shift and go to state 71
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    R_NOT           shift and go to state 81
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_EXISTS        shift and go to state 99
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    selectListParams               shift and go to state 234
    expresion                      shift and go to state 67
    datatype                       shift and go to state 69
    expBool                        shift and go to state 70
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    boolean                        shift and go to state 82
    timeStamp                      shift and go to state 95
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    stringExp                      shift and go to state 104

state 140

    (294) selectList -> selectListParams optAlias .

    S_COMA          reduce using rule 294 (selectList -> selectListParams optAlias .)
    R_FROM          reduce using rule 294 (selectList -> selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 294 (selectList -> selectListParams optAlias .)
    R_UNION         reduce using rule 294 (selectList -> selectListParams optAlias .)
    R_INTERSECT     reduce using rule 294 (selectList -> selectListParams optAlias .)
    R_EXCEPT        reduce using rule 294 (selectList -> selectListParams optAlias .)
    S_PARDER        reduce using rule 294 (selectList -> selectListParams optAlias .)


state 141

    (296) selectListParams -> ID S_PUNTO . O_PRODUCTO
    (234) columnName -> ID S_PUNTO . ID

    O_PRODUCTO      shift and go to state 236
    ID              shift and go to state 235
>>>>>>> main


<<<<<<< HEAD
    (99) funcCall -> ID S_PARIZQ . paramsList S_PARDER
    (100) funcCall -> ID S_PARIZQ . S_PARDER
    (134) paramsList -> . paramsList S_COMA datatype
    (135) paramsList -> . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    S_PARDER        shift and go to state 239
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    paramsList                     shift and go to state 238
    datatype                       shift and go to state 240
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
state 142

    (109) funcCall -> ID S_PARIZQ . paramsList S_PARDER
    (110) funcCall -> ID S_PARIZQ . S_PARDER
    (144) paramsList -> . paramsList S_COMA datatype
    (145) paramsList -> . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    S_PARDER        shift and go to state 238
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    paramsList                     shift and go to state 237
    datatype                       shift and go to state 239
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 143

<<<<<<< HEAD
    (136) datatype -> datatype O_SUMA . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 241
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
    (146) datatype -> datatype O_SUMA . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 240
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 144

<<<<<<< HEAD
    (137) datatype -> datatype O_RESTA . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 242
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
    (147) datatype -> datatype O_RESTA . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 241
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 145

<<<<<<< HEAD
    (138) datatype -> datatype O_PRODUCTO . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 243
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
    (148) datatype -> datatype O_PRODUCTO . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 242
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 146

<<<<<<< HEAD
    (139) datatype -> datatype O_DIVISION . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 244
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 148

    (140) datatype -> datatype O_EXPONENTE . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 245
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 149

    (141) datatype -> datatype O_MODULAR . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 246
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 150

    (142) datatype -> datatype OC_CONCATENAR . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 247
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 151

    (207) boolean -> datatype R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 248

=======
    (149) datatype -> datatype O_DIVISION . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 243
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 147

    (150) datatype -> datatype O_EXPONENTE . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 244
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 148

    (151) datatype -> datatype O_MODULAR . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 245
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 149

    (152) datatype -> datatype OC_CONCATENAR . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 246
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 150

    (217) boolean -> datatype R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 247


state 151

    (218) boolean -> datatype R_NOT . R_IN S_PARIZQ selectStmt S_PARDER
    (177) expComp -> datatype R_NOT . R_BETWEEN datatype R_AND datatype
    (196) expSubq -> datatype R_NOT . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
>>>>>>> main

    R_IN            shift and go to state 248
    R_BETWEEN       shift and go to state 249

<<<<<<< HEAD
    (208) boolean -> datatype R_NOT . R_IN S_PARIZQ selectStmt S_PARDER
    (167) expComp -> datatype R_NOT . R_BETWEEN datatype R_AND datatype
    (186) expSubq -> datatype R_NOT . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 249
    R_BETWEEN       shift and go to state 250


state 153

    (158) expComp -> datatype OL_MENORQUE . datatype
    (179) expSubq -> datatype OL_MENORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104
=======

state 152

    (168) expComp -> datatype OL_MENORQUE . datatype
    (189) expSubq -> datatype OL_MENORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 250
    subqValues                     shift and go to state 251
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 153

    (169) expComp -> datatype OL_MAYORQUE . datatype
    (190) expSubq -> datatype OL_MAYORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 255
    subqValues                     shift and go to state 256
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

    datatype                       shift and go to state 251
    subqValues                     shift and go to state 252
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

<<<<<<< HEAD
state 154

    (159) expComp -> datatype OL_MAYORQUE . datatype
    (180) expSubq -> datatype OL_MAYORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 256
    subqValues                     shift and go to state 257
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
    (170) expComp -> datatype OL_MAYORIGUALQUE . datatype
    (191) expSubq -> datatype OL_MAYORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103
>>>>>>> main

    datatype                       shift and go to state 257
    subqValues                     shift and go to state 258
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

<<<<<<< HEAD
    (160) expComp -> datatype OL_MAYORIGUALQUE . datatype
    (181) expSubq -> datatype OL_MAYORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 258
    subqValues                     shift and go to state 259
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 156

    (161) expComp -> datatype OL_MENORIGUALQUE . datatype
    (182) expSubq -> datatype OL_MENORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 260
    subqValues                     shift and go to state 261
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 157

    (162) expComp -> datatype S_IGUAL . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 262
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 158

    (163) expComp -> datatype OL_DISTINTODE . datatype
    (184) expSubq -> datatype OL_DISTINTODE . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 263
    subqValues                     shift and go to state 264
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 159

    (164) expComp -> datatype R_IS . R_DISTINCT R_FROM datatype
    (165) expComp -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype
    (171) expComp -> datatype R_IS . R_NULL
    (172) expComp -> datatype R_IS . R_TRUE
    (173) expComp -> datatype R_IS . R_FALSE
    (174) expComp -> datatype R_IS . R_UNKNOWN
    (175) expComp -> datatype R_IS . R_NOT R_NULL
    (176) expComp -> datatype R_IS . R_NOT R_TRUE
    (177) expComp -> datatype R_IS . R_NOT R_FALSE
    (178) expComp -> datatype R_IS . R_NOT R_UNKNOWN
    (188) expSubq -> datatype R_IS . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype R_IS . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype R_IS . R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype R_IS . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype R_IS . R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype R_IS . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype R_IS . R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype R_IS . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> datatype R_IS . R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 265
    R_NOT           shift and go to state 266
    R_NULL          shift and go to state 267
    R_TRUE          shift and go to state 268
    R_FALSE         shift and go to state 269
    R_UNKNOWN       shift and go to state 270


state 160

    (166) expComp -> datatype R_BETWEEN . datatype R_AND datatype
    (168) expComp -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype
    (185) expSubq -> datatype R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_SYMMETRIC     shift and go to state 272
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 271
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 161

    (169) expComp -> datatype R_ISNULL .
    (192) expSubq -> datatype R_ISNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_OR            reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_IS            reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_AS            reduce using rule 169 (expComp -> datatype R_ISNULL .)
    ID              reduce using rule 169 (expComp -> datatype R_ISNULL .)
    STRING          reduce using rule 169 (expComp -> datatype R_ISNULL .)
    CHARACTER       reduce using rule 169 (expComp -> datatype R_ISNULL .)
    S_COMA          reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_FROM          reduce using rule 169 (expComp -> datatype R_ISNULL .)
    S_PUNTOCOMA     reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_UNION         reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_INTERSECT     reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_EXCEPT        reduce using rule 169 (expComp -> datatype R_ISNULL .)
    S_PARDER        reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_GROUP         reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_ORDER         reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_LIMIT         reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_THEN          reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_NATURAL       reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_INNER         reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_LEFT          reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_RIGHT         reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_FULL          reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_WHERE         reduce using rule 169 (expComp -> datatype R_ISNULL .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255
=======
state 155

    (171) expComp -> datatype OL_MENORIGUALQUE . datatype
    (192) expSubq -> datatype OL_MENORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 259
    subqValues                     shift and go to state 260
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 156

    (172) expComp -> datatype S_IGUAL . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 261
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 157

    (173) expComp -> datatype OL_DISTINTODE . datatype
    (194) expSubq -> datatype OL_DISTINTODE . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 262
    subqValues                     shift and go to state 263
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 158

    (174) expComp -> datatype R_IS . R_DISTINCT R_FROM datatype
    (175) expComp -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype
    (181) expComp -> datatype R_IS . R_NULL
    (182) expComp -> datatype R_IS . R_TRUE
    (183) expComp -> datatype R_IS . R_FALSE
    (184) expComp -> datatype R_IS . R_UNKNOWN
    (185) expComp -> datatype R_IS . R_NOT R_NULL
    (186) expComp -> datatype R_IS . R_NOT R_TRUE
    (187) expComp -> datatype R_IS . R_NOT R_FALSE
    (188) expComp -> datatype R_IS . R_NOT R_UNKNOWN
    (198) expSubq -> datatype R_IS . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> datatype R_IS . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> datatype R_IS . R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> datatype R_IS . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> datatype R_IS . R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> datatype R_IS . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> datatype R_IS . R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> datatype R_IS . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> datatype R_IS . R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 264
    R_NOT           shift and go to state 265
    R_NULL          shift and go to state 266
    R_TRUE          shift and go to state 267
    R_FALSE         shift and go to state 268
    R_UNKNOWN       shift and go to state 269


state 159

    (176) expComp -> datatype R_BETWEEN . datatype R_AND datatype
    (178) expComp -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype
    (195) expSubq -> datatype R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_SYMMETRIC     shift and go to state 271
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 270
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 160

    (179) expComp -> datatype R_ISNULL .
    (202) expSubq -> datatype R_ISNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_OR            reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_IS            reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_AS            reduce using rule 179 (expComp -> datatype R_ISNULL .)
    ID              reduce using rule 179 (expComp -> datatype R_ISNULL .)
    STRING          reduce using rule 179 (expComp -> datatype R_ISNULL .)
    CHARACTER       reduce using rule 179 (expComp -> datatype R_ISNULL .)
    S_COMA          reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_FROM          reduce using rule 179 (expComp -> datatype R_ISNULL .)
    S_PUNTOCOMA     reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_UNION         reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_INTERSECT     reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_EXCEPT        reduce using rule 179 (expComp -> datatype R_ISNULL .)
    S_PARDER        reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_GROUP         reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_LIMIT         reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_ORDER         reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_THEN          reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_NATURAL       reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_INNER         reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_LEFT          reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_RIGHT         reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_FULL          reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_WHERE         reduce using rule 179 (expComp -> datatype R_ISNULL .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 272

state 161

    (180) expComp -> datatype R_NOTNULL .
    (203) expSubq -> datatype R_NOTNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_OR            reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_IS            reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_AS            reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    ID              reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    STRING          reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    CHARACTER       reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    S_COMA          reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_FROM          reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    S_PUNTOCOMA     reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_UNION         reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_INTERSECT     reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_EXCEPT        reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    S_PARDER        reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_GROUP         reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_LIMIT         reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_ORDER         reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_THEN          reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_NATURAL       reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_INNER         reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_LEFT          reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_RIGHT         reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_FULL          reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_WHERE         reduce using rule 180 (expComp -> datatype R_NOTNULL .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254
>>>>>>> main

    subqValues                     shift and go to state 273

state 162

<<<<<<< HEAD
    (170) expComp -> datatype R_NOTNULL .
    (193) expSubq -> datatype R_NOTNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_OR            reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_IS            reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_AS            reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    ID              reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    STRING          reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    CHARACTER       reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    S_COMA          reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_FROM          reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    S_PUNTOCOMA     reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_UNION         reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_INTERSECT     reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_EXCEPT        reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    S_PARDER        reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_GROUP         reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_ORDER         reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_LIMIT         reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_THEN          reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_NATURAL       reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_INNER         reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_LEFT          reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_RIGHT         reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_FULL          reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_WHERE         reduce using rule 170 (expComp -> datatype R_NOTNULL .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 274

state 163

    (183) expSubq -> datatype OL_ESIGUAL . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 275

state 164

    (211) expBool -> expBool R_AND . expBool
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 82
    S_PARIZQ        shift and go to state 182
    R_EXISTS        shift and go to state 100
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 276
    boolean                        shift and go to state 83
    datatype                       shift and go to state 183
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    stringExp                      shift and go to state 105
    timeStamp                      shift and go to state 96

state 165

    (212) expBool -> expBool R_OR . expBool
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 82
    S_PARIZQ        shift and go to state 182
    R_EXISTS        shift and go to state 100
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 277
    boolean                        shift and go to state 83
    datatype                       shift and go to state 183
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    stringExp                      shift and go to state 105
    timeStamp                      shift and go to state 96

state 166

    (215) expBool -> expBool optBoolPredicate .

    R_AND           reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_OR            reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_IS            reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_AS            reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    ID              reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    STRING          reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    CHARACTER       reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    S_COMA          reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_FROM          reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    S_PUNTOCOMA     reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_UNION         reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_INTERSECT     reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_EXCEPT        reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    S_PARDER        reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_GROUP         reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_ORDER         reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_LIMIT         reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_THEN          reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_NATURAL       reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_INNER         reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_LEFT          reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_RIGHT         reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_FULL          reduce using rule 215 (expBool -> expBool optBoolPredicate .)
    R_WHERE         reduce using rule 215 (expBool -> expBool optBoolPredicate .)
=======
    (193) expSubq -> datatype OL_ESIGUAL . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 274

state 163

    (221) expBool -> expBool R_AND . expBool
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 81
    S_PARIZQ        shift and go to state 181
    R_EXISTS        shift and go to state 99
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    expBool                        shift and go to state 275
    boolean                        shift and go to state 82
    datatype                       shift and go to state 182
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    stringExp                      shift and go to state 104
    timeStamp                      shift and go to state 95

state 164

    (222) expBool -> expBool R_OR . expBool
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 81
    S_PARIZQ        shift and go to state 181
    R_EXISTS        shift and go to state 99
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    expBool                        shift and go to state 276
    boolean                        shift and go to state 82
    datatype                       shift and go to state 182
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    stringExp                      shift and go to state 104
    timeStamp                      shift and go to state 95

state 165

    (225) expBool -> expBool optBoolPredicate .

    R_AND           reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_OR            reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_IS            reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_AS            reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    ID              reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    STRING          reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    CHARACTER       reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    S_COMA          reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_FROM          reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    S_PUNTOCOMA     reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_UNION         reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_INTERSECT     reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_EXCEPT        reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    S_PARDER        reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_GROUP         reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_LIMIT         reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_ORDER         reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_THEN          reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_NATURAL       reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_INNER         reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_LEFT          reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_RIGHT         reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_FULL          reduce using rule 225 (expBool -> expBool optBoolPredicate .)
    R_WHERE         reduce using rule 225 (expBool -> expBool optBoolPredicate .)


state 166

    (227) optBoolPredicate -> R_IS . R_TRUE
    (228) optBoolPredicate -> R_IS . R_FALSE
    (229) optBoolPredicate -> R_IS . R_UNKNOWN
    (230) optBoolPredicate -> R_IS . R_NOT R_TRUE
    (231) optBoolPredicate -> R_IS . R_NOT R_FALSE
    (232) optBoolPredicate -> R_IS . R_NOT R_UNKNOWN
>>>>>>> main

    R_TRUE          shift and go to state 277
    R_FALSE         shift and go to state 278
    R_UNKNOWN       shift and go to state 279
    R_NOT           shift and go to state 280


<<<<<<< HEAD
    (217) optBoolPredicate -> R_IS . R_TRUE
    (218) optBoolPredicate -> R_IS . R_FALSE
    (219) optBoolPredicate -> R_IS . R_UNKNOWN
    (220) optBoolPredicate -> R_IS . R_NOT R_TRUE
    (221) optBoolPredicate -> R_IS . R_NOT R_FALSE
    (222) optBoolPredicate -> R_IS . R_NOT R_UNKNOWN

    R_TRUE          shift and go to state 278
    R_FALSE         shift and go to state 279
    R_UNKNOWN       shift and go to state 280
    R_NOT           shift and go to state 281


state 168

    (275) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (157) datatype -> S_PARIZQ . datatype S_PARDER
    (214) expBool -> S_PARIZQ . expBool S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 168
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    R_NOT           shift and go to state 82
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_EXISTS        shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectStmt                     shift and go to state 54
    datatype                       shift and go to state 170
    expBool                        shift and go to state 171
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    boolean                        shift and go to state 83
    timeStamp                      shift and go to state 96
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    stringExp                      shift and go to state 105

state 169

    (98) expresion -> S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 282
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
state 167

    (286) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (167) datatype -> S_PARIZQ . datatype S_PARDER
    (224) expBool -> S_PARIZQ . expBool S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 167
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    R_NOT           shift and go to state 81
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_EXISTS        shift and go to state 99
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    selectStmt                     shift and go to state 53
    datatype                       shift and go to state 169
    expBool                        shift and go to state 170
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    boolean                        shift and go to state 82
    timeStamp                      shift and go to state 95
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    stringExp                      shift and go to state 104

state 168

    (108) expresion -> S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 281
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 169

    (167) datatype -> S_PARIZQ datatype . S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype
    (217) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (168) expComp -> datatype . OL_MENORQUE datatype
    (169) expComp -> datatype . OL_MAYORQUE datatype
    (170) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (171) expComp -> datatype . OL_MENORIGUALQUE datatype
    (172) expComp -> datatype . S_IGUAL datatype
    (173) expComp -> datatype . OL_DISTINTODE datatype
    (174) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (177) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> datatype . R_ISNULL
    (180) expComp -> datatype . R_NOTNULL
    (181) expComp -> datatype . R_IS R_NULL
    (182) expComp -> datatype . R_IS R_TRUE
    (183) expComp -> datatype . R_IS R_FALSE
    (184) expComp -> datatype . R_IS R_UNKNOWN
    (185) expComp -> datatype . R_IS R_NOT R_NULL
    (186) expComp -> datatype . R_IS R_NOT R_TRUE
    (187) expComp -> datatype . R_IS R_NOT R_FALSE
    (188) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (189) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    S_PARDER        shift and go to state 282
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
    R_IN            shift and go to state 150
    R_NOT           shift and go to state 151
    OL_MENORQUE     shift and go to state 152
    OL_MAYORQUE     shift and go to state 153
    OL_MAYORIGUALQUE shift and go to state 154
    OL_MENORIGUALQUE shift and go to state 155
    S_IGUAL         shift and go to state 156
    OL_DISTINTODE   shift and go to state 157
    R_IS            shift and go to state 158
    R_BETWEEN       shift and go to state 159
    R_ISNULL        shift and go to state 160
    R_NOTNULL       shift and go to state 161
    OL_ESIGUAL      shift and go to state 162
>>>>>>> main


state 170

<<<<<<< HEAD
    (157) datatype -> S_PARIZQ datatype . S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype
    (207) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (158) expComp -> datatype . OL_MENORQUE datatype
    (159) expComp -> datatype . OL_MAYORQUE datatype
    (160) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (161) expComp -> datatype . OL_MENORIGUALQUE datatype
    (162) expComp -> datatype . S_IGUAL datatype
    (163) expComp -> datatype . OL_DISTINTODE datatype
    (164) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (167) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> datatype . R_ISNULL
    (170) expComp -> datatype . R_NOTNULL
    (171) expComp -> datatype . R_IS R_NULL
    (172) expComp -> datatype . R_IS R_TRUE
    (173) expComp -> datatype . R_IS R_FALSE
    (174) expComp -> datatype . R_IS R_UNKNOWN
    (175) expComp -> datatype . R_IS R_NOT R_NULL
    (176) expComp -> datatype . R_IS R_NOT R_TRUE
    (177) expComp -> datatype . R_IS R_NOT R_FALSE
    (178) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (179) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    S_PARDER        shift and go to state 283
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
    R_IN            shift and go to state 151
    R_NOT           shift and go to state 152
    OL_MENORQUE     shift and go to state 153
    OL_MAYORQUE     shift and go to state 154
    OL_MAYORIGUALQUE shift and go to state 155
    OL_MENORIGUALQUE shift and go to state 156
    S_IGUAL         shift and go to state 157
    OL_DISTINTODE   shift and go to state 158
    R_IS            shift and go to state 159
    R_BETWEEN       shift and go to state 160
    R_ISNULL        shift and go to state 161
    R_NOTNULL       shift and go to state 162
    OL_ESIGUAL      shift and go to state 163
=======
    (224) expBool -> S_PARIZQ expBool . S_PARDER
    (221) expBool -> expBool . R_AND expBool
    (222) expBool -> expBool . R_OR expBool
    (225) expBool -> expBool . optBoolPredicate
    (227) optBoolPredicate -> . R_IS R_TRUE
    (228) optBoolPredicate -> . R_IS R_FALSE
    (229) optBoolPredicate -> . R_IS R_UNKNOWN
    (230) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (231) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (232) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PARDER        shift and go to state 283
    R_AND           shift and go to state 163
    R_OR            shift and go to state 164
    R_IS            shift and go to state 166
>>>>>>> main

    optBoolPredicate               shift and go to state 165

state 171

<<<<<<< HEAD
    (214) expBool -> S_PARIZQ expBool . S_PARDER
    (211) expBool -> expBool . R_AND expBool
    (212) expBool -> expBool . R_OR expBool
    (215) expBool -> expBool . optBoolPredicate
    (217) optBoolPredicate -> . R_IS R_TRUE
    (218) optBoolPredicate -> . R_IS R_FALSE
    (219) optBoolPredicate -> . R_IS R_UNKNOWN
    (220) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (221) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (222) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PARDER        shift and go to state 284
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166

state 172

    (223) columnName -> ID .
    (224) columnName -> ID . S_PUNTO ID
    (99) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (100) funcCall -> ID . S_PARIZQ S_PARDER

    S_PARDER        reduce using rule 223 (columnName -> ID .)
    O_SUMA          reduce using rule 223 (columnName -> ID .)
    O_RESTA         reduce using rule 223 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 223 (columnName -> ID .)
    O_DIVISION      reduce using rule 223 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 223 (columnName -> ID .)
    O_MODULAR       reduce using rule 223 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 223 (columnName -> ID .)
    R_IN            reduce using rule 223 (columnName -> ID .)
    R_NOT           reduce using rule 223 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 223 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 223 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 223 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 223 (columnName -> ID .)
    S_IGUAL         reduce using rule 223 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 223 (columnName -> ID .)
    R_IS            reduce using rule 223 (columnName -> ID .)
    R_BETWEEN       reduce using rule 223 (columnName -> ID .)
    R_ISNULL        reduce using rule 223 (columnName -> ID .)
    R_NOTNULL       reduce using rule 223 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 223 (columnName -> ID .)
    R_LIKE          reduce using rule 223 (columnName -> ID .)
    R_AS            reduce using rule 223 (columnName -> ID .)
    ID              reduce using rule 223 (columnName -> ID .)
    STRING          reduce using rule 223 (columnName -> ID .)
    CHARACTER       reduce using rule 223 (columnName -> ID .)
    S_COMA          reduce using rule 223 (columnName -> ID .)
    R_FROM          reduce using rule 223 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 223 (columnName -> ID .)
    R_UNION         reduce using rule 223 (columnName -> ID .)
    R_INTERSECT     reduce using rule 223 (columnName -> ID .)
    R_EXCEPT        reduce using rule 223 (columnName -> ID .)
    R_AND           reduce using rule 223 (columnName -> ID .)
    R_OR            reduce using rule 223 (columnName -> ID .)
    R_GROUP         reduce using rule 223 (columnName -> ID .)
    R_ORDER         reduce using rule 223 (columnName -> ID .)
    R_LIMIT         reduce using rule 223 (columnName -> ID .)
    R_THEN          reduce using rule 223 (columnName -> ID .)
    R_NATURAL       reduce using rule 223 (columnName -> ID .)
    R_INNER         reduce using rule 223 (columnName -> ID .)
    R_LEFT          reduce using rule 223 (columnName -> ID .)
    R_RIGHT         reduce using rule 223 (columnName -> ID .)
    R_FULL          reduce using rule 223 (columnName -> ID .)
    R_WHERE         reduce using rule 223 (columnName -> ID .)
    R_ALL           reduce using rule 223 (columnName -> ID .)
    R_ANY           reduce using rule 223 (columnName -> ID .)
    R_SOME          reduce using rule 223 (columnName -> ID .)
    S_PUNTO         shift and go to state 285
    S_PARIZQ        shift and go to state 143
=======
    (233) columnName -> ID .
    (234) columnName -> ID . S_PUNTO ID
    (109) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (110) funcCall -> ID . S_PARIZQ S_PARDER

    S_PARDER        reduce using rule 233 (columnName -> ID .)
    O_SUMA          reduce using rule 233 (columnName -> ID .)
    O_RESTA         reduce using rule 233 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 233 (columnName -> ID .)
    O_DIVISION      reduce using rule 233 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 233 (columnName -> ID .)
    O_MODULAR       reduce using rule 233 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 233 (columnName -> ID .)
    R_IN            reduce using rule 233 (columnName -> ID .)
    R_NOT           reduce using rule 233 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 233 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 233 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 233 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 233 (columnName -> ID .)
    S_IGUAL         reduce using rule 233 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 233 (columnName -> ID .)
    R_IS            reduce using rule 233 (columnName -> ID .)
    R_BETWEEN       reduce using rule 233 (columnName -> ID .)
    R_ISNULL        reduce using rule 233 (columnName -> ID .)
    R_NOTNULL       reduce using rule 233 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 233 (columnName -> ID .)
    R_LIKE          reduce using rule 233 (columnName -> ID .)
    R_AS            reduce using rule 233 (columnName -> ID .)
    ID              reduce using rule 233 (columnName -> ID .)
    STRING          reduce using rule 233 (columnName -> ID .)
    CHARACTER       reduce using rule 233 (columnName -> ID .)
    S_COMA          reduce using rule 233 (columnName -> ID .)
    R_FROM          reduce using rule 233 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 233 (columnName -> ID .)
    R_UNION         reduce using rule 233 (columnName -> ID .)
    R_INTERSECT     reduce using rule 233 (columnName -> ID .)
    R_EXCEPT        reduce using rule 233 (columnName -> ID .)
    R_AND           reduce using rule 233 (columnName -> ID .)
    R_OR            reduce using rule 233 (columnName -> ID .)
    R_GROUP         reduce using rule 233 (columnName -> ID .)
    R_LIMIT         reduce using rule 233 (columnName -> ID .)
    R_ORDER         reduce using rule 233 (columnName -> ID .)
    R_THEN          reduce using rule 233 (columnName -> ID .)
    R_NATURAL       reduce using rule 233 (columnName -> ID .)
    R_INNER         reduce using rule 233 (columnName -> ID .)
    R_LEFT          reduce using rule 233 (columnName -> ID .)
    R_RIGHT         reduce using rule 233 (columnName -> ID .)
    R_FULL          reduce using rule 233 (columnName -> ID .)
    R_WHERE         reduce using rule 233 (columnName -> ID .)
    R_ALL           reduce using rule 233 (columnName -> ID .)
    R_ANY           reduce using rule 233 (columnName -> ID .)
    R_SOME          reduce using rule 233 (columnName -> ID .)
    S_PUNTO         shift and go to state 284
    S_PARIZQ        shift and go to state 142


state 172

    (160) datatype -> O_SUMA datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 160 (datatype -> O_SUMA datatype .)
    O_RESTA         reduce using rule 160 (datatype -> O_SUMA datatype .)
    O_PRODUCTO      reduce using rule 160 (datatype -> O_SUMA datatype .)
    O_DIVISION      reduce using rule 160 (datatype -> O_SUMA datatype .)
    O_MODULAR       reduce using rule 160 (datatype -> O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_IN            reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_NOT           reduce using rule 160 (datatype -> O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 160 (datatype -> O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 160 (datatype -> O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 160 (datatype -> O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 160 (datatype -> O_SUMA datatype .)
    S_IGUAL         reduce using rule 160 (datatype -> O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_IS            reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_BETWEEN       reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_ISNULL        reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_NOTNULL       reduce using rule 160 (datatype -> O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_AS            reduce using rule 160 (datatype -> O_SUMA datatype .)
    ID              reduce using rule 160 (datatype -> O_SUMA datatype .)
    STRING          reduce using rule 160 (datatype -> O_SUMA datatype .)
    CHARACTER       reduce using rule 160 (datatype -> O_SUMA datatype .)
    S_COMA          reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_FROM          reduce using rule 160 (datatype -> O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_UNION         reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_INTERSECT     reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_EXCEPT        reduce using rule 160 (datatype -> O_SUMA datatype .)
    S_PARDER        reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_AND           reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_OR            reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_GROUP         reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_LIMIT         reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_ORDER         reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_THEN          reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_NATURAL       reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_INNER         reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_LEFT          reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_RIGHT         reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_FULL          reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_WHERE         reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_ALL           reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_ANY           reduce using rule 160 (datatype -> O_SUMA datatype .)
    R_SOME          reduce using rule 160 (datatype -> O_SUMA datatype .)
    O_EXPONENTE     shift and go to state 147

  ! O_EXPONENTE     [ reduce using rule 160 (datatype -> O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 143 ]
  ! O_RESTA         [ shift and go to state 144 ]
  ! O_PRODUCTO      [ shift and go to state 145 ]
  ! O_DIVISION      [ shift and go to state 146 ]
  ! O_MODULAR       [ shift and go to state 148 ]
  ! OC_CONCATENAR   [ shift and go to state 149 ]
>>>>>>> main


state 173

<<<<<<< HEAD
    (150) datatype -> O_SUMA datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 150 (datatype -> O_SUMA datatype .)
    O_RESTA         reduce using rule 150 (datatype -> O_SUMA datatype .)
    O_PRODUCTO      reduce using rule 150 (datatype -> O_SUMA datatype .)
    O_DIVISION      reduce using rule 150 (datatype -> O_SUMA datatype .)
    O_MODULAR       reduce using rule 150 (datatype -> O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_IN            reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_NOT           reduce using rule 150 (datatype -> O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 150 (datatype -> O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 150 (datatype -> O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 150 (datatype -> O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 150 (datatype -> O_SUMA datatype .)
    S_IGUAL         reduce using rule 150 (datatype -> O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_IS            reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_BETWEEN       reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_ISNULL        reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_NOTNULL       reduce using rule 150 (datatype -> O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_AS            reduce using rule 150 (datatype -> O_SUMA datatype .)
    ID              reduce using rule 150 (datatype -> O_SUMA datatype .)
    STRING          reduce using rule 150 (datatype -> O_SUMA datatype .)
    CHARACTER       reduce using rule 150 (datatype -> O_SUMA datatype .)
    S_COMA          reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_FROM          reduce using rule 150 (datatype -> O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_UNION         reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_INTERSECT     reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_EXCEPT        reduce using rule 150 (datatype -> O_SUMA datatype .)
    S_PARDER        reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_AND           reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_OR            reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_GROUP         reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_ORDER         reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_LIMIT         reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_THEN          reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_NATURAL       reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_INNER         reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_LEFT          reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_RIGHT         reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_FULL          reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_WHERE         reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_ALL           reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_ANY           reduce using rule 150 (datatype -> O_SUMA datatype .)
    R_SOME          reduce using rule 150 (datatype -> O_SUMA datatype .)
    O_EXPONENTE     shift and go to state 148

  ! O_EXPONENTE     [ reduce using rule 150 (datatype -> O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 144 ]
  ! O_RESTA         [ shift and go to state 145 ]
  ! O_PRODUCTO      [ shift and go to state 146 ]
  ! O_DIVISION      [ shift and go to state 147 ]
  ! O_MODULAR       [ shift and go to state 149 ]
  ! OC_CONCATENAR   [ shift and go to state 150 ]
=======
    (161) datatype -> columnName .

    O_SUMA          reduce using rule 161 (datatype -> columnName .)
    O_RESTA         reduce using rule 161 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 161 (datatype -> columnName .)
    O_DIVISION      reduce using rule 161 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 161 (datatype -> columnName .)
    O_MODULAR       reduce using rule 161 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 161 (datatype -> columnName .)
    R_IN            reduce using rule 161 (datatype -> columnName .)
    R_NOT           reduce using rule 161 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 161 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 161 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 161 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 161 (datatype -> columnName .)
    S_IGUAL         reduce using rule 161 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 161 (datatype -> columnName .)
    R_IS            reduce using rule 161 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 161 (datatype -> columnName .)
    R_ISNULL        reduce using rule 161 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 161 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 161 (datatype -> columnName .)
    R_AS            reduce using rule 161 (datatype -> columnName .)
    ID              reduce using rule 161 (datatype -> columnName .)
    STRING          reduce using rule 161 (datatype -> columnName .)
    CHARACTER       reduce using rule 161 (datatype -> columnName .)
    S_COMA          reduce using rule 161 (datatype -> columnName .)
    R_FROM          reduce using rule 161 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 161 (datatype -> columnName .)
    R_UNION         reduce using rule 161 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 161 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 161 (datatype -> columnName .)
    S_PARDER        reduce using rule 161 (datatype -> columnName .)
    R_AND           reduce using rule 161 (datatype -> columnName .)
    R_OR            reduce using rule 161 (datatype -> columnName .)
    R_GROUP         reduce using rule 161 (datatype -> columnName .)
    R_LIMIT         reduce using rule 161 (datatype -> columnName .)
    R_ORDER         reduce using rule 161 (datatype -> columnName .)
    R_THEN          reduce using rule 161 (datatype -> columnName .)
    R_NATURAL       reduce using rule 161 (datatype -> columnName .)
    R_INNER         reduce using rule 161 (datatype -> columnName .)
    R_LEFT          reduce using rule 161 (datatype -> columnName .)
    R_RIGHT         reduce using rule 161 (datatype -> columnName .)
    R_FULL          reduce using rule 161 (datatype -> columnName .)
    R_WHERE         reduce using rule 161 (datatype -> columnName .)
    R_ALL           reduce using rule 161 (datatype -> columnName .)
    R_ANY           reduce using rule 161 (datatype -> columnName .)
    R_SOME          reduce using rule 161 (datatype -> columnName .)
>>>>>>> main


state 174

<<<<<<< HEAD
    (151) datatype -> columnName .

    O_SUMA          reduce using rule 151 (datatype -> columnName .)
    O_RESTA         reduce using rule 151 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 151 (datatype -> columnName .)
    O_DIVISION      reduce using rule 151 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 151 (datatype -> columnName .)
    O_MODULAR       reduce using rule 151 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 151 (datatype -> columnName .)
    R_IN            reduce using rule 151 (datatype -> columnName .)
    R_NOT           reduce using rule 151 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 151 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 151 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 151 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 151 (datatype -> columnName .)
    S_IGUAL         reduce using rule 151 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 151 (datatype -> columnName .)
    R_IS            reduce using rule 151 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 151 (datatype -> columnName .)
    R_ISNULL        reduce using rule 151 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 151 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 151 (datatype -> columnName .)
    R_AS            reduce using rule 151 (datatype -> columnName .)
    ID              reduce using rule 151 (datatype -> columnName .)
    STRING          reduce using rule 151 (datatype -> columnName .)
    CHARACTER       reduce using rule 151 (datatype -> columnName .)
    S_COMA          reduce using rule 151 (datatype -> columnName .)
    R_FROM          reduce using rule 151 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 151 (datatype -> columnName .)
    R_UNION         reduce using rule 151 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 151 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 151 (datatype -> columnName .)
    S_PARDER        reduce using rule 151 (datatype -> columnName .)
    R_AND           reduce using rule 151 (datatype -> columnName .)
    R_OR            reduce using rule 151 (datatype -> columnName .)
    R_GROUP         reduce using rule 151 (datatype -> columnName .)
    R_ORDER         reduce using rule 151 (datatype -> columnName .)
    R_LIMIT         reduce using rule 151 (datatype -> columnName .)
    R_THEN          reduce using rule 151 (datatype -> columnName .)
    R_NATURAL       reduce using rule 151 (datatype -> columnName .)
    R_INNER         reduce using rule 151 (datatype -> columnName .)
    R_LEFT          reduce using rule 151 (datatype -> columnName .)
    R_RIGHT         reduce using rule 151 (datatype -> columnName .)
    R_FULL          reduce using rule 151 (datatype -> columnName .)
    R_WHERE         reduce using rule 151 (datatype -> columnName .)
    R_ALL           reduce using rule 151 (datatype -> columnName .)
    R_ANY           reduce using rule 151 (datatype -> columnName .)
    R_SOME          reduce using rule 151 (datatype -> columnName .)


state 175

    (157) datatype -> S_PARIZQ . datatype S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 286
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 176

    (128) literal -> STRING .

    O_SUMA          reduce using rule 128 (literal -> STRING .)
    O_RESTA         reduce using rule 128 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 128 (literal -> STRING .)
    O_DIVISION      reduce using rule 128 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 128 (literal -> STRING .)
    O_MODULAR       reduce using rule 128 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 128 (literal -> STRING .)
    R_IN            reduce using rule 128 (literal -> STRING .)
    R_NOT           reduce using rule 128 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 128 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 128 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 128 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 128 (literal -> STRING .)
    S_IGUAL         reduce using rule 128 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 128 (literal -> STRING .)
    R_IS            reduce using rule 128 (literal -> STRING .)
    R_BETWEEN       reduce using rule 128 (literal -> STRING .)
    R_ISNULL        reduce using rule 128 (literal -> STRING .)
    R_NOTNULL       reduce using rule 128 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 128 (literal -> STRING .)
    R_AS            reduce using rule 128 (literal -> STRING .)
    ID              reduce using rule 128 (literal -> STRING .)
    STRING          reduce using rule 128 (literal -> STRING .)
    CHARACTER       reduce using rule 128 (literal -> STRING .)
    S_COMA          reduce using rule 128 (literal -> STRING .)
    R_FROM          reduce using rule 128 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 128 (literal -> STRING .)
    R_UNION         reduce using rule 128 (literal -> STRING .)
    R_INTERSECT     reduce using rule 128 (literal -> STRING .)
    R_EXCEPT        reduce using rule 128 (literal -> STRING .)
    S_PARDER        reduce using rule 128 (literal -> STRING .)
    R_AND           reduce using rule 128 (literal -> STRING .)
    R_OR            reduce using rule 128 (literal -> STRING .)
    R_GROUP         reduce using rule 128 (literal -> STRING .)
    R_ORDER         reduce using rule 128 (literal -> STRING .)
    R_LIMIT         reduce using rule 128 (literal -> STRING .)
    R_THEN          reduce using rule 128 (literal -> STRING .)
    R_NATURAL       reduce using rule 128 (literal -> STRING .)
    R_INNER         reduce using rule 128 (literal -> STRING .)
    R_LEFT          reduce using rule 128 (literal -> STRING .)
    R_RIGHT         reduce using rule 128 (literal -> STRING .)
    R_FULL          reduce using rule 128 (literal -> STRING .)
    R_WHERE         reduce using rule 128 (literal -> STRING .)
    R_ALL           reduce using rule 128 (literal -> STRING .)
    R_ANY           reduce using rule 128 (literal -> STRING .)
    R_SOME          reduce using rule 128 (literal -> STRING .)
    R_END           reduce using rule 128 (literal -> STRING .)
    R_ELSE          reduce using rule 128 (literal -> STRING .)
    R_WHEN          reduce using rule 128 (literal -> STRING .)
    R_DEFAULT       reduce using rule 128 (literal -> STRING .)
    R_NULL          reduce using rule 128 (literal -> STRING .)
    R_PRIMARY       reduce using rule 128 (literal -> STRING .)
    R_REFERENCES    reduce using rule 128 (literal -> STRING .)
    R_CONSTRAINT    reduce using rule 128 (literal -> STRING .)
    R_UNIQUE        reduce using rule 128 (literal -> STRING .)
    R_CHECK         reduce using rule 128 (literal -> STRING .)
=======
    (167) datatype -> S_PARIZQ . datatype S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 285
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 175

    (138) literal -> STRING .

    O_SUMA          reduce using rule 138 (literal -> STRING .)
    O_RESTA         reduce using rule 138 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 138 (literal -> STRING .)
    O_DIVISION      reduce using rule 138 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 138 (literal -> STRING .)
    O_MODULAR       reduce using rule 138 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 138 (literal -> STRING .)
    R_IN            reduce using rule 138 (literal -> STRING .)
    R_NOT           reduce using rule 138 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 138 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 138 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 138 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 138 (literal -> STRING .)
    S_IGUAL         reduce using rule 138 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 138 (literal -> STRING .)
    R_IS            reduce using rule 138 (literal -> STRING .)
    R_BETWEEN       reduce using rule 138 (literal -> STRING .)
    R_ISNULL        reduce using rule 138 (literal -> STRING .)
    R_NOTNULL       reduce using rule 138 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 138 (literal -> STRING .)
    R_AS            reduce using rule 138 (literal -> STRING .)
    ID              reduce using rule 138 (literal -> STRING .)
    STRING          reduce using rule 138 (literal -> STRING .)
    CHARACTER       reduce using rule 138 (literal -> STRING .)
    S_COMA          reduce using rule 138 (literal -> STRING .)
    R_FROM          reduce using rule 138 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 138 (literal -> STRING .)
    R_UNION         reduce using rule 138 (literal -> STRING .)
    R_INTERSECT     reduce using rule 138 (literal -> STRING .)
    R_EXCEPT        reduce using rule 138 (literal -> STRING .)
    S_PARDER        reduce using rule 138 (literal -> STRING .)
    R_AND           reduce using rule 138 (literal -> STRING .)
    R_OR            reduce using rule 138 (literal -> STRING .)
    R_GROUP         reduce using rule 138 (literal -> STRING .)
    R_LIMIT         reduce using rule 138 (literal -> STRING .)
    R_ORDER         reduce using rule 138 (literal -> STRING .)
    R_THEN          reduce using rule 138 (literal -> STRING .)
    R_NATURAL       reduce using rule 138 (literal -> STRING .)
    R_INNER         reduce using rule 138 (literal -> STRING .)
    R_LEFT          reduce using rule 138 (literal -> STRING .)
    R_RIGHT         reduce using rule 138 (literal -> STRING .)
    R_FULL          reduce using rule 138 (literal -> STRING .)
    R_WHERE         reduce using rule 138 (literal -> STRING .)
    R_ALL           reduce using rule 138 (literal -> STRING .)
    R_ANY           reduce using rule 138 (literal -> STRING .)
    R_SOME          reduce using rule 138 (literal -> STRING .)
    R_END           reduce using rule 138 (literal -> STRING .)
    R_ELSE          reduce using rule 138 (literal -> STRING .)
    R_WHEN          reduce using rule 138 (literal -> STRING .)
    R_DEFAULT       reduce using rule 138 (literal -> STRING .)
    R_NULL          reduce using rule 138 (literal -> STRING .)
    R_PRIMARY       reduce using rule 138 (literal -> STRING .)
    R_REFERENCES    reduce using rule 138 (literal -> STRING .)
    R_CONSTRAINT    reduce using rule 138 (literal -> STRING .)
    R_UNIQUE        reduce using rule 138 (literal -> STRING .)
    R_CHECK         reduce using rule 138 (literal -> STRING .)


state 176

    (159) datatype -> O_RESTA datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 159 (datatype -> O_RESTA datatype .)
    O_RESTA         reduce using rule 159 (datatype -> O_RESTA datatype .)
    O_PRODUCTO      reduce using rule 159 (datatype -> O_RESTA datatype .)
    O_DIVISION      reduce using rule 159 (datatype -> O_RESTA datatype .)
    O_MODULAR       reduce using rule 159 (datatype -> O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_IN            reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_NOT           reduce using rule 159 (datatype -> O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 159 (datatype -> O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 159 (datatype -> O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 159 (datatype -> O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 159 (datatype -> O_RESTA datatype .)
    S_IGUAL         reduce using rule 159 (datatype -> O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_IS            reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_BETWEEN       reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_ISNULL        reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_NOTNULL       reduce using rule 159 (datatype -> O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_AS            reduce using rule 159 (datatype -> O_RESTA datatype .)
    ID              reduce using rule 159 (datatype -> O_RESTA datatype .)
    STRING          reduce using rule 159 (datatype -> O_RESTA datatype .)
    CHARACTER       reduce using rule 159 (datatype -> O_RESTA datatype .)
    S_COMA          reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_FROM          reduce using rule 159 (datatype -> O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_UNION         reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_INTERSECT     reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_EXCEPT        reduce using rule 159 (datatype -> O_RESTA datatype .)
    S_PARDER        reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_AND           reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_OR            reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_GROUP         reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_LIMIT         reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_ORDER         reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_THEN          reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_NATURAL       reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_INNER         reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_LEFT          reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_RIGHT         reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_FULL          reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_WHERE         reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_ALL           reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_ANY           reduce using rule 159 (datatype -> O_RESTA datatype .)
    R_SOME          reduce using rule 159 (datatype -> O_RESTA datatype .)
    O_EXPONENTE     shift and go to state 147

  ! O_EXPONENTE     [ reduce using rule 159 (datatype -> O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 143 ]
  ! O_RESTA         [ shift and go to state 144 ]
  ! O_PRODUCTO      [ shift and go to state 145 ]
  ! O_DIVISION      [ shift and go to state 146 ]
  ! O_MODULAR       [ shift and go to state 148 ]
  ! OC_CONCATENAR   [ shift and go to state 149 ]
>>>>>>> main


state 177

<<<<<<< HEAD
    (149) datatype -> O_RESTA datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 149 (datatype -> O_RESTA datatype .)
    O_RESTA         reduce using rule 149 (datatype -> O_RESTA datatype .)
    O_PRODUCTO      reduce using rule 149 (datatype -> O_RESTA datatype .)
    O_DIVISION      reduce using rule 149 (datatype -> O_RESTA datatype .)
    O_MODULAR       reduce using rule 149 (datatype -> O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_IN            reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_NOT           reduce using rule 149 (datatype -> O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 149 (datatype -> O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 149 (datatype -> O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 149 (datatype -> O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 149 (datatype -> O_RESTA datatype .)
    S_IGUAL         reduce using rule 149 (datatype -> O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_IS            reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_BETWEEN       reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_ISNULL        reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_NOTNULL       reduce using rule 149 (datatype -> O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_AS            reduce using rule 149 (datatype -> O_RESTA datatype .)
    ID              reduce using rule 149 (datatype -> O_RESTA datatype .)
    STRING          reduce using rule 149 (datatype -> O_RESTA datatype .)
    CHARACTER       reduce using rule 149 (datatype -> O_RESTA datatype .)
    S_COMA          reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_FROM          reduce using rule 149 (datatype -> O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_UNION         reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_INTERSECT     reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_EXCEPT        reduce using rule 149 (datatype -> O_RESTA datatype .)
    S_PARDER        reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_AND           reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_OR            reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_GROUP         reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_ORDER         reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_LIMIT         reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_THEN          reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_NATURAL       reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_INNER         reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_LEFT          reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_RIGHT         reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_FULL          reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_WHERE         reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_ALL           reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_ANY           reduce using rule 149 (datatype -> O_RESTA datatype .)
    R_SOME          reduce using rule 149 (datatype -> O_RESTA datatype .)
    O_EXPONENTE     shift and go to state 148

  ! O_EXPONENTE     [ reduce using rule 149 (datatype -> O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 144 ]
  ! O_RESTA         [ shift and go to state 145 ]
  ! O_PRODUCTO      [ shift and go to state 146 ]
  ! O_DIVISION      [ shift and go to state 147 ]
  ! O_MODULAR       [ shift and go to state 149 ]
  ! OC_CONCATENAR   [ shift and go to state 150 ]

=======
    (153) datatype -> R_CASE caseList . optElse R_END
    (154) caseList -> caseList . caseWhen
    (157) optElse -> . R_ELSE literal
    (158) optElse -> .
    (156) caseWhen -> . R_WHEN expBool R_THEN literal
>>>>>>> main

    R_ELSE          shift and go to state 288
    R_END           reduce using rule 158 (optElse -> .)
    R_WHEN          shift and go to state 179

<<<<<<< HEAD
    (143) datatype -> R_CASE caseList . optElse R_END
    (144) caseList -> caseList . caseWhen
    (147) optElse -> . R_ELSE literal
    (148) optElse -> .
    (146) caseWhen -> . R_WHEN expBool R_THEN literal

    R_ELSE          shift and go to state 289
    R_END           reduce using rule 148 (optElse -> .)
    R_WHEN          shift and go to state 180

    optElse                        shift and go to state 287
    caseWhen                       shift and go to state 288

state 179

    (145) caseList -> caseWhen .

    R_ELSE          reduce using rule 145 (caseList -> caseWhen .)
    R_WHEN          reduce using rule 145 (caseList -> caseWhen .)
    R_END           reduce using rule 145 (caseList -> caseWhen .)


state 180

    (146) caseWhen -> R_WHEN . expBool R_THEN literal
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 82
    S_PARIZQ        shift and go to state 182
    R_EXISTS        shift and go to state 100
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 290
    literal                        shift and go to state 77
    boolean                        shift and go to state 83
    datatype                       shift and go to state 183
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    columnName                     shift and go to state 76
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    stringExp                      shift and go to state 105
    timeStamp                      shift and go to state 96

state 181

    (213) expBool -> R_NOT expBool .
    (211) expBool -> expBool . R_AND expBool
    (212) expBool -> expBool . R_OR expBool
    (215) expBool -> expBool . optBoolPredicate
    (217) optBoolPredicate -> . R_IS R_TRUE
    (218) optBoolPredicate -> . R_IS R_FALSE
    (219) optBoolPredicate -> . R_IS R_UNKNOWN
    (220) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (221) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (222) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 213 (expBool -> R_NOT expBool .)
    ID              reduce using rule 213 (expBool -> R_NOT expBool .)
    STRING          reduce using rule 213 (expBool -> R_NOT expBool .)
    CHARACTER       reduce using rule 213 (expBool -> R_NOT expBool .)
    S_COMA          reduce using rule 213 (expBool -> R_NOT expBool .)
    R_FROM          reduce using rule 213 (expBool -> R_NOT expBool .)
    S_PUNTOCOMA     reduce using rule 213 (expBool -> R_NOT expBool .)
    R_UNION         reduce using rule 213 (expBool -> R_NOT expBool .)
    R_INTERSECT     reduce using rule 213 (expBool -> R_NOT expBool .)
    R_EXCEPT        reduce using rule 213 (expBool -> R_NOT expBool .)
    S_PARDER        reduce using rule 213 (expBool -> R_NOT expBool .)
    R_GROUP         reduce using rule 213 (expBool -> R_NOT expBool .)
    R_ORDER         reduce using rule 213 (expBool -> R_NOT expBool .)
    R_LIMIT         reduce using rule 213 (expBool -> R_NOT expBool .)
    R_THEN          reduce using rule 213 (expBool -> R_NOT expBool .)
    R_NATURAL       reduce using rule 213 (expBool -> R_NOT expBool .)
    R_INNER         reduce using rule 213 (expBool -> R_NOT expBool .)
    R_LEFT          reduce using rule 213 (expBool -> R_NOT expBool .)
    R_RIGHT         reduce using rule 213 (expBool -> R_NOT expBool .)
    R_FULL          reduce using rule 213 (expBool -> R_NOT expBool .)
    R_WHERE         reduce using rule 213 (expBool -> R_NOT expBool .)
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

  ! R_AND           [ reduce using rule 213 (expBool -> R_NOT expBool .) ]
  ! R_OR            [ reduce using rule 213 (expBool -> R_NOT expBool .) ]
  ! R_IS            [ reduce using rule 213 (expBool -> R_NOT expBool .) ]

    optBoolPredicate               shift and go to state 166

state 182

    (214) expBool -> S_PARIZQ . expBool S_PARDER
    (157) datatype -> S_PARIZQ . datatype S_PARDER
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName

    R_NOT           shift and go to state 82
    S_PARIZQ        shift and go to state 182
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    R_EXISTS        shift and go to state 100
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 171
    datatype                       shift and go to state 170
    boolean                        shift and go to state 83
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    timeStamp                      shift and go to state 96
    stringExp                      shift and go to state 105

state 183

    (207) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype
    (158) expComp -> datatype . OL_MENORQUE datatype
    (159) expComp -> datatype . OL_MAYORQUE datatype
    (160) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (161) expComp -> datatype . OL_MENORIGUALQUE datatype
    (162) expComp -> datatype . S_IGUAL datatype
    (163) expComp -> datatype . OL_DISTINTODE datatype
    (164) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (167) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> datatype . R_ISNULL
    (170) expComp -> datatype . R_NOTNULL
    (171) expComp -> datatype . R_IS R_NULL
    (172) expComp -> datatype . R_IS R_TRUE
    (173) expComp -> datatype . R_IS R_FALSE
    (174) expComp -> datatype . R_IS R_UNKNOWN
    (175) expComp -> datatype . R_IS R_NOT R_NULL
    (176) expComp -> datatype . R_IS R_NOT R_TRUE
    (177) expComp -> datatype . R_IS R_NOT R_FALSE
    (178) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (179) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 151
    R_NOT           shift and go to state 152
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
    OL_MENORQUE     shift and go to state 153
    OL_MAYORQUE     shift and go to state 154
    OL_MAYORIGUALQUE shift and go to state 155
    OL_MENORIGUALQUE shift and go to state 156
    S_IGUAL         shift and go to state 157
    OL_DISTINTODE   shift and go to state 158
    R_IS            shift and go to state 159
    R_BETWEEN       shift and go to state 160
    R_ISNULL        shift and go to state 161
    R_NOTNULL       shift and go to state 162
    OL_ESIGUAL      shift and go to state 163

=======
    optElse                        shift and go to state 286
    caseWhen                       shift and go to state 287

state 178

    (155) caseList -> caseWhen .

    R_ELSE          reduce using rule 155 (caseList -> caseWhen .)
    R_WHEN          reduce using rule 155 (caseList -> caseWhen .)
    R_END           reduce using rule 155 (caseList -> caseWhen .)


state 179

    (156) caseWhen -> R_WHEN . expBool R_THEN literal
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 81
    S_PARIZQ        shift and go to state 181
    R_EXISTS        shift and go to state 99
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    expBool                        shift and go to state 289
    literal                        shift and go to state 76
    boolean                        shift and go to state 82
    datatype                       shift and go to state 182
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    columnName                     shift and go to state 75
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    stringExp                      shift and go to state 104
    timeStamp                      shift and go to state 95

state 180

    (223) expBool -> R_NOT expBool .
    (221) expBool -> expBool . R_AND expBool
    (222) expBool -> expBool . R_OR expBool
    (225) expBool -> expBool . optBoolPredicate
    (227) optBoolPredicate -> . R_IS R_TRUE
    (228) optBoolPredicate -> . R_IS R_FALSE
    (229) optBoolPredicate -> . R_IS R_UNKNOWN
    (230) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (231) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (232) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 223 (expBool -> R_NOT expBool .)
    ID              reduce using rule 223 (expBool -> R_NOT expBool .)
    STRING          reduce using rule 223 (expBool -> R_NOT expBool .)
    CHARACTER       reduce using rule 223 (expBool -> R_NOT expBool .)
    S_COMA          reduce using rule 223 (expBool -> R_NOT expBool .)
    R_FROM          reduce using rule 223 (expBool -> R_NOT expBool .)
    S_PUNTOCOMA     reduce using rule 223 (expBool -> R_NOT expBool .)
    R_UNION         reduce using rule 223 (expBool -> R_NOT expBool .)
    R_INTERSECT     reduce using rule 223 (expBool -> R_NOT expBool .)
    R_EXCEPT        reduce using rule 223 (expBool -> R_NOT expBool .)
    S_PARDER        reduce using rule 223 (expBool -> R_NOT expBool .)
    R_GROUP         reduce using rule 223 (expBool -> R_NOT expBool .)
    R_LIMIT         reduce using rule 223 (expBool -> R_NOT expBool .)
    R_ORDER         reduce using rule 223 (expBool -> R_NOT expBool .)
    R_THEN          reduce using rule 223 (expBool -> R_NOT expBool .)
    R_NATURAL       reduce using rule 223 (expBool -> R_NOT expBool .)
    R_INNER         reduce using rule 223 (expBool -> R_NOT expBool .)
    R_LEFT          reduce using rule 223 (expBool -> R_NOT expBool .)
    R_RIGHT         reduce using rule 223 (expBool -> R_NOT expBool .)
    R_FULL          reduce using rule 223 (expBool -> R_NOT expBool .)
    R_WHERE         reduce using rule 223 (expBool -> R_NOT expBool .)
    R_AND           shift and go to state 163
    R_OR            shift and go to state 164
    R_IS            shift and go to state 166

  ! R_AND           [ reduce using rule 223 (expBool -> R_NOT expBool .) ]
  ! R_OR            [ reduce using rule 223 (expBool -> R_NOT expBool .) ]
  ! R_IS            [ reduce using rule 223 (expBool -> R_NOT expBool .) ]

    optBoolPredicate               shift and go to state 165

state 181

    (224) expBool -> S_PARIZQ . expBool S_PARDER
    (167) datatype -> S_PARIZQ . datatype S_PARDER
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName

    R_NOT           shift and go to state 81
    S_PARIZQ        shift and go to state 181
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    R_EXISTS        shift and go to state 99
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    expBool                        shift and go to state 170
    datatype                       shift and go to state 169
    boolean                        shift and go to state 82
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    timeStamp                      shift and go to state 95
    stringExp                      shift and go to state 104

state 182

    (217) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype
    (168) expComp -> datatype . OL_MENORQUE datatype
    (169) expComp -> datatype . OL_MAYORQUE datatype
    (170) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (171) expComp -> datatype . OL_MENORIGUALQUE datatype
    (172) expComp -> datatype . S_IGUAL datatype
    (173) expComp -> datatype . OL_DISTINTODE datatype
    (174) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (177) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> datatype . R_ISNULL
    (180) expComp -> datatype . R_NOTNULL
    (181) expComp -> datatype . R_IS R_NULL
    (182) expComp -> datatype . R_IS R_TRUE
    (183) expComp -> datatype . R_IS R_FALSE
    (184) expComp -> datatype . R_IS R_UNKNOWN
    (185) expComp -> datatype . R_IS R_NOT R_NULL
    (186) expComp -> datatype . R_IS R_NOT R_TRUE
    (187) expComp -> datatype . R_IS R_NOT R_FALSE
    (188) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (189) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 150
    R_NOT           shift and go to state 151
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
    OL_MENORQUE     shift and go to state 152
    OL_MAYORQUE     shift and go to state 153
    OL_MAYORIGUALQUE shift and go to state 154
    OL_MENORIGUALQUE shift and go to state 155
    S_IGUAL         shift and go to state 156
    OL_DISTINTODE   shift and go to state 157
    R_IS            shift and go to state 158
    R_BETWEEN       shift and go to state 159
    R_ISNULL        shift and go to state 160
    R_NOTNULL       shift and go to state 161
    OL_ESIGUAL      shift and go to state 162


state 183

    (111) funcCall -> R_NOW S_PARIZQ . S_PARDER
>>>>>>> main

    S_PARDER        shift and go to state 290

<<<<<<< HEAD
    (101) funcCall -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 291


state 185

    (102) funcCall -> R_COUNT S_PARIZQ . datatype S_PARDER
    (103) funcCall -> R_COUNT S_PARIZQ . O_PRODUCTO S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    O_PRODUCTO      shift and go to state 293
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 292
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 186

    (104) funcCall -> R_SUM S_PARIZQ . datatype S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 294
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 187

    (105) funcCall -> R_PROM S_PARIZQ . datatype S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 295
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 188

    (106) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM columnName S_PARDER
    (110) optsExtract -> . R_YEAR
    (111) optsExtract -> . R_MONTH
    (112) optsExtract -> . R_DAY
    (113) optsExtract -> . R_HOUR
    (114) optsExtract -> . R_MINUTE
    (115) optsExtract -> . R_SECOND

    R_YEAR          shift and go to state 297
    R_MONTH         shift and go to state 298
    R_DAY           shift and go to state 299
    R_HOUR          shift and go to state 300
    R_MINUTE        shift and go to state 301
    R_SECOND        shift and go to state 302

    optsExtract                    shift and go to state 296

state 189

    (116) datePart -> R_DATE_PART S_PARIZQ . STRING S_COMA dateSource S_PARDER

    STRING          shift and go to state 303


state 190

    (206) boolean -> R_EXISTS S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
=======

state 184

    (112) funcCall -> R_COUNT S_PARIZQ . datatype S_PARDER
    (113) funcCall -> R_COUNT S_PARIZQ . O_PRODUCTO S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    O_PRODUCTO      shift and go to state 292
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 291
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 185

    (114) funcCall -> R_SUM S_PARIZQ . datatype S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 293
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 186

    (115) funcCall -> R_PROM S_PARIZQ . datatype S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 294
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 187

    (116) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM columnName S_PARDER
    (120) optsExtract -> . R_YEAR
    (121) optsExtract -> . R_MONTH
    (122) optsExtract -> . R_DAY
    (123) optsExtract -> . R_HOUR
    (124) optsExtract -> . R_MINUTE
    (125) optsExtract -> . R_SECOND

    R_YEAR          shift and go to state 296
    R_MONTH         shift and go to state 297
    R_DAY           shift and go to state 298
    R_HOUR          shift and go to state 299
    R_MINUTE        shift and go to state 300
    R_SECOND        shift and go to state 301

    optsExtract                    shift and go to state 295

state 188

    (126) datePart -> R_DATE_PART S_PARIZQ . STRING S_COMA dateSource S_PARDER

    STRING          shift and go to state 302


state 189

    (216) boolean -> R_EXISTS S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams
>>>>>>> main

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

<<<<<<< HEAD
    selectStmt                     shift and go to state 304

state 191

    (108) timeStamp -> R_TIMESTAMP STRING .

    O_SUMA          reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    O_RESTA         reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    O_PRODUCTO      reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    O_DIVISION      reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    O_EXPONENTE     reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    O_MODULAR       reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    OC_CONCATENAR   reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_IN            reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOT           reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORQUE     reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORQUE     reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORIGUALQUE reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORIGUALQUE reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    S_IGUAL         reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    OL_DISTINTODE   reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_IS            reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_BETWEEN       reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_ISNULL        reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOTNULL       reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    OL_ESIGUAL      reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_AS            reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    ID              reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    STRING          reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    CHARACTER       reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    S_COMA          reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_FROM          reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    S_PUNTOCOMA     reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_UNION         reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_INTERSECT     reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_EXCEPT        reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    S_PARDER        reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_AND           reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_OR            reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_GROUP         reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_ORDER         reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_LIMIT         reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_THEN          reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_NATURAL       reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_INNER         reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_LEFT          reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_RIGHT         reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_FULL          reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_WHERE         reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_ALL           reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_ANY           reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)
    R_SOME          reduce using rule 108 (timeStamp -> R_TIMESTAMP STRING .)


state 192

    (109) timeStamp -> R_INTERVAL STRING .

    O_SUMA          reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    O_RESTA         reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    O_PRODUCTO      reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    O_DIVISION      reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    O_EXPONENTE     reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    O_MODULAR       reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    OC_CONCATENAR   reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_IN            reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_NOT           reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORQUE     reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORQUE     reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORIGUALQUE reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORIGUALQUE reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    S_IGUAL         reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    OL_DISTINTODE   reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_IS            reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_BETWEEN       reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_ISNULL        reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_NOTNULL       reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    OL_ESIGUAL      reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_AS            reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    ID              reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    STRING          reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    CHARACTER       reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    S_COMA          reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_FROM          reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    S_PUNTOCOMA     reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_UNION         reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_INTERSECT     reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_EXCEPT        reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    S_PARDER        reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_AND           reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_OR            reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_GROUP         reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_ORDER         reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_LIMIT         reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_THEN          reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_NATURAL       reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_INNER         reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_LEFT          reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_RIGHT         reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_FULL          reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_WHERE         reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_ALL           reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_ANY           reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)
    R_SOME          reduce using rule 109 (timeStamp -> R_INTERVAL STRING .)


state 193

    (200) expSubq -> stringExp R_LIKE . STRING

    STRING          shift and go to state 305


state 194
=======
    selectStmt                     shift and go to state 303

state 190

    (118) timeStamp -> R_TIMESTAMP STRING .

    O_SUMA          reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    O_RESTA         reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    O_PRODUCTO      reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    O_DIVISION      reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    O_EXPONENTE     reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    O_MODULAR       reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    OC_CONCATENAR   reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_IN            reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOT           reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORQUE     reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORQUE     reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORIGUALQUE reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORIGUALQUE reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    S_IGUAL         reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    OL_DISTINTODE   reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_IS            reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_BETWEEN       reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_ISNULL        reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOTNULL       reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    OL_ESIGUAL      reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_AS            reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    ID              reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    STRING          reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    CHARACTER       reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    S_COMA          reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_FROM          reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    S_PUNTOCOMA     reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_UNION         reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_INTERSECT     reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_EXCEPT        reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    S_PARDER        reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_AND           reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_OR            reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_GROUP         reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_LIMIT         reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_ORDER         reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_THEN          reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_NATURAL       reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_INNER         reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_LEFT          reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_RIGHT         reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_FULL          reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_WHERE         reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_ALL           reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_ANY           reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)
    R_SOME          reduce using rule 118 (timeStamp -> R_TIMESTAMP STRING .)


state 191

    (119) timeStamp -> R_INTERVAL STRING .

    O_SUMA          reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    O_RESTA         reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    O_PRODUCTO      reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    O_DIVISION      reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    O_EXPONENTE     reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    O_MODULAR       reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    OC_CONCATENAR   reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_IN            reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_NOT           reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORQUE     reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORQUE     reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORIGUALQUE reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORIGUALQUE reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    S_IGUAL         reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    OL_DISTINTODE   reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_IS            reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_BETWEEN       reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_ISNULL        reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_NOTNULL       reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    OL_ESIGUAL      reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_AS            reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    ID              reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    STRING          reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    CHARACTER       reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    S_COMA          reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_FROM          reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    S_PUNTOCOMA     reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_UNION         reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_INTERSECT     reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_EXCEPT        reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    S_PARDER        reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_AND           reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_OR            reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_GROUP         reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_LIMIT         reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_ORDER         reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_THEN          reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_NATURAL       reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_INNER         reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_LEFT          reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_RIGHT         reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_FULL          reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_WHERE         reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_ALL           reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_ANY           reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)
    R_SOME          reduce using rule 119 (timeStamp -> R_INTERVAL STRING .)


state 192

    (210) expSubq -> stringExp R_LIKE . STRING

    STRING          shift and go to state 304


state 193
>>>>>>> main

    (283) selectStmt -> selectStmt R_UNION allOpt selectStmt .
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 283 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_UNION         reduce using rule 283 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_INTERSECT     reduce using rule 283 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_EXCEPT        reduce using rule 283 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    S_PARDER        reduce using rule 283 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 37 ]
  ! R_INTERSECT     [ shift and go to state 38 ]
  ! R_EXCEPT        [ shift and go to state 39 ]


<<<<<<< HEAD
state 195
=======
state 194
>>>>>>> main

    (284) selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 284 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_UNION         reduce using rule 284 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 284 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 284 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    S_PARDER        reduce using rule 284 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 37 ]
  ! R_INTERSECT     [ shift and go to state 38 ]
  ! R_EXCEPT        [ shift and go to state 39 ]


<<<<<<< HEAD
state 196
=======
state 195
>>>>>>> main

    (285) selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 285 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_UNION         reduce using rule 285 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 285 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 285 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    S_PARDER        reduce using rule 285 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 37 ]
  ! R_INTERSECT     [ shift and go to state 38 ]
  ! R_EXCEPT        [ shift and go to state 39 ]


<<<<<<< HEAD
state 197

    (352) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ . params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (354) params_list -> . params_list param_item
    (355) params_list -> . param_item
    (356) param_item -> . R_NULL

    R_NULL          shift and go to state 308

    params_list                    shift and go to state 306
    param_item                     shift and go to state 307

state 198

    (20) createOpts -> R_TABLE ifNotExists idOrString . S_PARIZQ createTableList S_PARDER inheritsOpt

    S_PARIZQ        shift and go to state 309


state 199

    (25) ifNotExists -> R_IF R_NOT . R_EXISTS

    R_EXISTS        shift and go to state 310


state 200

    (21) createOpts -> orReplace R_DATABASE ifNotExists . idOrString createOwner createMode
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121
=======
state 196

    (19) createOpts -> unique_index R_INDEX ID . R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    R_ON            shift and go to state 305
>>>>>>> main

    idOrString                     shift and go to state 311

state 201

<<<<<<< HEAD
    (24) createOpts -> R_TYPE ifNotExists ID . R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    R_AS            shift and go to state 312
=======
    (30) createOpts -> R_TABLE ifNotExists idOrString . S_PARIZQ createTableList S_PARDER inheritsOpt

    S_PARIZQ        shift and go to state 306
>>>>>>> main


state 202

<<<<<<< HEAD
    (349) likeOpt -> R_LIKE STRING .

    S_PUNTOCOMA     reduce using rule 349 (likeOpt -> R_LIKE STRING .)
=======
    (35) ifNotExists -> R_IF R_NOT . R_EXISTS

    R_EXISTS        shift and go to state 307
>>>>>>> main


state 203

<<<<<<< HEAD
    (240) alterStmt -> R_ALTER R_DATABASE idOrString alterDb .

    S_PUNTOCOMA     reduce using rule 240 (alterStmt -> R_ALTER R_DATABASE idOrString alterDb .)
=======
    (31) createOpts -> orReplace R_DATABASE ifNotExists . idOrString createOwner createMode
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120
>>>>>>> main

    idOrString                     shift and go to state 308

state 204

<<<<<<< HEAD
    (242) alterDb -> R_RENAME . R_TO idOrString

    R_TO            shift and go to state 313
=======
    (34) createOpts -> R_TYPE ifNotExists ID . R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    R_AS            shift and go to state 309
>>>>>>> main


state 205

<<<<<<< HEAD
    (243) alterDb -> R_OWNER . R_TO ownerOPts

    R_TO            shift and go to state 314
=======
    (359) likeOpt -> R_LIKE STRING .

    S_PUNTOCOMA     reduce using rule 359 (likeOpt -> R_LIKE STRING .)
>>>>>>> main


state 206

<<<<<<< HEAD
    (250) alterTable -> R_ALTER . alterAlter
    (258) alterAlter -> . R_COLUMN ID R_SET nullOpt
    (259) alterAlter -> . R_COLUMN ID R_SET defaultVal
    (260) alterAlter -> . R_COLUMN ID R_TYPE types

    R_COLUMN        shift and go to state 316
=======
    (250) alterStmt -> R_ALTER R_DATABASE idOrString alterDb .

    S_PUNTOCOMA     reduce using rule 250 (alterStmt -> R_ALTER R_DATABASE idOrString alterDb .)
>>>>>>> main

    alterAlter                     shift and go to state 315

state 207

<<<<<<< HEAD
    (241) alterStmt -> R_ALTER R_TABLE idOrString alterTableList .
    (247) alterTableList -> alterTableList . S_COMA alterTable

    S_PUNTOCOMA     reduce using rule 241 (alterStmt -> R_ALTER R_TABLE idOrString alterTableList .)
    S_COMA          shift and go to state 317
=======
    (252) alterDb -> R_RENAME . R_TO idOrString

    R_TO            shift and go to state 310
>>>>>>> main


state 208

<<<<<<< HEAD
    (248) alterTableList -> alterTable .
=======
    (253) alterDb -> R_OWNER . R_TO ownerOPts

    R_TO            shift and go to state 311

>>>>>>> main

    S_COMA          reduce using rule 248 (alterTableList -> alterTable .)
    S_PUNTOCOMA     reduce using rule 248 (alterTableList -> alterTable .)

<<<<<<< HEAD

state 209

    (249) alterTable -> R_ADD . alterAdd
    (253) alterAdd -> . R_COLUMN ID types
    (254) alterAdd -> . createConstraint
    (255) alterAdd -> . createPrimary
    (256) alterAdd -> . createForeign
    (257) alterAdd -> . constrName R_UNIQUE S_PARIZQ ID S_PARDER
    (46) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (48) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (49) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (50) constrName -> . R_CONSTRAINT ID
    (51) constrName -> .

    R_COLUMN        shift and go to state 319
    R_PRIMARY       shift and go to state 324
    R_CONSTRAINT    shift and go to state 325
    R_UNIQUE        reduce using rule 51 (constrName -> .)
    R_CHECK         reduce using rule 51 (constrName -> .)
    R_FOREIGN       reduce using rule 51 (constrName -> .)

    alterAdd                       shift and go to state 318
    createConstraint               shift and go to state 320
    createPrimary                  shift and go to state 321
    createForeign                  shift and go to state 322
    constrName                     shift and go to state 323
=======
    (260) alterTable -> R_ALTER . alterAlter
    (268) alterAlter -> . R_COLUMN ID R_SET nullOpt
    (269) alterAlter -> . R_COLUMN ID R_SET defaultVal
    (270) alterAlter -> . R_COLUMN ID R_TYPE types

    R_COLUMN        shift and go to state 313

    alterAlter                     shift and go to state 312
>>>>>>> main

state 210

<<<<<<< HEAD
    (251) alterTable -> R_DROP . alterDrop
    (261) alterDrop -> . R_CONSTRAINT ID
    (262) alterDrop -> . R_COLUMN ID

    R_CONSTRAINT    shift and go to state 327
    R_COLUMN        shift and go to state 328

    alterDrop                      shift and go to state 326
=======
    (251) alterStmt -> R_ALTER R_TABLE idOrString alterTableList .
    (257) alterTableList -> alterTableList . S_COMA alterTable

    S_PUNTOCOMA     reduce using rule 251 (alterStmt -> R_ALTER R_TABLE idOrString alterTableList .)
    S_COMA          shift and go to state 314

>>>>>>> main

state 211

<<<<<<< HEAD
    (252) alterTable -> R_RENAME . alterRename
    (263) alterRename -> . R_COLUMN ID R_TO ID

    R_COLUMN        shift and go to state 330
=======
    (258) alterTableList -> alterTable .

    S_COMA          reduce using rule 258 (alterTableList -> alterTable .)
    S_PUNTOCOMA     reduce using rule 258 (alterTableList -> alterTable .)
>>>>>>> main

    alterRename                    shift and go to state 329

state 212

<<<<<<< HEAD
    (264) dropStmt -> R_DROP R_TABLE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 264 (dropStmt -> R_DROP R_TABLE ifExists idOrString .)

=======
    (259) alterTable -> R_ADD . alterAdd
    (263) alterAdd -> . R_COLUMN ID types
    (264) alterAdd -> . createConstraint
    (265) alterAdd -> . createPrimary
    (266) alterAdd -> . createForeign
    (267) alterAdd -> . constrName R_UNIQUE S_PARIZQ ID S_PARDER
    (56) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (58) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (59) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (60) constrName -> . R_CONSTRAINT ID
    (61) constrName -> .

    R_COLUMN        shift and go to state 316
    R_PRIMARY       shift and go to state 321
    R_CONSTRAINT    shift and go to state 322
    R_UNIQUE        reduce using rule 61 (constrName -> .)
    R_CHECK         reduce using rule 61 (constrName -> .)
    R_FOREIGN       reduce using rule 61 (constrName -> .)

    alterAdd                       shift and go to state 315
    createConstraint               shift and go to state 317
    createPrimary                  shift and go to state 318
    createForeign                  shift and go to state 319
    constrName                     shift and go to state 320
>>>>>>> main

state 213

<<<<<<< HEAD
    (266) ifExists -> R_IF R_EXISTS .

    ID              reduce using rule 266 (ifExists -> R_IF R_EXISTS .)
    STRING          reduce using rule 266 (ifExists -> R_IF R_EXISTS .)
    CHARACTER       reduce using rule 266 (ifExists -> R_IF R_EXISTS .)
=======
    (261) alterTable -> R_DROP . alterDrop
    (271) alterDrop -> . R_CONSTRAINT ID
    (272) alterDrop -> . R_COLUMN ID

    R_CONSTRAINT    shift and go to state 324
    R_COLUMN        shift and go to state 325
>>>>>>> main

    alterDrop                      shift and go to state 323

state 214

<<<<<<< HEAD
    (265) dropStmt -> R_DROP R_DATABASE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 265 (dropStmt -> R_DROP R_DATABASE ifExists idOrString .)
=======
    (262) alterTable -> R_RENAME . alterRename
    (273) alterRename -> . R_COLUMN ID R_TO ID

    R_COLUMN        shift and go to state 327
>>>>>>> main

    alterRename                    shift and go to state 326

state 215

<<<<<<< HEAD
    (335) insertStmt -> R_INSERT R_INTO ID paramsColumn . R_VALUES S_PARIZQ paramsList S_PARDER

    R_VALUES        shift and go to state 331
=======
    (274) dropStmt -> R_DROP R_TABLE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 274 (dropStmt -> R_DROP R_TABLE ifExists idOrString .)
>>>>>>> main


state 216

    (336) paramsColumn -> S_PARIZQ . idList S_PARDER
    (52) idList -> . idList S_COMA ID
    (53) idList -> . ID

    ID              shift and go to state 333

    idList                         shift and go to state 332

<<<<<<< HEAD
state 217

    (338) updateStmt -> R_UPDATE fromBody R_SET updateCols . whereCl
    (339) updateCols -> updateCols . S_COMA updateVals
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .

    S_COMA          shift and go to state 335
    R_WHERE         shift and go to state 134
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)

    whereCl                        shift and go to state 334
=======
    (276) ifExists -> R_IF R_EXISTS .

    ID              reduce using rule 276 (ifExists -> R_IF R_EXISTS .)
    STRING          reduce using rule 276 (ifExists -> R_IF R_EXISTS .)
    CHARACTER       reduce using rule 276 (ifExists -> R_IF R_EXISTS .)

>>>>>>> main

state 218

<<<<<<< HEAD
    (340) updateCols -> updateVals .

    S_COMA          reduce using rule 340 (updateCols -> updateVals .)
    R_WHERE         reduce using rule 340 (updateCols -> updateVals .)
    S_PUNTOCOMA     reduce using rule 340 (updateCols -> updateVals .)
=======
    (275) dropStmt -> R_DROP R_DATABASE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 275 (dropStmt -> R_DROP R_DATABASE ifExists idOrString .)
>>>>>>> main


state 219

<<<<<<< HEAD
    (341) updateVals -> ID . S_IGUAL updateExp

    S_IGUAL         shift and go to state 336
=======
    (345) insertStmt -> R_INSERT R_INTO ID paramsColumn . R_VALUES S_PARIZQ paramsList S_PARDER

    R_VALUES        shift and go to state 328
>>>>>>> main


state 220

<<<<<<< HEAD
    (286) optAlias -> R_AS idOrString .

    R_SET           reduce using rule 286 (optAlias -> R_AS idOrString .)
    S_COMA          reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_WHERE         reduce using rule 286 (optAlias -> R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_NATURAL       reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_INNER         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_LEFT          reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_RIGHT         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_FULL          reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_GROUP         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_ORDER         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_LIMIT         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_UNION         reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_INTERSECT     reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_EXCEPT        reduce using rule 286 (optAlias -> R_AS idOrString .)
    S_PARDER        reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_FROM          reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_ON            reduce using rule 286 (optAlias -> R_AS idOrString .)
    R_USING         reduce using rule 286 (optAlias -> R_AS idOrString .)
=======
    (346) paramsColumn -> S_PARIZQ . idList S_PARDER
    (62) idList -> . idList S_COMA ID
    (63) idList -> . ID
>>>>>>> main

    ID              shift and go to state 330

    idList                         shift and go to state 329

state 221

    (348) updateStmt -> R_UPDATE fromBody R_SET updateCols . whereCl
    (349) updateCols -> updateCols . S_COMA updateVals
    (319) whereCl -> . R_WHERE expBool
    (320) whereCl -> .

<<<<<<< HEAD
    R_AS            shift and go to state 337
=======
    S_COMA          shift and go to state 332
    R_WHERE         shift and go to state 133
    S_PUNTOCOMA     reduce using rule 320 (whereCl -> .)
>>>>>>> main

    whereCl                        shift and go to state 331

state 222

<<<<<<< HEAD
    (308) whereCl -> R_WHERE expBool .
    (211) expBool -> expBool . R_AND expBool
    (212) expBool -> expBool . R_OR expBool
    (215) expBool -> expBool . optBoolPredicate
    (217) optBoolPredicate -> . R_IS R_TRUE
    (218) optBoolPredicate -> . R_IS R_FALSE
    (219) optBoolPredicate -> . R_IS R_UNKNOWN
    (220) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (221) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (222) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PUNTOCOMA     reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_GROUP         reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_ORDER         reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_LIMIT         reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_UNION         reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_INTERSECT     reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_EXCEPT        reduce using rule 308 (whereCl -> R_WHERE expBool .)
    S_PARDER        reduce using rule 308 (whereCl -> R_WHERE expBool .)
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166
=======
    (350) updateCols -> updateVals .

    S_COMA          reduce using rule 350 (updateCols -> updateVals .)
    R_WHERE         reduce using rule 350 (updateCols -> updateVals .)
    S_PUNTOCOMA     reduce using rule 350 (updateCols -> updateVals .)

>>>>>>> main

state 223

    (351) updateVals -> ID . S_IGUAL updateExp

<<<<<<< HEAD
    ID              shift and go to state 56
    S_PARIZQ        shift and go to state 57

    fromBody                       shift and go to state 338
=======
    S_IGUAL         shift and go to state 333

>>>>>>> main

state 224

<<<<<<< HEAD
    (268) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .

    R_WHERE         shift and go to state 134
    R_GROUP         reduce using rule 309 (whereCl -> .)
    R_ORDER         reduce using rule 309 (whereCl -> .)
    R_LIMIT         reduce using rule 309 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)
    R_UNION         reduce using rule 309 (whereCl -> .)
    R_INTERSECT     reduce using rule 309 (whereCl -> .)
    R_EXCEPT        reduce using rule 309 (whereCl -> .)
    S_PARDER        reduce using rule 309 (whereCl -> .)

    whereCl                        shift and go to state 339
=======
    (297) optAlias -> R_AS idOrString .

    R_SET           reduce using rule 297 (optAlias -> R_AS idOrString .)
    S_COMA          reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_WHERE         reduce using rule 297 (optAlias -> R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_NATURAL       reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_INNER         reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_LEFT          reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_RIGHT         reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_FULL          reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_GROUP         reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_LIMIT         reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_ORDER         reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_UNION         reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_INTERSECT     reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_EXCEPT        reduce using rule 297 (optAlias -> R_AS idOrString .)
    S_PARDER        reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_FROM          reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_ON            reduce using rule 297 (optAlias -> R_AS idOrString .)
    R_USING         reduce using rule 297 (optAlias -> R_AS idOrString .)

>>>>>>> main

state 225

<<<<<<< HEAD
    (269) selectStmt -> R_SELECT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (310) groupByCl -> . R_GROUP R_BY groupList havingCl
    (311) groupByCl -> .

    R_GROUP         shift and go to state 341
    R_ORDER         reduce using rule 311 (groupByCl -> .)
    R_LIMIT         reduce using rule 311 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 311 (groupByCl -> .)
    R_UNION         reduce using rule 311 (groupByCl -> .)
    R_INTERSECT     reduce using rule 311 (groupByCl -> .)
    R_EXCEPT        reduce using rule 311 (groupByCl -> .)
    S_PARDER        reduce using rule 311 (groupByCl -> .)

    groupByCl                      shift and go to state 340
=======
    (303) fromBody -> S_PARIZQ selectStmt S_PARDER . R_AS idOrString

    R_AS            shift and go to state 334

>>>>>>> main

state 226

<<<<<<< HEAD
    (270) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl limitCl
    (308) whereCl -> . R_WHERE expBool
    (309) whereCl -> .

    R_WHERE         shift and go to state 134
    R_GROUP         reduce using rule 309 (whereCl -> .)
    R_ORDER         reduce using rule 309 (whereCl -> .)
    R_LIMIT         reduce using rule 309 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 309 (whereCl -> .)
    R_UNION         reduce using rule 309 (whereCl -> .)
    R_INTERSECT     reduce using rule 309 (whereCl -> .)
    R_EXCEPT        reduce using rule 309 (whereCl -> .)
    S_PARDER        reduce using rule 309 (whereCl -> .)

    whereCl                        shift and go to state 342

state 227

    (293) joinList -> joinList2 .
    (294) joinList2 -> joinList2 . joinCl
    (296) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (297) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (298) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (301) joinOpt -> . R_INNER
    (302) joinOpt -> . R_LEFT
    (303) joinOpt -> . R_LEFT R_OUTER
    (304) joinOpt -> . R_RIGHT
    (305) joinOpt -> . R_RIGHT R_OUTER
    (306) joinOpt -> . R_FULL
    (307) joinOpt -> . R_FULL R_OUTER

    R_WHERE         reduce using rule 293 (joinList -> joinList2 .)
    R_GROUP         reduce using rule 293 (joinList -> joinList2 .)
    R_ORDER         reduce using rule 293 (joinList -> joinList2 .)
    R_LIMIT         reduce using rule 293 (joinList -> joinList2 .)
    S_PUNTOCOMA     reduce using rule 293 (joinList -> joinList2 .)
    R_UNION         reduce using rule 293 (joinList -> joinList2 .)
    R_INTERSECT     reduce using rule 293 (joinList -> joinList2 .)
    R_EXCEPT        reduce using rule 293 (joinList -> joinList2 .)
    S_PARDER        reduce using rule 293 (joinList -> joinList2 .)
    R_NATURAL       shift and go to state 230
    R_INNER         shift and go to state 231
    R_LEFT          shift and go to state 232
    R_RIGHT         shift and go to state 233
    R_FULL          shift and go to state 234

    joinCl                         shift and go to state 343
    joinOpt                        shift and go to state 229
=======
    (319) whereCl -> R_WHERE expBool .
    (221) expBool -> expBool . R_AND expBool
    (222) expBool -> expBool . R_OR expBool
    (225) expBool -> expBool . optBoolPredicate
    (227) optBoolPredicate -> . R_IS R_TRUE
    (228) optBoolPredicate -> . R_IS R_FALSE
    (229) optBoolPredicate -> . R_IS R_UNKNOWN
    (230) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (231) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (232) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PUNTOCOMA     reduce using rule 319 (whereCl -> R_WHERE expBool .)
    R_GROUP         reduce using rule 319 (whereCl -> R_WHERE expBool .)
    R_LIMIT         reduce using rule 319 (whereCl -> R_WHERE expBool .)
    R_ORDER         reduce using rule 319 (whereCl -> R_WHERE expBool .)
    R_UNION         reduce using rule 319 (whereCl -> R_WHERE expBool .)
    R_INTERSECT     reduce using rule 319 (whereCl -> R_WHERE expBool .)
    R_EXCEPT        reduce using rule 319 (whereCl -> R_WHERE expBool .)
    S_PARDER        reduce using rule 319 (whereCl -> R_WHERE expBool .)
    R_AND           shift and go to state 163
    R_OR            shift and go to state 164
    R_IS            shift and go to state 166

    optBoolPredicate               shift and go to state 165

state 222

    (300) tableExp -> tableExp S_COMA . fromBody
    (302) fromBody -> . ID optAlias
    (303) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 55
    S_PARIZQ        shift and go to state 56

    fromBody                       shift and go to state 335
>>>>>>> main

state 228

    (278) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl . whereCl groupByCl limitCl
    (319) whereCl -> . R_WHERE expBool
    (320) whereCl -> .

    R_WHERE         shift and go to state 133
    R_GROUP         reduce using rule 320 (whereCl -> .)
    R_LIMIT         reduce using rule 320 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 320 (whereCl -> .)
    R_UNION         reduce using rule 320 (whereCl -> .)
    R_INTERSECT     reduce using rule 320 (whereCl -> .)
    R_EXCEPT        reduce using rule 320 (whereCl -> .)
    S_PARDER        reduce using rule 320 (whereCl -> .)

    whereCl                        shift and go to state 336

state 229

    (279) selectStmt -> R_SELECT selectParams fromCl whereCl . groupByCl limitCl
    (281) selectStmt -> R_SELECT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (321) groupByCl -> . R_GROUP R_BY groupList havingCl
    (322) groupByCl -> .

<<<<<<< HEAD
    R_JOIN          shift and go to state 344
=======
    R_GROUP         shift and go to state 338
    R_LIMIT         reduce using rule 322 (groupByCl -> .)
    R_ORDER         reduce using rule 322 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 322 (groupByCl -> .)
    R_UNION         reduce using rule 322 (groupByCl -> .)
    R_INTERSECT     reduce using rule 322 (groupByCl -> .)
    R_EXCEPT        reduce using rule 322 (groupByCl -> .)
    S_PARDER        reduce using rule 322 (groupByCl -> .)
>>>>>>> main

    groupByCl                      shift and go to state 337

state 230

    (280) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl limitCl
    (319) whereCl -> . R_WHERE expBool
    (320) whereCl -> .

<<<<<<< HEAD
    R_INNER         shift and go to state 231
    R_LEFT          shift and go to state 232
    R_RIGHT         shift and go to state 233
    R_FULL          shift and go to state 234

    joinOpt                        shift and go to state 345
=======
    R_WHERE         shift and go to state 133
    R_GROUP         reduce using rule 320 (whereCl -> .)
    R_ORDER         reduce using rule 320 (whereCl -> .)
    R_LIMIT         reduce using rule 320 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 320 (whereCl -> .)
    R_UNION         reduce using rule 320 (whereCl -> .)
    R_INTERSECT     reduce using rule 320 (whereCl -> .)
    R_EXCEPT        reduce using rule 320 (whereCl -> .)
    S_PARDER        reduce using rule 320 (whereCl -> .)

    whereCl                        shift and go to state 339
>>>>>>> main

state 231

    (304) joinList -> joinList2 .
    (305) joinList2 -> joinList2 . joinCl
    (307) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (308) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (309) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (312) joinOpt -> . R_INNER
    (313) joinOpt -> . R_LEFT
    (314) joinOpt -> . R_LEFT R_OUTER
    (315) joinOpt -> . R_RIGHT
    (316) joinOpt -> . R_RIGHT R_OUTER
    (317) joinOpt -> . R_FULL
    (318) joinOpt -> . R_FULL R_OUTER

    R_WHERE         reduce using rule 304 (joinList -> joinList2 .)
    R_GROUP         reduce using rule 304 (joinList -> joinList2 .)
    R_ORDER         reduce using rule 304 (joinList -> joinList2 .)
    R_LIMIT         reduce using rule 304 (joinList -> joinList2 .)
    S_PUNTOCOMA     reduce using rule 304 (joinList -> joinList2 .)
    R_UNION         reduce using rule 304 (joinList -> joinList2 .)
    R_INTERSECT     reduce using rule 304 (joinList -> joinList2 .)
    R_EXCEPT        reduce using rule 304 (joinList -> joinList2 .)
    S_PARDER        reduce using rule 304 (joinList -> joinList2 .)
    R_NATURAL       shift and go to state 229
    R_INNER         shift and go to state 230
    R_LEFT          shift and go to state 231
    R_RIGHT         shift and go to state 232
    R_FULL          shift and go to state 233

    joinCl                         shift and go to state 340
    joinOpt                        shift and go to state 228

state 232

    (306) joinList2 -> joinCl .

<<<<<<< HEAD
    R_JOIN          reduce using rule 302 (joinOpt -> R_LEFT .)
    R_OUTER         shift and go to state 346
=======
    R_NATURAL       reduce using rule 306 (joinList2 -> joinCl .)
    R_INNER         reduce using rule 306 (joinList2 -> joinCl .)
    R_LEFT          reduce using rule 306 (joinList2 -> joinCl .)
    R_RIGHT         reduce using rule 306 (joinList2 -> joinCl .)
    R_FULL          reduce using rule 306 (joinList2 -> joinCl .)
    R_WHERE         reduce using rule 306 (joinList2 -> joinCl .)
    R_GROUP         reduce using rule 306 (joinList2 -> joinCl .)
    R_ORDER         reduce using rule 306 (joinList2 -> joinCl .)
    R_LIMIT         reduce using rule 306 (joinList2 -> joinCl .)
    S_PUNTOCOMA     reduce using rule 306 (joinList2 -> joinCl .)
    R_UNION         reduce using rule 306 (joinList2 -> joinCl .)
    R_INTERSECT     reduce using rule 306 (joinList2 -> joinCl .)
    R_EXCEPT        reduce using rule 306 (joinList2 -> joinCl .)
    S_PARDER        reduce using rule 306 (joinList2 -> joinCl .)
>>>>>>> main


state 233

    (307) joinCl -> joinOpt . R_JOIN columnName optAlias R_ON expBool
    (308) joinCl -> joinOpt . R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER

<<<<<<< HEAD
    R_JOIN          reduce using rule 304 (joinOpt -> R_RIGHT .)
    R_OUTER         shift and go to state 347
=======
    R_JOIN          shift and go to state 341
>>>>>>> main


state 234

    (309) joinCl -> R_NATURAL . joinOpt R_JOIN columnName optAlias
    (312) joinOpt -> . R_INNER
    (313) joinOpt -> . R_LEFT
    (314) joinOpt -> . R_LEFT R_OUTER
    (315) joinOpt -> . R_RIGHT
    (316) joinOpt -> . R_RIGHT R_OUTER
    (317) joinOpt -> . R_FULL
    (318) joinOpt -> . R_FULL R_OUTER

<<<<<<< HEAD
    R_JOIN          reduce using rule 306 (joinOpt -> R_FULL .)
    R_OUTER         shift and go to state 348
=======
    R_INNER         shift and go to state 230
    R_LEFT          shift and go to state 231
    R_RIGHT         shift and go to state 232
    R_FULL          shift and go to state 233
>>>>>>> main

    joinOpt                        shift and go to state 342

state 235

<<<<<<< HEAD
    (282) selectList -> selectList S_COMA selectListParams . optAlias
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    R_AS            shift and go to state 130
    S_COMA          reduce using rule 288 (optAlias -> .)
    R_FROM          reduce using rule 288 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 288 (optAlias -> .)
    R_UNION         reduce using rule 288 (optAlias -> .)
    R_INTERSECT     reduce using rule 288 (optAlias -> .)
    R_EXCEPT        reduce using rule 288 (optAlias -> .)
    S_PARDER        reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    optAlias                       shift and go to state 349
    idOrString                     shift and go to state 131
=======
    (312) joinOpt -> R_INNER .

    R_JOIN          reduce using rule 312 (joinOpt -> R_INNER .)

>>>>>>> main

state 236

<<<<<<< HEAD
    (224) columnName -> ID S_PUNTO ID .

    O_SUMA          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    O_RESTA         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    O_PRODUCTO      reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    O_DIVISION      reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    O_EXPONENTE     reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    O_MODULAR       reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    OC_CONCATENAR   reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_IN            reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_NOT           reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    OL_MENORQUE     reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    OL_MAYORQUE     reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    OL_MAYORIGUALQUE reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    OL_MENORIGUALQUE reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    S_IGUAL         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    OL_DISTINTODE   reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_IS            reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_BETWEEN       reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_ISNULL        reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_NOTNULL       reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    OL_ESIGUAL      reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_AS            reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    ID              reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    STRING          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    CHARACTER       reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    S_COMA          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_FROM          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    S_PUNTOCOMA     reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_UNION         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_INTERSECT     reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_EXCEPT        reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    S_PARDER        reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_LIKE          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_AND           reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_OR            reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_GROUP         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_ORDER         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_LIMIT         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_THEN          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_NATURAL       reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_INNER         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_LEFT          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_RIGHT         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_FULL          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_WHERE         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_ALL           reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_ANY           reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_SOME          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_ON            reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_USING         reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_HAVING        reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_ASC           reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_DESC          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
    R_NULL          reduce using rule 224 (columnName -> ID S_PUNTO ID .)
=======
    (313) joinOpt -> R_LEFT .
    (314) joinOpt -> R_LEFT . R_OUTER

    R_JOIN          reduce using rule 313 (joinOpt -> R_LEFT .)
    R_OUTER         shift and go to state 343
>>>>>>> main


state 237

    (315) joinOpt -> R_RIGHT .
    (316) joinOpt -> R_RIGHT . R_OUTER

    R_JOIN          reduce using rule 315 (joinOpt -> R_RIGHT .)
    R_OUTER         shift and go to state 344


<<<<<<< HEAD
state 238

    (99) funcCall -> ID S_PARIZQ paramsList . S_PARDER
    (134) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 350
    S_COMA          shift and go to state 351
=======
state 233

    (317) joinOpt -> R_FULL .
    (318) joinOpt -> R_FULL . R_OUTER

    R_JOIN          reduce using rule 317 (joinOpt -> R_FULL .)
    R_OUTER         shift and go to state 345


state 234

    (293) selectList -> selectList S_COMA selectListParams . optAlias
    (297) optAlias -> . R_AS idOrString
    (298) optAlias -> . idOrString
    (299) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 129
    S_COMA          reduce using rule 299 (optAlias -> .)
    R_FROM          reduce using rule 299 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 299 (optAlias -> .)
    R_UNION         reduce using rule 299 (optAlias -> .)
    R_INTERSECT     reduce using rule 299 (optAlias -> .)
    R_EXCEPT        reduce using rule 299 (optAlias -> .)
    S_PARDER        reduce using rule 299 (optAlias -> .)
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    optAlias                       shift and go to state 346
    idOrString                     shift and go to state 130

state 235

    (234) columnName -> ID S_PUNTO ID .

    O_SUMA          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    O_RESTA         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    O_PRODUCTO      reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    O_DIVISION      reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    O_EXPONENTE     reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    O_MODULAR       reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    OC_CONCATENAR   reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_IN            reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_NOT           reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    OL_MENORQUE     reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    OL_MAYORQUE     reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    OL_MAYORIGUALQUE reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    OL_MENORIGUALQUE reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    S_IGUAL         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    OL_DISTINTODE   reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_IS            reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_BETWEEN       reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_ISNULL        reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_NOTNULL       reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    OL_ESIGUAL      reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_AS            reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    ID              reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    STRING          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    CHARACTER       reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    S_COMA          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_FROM          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    S_PUNTOCOMA     reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_UNION         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_INTERSECT     reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_EXCEPT        reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    S_PARDER        reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_LIKE          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_AND           reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_OR            reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_GROUP         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_LIMIT         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_ORDER         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_THEN          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_NATURAL       reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_INNER         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_LEFT          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_RIGHT         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_FULL          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_WHERE         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_ALL           reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_ANY           reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_SOME          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_ON            reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_USING         reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_HAVING        reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_ASC           reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_DESC          reduce using rule 234 (columnName -> ID S_PUNTO ID .)
    R_NULL          reduce using rule 234 (columnName -> ID S_PUNTO ID .)


state 236

    (296) selectListParams -> ID S_PUNTO O_PRODUCTO .

    R_AS            reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    ID              reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    STRING          reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    CHARACTER       reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_COMA          reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_FROM          reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_UNION         reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_INTERSECT     reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_EXCEPT        reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PARDER        reduce using rule 296 (selectListParams -> ID S_PUNTO O_PRODUCTO .)


state 237

    (109) funcCall -> ID S_PARIZQ paramsList . S_PARDER
    (144) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 347
    S_COMA          shift and go to state 348


state 238

    (110) funcCall -> ID S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    ID              reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    STRING          reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 110 (funcCall -> ID S_PARIZQ S_PARDER .)
>>>>>>> main


state 239

<<<<<<< HEAD
    (100) funcCall -> ID S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    ID              reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    STRING          reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 100 (funcCall -> ID S_PARIZQ S_PARDER .)
=======
    (145) paramsList -> datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 145 (paramsList -> datatype .)
    S_COMA          reduce using rule 145 (paramsList -> datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 240

<<<<<<< HEAD
    (135) paramsList -> datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 135 (paramsList -> datatype .)
    S_COMA          reduce using rule 135 (paramsList -> datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (146) datatype -> datatype O_SUMA datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    O_RESTA         reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_IN            reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_NOT           reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    S_IGUAL         reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_IS            reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_BETWEEN       reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_ISNULL        reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_NOTNULL       reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_AS            reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    ID              reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    STRING          reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    CHARACTER       reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    S_COMA          reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_FROM          reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_UNION         reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_INTERSECT     reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_EXCEPT        reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    S_PARDER        reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_AND           reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_OR            reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_GROUP         reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_LIMIT         reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_ORDER         reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_THEN          reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_NATURAL       reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_INNER         reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_LEFT          reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_RIGHT         reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_FULL          reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_WHERE         reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_ALL           reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_ANY           reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    R_SOME          reduce using rule 146 (datatype -> datatype O_SUMA datatype .)
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148

  ! O_PRODUCTO      [ reduce using rule 146 (datatype -> datatype O_SUMA datatype .) ]
  ! O_DIVISION      [ reduce using rule 146 (datatype -> datatype O_SUMA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 146 (datatype -> datatype O_SUMA datatype .) ]
  ! O_MODULAR       [ reduce using rule 146 (datatype -> datatype O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 143 ]
  ! O_RESTA         [ shift and go to state 144 ]
  ! OC_CONCATENAR   [ shift and go to state 149 ]
>>>>>>> main


state 241

<<<<<<< HEAD
    (136) datatype -> datatype O_SUMA datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    O_RESTA         reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_IN            reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_NOT           reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    S_IGUAL         reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_IS            reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_BETWEEN       reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_ISNULL        reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_NOTNULL       reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_AS            reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    ID              reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    STRING          reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    CHARACTER       reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    S_COMA          reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_FROM          reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_UNION         reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_INTERSECT     reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_EXCEPT        reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    S_PARDER        reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_AND           reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_OR            reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_GROUP         reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_ORDER         reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_LIMIT         reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_THEN          reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_NATURAL       reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_INNER         reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_LEFT          reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_RIGHT         reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_FULL          reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_WHERE         reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_ALL           reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_ANY           reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    R_SOME          reduce using rule 136 (datatype -> datatype O_SUMA datatype .)
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149

  ! O_PRODUCTO      [ reduce using rule 136 (datatype -> datatype O_SUMA datatype .) ]
  ! O_DIVISION      [ reduce using rule 136 (datatype -> datatype O_SUMA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 136 (datatype -> datatype O_SUMA datatype .) ]
  ! O_MODULAR       [ reduce using rule 136 (datatype -> datatype O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 144 ]
  ! O_RESTA         [ shift and go to state 145 ]
  ! OC_CONCATENAR   [ shift and go to state 150 ]
=======
    (147) datatype -> datatype O_RESTA datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    O_RESTA         reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_IN            reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_NOT           reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    S_IGUAL         reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_IS            reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_BETWEEN       reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_ISNULL        reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_NOTNULL       reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_AS            reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    ID              reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    STRING          reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    CHARACTER       reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    S_COMA          reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_FROM          reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_UNION         reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_INTERSECT     reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_EXCEPT        reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    S_PARDER        reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_AND           reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_OR            reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_GROUP         reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_LIMIT         reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_ORDER         reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_THEN          reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_NATURAL       reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_INNER         reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_LEFT          reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_RIGHT         reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_FULL          reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_WHERE         reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_ALL           reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_ANY           reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    R_SOME          reduce using rule 147 (datatype -> datatype O_RESTA datatype .)
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148

  ! O_PRODUCTO      [ reduce using rule 147 (datatype -> datatype O_RESTA datatype .) ]
  ! O_DIVISION      [ reduce using rule 147 (datatype -> datatype O_RESTA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 147 (datatype -> datatype O_RESTA datatype .) ]
  ! O_MODULAR       [ reduce using rule 147 (datatype -> datatype O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 143 ]
  ! O_RESTA         [ shift and go to state 144 ]
  ! OC_CONCATENAR   [ shift and go to state 149 ]
>>>>>>> main


state 242

<<<<<<< HEAD
    (137) datatype -> datatype O_RESTA datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    O_RESTA         reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_IN            reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_NOT           reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    S_IGUAL         reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_IS            reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_BETWEEN       reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_ISNULL        reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_NOTNULL       reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_AS            reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    ID              reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    STRING          reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    CHARACTER       reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    S_COMA          reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_FROM          reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_UNION         reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_INTERSECT     reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_EXCEPT        reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    S_PARDER        reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_AND           reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_OR            reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_GROUP         reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_ORDER         reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_LIMIT         reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_THEN          reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_NATURAL       reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_INNER         reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_LEFT          reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_RIGHT         reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_FULL          reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_WHERE         reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_ALL           reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_ANY           reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    R_SOME          reduce using rule 137 (datatype -> datatype O_RESTA datatype .)
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149

  ! O_PRODUCTO      [ reduce using rule 137 (datatype -> datatype O_RESTA datatype .) ]
  ! O_DIVISION      [ reduce using rule 137 (datatype -> datatype O_RESTA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 137 (datatype -> datatype O_RESTA datatype .) ]
  ! O_MODULAR       [ reduce using rule 137 (datatype -> datatype O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 144 ]
  ! O_RESTA         [ shift and go to state 145 ]
  ! OC_CONCATENAR   [ shift and go to state 150 ]
=======
    (148) datatype -> datatype O_PRODUCTO datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    O_RESTA         reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    O_PRODUCTO      reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    O_DIVISION      reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    O_MODULAR       reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    OC_CONCATENAR   reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_IN            reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOT           reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORQUE     reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORQUE     reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORIGUALQUE reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORIGUALQUE reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    S_IGUAL         reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    OL_DISTINTODE   reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_IS            reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_BETWEEN       reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_ISNULL        reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOTNULL       reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    OL_ESIGUAL      reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_AS            reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    ID              reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    STRING          reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    CHARACTER       reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    S_COMA          reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_FROM          reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    S_PUNTOCOMA     reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_UNION         reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_INTERSECT     reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_EXCEPT        reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    S_PARDER        reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_AND           reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_OR            reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_GROUP         reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_LIMIT         reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_ORDER         reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_THEN          reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_NATURAL       reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_INNER         reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_LEFT          reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_RIGHT         reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_FULL          reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_WHERE         reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_ALL           reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_ANY           reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    R_SOME          reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .)
    O_EXPONENTE     shift and go to state 147

  ! O_EXPONENTE     [ reduce using rule 148 (datatype -> datatype O_PRODUCTO datatype .) ]
  ! O_SUMA          [ shift and go to state 143 ]
  ! O_RESTA         [ shift and go to state 144 ]
  ! O_PRODUCTO      [ shift and go to state 145 ]
  ! O_DIVISION      [ shift and go to state 146 ]
  ! O_MODULAR       [ shift and go to state 148 ]
  ! OC_CONCATENAR   [ shift and go to state 149 ]
>>>>>>> main


state 243

<<<<<<< HEAD
    (138) datatype -> datatype O_PRODUCTO datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    O_RESTA         reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    O_PRODUCTO      reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    O_DIVISION      reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    O_MODULAR       reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    OC_CONCATENAR   reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_IN            reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOT           reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORQUE     reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORQUE     reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORIGUALQUE reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORIGUALQUE reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    S_IGUAL         reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    OL_DISTINTODE   reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_IS            reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_BETWEEN       reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_ISNULL        reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOTNULL       reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    OL_ESIGUAL      reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_AS            reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    ID              reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    STRING          reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    CHARACTER       reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    S_COMA          reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_FROM          reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    S_PUNTOCOMA     reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_UNION         reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_INTERSECT     reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_EXCEPT        reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    S_PARDER        reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_AND           reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_OR            reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_GROUP         reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_ORDER         reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_LIMIT         reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_THEN          reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_NATURAL       reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_INNER         reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_LEFT          reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_RIGHT         reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_FULL          reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_WHERE         reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_ALL           reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_ANY           reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    R_SOME          reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .)
    O_EXPONENTE     shift and go to state 148

  ! O_EXPONENTE     [ reduce using rule 138 (datatype -> datatype O_PRODUCTO datatype .) ]
  ! O_SUMA          [ shift and go to state 144 ]
  ! O_RESTA         [ shift and go to state 145 ]
  ! O_PRODUCTO      [ shift and go to state 146 ]
  ! O_DIVISION      [ shift and go to state 147 ]
  ! O_MODULAR       [ shift and go to state 149 ]
  ! OC_CONCATENAR   [ shift and go to state 150 ]
=======
    (149) datatype -> datatype O_DIVISION datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    O_RESTA         reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    O_PRODUCTO      reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    O_DIVISION      reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    O_MODULAR       reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    OC_CONCATENAR   reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_IN            reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_NOT           reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORQUE     reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORQUE     reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORIGUALQUE reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORIGUALQUE reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    S_IGUAL         reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    OL_DISTINTODE   reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_IS            reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_BETWEEN       reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_ISNULL        reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_NOTNULL       reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    OL_ESIGUAL      reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_AS            reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    ID              reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    STRING          reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    CHARACTER       reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    S_COMA          reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_FROM          reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    S_PUNTOCOMA     reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_UNION         reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_INTERSECT     reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_EXCEPT        reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    S_PARDER        reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_AND           reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_OR            reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_GROUP         reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_LIMIT         reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_ORDER         reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_THEN          reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_NATURAL       reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_INNER         reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_LEFT          reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_RIGHT         reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_FULL          reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_WHERE         reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_ALL           reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_ANY           reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    R_SOME          reduce using rule 149 (datatype -> datatype O_DIVISION datatype .)
    O_EXPONENTE     shift and go to state 147

  ! O_EXPONENTE     [ reduce using rule 149 (datatype -> datatype O_DIVISION datatype .) ]
  ! O_SUMA          [ shift and go to state 143 ]
  ! O_RESTA         [ shift and go to state 144 ]
  ! O_PRODUCTO      [ shift and go to state 145 ]
  ! O_DIVISION      [ shift and go to state 146 ]
  ! O_MODULAR       [ shift and go to state 148 ]
  ! OC_CONCATENAR   [ shift and go to state 149 ]
>>>>>>> main


state 244

<<<<<<< HEAD
    (139) datatype -> datatype O_DIVISION datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    O_RESTA         reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    O_PRODUCTO      reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    O_DIVISION      reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    O_MODULAR       reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    OC_CONCATENAR   reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_IN            reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_NOT           reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORQUE     reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORQUE     reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORIGUALQUE reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORIGUALQUE reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    S_IGUAL         reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    OL_DISTINTODE   reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_IS            reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_BETWEEN       reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_ISNULL        reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_NOTNULL       reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    OL_ESIGUAL      reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_AS            reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    ID              reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    STRING          reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    CHARACTER       reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    S_COMA          reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_FROM          reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    S_PUNTOCOMA     reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_UNION         reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_INTERSECT     reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_EXCEPT        reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    S_PARDER        reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_AND           reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_OR            reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_GROUP         reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_ORDER         reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_LIMIT         reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_THEN          reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_NATURAL       reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_INNER         reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_LEFT          reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_RIGHT         reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_FULL          reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_WHERE         reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_ALL           reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_ANY           reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    R_SOME          reduce using rule 139 (datatype -> datatype O_DIVISION datatype .)
    O_EXPONENTE     shift and go to state 148

  ! O_EXPONENTE     [ reduce using rule 139 (datatype -> datatype O_DIVISION datatype .) ]
  ! O_SUMA          [ shift and go to state 144 ]
  ! O_RESTA         [ shift and go to state 145 ]
  ! O_PRODUCTO      [ shift and go to state 146 ]
  ! O_DIVISION      [ shift and go to state 147 ]
  ! O_MODULAR       [ shift and go to state 149 ]
  ! OC_CONCATENAR   [ shift and go to state 150 ]
=======
    (150) datatype -> datatype O_EXPONENTE datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    O_RESTA         reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    O_PRODUCTO      reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    O_DIVISION      reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    O_EXPONENTE     reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    O_MODULAR       reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    OC_CONCATENAR   reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_IN            reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOT           reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORQUE     reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORQUE     reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORIGUALQUE reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORIGUALQUE reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    S_IGUAL         reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    OL_DISTINTODE   reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_IS            reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_BETWEEN       reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_ISNULL        reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOTNULL       reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    OL_ESIGUAL      reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_AS            reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    ID              reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    STRING          reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    CHARACTER       reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    S_COMA          reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_FROM          reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    S_PUNTOCOMA     reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_UNION         reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_INTERSECT     reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_EXCEPT        reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    S_PARDER        reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_AND           reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_OR            reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_GROUP         reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_LIMIT         reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_ORDER         reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_THEN          reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_NATURAL       reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_INNER         reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_LEFT          reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_RIGHT         reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_FULL          reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_WHERE         reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_ALL           reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_ANY           reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)
    R_SOME          reduce using rule 150 (datatype -> datatype O_EXPONENTE datatype .)

  ! O_SUMA          [ shift and go to state 143 ]
  ! O_RESTA         [ shift and go to state 144 ]
  ! O_PRODUCTO      [ shift and go to state 145 ]
  ! O_DIVISION      [ shift and go to state 146 ]
  ! O_EXPONENTE     [ shift and go to state 147 ]
  ! O_MODULAR       [ shift and go to state 148 ]
  ! OC_CONCATENAR   [ shift and go to state 149 ]
>>>>>>> main


state 245

<<<<<<< HEAD
    (140) datatype -> datatype O_EXPONENTE datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    O_RESTA         reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    O_PRODUCTO      reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    O_DIVISION      reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    O_EXPONENTE     reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    O_MODULAR       reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    OC_CONCATENAR   reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_IN            reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOT           reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORQUE     reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORQUE     reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORIGUALQUE reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORIGUALQUE reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    S_IGUAL         reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    OL_DISTINTODE   reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_IS            reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_BETWEEN       reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_ISNULL        reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOTNULL       reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    OL_ESIGUAL      reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_AS            reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    ID              reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    STRING          reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    CHARACTER       reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    S_COMA          reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_FROM          reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    S_PUNTOCOMA     reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_UNION         reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_INTERSECT     reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_EXCEPT        reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    S_PARDER        reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_AND           reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_OR            reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_GROUP         reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_ORDER         reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_LIMIT         reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_THEN          reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_NATURAL       reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_INNER         reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_LEFT          reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_RIGHT         reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_FULL          reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_WHERE         reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_ALL           reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_ANY           reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)
    R_SOME          reduce using rule 140 (datatype -> datatype O_EXPONENTE datatype .)

  ! O_SUMA          [ shift and go to state 144 ]
  ! O_RESTA         [ shift and go to state 145 ]
  ! O_PRODUCTO      [ shift and go to state 146 ]
  ! O_DIVISION      [ shift and go to state 147 ]
  ! O_EXPONENTE     [ shift and go to state 148 ]
  ! O_MODULAR       [ shift and go to state 149 ]
  ! OC_CONCATENAR   [ shift and go to state 150 ]
=======
    (151) datatype -> datatype O_MODULAR datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    O_RESTA         reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    O_PRODUCTO      reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    O_DIVISION      reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    O_MODULAR       reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    OC_CONCATENAR   reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_IN            reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_NOT           reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORQUE     reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORQUE     reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORIGUALQUE reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    S_IGUAL         reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    OL_DISTINTODE   reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_IS            reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_BETWEEN       reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_ISNULL        reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_NOTNULL       reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    OL_ESIGUAL      reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_AS            reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    ID              reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    STRING          reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    CHARACTER       reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    S_COMA          reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_FROM          reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    S_PUNTOCOMA     reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_UNION         reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_INTERSECT     reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_EXCEPT        reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    S_PARDER        reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_AND           reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_OR            reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_GROUP         reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_LIMIT         reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_ORDER         reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_THEN          reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_NATURAL       reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_INNER         reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_LEFT          reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_RIGHT         reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_FULL          reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_WHERE         reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_ALL           reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_ANY           reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    R_SOME          reduce using rule 151 (datatype -> datatype O_MODULAR datatype .)
    O_EXPONENTE     shift and go to state 147

  ! O_EXPONENTE     [ reduce using rule 151 (datatype -> datatype O_MODULAR datatype .) ]
  ! O_SUMA          [ shift and go to state 143 ]
  ! O_RESTA         [ shift and go to state 144 ]
  ! O_PRODUCTO      [ shift and go to state 145 ]
  ! O_DIVISION      [ shift and go to state 146 ]
  ! O_MODULAR       [ shift and go to state 148 ]
  ! OC_CONCATENAR   [ shift and go to state 149 ]
>>>>>>> main


state 246

<<<<<<< HEAD
    (141) datatype -> datatype O_MODULAR datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    O_RESTA         reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    O_PRODUCTO      reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    O_DIVISION      reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    O_MODULAR       reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    OC_CONCATENAR   reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_IN            reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_NOT           reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORQUE     reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORQUE     reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORIGUALQUE reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    S_IGUAL         reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    OL_DISTINTODE   reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_IS            reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_BETWEEN       reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_ISNULL        reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_NOTNULL       reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    OL_ESIGUAL      reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_AS            reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    ID              reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    STRING          reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    CHARACTER       reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    S_COMA          reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_FROM          reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    S_PUNTOCOMA     reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_UNION         reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_INTERSECT     reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_EXCEPT        reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    S_PARDER        reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_AND           reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_OR            reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_GROUP         reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_ORDER         reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_LIMIT         reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_THEN          reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_NATURAL       reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_INNER         reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_LEFT          reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_RIGHT         reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_FULL          reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_WHERE         reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_ALL           reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_ANY           reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    R_SOME          reduce using rule 141 (datatype -> datatype O_MODULAR datatype .)
    O_EXPONENTE     shift and go to state 148

  ! O_EXPONENTE     [ reduce using rule 141 (datatype -> datatype O_MODULAR datatype .) ]
  ! O_SUMA          [ shift and go to state 144 ]
  ! O_RESTA         [ shift and go to state 145 ]
  ! O_PRODUCTO      [ shift and go to state 146 ]
  ! O_DIVISION      [ shift and go to state 147 ]
  ! O_MODULAR       [ shift and go to state 149 ]
  ! OC_CONCATENAR   [ shift and go to state 150 ]
=======
    (152) datatype -> datatype OC_CONCATENAR datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    OC_CONCATENAR   reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IN            reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOT           reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORQUE     reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORQUE     reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORIGUALQUE reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    S_IGUAL         reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_DISTINTODE   reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IS            reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_BETWEEN       reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ISNULL        reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOTNULL       reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_ESIGUAL      reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AS            reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    ID              reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    STRING          reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    CHARACTER       reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    S_COMA          reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FROM          reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PUNTOCOMA     reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_UNION         reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INTERSECT     reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_EXCEPT        reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PARDER        reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AND           reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_OR            reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_GROUP         reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LIMIT         reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ORDER         reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_THEN          reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NATURAL       reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INNER         reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LEFT          reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_RIGHT         reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FULL          reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_WHERE         reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ALL           reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ANY           reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    R_SOME          reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148

  ! O_SUMA          [ reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_RESTA         [ reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_PRODUCTO      [ reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_DIVISION      [ reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_MODULAR       [ reduce using rule 152 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! OC_CONCATENAR   [ shift and go to state 149 ]
>>>>>>> main


state 247

<<<<<<< HEAD
    (142) datatype -> datatype OC_CONCATENAR datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    OC_CONCATENAR   reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IN            reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOT           reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORQUE     reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORQUE     reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORIGUALQUE reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    S_IGUAL         reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_DISTINTODE   reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IS            reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_BETWEEN       reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ISNULL        reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOTNULL       reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_ESIGUAL      reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AS            reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    ID              reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    STRING          reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    CHARACTER       reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    S_COMA          reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FROM          reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PUNTOCOMA     reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_UNION         reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INTERSECT     reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_EXCEPT        reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PARDER        reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AND           reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_OR            reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_GROUP         reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ORDER         reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LIMIT         reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_THEN          reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NATURAL       reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INNER         reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LEFT          reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_RIGHT         reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FULL          reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_WHERE         reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ALL           reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ANY           reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    R_SOME          reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149

  ! O_SUMA          [ reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_RESTA         [ reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_PRODUCTO      [ reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_DIVISION      [ reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_MODULAR       [ reduce using rule 142 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! OC_CONCATENAR   [ shift and go to state 150 ]
=======
    (217) boolean -> datatype R_IN S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19
>>>>>>> main

    selectStmt                     shift and go to state 349

state 248

<<<<<<< HEAD
    (207) boolean -> datatype R_IN S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20
=======
    (218) boolean -> datatype R_NOT R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 350
>>>>>>> main

    selectStmt                     shift and go to state 352

state 249

<<<<<<< HEAD
    (208) boolean -> datatype R_NOT R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 353


state 250

    (167) expComp -> datatype R_NOT R_BETWEEN . datatype R_AND datatype
    (186) expSubq -> datatype R_NOT R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 354
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 251

    (158) expComp -> datatype OL_MENORQUE datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_OR            reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_IS            reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_AS            reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    ID              reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    STRING          reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    CHARACTER       reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    S_COMA          reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_FROM          reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_UNION         reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_INTERSECT     reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_EXCEPT        reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    S_PARDER        reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_GROUP         reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_ORDER         reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_LIMIT         reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_THEN          reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_NATURAL       reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_INNER         reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_LEFT          reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_RIGHT         reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_FULL          reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    R_WHERE         reduce using rule 158 (expComp -> datatype OL_MENORQUE datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (177) expComp -> datatype R_NOT R_BETWEEN . datatype R_AND datatype
    (196) expSubq -> datatype R_NOT R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 351
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 250

    (168) expComp -> datatype OL_MENORQUE datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_OR            reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_IS            reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_AS            reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    ID              reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    STRING          reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    CHARACTER       reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    S_COMA          reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_FROM          reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_UNION         reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_INTERSECT     reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_EXCEPT        reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    S_PARDER        reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_GROUP         reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_LIMIT         reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_ORDER         reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_THEN          reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_NATURAL       reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_INNER         reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_LEFT          reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_RIGHT         reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_FULL          reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    R_WHERE         reduce using rule 168 (expComp -> datatype OL_MENORQUE datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149


state 251

    (189) expSubq -> datatype OL_MENORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 352
>>>>>>> main


state 252

<<<<<<< HEAD
    (179) expSubq -> datatype OL_MENORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 355
=======
    (213) subqValues -> R_ALL .

    S_PARIZQ        reduce using rule 213 (subqValues -> R_ALL .)
>>>>>>> main


state 253

<<<<<<< HEAD
    (203) subqValues -> R_ALL .

    S_PARIZQ        reduce using rule 203 (subqValues -> R_ALL .)
=======
    (214) subqValues -> R_ANY .

    S_PARIZQ        reduce using rule 214 (subqValues -> R_ANY .)
>>>>>>> main


state 254

<<<<<<< HEAD
    (204) subqValues -> R_ANY .

    S_PARIZQ        reduce using rule 204 (subqValues -> R_ANY .)
=======
    (215) subqValues -> R_SOME .

    S_PARIZQ        reduce using rule 215 (subqValues -> R_SOME .)
>>>>>>> main


state 255

<<<<<<< HEAD
    (205) subqValues -> R_SOME .
=======
    (169) expComp -> datatype OL_MAYORQUE datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_OR            reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_IS            reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_AS            reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    ID              reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    STRING          reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    CHARACTER       reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    S_COMA          reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FROM          reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_UNION         reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INTERSECT     reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_EXCEPT        reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PARDER        reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_GROUP         reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LIMIT         reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_ORDER         reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_THEN          reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_NATURAL       reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INNER         reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LEFT          reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_RIGHT         reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FULL          reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    R_WHERE         reduce using rule 169 (expComp -> datatype OL_MAYORQUE datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main

    S_PARIZQ        reduce using rule 205 (subqValues -> R_SOME .)


<<<<<<< HEAD
state 256

    (159) expComp -> datatype OL_MAYORQUE datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_OR            reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_IS            reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_AS            reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    ID              reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    STRING          reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    CHARACTER       reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    S_COMA          reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FROM          reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_UNION         reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INTERSECT     reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_EXCEPT        reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PARDER        reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_GROUP         reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_ORDER         reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LIMIT         reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_THEN          reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_NATURAL       reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INNER         reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LEFT          reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_RIGHT         reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FULL          reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    R_WHERE         reduce using rule 159 (expComp -> datatype OL_MAYORQUE datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (190) expSubq -> datatype OL_MAYORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 353
>>>>>>> main


state 257

<<<<<<< HEAD
    (180) expSubq -> datatype OL_MAYORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 356
=======
    (170) expComp -> datatype OL_MAYORIGUALQUE datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_OR            reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_IS            reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_AS            reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    ID              reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    STRING          reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    CHARACTER       reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_COMA          reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FROM          reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_UNION         reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PARDER        reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_GROUP         reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_ORDER         reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_THEN          reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INNER         reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LEFT          reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FULL          reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_WHERE         reduce using rule 170 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 258

<<<<<<< HEAD
    (160) expComp -> datatype OL_MAYORIGUALQUE datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_OR            reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_IS            reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_AS            reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    ID              reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    STRING          reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    CHARACTER       reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_COMA          reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FROM          reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_UNION         reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PARDER        reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_GROUP         reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_ORDER         reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_THEN          reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INNER         reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LEFT          reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FULL          reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_WHERE         reduce using rule 160 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (191) expSubq -> datatype OL_MAYORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER
>>>>>>> main

    S_PARIZQ        shift and go to state 354


<<<<<<< HEAD
    (181) expSubq -> datatype OL_MAYORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 357
=======
state 259

    (171) expComp -> datatype OL_MENORIGUALQUE datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_OR            reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_IS            reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_AS            reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    ID              reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    STRING          reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    CHARACTER       reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_COMA          reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FROM          reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_UNION         reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PARDER        reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_GROUP         reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_ORDER         reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_THEN          reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INNER         reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LEFT          reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FULL          reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_WHERE         reduce using rule 171 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 260

<<<<<<< HEAD
    (161) expComp -> datatype OL_MENORIGUALQUE datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_OR            reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_IS            reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_AS            reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    ID              reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    STRING          reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    CHARACTER       reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_COMA          reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FROM          reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_UNION         reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PARDER        reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_GROUP         reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_ORDER         reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_THEN          reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INNER         reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LEFT          reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FULL          reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_WHERE         reduce using rule 161 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (192) expSubq -> datatype OL_MENORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 355
>>>>>>> main


state 261

<<<<<<< HEAD
    (182) expSubq -> datatype OL_MENORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 358
=======
    (172) expComp -> datatype S_IGUAL datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_OR            reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_IS            reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_AS            reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    ID              reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    STRING          reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    CHARACTER       reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    S_COMA          reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_FROM          reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    S_PUNTOCOMA     reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_UNION         reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_INTERSECT     reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_EXCEPT        reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    S_PARDER        reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_GROUP         reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_LIMIT         reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_ORDER         reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_THEN          reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_NATURAL       reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_INNER         reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_LEFT          reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_RIGHT         reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_FULL          reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    R_WHERE         reduce using rule 172 (expComp -> datatype S_IGUAL datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 262

<<<<<<< HEAD
    (162) expComp -> datatype S_IGUAL datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_OR            reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_IS            reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_AS            reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    ID              reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    STRING          reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    CHARACTER       reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    S_COMA          reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_FROM          reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    S_PUNTOCOMA     reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_UNION         reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_INTERSECT     reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_EXCEPT        reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    S_PARDER        reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_GROUP         reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_ORDER         reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_LIMIT         reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_THEN          reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_NATURAL       reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_INNER         reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_LEFT          reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_RIGHT         reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_FULL          reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    R_WHERE         reduce using rule 162 (expComp -> datatype S_IGUAL datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (173) expComp -> datatype OL_DISTINTODE datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_OR            reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_IS            reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_AS            reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    ID              reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    STRING          reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    CHARACTER       reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    S_COMA          reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FROM          reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PUNTOCOMA     reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_UNION         reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INTERSECT     reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_EXCEPT        reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PARDER        reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_GROUP         reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LIMIT         reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_ORDER         reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_THEN          reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_NATURAL       reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INNER         reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LEFT          reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_RIGHT         reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FULL          reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    R_WHERE         reduce using rule 173 (expComp -> datatype OL_DISTINTODE datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 263

<<<<<<< HEAD
    (163) expComp -> datatype OL_DISTINTODE datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_OR            reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_IS            reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_AS            reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    ID              reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    STRING          reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    CHARACTER       reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    S_COMA          reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FROM          reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PUNTOCOMA     reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_UNION         reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INTERSECT     reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_EXCEPT        reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PARDER        reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_GROUP         reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_ORDER         reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LIMIT         reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_THEN          reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_NATURAL       reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INNER         reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LEFT          reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_RIGHT         reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FULL          reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    R_WHERE         reduce using rule 163 (expComp -> datatype OL_DISTINTODE datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (194) expSubq -> datatype OL_DISTINTODE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 356
>>>>>>> main


state 264

<<<<<<< HEAD
    (184) expSubq -> datatype OL_DISTINTODE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 359
=======
    (174) expComp -> datatype R_IS R_DISTINCT . R_FROM datatype
    (198) expSubq -> datatype R_IS R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 357
>>>>>>> main


state 265

<<<<<<< HEAD
    (164) expComp -> datatype R_IS R_DISTINCT . R_FROM datatype
    (188) expSubq -> datatype R_IS R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 360

=======
    (175) expComp -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype
    (185) expComp -> datatype R_IS R_NOT . R_NULL
    (186) expComp -> datatype R_IS R_NOT . R_TRUE
    (187) expComp -> datatype R_IS R_NOT . R_FALSE
    (188) expComp -> datatype R_IS R_NOT . R_UNKNOWN
    (199) expSubq -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> datatype R_IS R_NOT . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> datatype R_IS R_NOT . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> datatype R_IS R_NOT . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> datatype R_IS R_NOT . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 358
    R_NULL          shift and go to state 359
    R_TRUE          shift and go to state 360
    R_FALSE         shift and go to state 361
    R_UNKNOWN       shift and go to state 362
>>>>>>> main


<<<<<<< HEAD
    (165) expComp -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype
    (175) expComp -> datatype R_IS R_NOT . R_NULL
    (176) expComp -> datatype R_IS R_NOT . R_TRUE
    (177) expComp -> datatype R_IS R_NOT . R_FALSE
    (178) expComp -> datatype R_IS R_NOT . R_UNKNOWN
    (189) expSubq -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> datatype R_IS R_NOT . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> datatype R_IS R_NOT . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> datatype R_IS R_NOT . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> datatype R_IS R_NOT . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 361
    R_NULL          shift and go to state 362
    R_TRUE          shift and go to state 363
    R_FALSE         shift and go to state 364
    R_UNKNOWN       shift and go to state 365
=======
state 266
>>>>>>> main

    (181) expComp -> datatype R_IS R_NULL .
    (200) expSubq -> datatype R_IS R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_OR            reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_IS            reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_AS            reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    ID              reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    STRING          reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    CHARACTER       reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    S_COMA          reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_FROM          reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    S_PUNTOCOMA     reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_UNION         reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_INTERSECT     reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_EXCEPT        reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    S_PARDER        reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_GROUP         reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_LIMIT         reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_ORDER         reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_THEN          reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_NATURAL       reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_INNER         reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_LEFT          reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_RIGHT         reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_FULL          reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_WHERE         reduce using rule 181 (expComp -> datatype R_IS R_NULL .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 363

state 267

<<<<<<< HEAD
    (171) expComp -> datatype R_IS R_NULL .
    (190) expSubq -> datatype R_IS R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_OR            reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_IS            reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_AS            reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    ID              reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    STRING          reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    CHARACTER       reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    S_COMA          reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_FROM          reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    S_PUNTOCOMA     reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_UNION         reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_INTERSECT     reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_EXCEPT        reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    S_PARDER        reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_GROUP         reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_ORDER         reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_LIMIT         reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_THEN          reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_NATURAL       reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_INNER         reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_LEFT          reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_RIGHT         reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_FULL          reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_WHERE         reduce using rule 171 (expComp -> datatype R_IS R_NULL .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 366

state 268

    (172) expComp -> datatype R_IS R_TRUE .
    (194) expSubq -> datatype R_IS R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_OR            reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_IS            reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_AS            reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    ID              reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    STRING          reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    CHARACTER       reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    S_COMA          reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_FROM          reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_UNION         reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    S_PARDER        reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_GROUP         reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_ORDER         reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_LIMIT         reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_THEN          reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_NATURAL       reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_INNER         reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_LEFT          reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_RIGHT         reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_FULL          reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_WHERE         reduce using rule 172 (expComp -> datatype R_IS R_TRUE .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 367

state 269

    (173) expComp -> datatype R_IS R_FALSE .
    (196) expSubq -> datatype R_IS R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_OR            reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_IS            reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_AS            reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    ID              reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    STRING          reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    CHARACTER       reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    S_COMA          reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_FROM          reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_UNION         reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    S_PARDER        reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_GROUP         reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_ORDER         reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_LIMIT         reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_THEN          reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_NATURAL       reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_INNER         reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_LEFT          reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_RIGHT         reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_FULL          reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_WHERE         reduce using rule 173 (expComp -> datatype R_IS R_FALSE .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 368

state 270

    (174) expComp -> datatype R_IS R_UNKNOWN .
    (198) expSubq -> datatype R_IS R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_OR            reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_IS            reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_AS            reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    ID              reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    STRING          reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 174 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 369

state 271

    (166) expComp -> datatype R_BETWEEN datatype . R_AND datatype
    (185) expSubq -> datatype R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 370
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150


state 272

    (168) expComp -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype
    (187) expSubq -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 371
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 273

    (192) expSubq -> datatype R_ISNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 372
=======
    (182) expComp -> datatype R_IS R_TRUE .
    (204) expSubq -> datatype R_IS R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_OR            reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_IS            reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_AS            reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    ID              reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    STRING          reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    CHARACTER       reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    S_COMA          reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_FROM          reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_UNION         reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    S_PARDER        reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_GROUP         reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_LIMIT         reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_ORDER         reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_THEN          reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_NATURAL       reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_INNER         reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_LEFT          reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_RIGHT         reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_FULL          reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_WHERE         reduce using rule 182 (expComp -> datatype R_IS R_TRUE .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 364

state 268

    (183) expComp -> datatype R_IS R_FALSE .
    (206) expSubq -> datatype R_IS R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_OR            reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_IS            reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_AS            reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    ID              reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    STRING          reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    CHARACTER       reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    S_COMA          reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_FROM          reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_UNION         reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    S_PARDER        reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_GROUP         reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_LIMIT         reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_ORDER         reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_THEN          reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_NATURAL       reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_INNER         reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_LEFT          reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_RIGHT         reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_FULL          reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_WHERE         reduce using rule 183 (expComp -> datatype R_IS R_FALSE .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 365

state 269

    (184) expComp -> datatype R_IS R_UNKNOWN .
    (208) expSubq -> datatype R_IS R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_OR            reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_IS            reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_AS            reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    ID              reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    STRING          reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 184 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 366

state 270

    (176) expComp -> datatype R_BETWEEN datatype . R_AND datatype
    (195) expSubq -> datatype R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 367
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149


state 271

    (178) expComp -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype
    (197) expSubq -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 368
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 272

    (202) expSubq -> datatype R_ISNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 369


state 273

    (203) expSubq -> datatype R_NOTNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 370
>>>>>>> main


state 274

<<<<<<< HEAD
    (193) expSubq -> datatype R_NOTNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 373
=======
    (193) expSubq -> datatype OL_ESIGUAL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 371
>>>>>>> main


state 275

<<<<<<< HEAD
    (183) expSubq -> datatype OL_ESIGUAL subqValues . S_PARIZQ selectStmt S_PARDER
=======
    (221) expBool -> expBool R_AND expBool .
    (221) expBool -> expBool . R_AND expBool
    (222) expBool -> expBool . R_OR expBool
    (225) expBool -> expBool . optBoolPredicate
    (227) optBoolPredicate -> . R_IS R_TRUE
    (228) optBoolPredicate -> . R_IS R_FALSE
    (229) optBoolPredicate -> . R_IS R_UNKNOWN
    (230) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (231) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (232) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_OR            reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_AS            reduce using rule 221 (expBool -> expBool R_AND expBool .)
    ID              reduce using rule 221 (expBool -> expBool R_AND expBool .)
    STRING          reduce using rule 221 (expBool -> expBool R_AND expBool .)
    CHARACTER       reduce using rule 221 (expBool -> expBool R_AND expBool .)
    S_COMA          reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_FROM          reduce using rule 221 (expBool -> expBool R_AND expBool .)
    S_PUNTOCOMA     reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_UNION         reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_INTERSECT     reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_EXCEPT        reduce using rule 221 (expBool -> expBool R_AND expBool .)
    S_PARDER        reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_GROUP         reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_LIMIT         reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_ORDER         reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_THEN          reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_NATURAL       reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_INNER         reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_LEFT          reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_RIGHT         reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_FULL          reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_WHERE         reduce using rule 221 (expBool -> expBool R_AND expBool .)
    R_IS            shift and go to state 166

  ! R_IS            [ reduce using rule 221 (expBool -> expBool R_AND expBool .) ]
  ! R_AND           [ shift and go to state 163 ]
  ! R_OR            [ shift and go to state 164 ]

    optBoolPredicate               shift and go to state 165
>>>>>>> main

    S_PARIZQ        shift and go to state 374

<<<<<<< HEAD

state 276

    (211) expBool -> expBool R_AND expBool .
    (211) expBool -> expBool . R_AND expBool
    (212) expBool -> expBool . R_OR expBool
    (215) expBool -> expBool . optBoolPredicate
    (217) optBoolPredicate -> . R_IS R_TRUE
    (218) optBoolPredicate -> . R_IS R_FALSE
    (219) optBoolPredicate -> . R_IS R_UNKNOWN
    (220) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (221) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (222) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_OR            reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_AS            reduce using rule 211 (expBool -> expBool R_AND expBool .)
    ID              reduce using rule 211 (expBool -> expBool R_AND expBool .)
    STRING          reduce using rule 211 (expBool -> expBool R_AND expBool .)
    CHARACTER       reduce using rule 211 (expBool -> expBool R_AND expBool .)
    S_COMA          reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_FROM          reduce using rule 211 (expBool -> expBool R_AND expBool .)
    S_PUNTOCOMA     reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_UNION         reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_INTERSECT     reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_EXCEPT        reduce using rule 211 (expBool -> expBool R_AND expBool .)
    S_PARDER        reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_GROUP         reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_ORDER         reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_LIMIT         reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_THEN          reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_NATURAL       reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_INNER         reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_LEFT          reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_RIGHT         reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_FULL          reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_WHERE         reduce using rule 211 (expBool -> expBool R_AND expBool .)
    R_IS            shift and go to state 167

  ! R_IS            [ reduce using rule 211 (expBool -> expBool R_AND expBool .) ]
  ! R_AND           [ shift and go to state 164 ]
  ! R_OR            [ shift and go to state 165 ]

    optBoolPredicate               shift and go to state 166

state 277

    (212) expBool -> expBool R_OR expBool .
    (211) expBool -> expBool . R_AND expBool
    (212) expBool -> expBool . R_OR expBool
    (215) expBool -> expBool . optBoolPredicate
    (217) optBoolPredicate -> . R_IS R_TRUE
    (218) optBoolPredicate -> . R_IS R_FALSE
    (219) optBoolPredicate -> . R_IS R_UNKNOWN
    (220) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (221) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (222) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_OR            reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_AS            reduce using rule 212 (expBool -> expBool R_OR expBool .)
    ID              reduce using rule 212 (expBool -> expBool R_OR expBool .)
    STRING          reduce using rule 212 (expBool -> expBool R_OR expBool .)
    CHARACTER       reduce using rule 212 (expBool -> expBool R_OR expBool .)
    S_COMA          reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_FROM          reduce using rule 212 (expBool -> expBool R_OR expBool .)
    S_PUNTOCOMA     reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_UNION         reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_INTERSECT     reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_EXCEPT        reduce using rule 212 (expBool -> expBool R_OR expBool .)
    S_PARDER        reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_GROUP         reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_ORDER         reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_LIMIT         reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_THEN          reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_NATURAL       reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_INNER         reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_LEFT          reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_RIGHT         reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_FULL          reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_WHERE         reduce using rule 212 (expBool -> expBool R_OR expBool .)
    R_IS            shift and go to state 167

  ! R_IS            [ reduce using rule 212 (expBool -> expBool R_OR expBool .) ]
  ! R_AND           [ shift and go to state 164 ]
  ! R_OR            [ shift and go to state 165 ]

    optBoolPredicate               shift and go to state 166

state 278

    (217) optBoolPredicate -> R_IS R_TRUE .

    R_AND           reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_OR            reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_IS            reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_AS            reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    ID              reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    STRING          reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    CHARACTER       reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    S_COMA          reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_FROM          reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_UNION         reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    S_PARDER        reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_GROUP         reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_ORDER         reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_LIMIT         reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_THEN          reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_NATURAL       reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_INNER         reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_LEFT          reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_RIGHT         reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_FULL          reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
    R_WHERE         reduce using rule 217 (optBoolPredicate -> R_IS R_TRUE .)
=======
    (222) expBool -> expBool R_OR expBool .
    (221) expBool -> expBool . R_AND expBool
    (222) expBool -> expBool . R_OR expBool
    (225) expBool -> expBool . optBoolPredicate
    (227) optBoolPredicate -> . R_IS R_TRUE
    (228) optBoolPredicate -> . R_IS R_FALSE
    (229) optBoolPredicate -> . R_IS R_UNKNOWN
    (230) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (231) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (232) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_OR            reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_AS            reduce using rule 222 (expBool -> expBool R_OR expBool .)
    ID              reduce using rule 222 (expBool -> expBool R_OR expBool .)
    STRING          reduce using rule 222 (expBool -> expBool R_OR expBool .)
    CHARACTER       reduce using rule 222 (expBool -> expBool R_OR expBool .)
    S_COMA          reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_FROM          reduce using rule 222 (expBool -> expBool R_OR expBool .)
    S_PUNTOCOMA     reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_UNION         reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_INTERSECT     reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_EXCEPT        reduce using rule 222 (expBool -> expBool R_OR expBool .)
    S_PARDER        reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_GROUP         reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_LIMIT         reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_ORDER         reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_THEN          reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_NATURAL       reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_INNER         reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_LEFT          reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_RIGHT         reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_FULL          reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_WHERE         reduce using rule 222 (expBool -> expBool R_OR expBool .)
    R_IS            shift and go to state 166

  ! R_IS            [ reduce using rule 222 (expBool -> expBool R_OR expBool .) ]
  ! R_AND           [ shift and go to state 163 ]
  ! R_OR            [ shift and go to state 164 ]

    optBoolPredicate               shift and go to state 165

state 277

    (227) optBoolPredicate -> R_IS R_TRUE .

    R_AND           reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_OR            reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_IS            reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_AS            reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    ID              reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    STRING          reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    CHARACTER       reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    S_COMA          reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_FROM          reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_UNION         reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    S_PARDER        reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_GROUP         reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_LIMIT         reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_ORDER         reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_THEN          reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_NATURAL       reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_INNER         reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_LEFT          reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_RIGHT         reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_FULL          reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)
    R_WHERE         reduce using rule 227 (optBoolPredicate -> R_IS R_TRUE .)


state 278

    (228) optBoolPredicate -> R_IS R_FALSE .

    R_AND           reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_OR            reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_IS            reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_AS            reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    ID              reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    STRING          reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    CHARACTER       reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    S_COMA          reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_FROM          reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_UNION         reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    S_PARDER        reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_GROUP         reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_LIMIT         reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_ORDER         reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_THEN          reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_NATURAL       reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_INNER         reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_LEFT          reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_RIGHT         reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_FULL          reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
    R_WHERE         reduce using rule 228 (optBoolPredicate -> R_IS R_FALSE .)
>>>>>>> main


state 279

<<<<<<< HEAD
    (218) optBoolPredicate -> R_IS R_FALSE .

    R_AND           reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_OR            reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_IS            reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_AS            reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    ID              reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    STRING          reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    CHARACTER       reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    S_COMA          reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_FROM          reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_UNION         reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    S_PARDER        reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_GROUP         reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_ORDER         reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_LIMIT         reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_THEN          reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_NATURAL       reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_INNER         reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_LEFT          reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_RIGHT         reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_FULL          reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
    R_WHERE         reduce using rule 218 (optBoolPredicate -> R_IS R_FALSE .)
=======
    (229) optBoolPredicate -> R_IS R_UNKNOWN .

    R_AND           reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_OR            reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_IS            reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_AS            reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    ID              reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    STRING          reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 229 (optBoolPredicate -> R_IS R_UNKNOWN .)
>>>>>>> main


state 280

<<<<<<< HEAD
    (219) optBoolPredicate -> R_IS R_UNKNOWN .

    R_AND           reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_OR            reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_IS            reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_AS            reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    ID              reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    STRING          reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 219 (optBoolPredicate -> R_IS R_UNKNOWN .)
=======
    (230) optBoolPredicate -> R_IS R_NOT . R_TRUE
    (231) optBoolPredicate -> R_IS R_NOT . R_FALSE
    (232) optBoolPredicate -> R_IS R_NOT . R_UNKNOWN

    R_TRUE          shift and go to state 372
    R_FALSE         shift and go to state 373
    R_UNKNOWN       shift and go to state 374
>>>>>>> main


state 281

<<<<<<< HEAD
    (220) optBoolPredicate -> R_IS R_NOT . R_TRUE
    (221) optBoolPredicate -> R_IS R_NOT . R_FALSE
    (222) optBoolPredicate -> R_IS R_NOT . R_UNKNOWN

    R_TRUE          shift and go to state 375
    R_FALSE         shift and go to state 376
    R_UNKNOWN       shift and go to state 377
=======
    (108) expresion -> S_PARIZQ selectStmt S_PARDER .
>>>>>>> main

    R_AS            reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 108 (expresion -> S_PARIZQ selectStmt S_PARDER .)


<<<<<<< HEAD
    (98) expresion -> S_PARIZQ selectStmt S_PARDER .

    R_AS            reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 98 (expresion -> S_PARIZQ selectStmt S_PARDER .)
=======
state 282

    (167) datatype -> S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 167 (datatype -> S_PARIZQ datatype S_PARDER .)
>>>>>>> main


state 283

<<<<<<< HEAD
    (157) datatype -> S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 157 (datatype -> S_PARIZQ datatype S_PARDER .)
=======
    (224) expBool -> S_PARIZQ expBool S_PARDER .

    R_AND           reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_OR            reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_IS            reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_AS            reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    ID              reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    STRING          reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    CHARACTER       reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_COMA          reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FROM          reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PUNTOCOMA     reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_UNION         reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INTERSECT     reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_EXCEPT        reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PARDER        reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_GROUP         reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LIMIT         reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_ORDER         reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_THEN          reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_NATURAL       reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INNER         reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LEFT          reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_RIGHT         reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FULL          reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_WHERE         reduce using rule 224 (expBool -> S_PARIZQ expBool S_PARDER .)
>>>>>>> main


state 284

<<<<<<< HEAD
    (214) expBool -> S_PARIZQ expBool S_PARDER .

    R_AND           reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_OR            reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_IS            reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_AS            reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    ID              reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    STRING          reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    CHARACTER       reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_COMA          reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FROM          reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PUNTOCOMA     reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_UNION         reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INTERSECT     reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_EXCEPT        reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PARDER        reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_GROUP         reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_ORDER         reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LIMIT         reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_THEN          reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_NATURAL       reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INNER         reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LEFT          reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_RIGHT         reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FULL          reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_WHERE         reduce using rule 214 (expBool -> S_PARIZQ expBool S_PARDER .)

=======
    (234) columnName -> ID S_PUNTO . ID
>>>>>>> main

    ID              shift and go to state 235

<<<<<<< HEAD
    (224) columnName -> ID S_PUNTO . ID

    ID              shift and go to state 236
=======

state 285

    (167) datatype -> S_PARIZQ datatype . S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 282
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 286

<<<<<<< HEAD
    (157) datatype -> S_PARIZQ datatype . S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 283
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (153) datatype -> R_CASE caseList optElse . R_END
>>>>>>> main

    R_END           shift and go to state 375


<<<<<<< HEAD
    (143) datatype -> R_CASE caseList optElse . R_END

    R_END           shift and go to state 378
=======
state 287
>>>>>>> main

    (154) caseList -> caseList caseWhen .

    R_ELSE          reduce using rule 154 (caseList -> caseList caseWhen .)
    R_WHEN          reduce using rule 154 (caseList -> caseList caseWhen .)
    R_END           reduce using rule 154 (caseList -> caseList caseWhen .)

<<<<<<< HEAD
    (144) caseList -> caseList caseWhen .

    R_ELSE          reduce using rule 144 (caseList -> caseList caseWhen .)
    R_WHEN          reduce using rule 144 (caseList -> caseList caseWhen .)
    R_END           reduce using rule 144 (caseList -> caseList caseWhen .)
=======

state 288
>>>>>>> main

    (157) optElse -> R_ELSE . literal
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL

    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89

    literal                        shift and go to state 376

state 289

<<<<<<< HEAD
    (147) optElse -> R_ELSE . literal
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL

    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90

    literal                        shift and go to state 379

state 290

    (146) caseWhen -> R_WHEN expBool . R_THEN literal
    (211) expBool -> expBool . R_AND expBool
    (212) expBool -> expBool . R_OR expBool
    (215) expBool -> expBool . optBoolPredicate
    (217) optBoolPredicate -> . R_IS R_TRUE
    (218) optBoolPredicate -> . R_IS R_FALSE
    (219) optBoolPredicate -> . R_IS R_UNKNOWN
    (220) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (221) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (222) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN
=======
    (156) caseWhen -> R_WHEN expBool . R_THEN literal
    (221) expBool -> expBool . R_AND expBool
    (222) expBool -> expBool . R_OR expBool
    (225) expBool -> expBool . optBoolPredicate
    (227) optBoolPredicate -> . R_IS R_TRUE
    (228) optBoolPredicate -> . R_IS R_FALSE
    (229) optBoolPredicate -> . R_IS R_UNKNOWN
    (230) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (231) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (232) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_THEN          shift and go to state 377
    R_AND           shift and go to state 163
    R_OR            shift and go to state 164
    R_IS            shift and go to state 166

    optBoolPredicate               shift and go to state 165

state 290

    (111) funcCall -> R_NOW S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    ID              reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    STRING          reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 111 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
>>>>>>> main

    R_THEN          shift and go to state 380
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166

<<<<<<< HEAD
state 291

    (101) funcCall -> R_NOW S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    ID              reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    STRING          reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 101 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
=======
    (112) funcCall -> R_COUNT S_PARIZQ datatype . S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 378
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 292

<<<<<<< HEAD
    (102) funcCall -> R_COUNT S_PARIZQ datatype . S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 381
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (113) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO . S_PARDER

    S_PARDER        shift and go to state 379
>>>>>>> main


state 293

<<<<<<< HEAD
    (103) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO . S_PARDER

    S_PARDER        shift and go to state 382
=======
    (114) funcCall -> R_SUM S_PARIZQ datatype . S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 380
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 294

<<<<<<< HEAD
    (104) funcCall -> R_SUM S_PARIZQ datatype . S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 383
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (115) funcCall -> R_PROM S_PARIZQ datatype . S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 381
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 295

<<<<<<< HEAD
    (105) funcCall -> R_PROM S_PARIZQ datatype . S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 384
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (116) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM timeStamp S_PARDER
    (117) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM columnName S_PARDER

    R_FROM          shift and go to state 382
>>>>>>> main


state 296

<<<<<<< HEAD
    (106) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM timeStamp S_PARDER
    (107) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM columnName S_PARDER

    R_FROM          shift and go to state 385
=======
    (120) optsExtract -> R_YEAR .

    R_FROM          reduce using rule 120 (optsExtract -> R_YEAR .)
>>>>>>> main


state 297

<<<<<<< HEAD
    (110) optsExtract -> R_YEAR .

    R_FROM          reduce using rule 110 (optsExtract -> R_YEAR .)
=======
    (121) optsExtract -> R_MONTH .

    R_FROM          reduce using rule 121 (optsExtract -> R_MONTH .)
>>>>>>> main


state 298

<<<<<<< HEAD
    (111) optsExtract -> R_MONTH .

    R_FROM          reduce using rule 111 (optsExtract -> R_MONTH .)
=======
    (122) optsExtract -> R_DAY .

    R_FROM          reduce using rule 122 (optsExtract -> R_DAY .)
>>>>>>> main


state 299

<<<<<<< HEAD
    (112) optsExtract -> R_DAY .

    R_FROM          reduce using rule 112 (optsExtract -> R_DAY .)
=======
    (123) optsExtract -> R_HOUR .

    R_FROM          reduce using rule 123 (optsExtract -> R_HOUR .)
>>>>>>> main


state 300

<<<<<<< HEAD
    (113) optsExtract -> R_HOUR .

    R_FROM          reduce using rule 113 (optsExtract -> R_HOUR .)
=======
    (124) optsExtract -> R_MINUTE .

    R_FROM          reduce using rule 124 (optsExtract -> R_MINUTE .)
>>>>>>> main


state 301

<<<<<<< HEAD
    (114) optsExtract -> R_MINUTE .

    R_FROM          reduce using rule 114 (optsExtract -> R_MINUTE .)
=======
    (125) optsExtract -> R_SECOND .

    R_FROM          reduce using rule 125 (optsExtract -> R_SECOND .)
>>>>>>> main


state 302

<<<<<<< HEAD
    (115) optsExtract -> R_SECOND .

    R_FROM          reduce using rule 115 (optsExtract -> R_SECOND .)
=======
    (126) datePart -> R_DATE_PART S_PARIZQ STRING . S_COMA dateSource S_PARDER

    S_COMA          shift and go to state 383
>>>>>>> main


state 303

<<<<<<< HEAD
    (116) datePart -> R_DATE_PART S_PARIZQ STRING . S_COMA dateSource S_PARDER

    S_COMA          shift and go to state 386
=======
    (216) boolean -> R_EXISTS S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 384
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 304

<<<<<<< HEAD
    (206) boolean -> R_EXISTS S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 387
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (210) expSubq -> stringExp R_LIKE STRING .

    R_AND           reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_OR            reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_IS            reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_AS            reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    ID              reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    STRING          reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    CHARACTER       reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    S_COMA          reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_FROM          reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    S_PUNTOCOMA     reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_UNION         reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_INTERSECT     reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_EXCEPT        reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    S_PARDER        reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_GROUP         reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_LIMIT         reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_ORDER         reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_THEN          reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_NATURAL       reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_INNER         reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_LEFT          reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_RIGHT         reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_FULL          reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
    R_WHERE         reduce using rule 210 (expSubq -> stringExp R_LIKE STRING .)
>>>>>>> main


state 305

<<<<<<< HEAD
    (200) expSubq -> stringExp R_LIKE STRING .

    R_AND           reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_OR            reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_IS            reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_AS            reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    ID              reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    STRING          reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    CHARACTER       reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    S_COMA          reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_FROM          reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    S_PUNTOCOMA     reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_UNION         reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_INTERSECT     reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_EXCEPT        reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    S_PARDER        reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_GROUP         reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_ORDER         reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_LIMIT         reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_THEN          reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_NATURAL       reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_INNER         reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_LEFT          reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_RIGHT         reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_FULL          reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
    R_WHERE         reduce using rule 200 (expSubq -> stringExp R_LIKE STRING .)
=======
    (19) createOpts -> unique_index R_INDEX ID R_ON . ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    ID              shift and go to state 385
>>>>>>> main


state 306

<<<<<<< HEAD
    (352) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list . S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (354) params_list -> params_list . param_item
    (356) param_item -> . R_NULL

    S_PARDER        shift and go to state 388
    R_NULL          shift and go to state 308

    param_item                     shift and go to state 389

state 307

    (355) params_list -> param_item .

    S_PARDER        reduce using rule 355 (params_list -> param_item .)
    R_NULL          reduce using rule 355 (params_list -> param_item .)
=======
    (30) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ . createTableList S_PARDER inheritsOpt
    (47) createTableList -> . createTableList S_COMA createTable
    (48) createTableList -> . createTable
    (49) createTable -> . ID types createColumns
    (50) createTable -> . createConstraint
    (51) createTable -> . createUnique
    (52) createTable -> . createPrimary
    (53) createTable -> . createForeign
    (56) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (57) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (58) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (59) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (60) constrName -> . R_CONSTRAINT ID
    (61) constrName -> .

    ID              shift and go to state 388
    R_UNIQUE        shift and go to state 394
    R_PRIMARY       shift and go to state 321
    R_CONSTRAINT    shift and go to state 322
    R_CHECK         reduce using rule 61 (constrName -> .)
    R_FOREIGN       reduce using rule 61 (constrName -> .)

    createTableList                shift and go to state 386
    createTable                    shift and go to state 387
    createConstraint               shift and go to state 389
    createUnique                   shift and go to state 390
    createPrimary                  shift and go to state 391
    createForeign                  shift and go to state 392
    constrName                     shift and go to state 393

state 307

    (35) ifNotExists -> R_IF R_NOT R_EXISTS .

    ID              reduce using rule 35 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    STRING          reduce using rule 35 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    CHARACTER       reduce using rule 35 (ifNotExists -> R_IF R_NOT R_EXISTS .)
>>>>>>> main


state 308

<<<<<<< HEAD
    (356) param_item -> R_NULL .

    S_PARDER        reduce using rule 356 (param_item -> R_NULL .)
    R_NULL          reduce using rule 356 (param_item -> R_NULL .)
=======
    (31) createOpts -> orReplace R_DATABASE ifNotExists idOrString . createOwner createMode
    (39) createOwner -> . R_OWNER ID
    (40) createOwner -> . R_OWNER STRING
    (41) createOwner -> . R_OWNER S_IGUAL ID
    (42) createOwner -> . R_OWNER S_IGUAL STRING
    (43) createOwner -> .

    R_OWNER         shift and go to state 396
    R_MODE          reduce using rule 43 (createOwner -> .)
    S_PUNTOCOMA     reduce using rule 43 (createOwner -> .)
>>>>>>> main

    createOwner                    shift and go to state 395

state 309

<<<<<<< HEAD
    (20) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ . createTableList S_PARDER inheritsOpt
    (37) createTableList -> . createTableList S_COMA createTable
    (38) createTableList -> . createTable
    (39) createTable -> . ID types createColumns
    (40) createTable -> . createConstraint
    (41) createTable -> . createUnique
    (42) createTable -> . createPrimary
    (43) createTable -> . createForeign
    (46) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (47) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (48) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (49) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (50) constrName -> . R_CONSTRAINT ID
    (51) constrName -> .

    ID              shift and go to state 392
    R_UNIQUE        shift and go to state 398
    R_PRIMARY       shift and go to state 324
    R_CONSTRAINT    shift and go to state 325
    R_CHECK         reduce using rule 51 (constrName -> .)
    R_FOREIGN       reduce using rule 51 (constrName -> .)

    createTableList                shift and go to state 390
    createTable                    shift and go to state 391
    createConstraint               shift and go to state 393
    createUnique                   shift and go to state 394
    createPrimary                  shift and go to state 395
    createForeign                  shift and go to state 396
    constrName                     shift and go to state 397

state 310

    (25) ifNotExists -> R_IF R_NOT R_EXISTS .

    ID              reduce using rule 25 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    STRING          reduce using rule 25 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    CHARACTER       reduce using rule 25 (ifNotExists -> R_IF R_NOT R_EXISTS .)
=======
    (34) createOpts -> R_TYPE ifNotExists ID R_AS . R_ENUM S_PARIZQ paramsList S_PARDER

    R_ENUM          shift and go to state 397


state 310

    (252) alterDb -> R_RENAME R_TO . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120
>>>>>>> main

    idOrString                     shift and go to state 398

state 311

<<<<<<< HEAD
    (21) createOpts -> orReplace R_DATABASE ifNotExists idOrString . createOwner createMode
    (29) createOwner -> . R_OWNER ID
    (30) createOwner -> . R_OWNER STRING
    (31) createOwner -> . R_OWNER S_IGUAL ID
    (32) createOwner -> . R_OWNER S_IGUAL STRING
    (33) createOwner -> .

    R_OWNER         shift and go to state 400
    R_MODE          reduce using rule 33 (createOwner -> .)
    S_PUNTOCOMA     reduce using rule 33 (createOwner -> .)

    createOwner                    shift and go to state 399

state 312

    (24) createOpts -> R_TYPE ifNotExists ID R_AS . R_ENUM S_PARIZQ paramsList S_PARDER

    R_ENUM          shift and go to state 401
=======
    (253) alterDb -> R_OWNER R_TO . ownerOPts
    (254) ownerOPts -> . idOrString
    (255) ownerOPts -> . R_CURRENT_USER
    (256) ownerOPts -> . R_SESSION_USER
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_CURRENT_USER  shift and go to state 401
    R_SESSION_USER  shift and go to state 402
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    ownerOPts                      shift and go to state 399
    idOrString                     shift and go to state 400

state 312

    (260) alterTable -> R_ALTER alterAlter .

    S_COMA          reduce using rule 260 (alterTable -> R_ALTER alterAlter .)
    S_PUNTOCOMA     reduce using rule 260 (alterTable -> R_ALTER alterAlter .)
>>>>>>> main


state 313

<<<<<<< HEAD
    (242) alterDb -> R_RENAME R_TO . idOrString
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121
=======
    (268) alterAlter -> R_COLUMN . ID R_SET nullOpt
    (269) alterAlter -> R_COLUMN . ID R_SET defaultVal
    (270) alterAlter -> R_COLUMN . ID R_TYPE types

    ID              shift and go to state 403
>>>>>>> main

    idOrString                     shift and go to state 402

state 314

<<<<<<< HEAD
    (243) alterDb -> R_OWNER R_TO . ownerOPts
    (244) ownerOPts -> . idOrString
    (245) ownerOPts -> . R_CURRENT_USER
    (246) ownerOPts -> . R_SESSION_USER
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    R_CURRENT_USER  shift and go to state 405
    R_SESSION_USER  shift and go to state 406
    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    ownerOPts                      shift and go to state 403
    idOrString                     shift and go to state 404

state 315

    (250) alterTable -> R_ALTER alterAlter .

    S_COMA          reduce using rule 250 (alterTable -> R_ALTER alterAlter .)
    S_PUNTOCOMA     reduce using rule 250 (alterTable -> R_ALTER alterAlter .)
=======
    (257) alterTableList -> alterTableList S_COMA . alterTable
    (259) alterTable -> . R_ADD alterAdd
    (260) alterTable -> . R_ALTER alterAlter
    (261) alterTable -> . R_DROP alterDrop
    (262) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 208
    R_ALTER         shift and go to state 205
    R_DROP          shift and go to state 209
    R_RENAME        shift and go to state 210

    alterTable                     shift and go to state 404

state 315

    (259) alterTable -> R_ADD alterAdd .

    S_COMA          reduce using rule 259 (alterTable -> R_ADD alterAdd .)
    S_PUNTOCOMA     reduce using rule 259 (alterTable -> R_ADD alterAdd .)
>>>>>>> main


state 316

<<<<<<< HEAD
    (258) alterAlter -> R_COLUMN . ID R_SET nullOpt
    (259) alterAlter -> R_COLUMN . ID R_SET defaultVal
    (260) alterAlter -> R_COLUMN . ID R_TYPE types

    ID              shift and go to state 407
=======
    (263) alterAdd -> R_COLUMN . ID types

    ID              shift and go to state 405
>>>>>>> main


state 317

<<<<<<< HEAD
    (247) alterTableList -> alterTableList S_COMA . alterTable
    (249) alterTable -> . R_ADD alterAdd
    (250) alterTable -> . R_ALTER alterAlter
    (251) alterTable -> . R_DROP alterDrop
    (252) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 209
    R_ALTER         shift and go to state 206
    R_DROP          shift and go to state 210
    R_RENAME        shift and go to state 211
=======
    (264) alterAdd -> createConstraint .

    S_COMA          reduce using rule 264 (alterAdd -> createConstraint .)
    S_PUNTOCOMA     reduce using rule 264 (alterAdd -> createConstraint .)
>>>>>>> main

    alterTable                     shift and go to state 408

state 318

<<<<<<< HEAD
    (249) alterTable -> R_ADD alterAdd .

    S_COMA          reduce using rule 249 (alterTable -> R_ADD alterAdd .)
    S_PUNTOCOMA     reduce using rule 249 (alterTable -> R_ADD alterAdd .)
=======
    (265) alterAdd -> createPrimary .

    S_COMA          reduce using rule 265 (alterAdd -> createPrimary .)
    S_PUNTOCOMA     reduce using rule 265 (alterAdd -> createPrimary .)
>>>>>>> main


state 319

<<<<<<< HEAD
    (253) alterAdd -> R_COLUMN . ID types

    ID              shift and go to state 409
=======
    (266) alterAdd -> createForeign .

    S_COMA          reduce using rule 266 (alterAdd -> createForeign .)
    S_PUNTOCOMA     reduce using rule 266 (alterAdd -> createForeign .)
>>>>>>> main


state 320

<<<<<<< HEAD
    (254) alterAdd -> createConstraint .

    S_COMA          reduce using rule 254 (alterAdd -> createConstraint .)
    S_PUNTOCOMA     reduce using rule 254 (alterAdd -> createConstraint .)
=======
    (267) alterAdd -> constrName . R_UNIQUE S_PARIZQ ID S_PARDER
    (56) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (59) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_UNIQUE        shift and go to state 406
    R_CHECK         shift and go to state 407
    R_FOREIGN       shift and go to state 408
>>>>>>> main


state 321

<<<<<<< HEAD
    (255) alterAdd -> createPrimary .

    S_COMA          reduce using rule 255 (alterAdd -> createPrimary .)
    S_PUNTOCOMA     reduce using rule 255 (alterAdd -> createPrimary .)
=======
    (58) createPrimary -> R_PRIMARY . R_KEY S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 409
>>>>>>> main


state 322

<<<<<<< HEAD
    (256) alterAdd -> createForeign .

    S_COMA          reduce using rule 256 (alterAdd -> createForeign .)
    S_PUNTOCOMA     reduce using rule 256 (alterAdd -> createForeign .)
=======
    (60) constrName -> R_CONSTRAINT . ID

    ID              shift and go to state 410
>>>>>>> main


state 323

<<<<<<< HEAD
    (257) alterAdd -> constrName . R_UNIQUE S_PARIZQ ID S_PARDER
    (46) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (49) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_UNIQUE        shift and go to state 410
    R_CHECK         shift and go to state 411
    R_FOREIGN       shift and go to state 412
=======
    (261) alterTable -> R_DROP alterDrop .

    S_COMA          reduce using rule 261 (alterTable -> R_DROP alterDrop .)
    S_PUNTOCOMA     reduce using rule 261 (alterTable -> R_DROP alterDrop .)
>>>>>>> main


state 324

<<<<<<< HEAD
    (48) createPrimary -> R_PRIMARY . R_KEY S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 413
=======
    (271) alterDrop -> R_CONSTRAINT . ID

    ID              shift and go to state 411
>>>>>>> main


state 325

<<<<<<< HEAD
    (50) constrName -> R_CONSTRAINT . ID

    ID              shift and go to state 414
=======
    (272) alterDrop -> R_COLUMN . ID

    ID              shift and go to state 412
>>>>>>> main


state 326

<<<<<<< HEAD
    (251) alterTable -> R_DROP alterDrop .

    S_COMA          reduce using rule 251 (alterTable -> R_DROP alterDrop .)
    S_PUNTOCOMA     reduce using rule 251 (alterTable -> R_DROP alterDrop .)
=======
    (262) alterTable -> R_RENAME alterRename .

    S_COMA          reduce using rule 262 (alterTable -> R_RENAME alterRename .)
    S_PUNTOCOMA     reduce using rule 262 (alterTable -> R_RENAME alterRename .)
>>>>>>> main


state 327

<<<<<<< HEAD
    (261) alterDrop -> R_CONSTRAINT . ID

    ID              shift and go to state 415
=======
    (273) alterRename -> R_COLUMN . ID R_TO ID

    ID              shift and go to state 413
>>>>>>> main


state 328

<<<<<<< HEAD
    (262) alterDrop -> R_COLUMN . ID

    ID              shift and go to state 416
=======
    (345) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 414
>>>>>>> main


state 329

<<<<<<< HEAD
    (252) alterTable -> R_RENAME alterRename .

    S_COMA          reduce using rule 252 (alterTable -> R_RENAME alterRename .)
    S_PUNTOCOMA     reduce using rule 252 (alterTable -> R_RENAME alterRename .)
=======
    (346) paramsColumn -> S_PARIZQ idList . S_PARDER
    (62) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 415
    S_COMA          shift and go to state 416
>>>>>>> main


state 330

<<<<<<< HEAD
    (263) alterRename -> R_COLUMN . ID R_TO ID

    ID              shift and go to state 417


state 331

    (335) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 418


state 332

    (336) paramsColumn -> S_PARIZQ idList . S_PARDER
    (52) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 419
    S_COMA          shift and go to state 420


state 333

    (53) idList -> ID .

    S_PARDER        reduce using rule 53 (idList -> ID .)
    S_COMA          reduce using rule 53 (idList -> ID .)


state 334

    (338) updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .

    S_PUNTOCOMA     reduce using rule 338 (updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .)


state 335

    (339) updateCols -> updateCols S_COMA . updateVals
    (341) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 219

    updateVals                     shift and go to state 421

state 336

    (341) updateVals -> ID S_IGUAL . updateExp
    (342) updateExp -> . datatype
    (343) updateExp -> . R_DEFAULT
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_DEFAULT       shift and go to state 424
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    updateExp                      shift and go to state 422
    datatype                       shift and go to state 423
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 337

    (292) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS . idOrString
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    idOrString                     shift and go to state 425

state 338

    (289) tableExp -> tableExp S_COMA fromBody .

    S_COMA          reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_WHERE         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    S_PUNTOCOMA     reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_NATURAL       reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_INNER         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_LEFT          reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_RIGHT         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_FULL          reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_GROUP         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_ORDER         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_LIMIT         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_UNION         reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_INTERSECT     reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    R_EXCEPT        reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
    S_PARDER        reduce using rule 289 (tableExp -> tableExp S_COMA fromBody .)
=======
    (63) idList -> ID .

    S_PARDER        reduce using rule 63 (idList -> ID .)
    S_COMA          reduce using rule 63 (idList -> ID .)
    R_DESC          reduce using rule 63 (idList -> ID .)
    R_ASC           reduce using rule 63 (idList -> ID .)
    R_NULLS         reduce using rule 63 (idList -> ID .)
>>>>>>> main


state 339

<<<<<<< HEAD
    (268) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (310) groupByCl -> . R_GROUP R_BY groupList havingCl
    (311) groupByCl -> .

    R_GROUP         shift and go to state 341
    R_ORDER         reduce using rule 311 (groupByCl -> .)
    R_LIMIT         reduce using rule 311 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 311 (groupByCl -> .)
    R_UNION         reduce using rule 311 (groupByCl -> .)
    R_INTERSECT     reduce using rule 311 (groupByCl -> .)
    R_EXCEPT        reduce using rule 311 (groupByCl -> .)
    S_PARDER        reduce using rule 311 (groupByCl -> .)

    groupByCl                      shift and go to state 426
=======
    (348) updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .

    S_PUNTOCOMA     reduce using rule 348 (updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .)

>>>>>>> main

state 340

<<<<<<< HEAD
    (269) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (318) orderByCl -> . R_ORDER R_BY orderList
    (319) orderByCl -> .

    R_ORDER         shift and go to state 428
    R_LIMIT         reduce using rule 319 (orderByCl -> .)
    S_PUNTOCOMA     reduce using rule 319 (orderByCl -> .)
    R_UNION         reduce using rule 319 (orderByCl -> .)
    R_INTERSECT     reduce using rule 319 (orderByCl -> .)
    R_EXCEPT        reduce using rule 319 (orderByCl -> .)
    S_PARDER        reduce using rule 319 (orderByCl -> .)

    orderByCl                      shift and go to state 427
=======
    (349) updateCols -> updateCols S_COMA . updateVals
    (351) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 218

    updateVals                     shift and go to state 417
>>>>>>> main

state 341

<<<<<<< HEAD
    (310) groupByCl -> R_GROUP . R_BY groupList havingCl

    R_BY            shift and go to state 429

=======
    (351) updateVals -> ID S_IGUAL . updateExp
    (352) updateExp -> . datatype
    (353) updateExp -> . R_DEFAULT
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_DEFAULT       shift and go to state 420
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    updateExp                      shift and go to state 418
    datatype                       shift and go to state 419
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 342

<<<<<<< HEAD
    (270) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl limitCl
    (310) groupByCl -> . R_GROUP R_BY groupList havingCl
    (311) groupByCl -> .

    R_GROUP         shift and go to state 341
    R_ORDER         reduce using rule 311 (groupByCl -> .)
    R_LIMIT         reduce using rule 311 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 311 (groupByCl -> .)
    R_UNION         reduce using rule 311 (groupByCl -> .)
    R_INTERSECT     reduce using rule 311 (groupByCl -> .)
    R_EXCEPT        reduce using rule 311 (groupByCl -> .)
    S_PARDER        reduce using rule 311 (groupByCl -> .)

    groupByCl                      shift and go to state 430
=======
    (303) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 421
>>>>>>> main

state 343

    (300) tableExp -> tableExp S_COMA fromBody .

    S_COMA          reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_WHERE         reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    S_PUNTOCOMA     reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_NATURAL       reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_INNER         reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_LEFT          reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_RIGHT         reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_FULL          reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_GROUP         reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_LIMIT         reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_ORDER         reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_UNION         reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_INTERSECT     reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    R_EXCEPT        reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)
    S_PARDER        reduce using rule 300 (tableExp -> tableExp S_COMA fromBody .)


state 344

<<<<<<< HEAD
    (296) joinCl -> joinOpt R_JOIN . columnName optAlias R_ON expBool
    (297) joinCl -> joinOpt R_JOIN . columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 432

    columnName                     shift and go to state 431
=======
    (278) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl . groupByCl limitCl
    (321) groupByCl -> . R_GROUP R_BY groupList havingCl
    (322) groupByCl -> .

    R_GROUP         shift and go to state 338
    R_LIMIT         reduce using rule 322 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 322 (groupByCl -> .)
    R_UNION         reduce using rule 322 (groupByCl -> .)
    R_INTERSECT     reduce using rule 322 (groupByCl -> .)
    R_EXCEPT        reduce using rule 322 (groupByCl -> .)
    S_PARDER        reduce using rule 322 (groupByCl -> .)

    groupByCl                      shift and go to state 422
>>>>>>> main

state 345

    (279) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl . limitCl
    (281) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (340) limitCl -> . R_LIMIT INTEGER offsetLimit
    (341) limitCl -> . R_LIMIT R_ALL offsetLimit
    (342) limitCl -> .
    (329) orderByCl -> . R_ORDER R_BY orderList

<<<<<<< HEAD
    R_JOIN          shift and go to state 433
=======
    R_LIMIT         shift and go to state 425
    S_PUNTOCOMA     reduce using rule 342 (limitCl -> .)
    R_UNION         reduce using rule 342 (limitCl -> .)
    R_INTERSECT     reduce using rule 342 (limitCl -> .)
    R_EXCEPT        reduce using rule 342 (limitCl -> .)
    S_PARDER        reduce using rule 342 (limitCl -> .)
    R_ORDER         shift and go to state 426
>>>>>>> main

    limitCl                        shift and go to state 423
    orderByCl                      shift and go to state 424

state 346

    (321) groupByCl -> R_GROUP . R_BY groupList havingCl

    R_BY            shift and go to state 427


state 347

    (280) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl orderByCl limitCl
    (282) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl limitCl
    (321) groupByCl -> . R_GROUP R_BY groupList havingCl
    (322) groupByCl -> .

    R_GROUP         shift and go to state 338
    R_ORDER         reduce using rule 322 (groupByCl -> .)
    R_LIMIT         reduce using rule 322 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 322 (groupByCl -> .)
    R_UNION         reduce using rule 322 (groupByCl -> .)
    R_INTERSECT     reduce using rule 322 (groupByCl -> .)
    R_EXCEPT        reduce using rule 322 (groupByCl -> .)
    S_PARDER        reduce using rule 322 (groupByCl -> .)

    groupByCl                      shift and go to state 428

state 348

    (305) joinList2 -> joinList2 joinCl .

    R_NATURAL       reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_INNER         reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_LEFT          reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_RIGHT         reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_FULL          reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_WHERE         reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_GROUP         reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_ORDER         reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_LIMIT         reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    S_PUNTOCOMA     reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_UNION         reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_INTERSECT     reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    R_EXCEPT        reduce using rule 305 (joinList2 -> joinList2 joinCl .)
    S_PARDER        reduce using rule 305 (joinList2 -> joinList2 joinCl .)


state 349

    (307) joinCl -> joinOpt R_JOIN . columnName optAlias R_ON expBool
    (308) joinCl -> joinOpt R_JOIN . columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 430

    columnName                     shift and go to state 429

state 350

<<<<<<< HEAD
    (99) funcCall -> ID S_PARIZQ paramsList S_PARDER .

    O_SUMA          reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_RESTA         reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_PRODUCTO      reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_DIVISION      reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_EXPONENTE     reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_MODULAR       reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OC_CONCATENAR   reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IN            reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOT           reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORQUE     reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORQUE     reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_IGUAL         reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_DISTINTODE   reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IS            reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_BETWEEN       reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ISNULL        reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOTNULL       reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_ESIGUAL      reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AS            reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    ID              reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    STRING          reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    CHARACTER       reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_COMA          reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FROM          reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_UNION         reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INTERSECT     reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_EXCEPT        reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PARDER        reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AND           reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_OR            reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_GROUP         reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ORDER         reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LIMIT         reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_THEN          reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NATURAL       reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INNER         reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LEFT          reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_RIGHT         reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FULL          reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_WHERE         reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ALL           reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ANY           reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_SOME          reduce using rule 99 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
=======
    (309) joinCl -> R_NATURAL joinOpt . R_JOIN columnName optAlias

    R_JOIN          shift and go to state 431
>>>>>>> main


state 351

<<<<<<< HEAD
    (134) paramsList -> paramsList S_COMA . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 434
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
    (314) joinOpt -> R_LEFT R_OUTER .

    R_JOIN          reduce using rule 314 (joinOpt -> R_LEFT R_OUTER .)

>>>>>>> main

state 352

<<<<<<< HEAD
    (207) boolean -> datatype R_IN S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 435
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (316) joinOpt -> R_RIGHT R_OUTER .

    R_JOIN          reduce using rule 316 (joinOpt -> R_RIGHT R_OUTER .)
>>>>>>> main


state 353

<<<<<<< HEAD
    (208) boolean -> datatype R_NOT R_IN S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 436
=======
    (318) joinOpt -> R_FULL R_OUTER .

    R_JOIN          reduce using rule 318 (joinOpt -> R_FULL R_OUTER .)

>>>>>>> main

state 354

<<<<<<< HEAD
    (167) expComp -> datatype R_NOT R_BETWEEN datatype . R_AND datatype
    (186) expSubq -> datatype R_NOT R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 437
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (293) selectList -> selectList S_COMA selectListParams optAlias .
>>>>>>> main

    S_COMA          reduce using rule 293 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_FROM          reduce using rule 293 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 293 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_UNION         reduce using rule 293 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_INTERSECT     reduce using rule 293 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_EXCEPT        reduce using rule 293 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PARDER        reduce using rule 293 (selectList -> selectList S_COMA selectListParams optAlias .)

<<<<<<< HEAD
state 355

    (179) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 438
=======

state 347

    (109) funcCall -> ID S_PARIZQ paramsList S_PARDER .

    O_SUMA          reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_RESTA         reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_PRODUCTO      reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_DIVISION      reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_EXPONENTE     reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_MODULAR       reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OC_CONCATENAR   reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IN            reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOT           reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORQUE     reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORQUE     reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_IGUAL         reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_DISTINTODE   reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IS            reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_BETWEEN       reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ISNULL        reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOTNULL       reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_ESIGUAL      reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AS            reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    ID              reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    STRING          reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    CHARACTER       reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_COMA          reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FROM          reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_UNION         reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INTERSECT     reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_EXCEPT        reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PARDER        reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AND           reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_OR            reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_GROUP         reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LIMIT         reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ORDER         reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_THEN          reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NATURAL       reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INNER         reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LEFT          reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_RIGHT         reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FULL          reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_WHERE         reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ALL           reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ANY           reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_SOME          reduce using rule 109 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)

>>>>>>> main

state 356

<<<<<<< HEAD
    (180) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 439
=======
    (144) paramsList -> paramsList S_COMA . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 432
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 357

<<<<<<< HEAD
    (181) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 440
=======
    (217) boolean -> datatype R_IN S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 433
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38

>>>>>>> main

state 358

<<<<<<< HEAD
    (182) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
=======
    (218) boolean -> datatype R_NOT R_IN S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams
>>>>>>> main

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

<<<<<<< HEAD
    selectStmt                     shift and go to state 441
=======
    selectStmt                     shift and go to state 434
>>>>>>> main

state 359

<<<<<<< HEAD
    (184) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 442
=======
    (177) expComp -> datatype R_NOT R_BETWEEN datatype . R_AND datatype
    (196) expSubq -> datatype R_NOT R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 435
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149

>>>>>>> main

state 360

<<<<<<< HEAD
    (164) expComp -> datatype R_IS R_DISTINCT R_FROM . datatype
    (188) expSubq -> datatype R_IS R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 443
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
    (189) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 436
>>>>>>> main

state 361

<<<<<<< HEAD
    (165) expComp -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype
    (189) expSubq -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 444
=======
    (190) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19
>>>>>>> main

    selectStmt                     shift and go to state 437

state 362

<<<<<<< HEAD
    (175) expComp -> datatype R_IS R_NOT R_NULL .
    (191) expSubq -> datatype R_IS R_NOT R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_OR            reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_IS            reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_AS            reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    ID              reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    STRING          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    CHARACTER       reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_COMA          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FROM          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_UNION         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INTERSECT     reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_EXCEPT        reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PARDER        reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_GROUP         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ORDER         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LIMIT         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_THEN          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_NATURAL       reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INNER         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LEFT          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_RIGHT         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FULL          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_WHERE         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 445
=======
    (191) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 438
>>>>>>> main

state 363

<<<<<<< HEAD
    (176) expComp -> datatype R_IS R_NOT R_TRUE .
    (195) expSubq -> datatype R_IS R_NOT R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    ID              reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 176 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 446
=======
    (192) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 439
>>>>>>> main

state 364

<<<<<<< HEAD
    (177) expComp -> datatype R_IS R_NOT R_FALSE .
    (197) expSubq -> datatype R_IS R_NOT R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    ID              reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 177 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 447
=======
    (194) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 440
>>>>>>> main

state 365

<<<<<<< HEAD
    (178) expComp -> datatype R_IS R_NOT R_UNKNOWN .
    (199) expSubq -> datatype R_IS R_NOT R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 178 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 448
=======
    (174) expComp -> datatype R_IS R_DISTINCT R_FROM . datatype
    (198) expSubq -> datatype R_IS R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 441
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 366

<<<<<<< HEAD
    (190) expSubq -> datatype R_IS R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 449
=======
    (175) expComp -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype
    (199) expSubq -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 442
>>>>>>> main


state 367

<<<<<<< HEAD
    (194) expSubq -> datatype R_IS R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 450

=======
    (185) expComp -> datatype R_IS R_NOT R_NULL .
    (201) expSubq -> datatype R_IS R_NOT R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_OR            reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_IS            reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_AS            reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    ID              reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    STRING          reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    CHARACTER       reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_COMA          reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FROM          reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_UNION         reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INTERSECT     reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_EXCEPT        reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PARDER        reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_GROUP         reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LIMIT         reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ORDER         reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_THEN          reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_NATURAL       reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INNER         reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LEFT          reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_RIGHT         reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FULL          reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_WHERE         reduce using rule 185 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 443
>>>>>>> main

state 368

<<<<<<< HEAD
    (196) expSubq -> datatype R_IS R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 451

=======
    (186) expComp -> datatype R_IS R_NOT R_TRUE .
    (205) expSubq -> datatype R_IS R_NOT R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    ID              reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 186 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 444
>>>>>>> main

state 369

<<<<<<< HEAD
    (198) expSubq -> datatype R_IS R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 452

=======
    (187) expComp -> datatype R_IS R_NOT R_FALSE .
    (207) expSubq -> datatype R_IS R_NOT R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    ID              reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 187 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 445
>>>>>>> main

state 370

<<<<<<< HEAD
    (166) expComp -> datatype R_BETWEEN datatype R_AND . datatype
    (185) expSubq -> datatype R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 453
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
    (188) expComp -> datatype R_IS R_NOT R_UNKNOWN .
    (209) expSubq -> datatype R_IS R_NOT R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 188 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 446
>>>>>>> main

state 371

<<<<<<< HEAD
    (168) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype
    (187) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 454
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (200) expSubq -> datatype R_IS R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 447
>>>>>>> main


state 372

<<<<<<< HEAD
    (192) expSubq -> datatype R_ISNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 455
=======
    (204) expSubq -> datatype R_IS R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 448

>>>>>>> main

state 373

<<<<<<< HEAD
    (193) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 456
=======
    (206) expSubq -> datatype R_IS R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 449

>>>>>>> main

state 374

<<<<<<< HEAD
    (183) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20
=======
    (208) expSubq -> datatype R_IS R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 450


state 367

    (176) expComp -> datatype R_BETWEEN datatype R_AND . datatype
    (195) expSubq -> datatype R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 451
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 368

    (178) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype
    (197) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 452
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149


state 369

    (202) expSubq -> datatype R_ISNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 453

state 370

    (203) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 454

state 371

    (193) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 455

state 372

    (230) optBoolPredicate -> R_IS R_NOT R_TRUE .

    R_AND           reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    ID              reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 230 (optBoolPredicate -> R_IS R_NOT R_TRUE .)


state 373

    (231) optBoolPredicate -> R_IS R_NOT R_FALSE .

    R_AND           reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    ID              reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 231 (optBoolPredicate -> R_IS R_NOT R_FALSE .)


state 374

    (232) optBoolPredicate -> R_IS R_NOT R_UNKNOWN .

    R_AND           reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 232 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
>>>>>>> main

    selectStmt                     shift and go to state 457

state 375

<<<<<<< HEAD
    (220) optBoolPredicate -> R_IS R_NOT R_TRUE .

    R_AND           reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    ID              reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 220 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
=======
    (153) datatype -> R_CASE caseList optElse R_END .

    O_SUMA          reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    O_RESTA         reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    O_PRODUCTO      reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    O_DIVISION      reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    O_EXPONENTE     reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    O_MODULAR       reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    OC_CONCATENAR   reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_IN            reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_NOT           reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORQUE     reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORQUE     reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORIGUALQUE reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORIGUALQUE reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    S_IGUAL         reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    OL_DISTINTODE   reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_IS            reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_BETWEEN       reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_ISNULL        reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_NOTNULL       reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    OL_ESIGUAL      reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_AS            reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    ID              reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    STRING          reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    CHARACTER       reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    S_COMA          reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_FROM          reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    S_PUNTOCOMA     reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_UNION         reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_INTERSECT     reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_EXCEPT        reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    S_PARDER        reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_AND           reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_OR            reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_GROUP         reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_LIMIT         reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_ORDER         reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_THEN          reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_NATURAL       reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_INNER         reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_LEFT          reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_RIGHT         reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_FULL          reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_WHERE         reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_ALL           reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_ANY           reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
    R_SOME          reduce using rule 153 (datatype -> R_CASE caseList optElse R_END .)
>>>>>>> main


state 376

<<<<<<< HEAD
    (221) optBoolPredicate -> R_IS R_NOT R_FALSE .

    R_AND           reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    ID              reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 221 (optBoolPredicate -> R_IS R_NOT R_FALSE .)

=======
    (157) optElse -> R_ELSE literal .
>>>>>>> main

    R_END           reduce using rule 157 (optElse -> R_ELSE literal .)

<<<<<<< HEAD
    (222) optBoolPredicate -> R_IS R_NOT R_UNKNOWN .

    R_AND           reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 222 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)


state 378

    (143) datatype -> R_CASE caseList optElse R_END .

    O_SUMA          reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    O_RESTA         reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    O_PRODUCTO      reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    O_DIVISION      reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    O_EXPONENTE     reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    O_MODULAR       reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    OC_CONCATENAR   reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_IN            reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_NOT           reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORQUE     reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORQUE     reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORIGUALQUE reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORIGUALQUE reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    S_IGUAL         reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    OL_DISTINTODE   reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_IS            reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_BETWEEN       reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_ISNULL        reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_NOTNULL       reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    OL_ESIGUAL      reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_AS            reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    ID              reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    STRING          reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    CHARACTER       reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    S_COMA          reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_FROM          reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    S_PUNTOCOMA     reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_UNION         reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_INTERSECT     reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_EXCEPT        reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    S_PARDER        reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_AND           reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_OR            reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_GROUP         reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_ORDER         reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_LIMIT         reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_THEN          reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_NATURAL       reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_INNER         reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_LEFT          reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_RIGHT         reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_FULL          reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_WHERE         reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_ALL           reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_ANY           reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
    R_SOME          reduce using rule 143 (datatype -> R_CASE caseList optElse R_END .)
=======

state 377

    (156) caseWhen -> R_WHEN expBool R_THEN . literal
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL

    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89

    literal                        shift and go to state 456

state 378

    (112) funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 112 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
>>>>>>> main


state 379

<<<<<<< HEAD
    (147) optElse -> R_ELSE literal .
=======
    (113) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .

    O_SUMA          reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_RESTA         reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_PRODUCTO      reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_DIVISION      reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_EXPONENTE     reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_MODULAR       reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OC_CONCATENAR   reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IN            reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOT           reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORQUE     reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORQUE     reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_IGUAL         reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_DISTINTODE   reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IS            reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_BETWEEN       reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ISNULL        reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOTNULL       reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_ESIGUAL      reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AS            reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    ID              reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    STRING          reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    CHARACTER       reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_COMA          reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FROM          reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PUNTOCOMA     reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_UNION         reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INTERSECT     reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_EXCEPT        reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PARDER        reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AND           reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_OR            reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_GROUP         reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LIMIT         reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ORDER         reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_THEN          reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NATURAL       reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INNER         reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LEFT          reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_RIGHT         reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FULL          reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_WHERE         reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ALL           reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ANY           reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_SOME          reduce using rule 113 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)

>>>>>>> main

    R_END           reduce using rule 147 (optElse -> R_ELSE literal .)

<<<<<<< HEAD

state 380
=======
    (114) funcCall -> R_SUM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 114 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
>>>>>>> main

    (146) caseWhen -> R_WHEN expBool R_THEN . literal
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL

    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90

    literal                        shift and go to state 458

state 381

<<<<<<< HEAD
    (102) funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 102 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
=======
    (115) funcCall -> R_PROM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 115 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
>>>>>>> main


state 382

<<<<<<< HEAD
    (103) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .

    O_SUMA          reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_RESTA         reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_PRODUCTO      reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_DIVISION      reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_EXPONENTE     reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_MODULAR       reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OC_CONCATENAR   reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IN            reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOT           reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORQUE     reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORQUE     reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_IGUAL         reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_DISTINTODE   reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IS            reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_BETWEEN       reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ISNULL        reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOTNULL       reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_ESIGUAL      reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AS            reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    ID              reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    STRING          reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    CHARACTER       reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_COMA          reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FROM          reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PUNTOCOMA     reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_UNION         reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INTERSECT     reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_EXCEPT        reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PARDER        reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AND           reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_OR            reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_GROUP         reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ORDER         reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LIMIT         reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_THEN          reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NATURAL       reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INNER         reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LEFT          reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_RIGHT         reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FULL          reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_WHERE         reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ALL           reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ANY           reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_SOME          reduce using rule 103 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
=======
    (116) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . timeStamp S_PARDER
    (117) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . columnName S_PARDER
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID

    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103
    ID              shift and go to state 430

    timeStamp                      shift and go to state 457
    columnName                     shift and go to state 458
>>>>>>> main


<<<<<<< HEAD
state 383

    (104) funcCall -> R_SUM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 104 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
=======
    (126) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA . dateSource S_PARDER
    (127) dateSource -> . R_TIMESTAMP STRING
    (128) dateSource -> . T_DATE STRING
    (129) dateSource -> . T_TIME STRING
    (130) dateSource -> . R_INTERVAL STRING
    (131) dateSource -> . R_NOW S_PARIZQ S_PARDER

    R_TIMESTAMP     shift and go to state 460
    T_DATE          shift and go to state 461
    T_TIME          shift and go to state 462
    R_INTERVAL      shift and go to state 463
    R_NOW           shift and go to state 464
>>>>>>> main

    dateSource                     shift and go to state 459

state 384

<<<<<<< HEAD
    (105) funcCall -> R_PROM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 105 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
=======
    (216) boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 216 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 385

<<<<<<< HEAD
    (106) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . timeStamp S_PARDER
    (107) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . columnName S_PARDER
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID

    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104
    ID              shift and go to state 432

    timeStamp                      shift and go to state 459
    columnName                     shift and go to state 460

state 386

    (116) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA . dateSource S_PARDER
    (117) dateSource -> . R_TIMESTAMP STRING
    (118) dateSource -> . T_DATE STRING
    (119) dateSource -> . T_TIME STRING
    (120) dateSource -> . R_INTERVAL STRING
    (121) dateSource -> . R_NOW S_PARIZQ S_PARDER

    R_TIMESTAMP     shift and go to state 462
    T_DATE          shift and go to state 463
    T_TIME          shift and go to state 464
    R_INTERVAL      shift and go to state 465
    R_NOW           shift and go to state 466
=======
    (19) createOpts -> unique_index R_INDEX ID R_ON ID . using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
    (22) using_hash_index -> . R_USING R_HASH
    (23) using_hash_index -> .

    R_USING         shift and go to state 466
    S_PARIZQ        reduce using rule 23 (using_hash_index -> .)

    using_hash_index               shift and go to state 465

state 386

    (30) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList . S_PARDER inheritsOpt
    (47) createTableList -> createTableList . S_COMA createTable

    S_PARDER        shift and go to state 467
    S_COMA          shift and go to state 468
>>>>>>> main

    dateSource                     shift and go to state 461

state 387

<<<<<<< HEAD
    (206) boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 206 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
=======
    (48) createTableList -> createTable .

    S_PARDER        reduce using rule 48 (createTableList -> createTable .)
    S_COMA          reduce using rule 48 (createTableList -> createTable .)
>>>>>>> main


state 388

<<<<<<< HEAD
    (352) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER . returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (357) returnsStmt -> . R_RETURNS item_returns
    (358) returnsStmt -> .

    R_RETURNS       shift and go to state 468
    R_AS            reduce using rule 358 (returnsStmt -> .)

    returnsStmt                    shift and go to state 467

state 389

    (354) params_list -> params_list param_item .

    S_PARDER        reduce using rule 354 (params_list -> params_list param_item .)
    R_NULL          reduce using rule 354 (params_list -> params_list param_item .)
=======
    (49) createTable -> ID . types createColumns
    (64) types -> . ID
    (65) types -> . T_SMALLINT
    (66) types -> . T_INTEGER
    (67) types -> . T_BIGINT
    (68) types -> . T_REAL
    (69) types -> . T_DOUBLE T_PRECISION
    (70) types -> . T_MONEY
    (71) types -> . T_TEXT
    (72) types -> . T_BOOLEAN
    (73) types -> . R_TIMESTAMP
    (74) types -> . T_DATE
    (75) types -> . T_TIME
    (76) types -> . T_DECIMAL optParams
    (77) types -> . T_NUMERIC optParams
    (78) types -> . T_VARCHAR optParams
    (79) types -> . T_CHARACTER optParams
    (80) types -> . T_CHAR optParams
    (81) types -> . T_CHARACTER T_VARYING optParams
    (82) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 469
    T_SMALLINT      shift and go to state 471
    T_INTEGER       shift and go to state 472
    T_BIGINT        shift and go to state 473
    T_REAL          shift and go to state 474
    T_DOUBLE        shift and go to state 475
    T_MONEY         shift and go to state 476
    T_TEXT          shift and go to state 477
    T_BOOLEAN       shift and go to state 478
    R_TIMESTAMP     shift and go to state 479
    T_DATE          shift and go to state 480
    T_TIME          shift and go to state 481
    T_DECIMAL       shift and go to state 482
    T_NUMERIC       shift and go to state 483
    T_VARCHAR       shift and go to state 484
    T_CHARACTER     shift and go to state 485
    T_CHAR          shift and go to state 486
    R_INTERVAL      shift and go to state 487

    types                          shift and go to state 470

state 389

    (50) createTable -> createConstraint .

    S_PARDER        reduce using rule 50 (createTable -> createConstraint .)
    S_COMA          reduce using rule 50 (createTable -> createConstraint .)
>>>>>>> main


state 390

<<<<<<< HEAD
    (20) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList . S_PARDER inheritsOpt
    (37) createTableList -> createTableList . S_COMA createTable

    S_PARDER        shift and go to state 469
    S_COMA          shift and go to state 470
=======
    (51) createTable -> createUnique .

    S_PARDER        reduce using rule 51 (createTable -> createUnique .)
    S_COMA          reduce using rule 51 (createTable -> createUnique .)
>>>>>>> main


state 391

<<<<<<< HEAD
    (38) createTableList -> createTable .

    S_PARDER        reduce using rule 38 (createTableList -> createTable .)
    S_COMA          reduce using rule 38 (createTableList -> createTable .)
=======
    (52) createTable -> createPrimary .

    S_PARDER        reduce using rule 52 (createTable -> createPrimary .)
    S_COMA          reduce using rule 52 (createTable -> createPrimary .)
>>>>>>> main


state 392

<<<<<<< HEAD
    (39) createTable -> ID . types createColumns
    (54) types -> . ID
    (55) types -> . T_SMALLINT
    (56) types -> . T_INTEGER
    (57) types -> . T_BIGINT
    (58) types -> . T_REAL
    (59) types -> . T_DOUBLE T_PRECISION
    (60) types -> . T_MONEY
    (61) types -> . T_TEXT
    (62) types -> . T_BOOLEAN
    (63) types -> . R_TIMESTAMP
    (64) types -> . T_DATE
    (65) types -> . T_TIME
    (66) types -> . T_DECIMAL optParams
    (67) types -> . T_NUMERIC optParams
    (68) types -> . T_VARCHAR optParams
    (69) types -> . T_CHARACTER optParams
    (70) types -> . T_CHAR optParams
    (71) types -> . T_CHARACTER T_VARYING optParams
    (72) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 471
    T_SMALLINT      shift and go to state 473
    T_INTEGER       shift and go to state 474
    T_BIGINT        shift and go to state 475
    T_REAL          shift and go to state 476
    T_DOUBLE        shift and go to state 477
    T_MONEY         shift and go to state 478
    T_TEXT          shift and go to state 479
    T_BOOLEAN       shift and go to state 480
    R_TIMESTAMP     shift and go to state 481
    T_DATE          shift and go to state 482
    T_TIME          shift and go to state 483
    T_DECIMAL       shift and go to state 484
    T_NUMERIC       shift and go to state 485
    T_VARCHAR       shift and go to state 486
    T_CHARACTER     shift and go to state 487
    T_CHAR          shift and go to state 488
    R_INTERVAL      shift and go to state 489

    types                          shift and go to state 472

state 393

    (40) createTable -> createConstraint .

    S_PARDER        reduce using rule 40 (createTable -> createConstraint .)
    S_COMA          reduce using rule 40 (createTable -> createConstraint .)
=======
    (53) createTable -> createForeign .

    S_PARDER        reduce using rule 53 (createTable -> createForeign .)
    S_COMA          reduce using rule 53 (createTable -> createForeign .)


state 393

    (56) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (59) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_CHECK         shift and go to state 407
    R_FOREIGN       shift and go to state 408
>>>>>>> main


state 394

<<<<<<< HEAD
    (41) createTable -> createUnique .

    S_PARDER        reduce using rule 41 (createTable -> createUnique .)
    S_COMA          reduce using rule 41 (createTable -> createUnique .)
=======
    (57) createUnique -> R_UNIQUE . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 488
>>>>>>> main


state 395

<<<<<<< HEAD
    (42) createTable -> createPrimary .

    S_PARDER        reduce using rule 42 (createTable -> createPrimary .)
    S_COMA          reduce using rule 42 (createTable -> createPrimary .)
=======
    (31) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner . createMode
    (44) createMode -> . R_MODE INTEGER
    (45) createMode -> . R_MODE S_IGUAL INTEGER
    (46) createMode -> .

    R_MODE          shift and go to state 490
    S_PUNTOCOMA     reduce using rule 46 (createMode -> .)
>>>>>>> main

    createMode                     shift and go to state 489

state 396

<<<<<<< HEAD
    (43) createTable -> createForeign .

    S_PARDER        reduce using rule 43 (createTable -> createForeign .)
    S_COMA          reduce using rule 43 (createTable -> createForeign .)
=======
    (39) createOwner -> R_OWNER . ID
    (40) createOwner -> R_OWNER . STRING
    (41) createOwner -> R_OWNER . S_IGUAL ID
    (42) createOwner -> R_OWNER . S_IGUAL STRING

    ID              shift and go to state 491
    STRING          shift and go to state 492
    S_IGUAL         shift and go to state 493
>>>>>>> main


state 397

<<<<<<< HEAD
    (46) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (49) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_CHECK         shift and go to state 411
    R_FOREIGN       shift and go to state 412
=======
    (34) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 494
>>>>>>> main


state 398

<<<<<<< HEAD
    (47) createUnique -> R_UNIQUE . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 490
=======
    (252) alterDb -> R_RENAME R_TO idOrString .

    S_PUNTOCOMA     reduce using rule 252 (alterDb -> R_RENAME R_TO idOrString .)
>>>>>>> main


state 399

<<<<<<< HEAD
    (21) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner . createMode
    (34) createMode -> . R_MODE INTEGER
    (35) createMode -> . R_MODE S_IGUAL INTEGER
    (36) createMode -> .

    R_MODE          shift and go to state 492
    S_PUNTOCOMA     reduce using rule 36 (createMode -> .)

    createMode                     shift and go to state 491

state 400

    (29) createOwner -> R_OWNER . ID
    (30) createOwner -> R_OWNER . STRING
    (31) createOwner -> R_OWNER . S_IGUAL ID
    (32) createOwner -> R_OWNER . S_IGUAL STRING

    ID              shift and go to state 493
    STRING          shift and go to state 494
    S_IGUAL         shift and go to state 495
=======
    (253) alterDb -> R_OWNER R_TO ownerOPts .

    S_PUNTOCOMA     reduce using rule 253 (alterDb -> R_OWNER R_TO ownerOPts .)


state 400

    (254) ownerOPts -> idOrString .

    S_PUNTOCOMA     reduce using rule 254 (ownerOPts -> idOrString .)
>>>>>>> main


state 401

<<<<<<< HEAD
    (24) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 496
=======
    (255) ownerOPts -> R_CURRENT_USER .

    S_PUNTOCOMA     reduce using rule 255 (ownerOPts -> R_CURRENT_USER .)
>>>>>>> main


state 402

<<<<<<< HEAD
    (242) alterDb -> R_RENAME R_TO idOrString .

    S_PUNTOCOMA     reduce using rule 242 (alterDb -> R_RENAME R_TO idOrString .)
=======
    (256) ownerOPts -> R_SESSION_USER .

    S_PUNTOCOMA     reduce using rule 256 (ownerOPts -> R_SESSION_USER .)
>>>>>>> main


state 403

<<<<<<< HEAD
    (243) alterDb -> R_OWNER R_TO ownerOPts .

    S_PUNTOCOMA     reduce using rule 243 (alterDb -> R_OWNER R_TO ownerOPts .)
=======
    (268) alterAlter -> R_COLUMN ID . R_SET nullOpt
    (269) alterAlter -> R_COLUMN ID . R_SET defaultVal
    (270) alterAlter -> R_COLUMN ID . R_TYPE types

    R_SET           shift and go to state 495
    R_TYPE          shift and go to state 496
>>>>>>> main


state 404

<<<<<<< HEAD
    (244) ownerOPts -> idOrString .

    S_PUNTOCOMA     reduce using rule 244 (ownerOPts -> idOrString .)
=======
    (257) alterTableList -> alterTableList S_COMA alterTable .

    S_COMA          reduce using rule 257 (alterTableList -> alterTableList S_COMA alterTable .)
    S_PUNTOCOMA     reduce using rule 257 (alterTableList -> alterTableList S_COMA alterTable .)
>>>>>>> main


state 405

<<<<<<< HEAD
    (245) ownerOPts -> R_CURRENT_USER .

    S_PUNTOCOMA     reduce using rule 245 (ownerOPts -> R_CURRENT_USER .)


state 406

    (246) ownerOPts -> R_SESSION_USER .

    S_PUNTOCOMA     reduce using rule 246 (ownerOPts -> R_SESSION_USER .)
=======
    (263) alterAdd -> R_COLUMN ID . types
    (64) types -> . ID
    (65) types -> . T_SMALLINT
    (66) types -> . T_INTEGER
    (67) types -> . T_BIGINT
    (68) types -> . T_REAL
    (69) types -> . T_DOUBLE T_PRECISION
    (70) types -> . T_MONEY
    (71) types -> . T_TEXT
    (72) types -> . T_BOOLEAN
    (73) types -> . R_TIMESTAMP
    (74) types -> . T_DATE
    (75) types -> . T_TIME
    (76) types -> . T_DECIMAL optParams
    (77) types -> . T_NUMERIC optParams
    (78) types -> . T_VARCHAR optParams
    (79) types -> . T_CHARACTER optParams
    (80) types -> . T_CHAR optParams
    (81) types -> . T_CHARACTER T_VARYING optParams
    (82) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 469
    T_SMALLINT      shift and go to state 471
    T_INTEGER       shift and go to state 472
    T_BIGINT        shift and go to state 473
    T_REAL          shift and go to state 474
    T_DOUBLE        shift and go to state 475
    T_MONEY         shift and go to state 476
    T_TEXT          shift and go to state 477
    T_BOOLEAN       shift and go to state 478
    R_TIMESTAMP     shift and go to state 479
    T_DATE          shift and go to state 480
    T_TIME          shift and go to state 481
    T_DECIMAL       shift and go to state 482
    T_NUMERIC       shift and go to state 483
    T_VARCHAR       shift and go to state 484
    T_CHARACTER     shift and go to state 485
    T_CHAR          shift and go to state 486
    R_INTERVAL      shift and go to state 487

    types                          shift and go to state 497

state 406

    (267) alterAdd -> constrName R_UNIQUE . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 498
>>>>>>> main


state 407

<<<<<<< HEAD
    (258) alterAlter -> R_COLUMN ID . R_SET nullOpt
    (259) alterAlter -> R_COLUMN ID . R_SET defaultVal
    (260) alterAlter -> R_COLUMN ID . R_TYPE types

    R_SET           shift and go to state 497
    R_TYPE          shift and go to state 498
=======
    (56) createConstraint -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 499
>>>>>>> main


state 408

<<<<<<< HEAD
    (247) alterTableList -> alterTableList S_COMA alterTable .
=======
    (59) createForeign -> constrName R_FOREIGN . R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 500

>>>>>>> main

    S_COMA          reduce using rule 247 (alterTableList -> alterTableList S_COMA alterTable .)
    S_PUNTOCOMA     reduce using rule 247 (alterTableList -> alterTableList S_COMA alterTable .)

<<<<<<< HEAD

state 409
=======
    (58) createPrimary -> R_PRIMARY R_KEY . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 501
>>>>>>> main

    (253) alterAdd -> R_COLUMN ID . types
    (54) types -> . ID
    (55) types -> . T_SMALLINT
    (56) types -> . T_INTEGER
    (57) types -> . T_BIGINT
    (58) types -> . T_REAL
    (59) types -> . T_DOUBLE T_PRECISION
    (60) types -> . T_MONEY
    (61) types -> . T_TEXT
    (62) types -> . T_BOOLEAN
    (63) types -> . R_TIMESTAMP
    (64) types -> . T_DATE
    (65) types -> . T_TIME
    (66) types -> . T_DECIMAL optParams
    (67) types -> . T_NUMERIC optParams
    (68) types -> . T_VARCHAR optParams
    (69) types -> . T_CHARACTER optParams
    (70) types -> . T_CHAR optParams
    (71) types -> . T_CHARACTER T_VARYING optParams
    (72) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 471
    T_SMALLINT      shift and go to state 473
    T_INTEGER       shift and go to state 474
    T_BIGINT        shift and go to state 475
    T_REAL          shift and go to state 476
    T_DOUBLE        shift and go to state 477
    T_MONEY         shift and go to state 478
    T_TEXT          shift and go to state 479
    T_BOOLEAN       shift and go to state 480
    R_TIMESTAMP     shift and go to state 481
    T_DATE          shift and go to state 482
    T_TIME          shift and go to state 483
    T_DECIMAL       shift and go to state 484
    T_NUMERIC       shift and go to state 485
    T_VARCHAR       shift and go to state 486
    T_CHARACTER     shift and go to state 487
    T_CHAR          shift and go to state 488
    R_INTERVAL      shift and go to state 489

    types                          shift and go to state 499

state 410

<<<<<<< HEAD
    (257) alterAdd -> constrName R_UNIQUE . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 500
=======
    (60) constrName -> R_CONSTRAINT ID .

    R_UNIQUE        reduce using rule 60 (constrName -> R_CONSTRAINT ID .)
    R_CHECK         reduce using rule 60 (constrName -> R_CONSTRAINT ID .)
    R_FOREIGN       reduce using rule 60 (constrName -> R_CONSTRAINT ID .)
>>>>>>> main


state 411

<<<<<<< HEAD
    (46) createConstraint -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 501
=======
    (271) alterDrop -> R_CONSTRAINT ID .

    S_COMA          reduce using rule 271 (alterDrop -> R_CONSTRAINT ID .)
    S_PUNTOCOMA     reduce using rule 271 (alterDrop -> R_CONSTRAINT ID .)
>>>>>>> main


state 412

<<<<<<< HEAD
    (49) createForeign -> constrName R_FOREIGN . R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 502
=======
    (272) alterDrop -> R_COLUMN ID .

    S_COMA          reduce using rule 272 (alterDrop -> R_COLUMN ID .)
    S_PUNTOCOMA     reduce using rule 272 (alterDrop -> R_COLUMN ID .)
>>>>>>> main


state 413

<<<<<<< HEAD
    (48) createPrimary -> R_PRIMARY R_KEY . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 503
=======
    (273) alterRename -> R_COLUMN ID . R_TO ID
>>>>>>> main

    R_TO            shift and go to state 502

<<<<<<< HEAD
state 414

    (50) constrName -> R_CONSTRAINT ID .

    R_UNIQUE        reduce using rule 50 (constrName -> R_CONSTRAINT ID .)
    R_CHECK         reduce using rule 50 (constrName -> R_CONSTRAINT ID .)
    R_FOREIGN       reduce using rule 50 (constrName -> R_CONSTRAINT ID .)
=======

state 414
>>>>>>> main

    (345) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ . paramsList S_PARDER
    (144) paramsList -> . paramsList S_COMA datatype
    (145) paramsList -> . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    paramsList                     shift and go to state 503
    datatype                       shift and go to state 239
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95

state 415

<<<<<<< HEAD
    (261) alterDrop -> R_CONSTRAINT ID .

    S_COMA          reduce using rule 261 (alterDrop -> R_CONSTRAINT ID .)
    S_PUNTOCOMA     reduce using rule 261 (alterDrop -> R_CONSTRAINT ID .)
=======
    (346) paramsColumn -> S_PARIZQ idList S_PARDER .

    R_VALUES        reduce using rule 346 (paramsColumn -> S_PARIZQ idList S_PARDER .)
>>>>>>> main


state 416

<<<<<<< HEAD
    (262) alterDrop -> R_COLUMN ID .

    S_COMA          reduce using rule 262 (alterDrop -> R_COLUMN ID .)
    S_PUNTOCOMA     reduce using rule 262 (alterDrop -> R_COLUMN ID .)
=======
    (62) idList -> idList S_COMA . ID

    ID              shift and go to state 504
>>>>>>> main


state 417

<<<<<<< HEAD
    (263) alterRename -> R_COLUMN ID . R_TO ID

    R_TO            shift and go to state 504
=======
    (349) updateCols -> updateCols S_COMA updateVals .

    S_COMA          reduce using rule 349 (updateCols -> updateCols S_COMA updateVals .)
    R_WHERE         reduce using rule 349 (updateCols -> updateCols S_COMA updateVals .)
    S_PUNTOCOMA     reduce using rule 349 (updateCols -> updateCols S_COMA updateVals .)
>>>>>>> main


state 418

<<<<<<< HEAD
    (335) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ . paramsList S_PARDER
    (134) paramsList -> . paramsList S_COMA datatype
    (135) paramsList -> . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    paramsList                     shift and go to state 505
    datatype                       shift and go to state 240
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 419

    (336) paramsColumn -> S_PARIZQ idList S_PARDER .

    R_VALUES        reduce using rule 336 (paramsColumn -> S_PARIZQ idList S_PARDER .)
=======
    (351) updateVals -> ID S_IGUAL updateExp .

    S_COMA          reduce using rule 351 (updateVals -> ID S_IGUAL updateExp .)
    R_WHERE         reduce using rule 351 (updateVals -> ID S_IGUAL updateExp .)
    S_PUNTOCOMA     reduce using rule 351 (updateVals -> ID S_IGUAL updateExp .)


state 419

    (352) updateExp -> datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    S_COMA          reduce using rule 352 (updateExp -> datatype .)
    R_WHERE         reduce using rule 352 (updateExp -> datatype .)
    S_PUNTOCOMA     reduce using rule 352 (updateExp -> datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 420

<<<<<<< HEAD
    (52) idList -> idList S_COMA . ID

    ID              shift and go to state 506
=======
    (353) updateExp -> R_DEFAULT .

    S_COMA          reduce using rule 353 (updateExp -> R_DEFAULT .)
    R_WHERE         reduce using rule 353 (updateExp -> R_DEFAULT .)
    S_PUNTOCOMA     reduce using rule 353 (updateExp -> R_DEFAULT .)
>>>>>>> main


state 421

<<<<<<< HEAD
    (339) updateCols -> updateCols S_COMA updateVals .

    S_COMA          reduce using rule 339 (updateCols -> updateCols S_COMA updateVals .)
    R_WHERE         reduce using rule 339 (updateCols -> updateCols S_COMA updateVals .)
    S_PUNTOCOMA     reduce using rule 339 (updateCols -> updateCols S_COMA updateVals .)


state 422

    (341) updateVals -> ID S_IGUAL updateExp .

    S_COMA          reduce using rule 341 (updateVals -> ID S_IGUAL updateExp .)
    R_WHERE         reduce using rule 341 (updateVals -> ID S_IGUAL updateExp .)
    S_PUNTOCOMA     reduce using rule 341 (updateVals -> ID S_IGUAL updateExp .)


state 423

    (342) updateExp -> datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    S_COMA          reduce using rule 342 (updateExp -> datatype .)
    R_WHERE         reduce using rule 342 (updateExp -> datatype .)
    S_PUNTOCOMA     reduce using rule 342 (updateExp -> datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
=======
    (303) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .

    R_SET           reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_COMA          reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_WHERE         reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_NATURAL       reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INNER         reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LEFT          reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_RIGHT         reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_FULL          reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_GROUP         reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LIMIT         reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_ORDER         reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_UNION         reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INTERSECT     reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_EXCEPT        reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PARDER        reduce using rule 303 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)


state 422

    (278) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl . limitCl
    (340) limitCl -> . R_LIMIT INTEGER offsetLimit
    (341) limitCl -> . R_LIMIT R_ALL offsetLimit
    (342) limitCl -> .

    R_LIMIT         shift and go to state 425
    S_PUNTOCOMA     reduce using rule 342 (limitCl -> .)
    R_UNION         reduce using rule 342 (limitCl -> .)
    R_INTERSECT     reduce using rule 342 (limitCl -> .)
    R_EXCEPT        reduce using rule 342 (limitCl -> .)
    S_PARDER        reduce using rule 342 (limitCl -> .)

    limitCl                        shift and go to state 505

state 423

    (279) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .

    S_PUNTOCOMA     reduce using rule 279 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)
    R_UNION         reduce using rule 279 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)
    R_INTERSECT     reduce using rule 279 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)
    R_EXCEPT        reduce using rule 279 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)
    S_PARDER        reduce using rule 279 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl .)
>>>>>>> main


state 424

<<<<<<< HEAD
    (343) updateExp -> R_DEFAULT .

    S_COMA          reduce using rule 343 (updateExp -> R_DEFAULT .)
    R_WHERE         reduce using rule 343 (updateExp -> R_DEFAULT .)
    S_PUNTOCOMA     reduce using rule 343 (updateExp -> R_DEFAULT .)
=======
    (281) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (340) limitCl -> . R_LIMIT INTEGER offsetLimit
    (341) limitCl -> . R_LIMIT R_ALL offsetLimit
    (342) limitCl -> .

    R_LIMIT         shift and go to state 425
    S_PUNTOCOMA     reduce using rule 342 (limitCl -> .)
    R_UNION         reduce using rule 342 (limitCl -> .)
    R_INTERSECT     reduce using rule 342 (limitCl -> .)
    R_EXCEPT        reduce using rule 342 (limitCl -> .)
    S_PARDER        reduce using rule 342 (limitCl -> .)

    limitCl                        shift and go to state 506

state 425

    (340) limitCl -> R_LIMIT . INTEGER offsetLimit
    (341) limitCl -> R_LIMIT . R_ALL offsetLimit

    INTEGER         shift and go to state 507
    R_ALL           shift and go to state 508

>>>>>>> main


<<<<<<< HEAD
state 425
=======
    (329) orderByCl -> R_ORDER . R_BY orderList

    R_BY            shift and go to state 509
>>>>>>> main

    (292) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .

    R_SET           reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_COMA          reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_WHERE         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_NATURAL       reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INNER         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LEFT          reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_RIGHT         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_FULL          reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_GROUP         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_ORDER         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LIMIT         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_UNION         reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INTERSECT     reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_EXCEPT        reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PARDER        reduce using rule 292 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)


state 426

    (268) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (318) orderByCl -> . R_ORDER R_BY orderList
    (319) orderByCl -> .

<<<<<<< HEAD
    R_ORDER         shift and go to state 428
    R_LIMIT         reduce using rule 319 (orderByCl -> .)
    S_PUNTOCOMA     reduce using rule 319 (orderByCl -> .)
    R_UNION         reduce using rule 319 (orderByCl -> .)
    R_INTERSECT     reduce using rule 319 (orderByCl -> .)
    R_EXCEPT        reduce using rule 319 (orderByCl -> .)
    S_PARDER        reduce using rule 319 (orderByCl -> .)

    orderByCl                      shift and go to state 507

state 427

    (269) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (330) limitCl -> . R_LIMIT INTEGER offsetLimit
    (331) limitCl -> . R_LIMIT R_ALL offsetLimit
    (332) limitCl -> .

    R_LIMIT         shift and go to state 509
    S_PUNTOCOMA     reduce using rule 332 (limitCl -> .)
    R_UNION         reduce using rule 332 (limitCl -> .)
    R_INTERSECT     reduce using rule 332 (limitCl -> .)
    R_EXCEPT        reduce using rule 332 (limitCl -> .)
    S_PARDER        reduce using rule 332 (limitCl -> .)

    limitCl                        shift and go to state 508

state 428

    (318) orderByCl -> R_ORDER . R_BY orderList

    R_BY            shift and go to state 510


state 429

    (310) groupByCl -> R_GROUP R_BY . groupList havingCl
    (312) groupList -> . groupList S_COMA columnName
    (313) groupList -> . groupList S_COMA INTEGER
    (314) groupList -> . columnName
    (315) groupList -> . INTEGER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 513
    ID              shift and go to state 432

    groupList                      shift and go to state 511
    columnName                     shift and go to state 512

state 430

    (270) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . orderByCl limitCl
    (271) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . limitCl
    (318) orderByCl -> . R_ORDER R_BY orderList
    (319) orderByCl -> .
    (330) limitCl -> . R_LIMIT INTEGER offsetLimit
    (331) limitCl -> . R_LIMIT R_ALL offsetLimit
    (332) limitCl -> .

  ! shift/reduce conflict for R_LIMIT resolved as shift
  ! reduce/reduce conflict for S_PUNTOCOMA resolved using rule 319 (orderByCl -> .)
  ! reduce/reduce conflict for R_UNION resolved using rule 319 (orderByCl -> .)
  ! reduce/reduce conflict for R_INTERSECT resolved using rule 319 (orderByCl -> .)
  ! reduce/reduce conflict for R_EXCEPT resolved using rule 319 (orderByCl -> .)
  ! reduce/reduce conflict for S_PARDER resolved using rule 319 (orderByCl -> .)
    R_ORDER         shift and go to state 428
    S_PUNTOCOMA     reduce using rule 319 (orderByCl -> .)
    R_UNION         reduce using rule 319 (orderByCl -> .)
    R_INTERSECT     reduce using rule 319 (orderByCl -> .)
    R_EXCEPT        reduce using rule 319 (orderByCl -> .)
    S_PARDER        reduce using rule 319 (orderByCl -> .)
    R_LIMIT         shift and go to state 509

  ! R_LIMIT         [ reduce using rule 319 (orderByCl -> .) ]
  ! S_PUNTOCOMA     [ reduce using rule 332 (limitCl -> .) ]
  ! R_UNION         [ reduce using rule 332 (limitCl -> .) ]
  ! R_INTERSECT     [ reduce using rule 332 (limitCl -> .) ]
  ! R_EXCEPT        [ reduce using rule 332 (limitCl -> .) ]
  ! S_PARDER        [ reduce using rule 332 (limitCl -> .) ]

    orderByCl                      shift and go to state 514
    limitCl                        shift and go to state 515

state 431

    (296) joinCl -> joinOpt R_JOIN columnName . optAlias R_ON expBool
    (297) joinCl -> joinOpt R_JOIN columnName . optAlias R_USING S_PARIZQ nameList S_PARDER
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    R_AS            shift and go to state 130
    R_ON            reduce using rule 288 (optAlias -> .)
    R_USING         reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    optAlias                       shift and go to state 516
    idOrString                     shift and go to state 131

state 432

    (223) columnName -> ID .
    (224) columnName -> ID . S_PUNTO ID

    R_AS            reduce using rule 223 (columnName -> ID .)
    ID              reduce using rule 223 (columnName -> ID .)
    STRING          reduce using rule 223 (columnName -> ID .)
    CHARACTER       reduce using rule 223 (columnName -> ID .)
    R_ON            reduce using rule 223 (columnName -> ID .)
    R_USING         reduce using rule 223 (columnName -> ID .)
    S_PARDER        reduce using rule 223 (columnName -> ID .)
    S_COMA          reduce using rule 223 (columnName -> ID .)
    R_HAVING        reduce using rule 223 (columnName -> ID .)
    R_ORDER         reduce using rule 223 (columnName -> ID .)
    R_LIMIT         reduce using rule 223 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 223 (columnName -> ID .)
    R_UNION         reduce using rule 223 (columnName -> ID .)
    R_INTERSECT     reduce using rule 223 (columnName -> ID .)
    R_EXCEPT        reduce using rule 223 (columnName -> ID .)
    R_NATURAL       reduce using rule 223 (columnName -> ID .)
    R_INNER         reduce using rule 223 (columnName -> ID .)
    R_LEFT          reduce using rule 223 (columnName -> ID .)
    R_RIGHT         reduce using rule 223 (columnName -> ID .)
    R_FULL          reduce using rule 223 (columnName -> ID .)
    R_WHERE         reduce using rule 223 (columnName -> ID .)
    R_GROUP         reduce using rule 223 (columnName -> ID .)
    R_ASC           reduce using rule 223 (columnName -> ID .)
    R_DESC          reduce using rule 223 (columnName -> ID .)
    R_NULL          reduce using rule 223 (columnName -> ID .)
    S_PUNTO         shift and go to state 285


state 433

    (298) joinCl -> R_NATURAL joinOpt R_JOIN . columnName optAlias
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 432

    columnName                     shift and go to state 517

state 434

    (134) paramsList -> paramsList S_COMA datatype .
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 134 (paramsList -> paramsList S_COMA datatype .)
    S_COMA          reduce using rule 134 (paramsList -> paramsList S_COMA datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150


state 435

    (207) boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 207 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)


state 436

    (208) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 518
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (321) groupByCl -> R_GROUP R_BY . groupList havingCl
    (323) groupList -> . groupList S_COMA columnName
    (324) groupList -> . groupList S_COMA INTEGER
    (325) groupList -> . columnName
    (326) groupList -> . INTEGER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 512
    ID              shift and go to state 430

    groupList                      shift and go to state 510
    columnName                     shift and go to state 511

state 428

    (280) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . orderByCl limitCl
    (282) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . limitCl
    (329) orderByCl -> . R_ORDER R_BY orderList
    (340) limitCl -> . R_LIMIT INTEGER offsetLimit
    (341) limitCl -> . R_LIMIT R_ALL offsetLimit
    (342) limitCl -> .

    R_ORDER         shift and go to state 426
    R_LIMIT         shift and go to state 425
    S_PUNTOCOMA     reduce using rule 342 (limitCl -> .)
    R_UNION         reduce using rule 342 (limitCl -> .)
    R_INTERSECT     reduce using rule 342 (limitCl -> .)
    R_EXCEPT        reduce using rule 342 (limitCl -> .)
    S_PARDER        reduce using rule 342 (limitCl -> .)
>>>>>>> main

    orderByCl                      shift and go to state 513
    limitCl                        shift and go to state 514

state 437

<<<<<<< HEAD
    (167) expComp -> datatype R_NOT R_BETWEEN datatype R_AND . datatype
    (186) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 519
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 438

    (179) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 520
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (307) joinCl -> joinOpt R_JOIN columnName . optAlias R_ON expBool
    (308) joinCl -> joinOpt R_JOIN columnName . optAlias R_USING S_PARIZQ nameList S_PARDER
    (297) optAlias -> . R_AS idOrString
    (298) optAlias -> . idOrString
    (299) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 129
    R_ON            reduce using rule 299 (optAlias -> .)
    R_USING         reduce using rule 299 (optAlias -> .)
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    optAlias                       shift and go to state 515
    idOrString                     shift and go to state 130

state 430

    (233) columnName -> ID .
    (234) columnName -> ID . S_PUNTO ID

    R_AS            reduce using rule 233 (columnName -> ID .)
    ID              reduce using rule 233 (columnName -> ID .)
    STRING          reduce using rule 233 (columnName -> ID .)
    CHARACTER       reduce using rule 233 (columnName -> ID .)
    R_ON            reduce using rule 233 (columnName -> ID .)
    R_USING         reduce using rule 233 (columnName -> ID .)
    S_PARDER        reduce using rule 233 (columnName -> ID .)
    S_COMA          reduce using rule 233 (columnName -> ID .)
    R_HAVING        reduce using rule 233 (columnName -> ID .)
    R_LIMIT         reduce using rule 233 (columnName -> ID .)
    R_ORDER         reduce using rule 233 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 233 (columnName -> ID .)
    R_UNION         reduce using rule 233 (columnName -> ID .)
    R_INTERSECT     reduce using rule 233 (columnName -> ID .)
    R_EXCEPT        reduce using rule 233 (columnName -> ID .)
    R_NATURAL       reduce using rule 233 (columnName -> ID .)
    R_INNER         reduce using rule 233 (columnName -> ID .)
    R_LEFT          reduce using rule 233 (columnName -> ID .)
    R_RIGHT         reduce using rule 233 (columnName -> ID .)
    R_FULL          reduce using rule 233 (columnName -> ID .)
    R_WHERE         reduce using rule 233 (columnName -> ID .)
    R_GROUP         reduce using rule 233 (columnName -> ID .)
    R_ASC           reduce using rule 233 (columnName -> ID .)
    R_DESC          reduce using rule 233 (columnName -> ID .)
    R_NULL          reduce using rule 233 (columnName -> ID .)
    S_PUNTO         shift and go to state 284
>>>>>>> main


state 439

<<<<<<< HEAD
    (180) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 521
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (309) joinCl -> R_NATURAL joinOpt R_JOIN . columnName optAlias
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 430
>>>>>>> main

    columnName                     shift and go to state 516

state 440

<<<<<<< HEAD
    (181) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 522
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (144) paramsList -> paramsList S_COMA datatype .
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 144 (paramsList -> paramsList S_COMA datatype .)
    S_COMA          reduce using rule 144 (paramsList -> paramsList S_COMA datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
>>>>>>> main


state 441

<<<<<<< HEAD
    (182) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 523
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (217) boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 217 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 442

<<<<<<< HEAD
    (184) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 524
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (218) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 517
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 443

<<<<<<< HEAD
    (164) expComp -> datatype R_IS R_DISTINCT R_FROM datatype .
    (188) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 164 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 525
=======
    (177) expComp -> datatype R_NOT R_BETWEEN datatype R_AND . datatype
    (196) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 518
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 444

<<<<<<< HEAD
    (165) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype
    (189) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 526
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
    (189) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 519
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38

>>>>>>> main

state 445

<<<<<<< HEAD
    (191) expSubq -> datatype R_IS R_NOT R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 527
=======
    (190) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 520
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 446

<<<<<<< HEAD
    (195) expSubq -> datatype R_IS R_NOT R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 528
=======
    (191) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 521
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 447

<<<<<<< HEAD
    (197) expSubq -> datatype R_IS R_NOT R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 529
=======
    (192) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 522
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 448

<<<<<<< HEAD
    (199) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 530
=======
    (194) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 523
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 449

<<<<<<< HEAD
    (190) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 531
=======
    (174) expComp -> datatype R_IS R_DISTINCT R_FROM datatype .
    (198) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 174 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 524
>>>>>>> main

state 450

<<<<<<< HEAD
    (194) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 532
=======
    (175) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype
    (199) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 525
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 451

<<<<<<< HEAD
    (196) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 533
=======
    (201) expSubq -> datatype R_IS R_NOT R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 526

>>>>>>> main

state 452

<<<<<<< HEAD
    (198) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 534
=======
    (205) expSubq -> datatype R_IS R_NOT R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 527

>>>>>>> main

state 453

<<<<<<< HEAD
    (166) expComp -> datatype R_BETWEEN datatype R_AND datatype .
    (185) expSubq -> datatype R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 166 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 535
=======
    (207) expSubq -> datatype R_IS R_NOT R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 528

>>>>>>> main

state 454

<<<<<<< HEAD
    (168) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype
    (187) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 536
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96
=======
    (209) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 529

>>>>>>> main

state 455

<<<<<<< HEAD
    (192) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 537
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (200) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19
>>>>>>> main

    selectStmt                     shift and go to state 530

state 456

<<<<<<< HEAD
    (193) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 538
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (204) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19
>>>>>>> main

    selectStmt                     shift and go to state 531

state 457

<<<<<<< HEAD
    (183) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 539
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (206) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19
>>>>>>> main

    selectStmt                     shift and go to state 532

state 458

<<<<<<< HEAD
    (146) caseWhen -> R_WHEN expBool R_THEN literal .

    R_ELSE          reduce using rule 146 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_WHEN          reduce using rule 146 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_END           reduce using rule 146 (caseWhen -> R_WHEN expBool R_THEN literal .)
=======
    (208) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19
>>>>>>> main

    selectStmt                     shift and go to state 533

state 459

<<<<<<< HEAD
    (106) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp . S_PARDER

    S_PARDER        shift and go to state 540

=======
    (176) expComp -> datatype R_BETWEEN datatype R_AND datatype .
    (195) expSubq -> datatype R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 176 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 534
>>>>>>> main

state 460

<<<<<<< HEAD
    (107) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName . S_PARDER

    S_PARDER        shift and go to state 541

=======
    (178) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype
    (197) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    datatype                       shift and go to state 535
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

state 461

<<<<<<< HEAD
    (116) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource . S_PARDER

    S_PARDER        shift and go to state 542
=======
    (202) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 536
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 462

<<<<<<< HEAD
    (117) dateSource -> R_TIMESTAMP . STRING

    STRING          shift and go to state 543
=======
    (203) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 537
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 463

<<<<<<< HEAD
    (118) dateSource -> T_DATE . STRING

    STRING          shift and go to state 544
=======
    (193) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 538
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 464

<<<<<<< HEAD
    (119) dateSource -> T_TIME . STRING

    STRING          shift and go to state 545
=======
    (156) caseWhen -> R_WHEN expBool R_THEN literal .

    R_ELSE          reduce using rule 156 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_WHEN          reduce using rule 156 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_END           reduce using rule 156 (caseWhen -> R_WHEN expBool R_THEN literal .)
>>>>>>> main


state 465

<<<<<<< HEAD
    (120) dateSource -> R_INTERVAL . STRING

    STRING          shift and go to state 546
=======
    (116) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp . S_PARDER

    S_PARDER        shift and go to state 539
>>>>>>> main


state 466

<<<<<<< HEAD
    (121) dateSource -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 547
=======
    (117) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName . S_PARDER

    S_PARDER        shift and go to state 540
>>>>>>> main


state 467

<<<<<<< HEAD
    (352) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt . R_AS S_DOLAR S_DOLAR bloqueFunction

    R_AS            shift and go to state 548
=======
    (126) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource . S_PARDER

    S_PARDER        shift and go to state 541
>>>>>>> main


state 468

<<<<<<< HEAD
    (357) returnsStmt -> R_RETURNS . item_returns
    (359) item_returns -> . R_NULL
=======
    (127) dateSource -> R_TIMESTAMP . STRING

    STRING          shift and go to state 542

>>>>>>> main

    R_NULL          shift and go to state 550

<<<<<<< HEAD
    item_returns                   shift and go to state 549

state 469
=======
    (128) dateSource -> T_DATE . STRING

    STRING          shift and go to state 543
>>>>>>> main

    (20) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER . inheritsOpt
    (27) inheritsOpt -> . R_INHERITS S_PARIZQ ID S_PARDER
    (28) inheritsOpt -> .

    R_INHERITS      shift and go to state 552
    S_PUNTOCOMA     reduce using rule 28 (inheritsOpt -> .)

<<<<<<< HEAD
    inheritsOpt                    shift and go to state 551
=======
    (129) dateSource -> T_TIME . STRING

    STRING          shift and go to state 544

>>>>>>> main

state 470

<<<<<<< HEAD
    (37) createTableList -> createTableList S_COMA . createTable
    (39) createTable -> . ID types createColumns
    (40) createTable -> . createConstraint
    (41) createTable -> . createUnique
    (42) createTable -> . createPrimary
    (43) createTable -> . createForeign
    (46) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (47) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (48) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (49) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (50) constrName -> . R_CONSTRAINT ID
    (51) constrName -> .

    ID              shift and go to state 392
    R_UNIQUE        shift and go to state 398
    R_PRIMARY       shift and go to state 324
    R_CONSTRAINT    shift and go to state 325
    R_CHECK         reduce using rule 51 (constrName -> .)
    R_FOREIGN       reduce using rule 51 (constrName -> .)

    createTable                    shift and go to state 553
    createConstraint               shift and go to state 393
    createUnique                   shift and go to state 394
    createPrimary                  shift and go to state 395
    createForeign                  shift and go to state 396
    constrName                     shift and go to state 397

state 471
=======
    (130) dateSource -> R_INTERVAL . STRING

    STRING          shift and go to state 545
>>>>>>> main

    (54) types -> ID .

    R_DEFAULT       reduce using rule 54 (types -> ID .)
    R_NOT           reduce using rule 54 (types -> ID .)
    R_NULL          reduce using rule 54 (types -> ID .)
    R_PRIMARY       reduce using rule 54 (types -> ID .)
    R_REFERENCES    reduce using rule 54 (types -> ID .)
    R_CONSTRAINT    reduce using rule 54 (types -> ID .)
    R_UNIQUE        reduce using rule 54 (types -> ID .)
    R_CHECK         reduce using rule 54 (types -> ID .)
    S_PARDER        reduce using rule 54 (types -> ID .)
    S_COMA          reduce using rule 54 (types -> ID .)
    S_PUNTOCOMA     reduce using rule 54 (types -> ID .)

<<<<<<< HEAD

state 472
=======
    (131) dateSource -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 546
>>>>>>> main

    (39) createTable -> ID types . createColumns
    (44) createColumns -> . colOptionsList
    (45) createColumns -> .
    (82) colOptionsList -> . colOptionsList colOptions
    (83) colOptionsList -> . colOptions
    (84) colOptions -> . defaultVal
    (85) colOptions -> . nullOpt
    (86) colOptions -> . constraintOpt
    (87) colOptions -> . primaryOpt
    (88) colOptions -> . referencesOpt
    (89) defaultVal -> . R_DEFAULT literal
    (90) nullOpt -> . R_NOT R_NULL
    (91) nullOpt -> . R_NULL
    (92) constraintOpt -> . constrName R_UNIQUE
    (93) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (94) primaryOpt -> . R_PRIMARY R_KEY
    (95) referencesOpt -> . R_REFERENCES ID
    (50) constrName -> . R_CONSTRAINT ID
    (51) constrName -> .

    S_PARDER        reduce using rule 45 (createColumns -> .)
    S_COMA          reduce using rule 45 (createColumns -> .)
    R_DEFAULT       shift and go to state 562
    R_NOT           shift and go to state 563
    R_NULL          shift and go to state 564
    R_PRIMARY       shift and go to state 566
    R_REFERENCES    shift and go to state 567
    R_CONSTRAINT    shift and go to state 325
    R_UNIQUE        reduce using rule 51 (constrName -> .)
    R_CHECK         reduce using rule 51 (constrName -> .)

    createColumns                  shift and go to state 554
    colOptionsList                 shift and go to state 555
    colOptions                     shift and go to state 556
    defaultVal                     shift and go to state 557
    nullOpt                        shift and go to state 558
    constraintOpt                  shift and go to state 559
    primaryOpt                     shift and go to state 560
    referencesOpt                  shift and go to state 561
    constrName                     shift and go to state 565

state 473

<<<<<<< HEAD
    (55) types -> T_SMALLINT .

    R_DEFAULT       reduce using rule 55 (types -> T_SMALLINT .)
    R_NOT           reduce using rule 55 (types -> T_SMALLINT .)
    R_NULL          reduce using rule 55 (types -> T_SMALLINT .)
    R_PRIMARY       reduce using rule 55 (types -> T_SMALLINT .)
    R_REFERENCES    reduce using rule 55 (types -> T_SMALLINT .)
    R_CONSTRAINT    reduce using rule 55 (types -> T_SMALLINT .)
    R_UNIQUE        reduce using rule 55 (types -> T_SMALLINT .)
    R_CHECK         reduce using rule 55 (types -> T_SMALLINT .)
    S_PARDER        reduce using rule 55 (types -> T_SMALLINT .)
    S_COMA          reduce using rule 55 (types -> T_SMALLINT .)
    S_PUNTOCOMA     reduce using rule 55 (types -> T_SMALLINT .)
=======
    (19) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index . S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    S_PARIZQ        shift and go to state 547
>>>>>>> main


state 474

<<<<<<< HEAD
    (56) types -> T_INTEGER .

    R_DEFAULT       reduce using rule 56 (types -> T_INTEGER .)
    R_NOT           reduce using rule 56 (types -> T_INTEGER .)
    R_NULL          reduce using rule 56 (types -> T_INTEGER .)
    R_PRIMARY       reduce using rule 56 (types -> T_INTEGER .)
    R_REFERENCES    reduce using rule 56 (types -> T_INTEGER .)
    R_CONSTRAINT    reduce using rule 56 (types -> T_INTEGER .)
    R_UNIQUE        reduce using rule 56 (types -> T_INTEGER .)
    R_CHECK         reduce using rule 56 (types -> T_INTEGER .)
    S_PARDER        reduce using rule 56 (types -> T_INTEGER .)
    S_COMA          reduce using rule 56 (types -> T_INTEGER .)
    S_PUNTOCOMA     reduce using rule 56 (types -> T_INTEGER .)
=======
    (22) using_hash_index -> R_USING . R_HASH

    R_HASH          shift and go to state 548
>>>>>>> main


state 475

<<<<<<< HEAD
    (57) types -> T_BIGINT .

    R_DEFAULT       reduce using rule 57 (types -> T_BIGINT .)
    R_NOT           reduce using rule 57 (types -> T_BIGINT .)
    R_NULL          reduce using rule 57 (types -> T_BIGINT .)
    R_PRIMARY       reduce using rule 57 (types -> T_BIGINT .)
    R_REFERENCES    reduce using rule 57 (types -> T_BIGINT .)
    R_CONSTRAINT    reduce using rule 57 (types -> T_BIGINT .)
    R_UNIQUE        reduce using rule 57 (types -> T_BIGINT .)
    R_CHECK         reduce using rule 57 (types -> T_BIGINT .)
    S_PARDER        reduce using rule 57 (types -> T_BIGINT .)
    S_COMA          reduce using rule 57 (types -> T_BIGINT .)
    S_PUNTOCOMA     reduce using rule 57 (types -> T_BIGINT .)
=======
    (30) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER . inheritsOpt
    (37) inheritsOpt -> . R_INHERITS S_PARIZQ ID S_PARDER
    (38) inheritsOpt -> .

    R_INHERITS      shift and go to state 550
    S_PUNTOCOMA     reduce using rule 38 (inheritsOpt -> .)
>>>>>>> main

    inheritsOpt                    shift and go to state 549

state 476

<<<<<<< HEAD
    (58) types -> T_REAL .

    R_DEFAULT       reduce using rule 58 (types -> T_REAL .)
    R_NOT           reduce using rule 58 (types -> T_REAL .)
    R_NULL          reduce using rule 58 (types -> T_REAL .)
    R_PRIMARY       reduce using rule 58 (types -> T_REAL .)
    R_REFERENCES    reduce using rule 58 (types -> T_REAL .)
    R_CONSTRAINT    reduce using rule 58 (types -> T_REAL .)
    R_UNIQUE        reduce using rule 58 (types -> T_REAL .)
    R_CHECK         reduce using rule 58 (types -> T_REAL .)
    S_PARDER        reduce using rule 58 (types -> T_REAL .)
    S_COMA          reduce using rule 58 (types -> T_REAL .)
    S_PUNTOCOMA     reduce using rule 58 (types -> T_REAL .)

=======
    (47) createTableList -> createTableList S_COMA . createTable
    (49) createTable -> . ID types createColumns
    (50) createTable -> . createConstraint
    (51) createTable -> . createUnique
    (52) createTable -> . createPrimary
    (53) createTable -> . createForeign
    (56) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (57) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (58) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (59) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (60) constrName -> . R_CONSTRAINT ID
    (61) constrName -> .

    ID              shift and go to state 388
    R_UNIQUE        shift and go to state 394
    R_PRIMARY       shift and go to state 321
    R_CONSTRAINT    shift and go to state 322
    R_CHECK         reduce using rule 61 (constrName -> .)
    R_FOREIGN       reduce using rule 61 (constrName -> .)

    createTable                    shift and go to state 551
    createConstraint               shift and go to state 389
    createUnique                   shift and go to state 390
    createPrimary                  shift and go to state 391
    createForeign                  shift and go to state 392
    constrName                     shift and go to state 393
>>>>>>> main

state 477

<<<<<<< HEAD
    (59) types -> T_DOUBLE . T_PRECISION

    T_PRECISION     shift and go to state 568
=======
    (64) types -> ID .

    R_DEFAULT       reduce using rule 64 (types -> ID .)
    R_NOT           reduce using rule 64 (types -> ID .)
    R_NULL          reduce using rule 64 (types -> ID .)
    R_PRIMARY       reduce using rule 64 (types -> ID .)
    R_REFERENCES    reduce using rule 64 (types -> ID .)
    R_CONSTRAINT    reduce using rule 64 (types -> ID .)
    R_UNIQUE        reduce using rule 64 (types -> ID .)
    R_CHECK         reduce using rule 64 (types -> ID .)
    S_PARDER        reduce using rule 64 (types -> ID .)
    S_COMA          reduce using rule 64 (types -> ID .)
    S_PUNTOCOMA     reduce using rule 64 (types -> ID .)
>>>>>>> main


state 478

<<<<<<< HEAD
    (60) types -> T_MONEY .

    R_DEFAULT       reduce using rule 60 (types -> T_MONEY .)
    R_NOT           reduce using rule 60 (types -> T_MONEY .)
    R_NULL          reduce using rule 60 (types -> T_MONEY .)
    R_PRIMARY       reduce using rule 60 (types -> T_MONEY .)
    R_REFERENCES    reduce using rule 60 (types -> T_MONEY .)
    R_CONSTRAINT    reduce using rule 60 (types -> T_MONEY .)
    R_UNIQUE        reduce using rule 60 (types -> T_MONEY .)
    R_CHECK         reduce using rule 60 (types -> T_MONEY .)
    S_PARDER        reduce using rule 60 (types -> T_MONEY .)
    S_COMA          reduce using rule 60 (types -> T_MONEY .)
    S_PUNTOCOMA     reduce using rule 60 (types -> T_MONEY .)

=======
    (49) createTable -> ID types . createColumns
    (54) createColumns -> . colOptionsList
    (55) createColumns -> .
    (92) colOptionsList -> . colOptionsList colOptions
    (93) colOptionsList -> . colOptions
    (94) colOptions -> . defaultVal
    (95) colOptions -> . nullOpt
    (96) colOptions -> . constraintOpt
    (97) colOptions -> . primaryOpt
    (98) colOptions -> . referencesOpt
    (99) defaultVal -> . R_DEFAULT literal
    (100) nullOpt -> . R_NOT R_NULL
    (101) nullOpt -> . R_NULL
    (102) constraintOpt -> . constrName R_UNIQUE
    (103) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (104) primaryOpt -> . R_PRIMARY R_KEY
    (105) referencesOpt -> . R_REFERENCES ID
    (60) constrName -> . R_CONSTRAINT ID
    (61) constrName -> .

    S_PARDER        reduce using rule 55 (createColumns -> .)
    S_COMA          reduce using rule 55 (createColumns -> .)
    R_DEFAULT       shift and go to state 560
    R_NOT           shift and go to state 561
    R_NULL          shift and go to state 562
    R_PRIMARY       shift and go to state 564
    R_REFERENCES    shift and go to state 565
    R_CONSTRAINT    shift and go to state 322
    R_UNIQUE        reduce using rule 61 (constrName -> .)
    R_CHECK         reduce using rule 61 (constrName -> .)

    createColumns                  shift and go to state 552
    colOptionsList                 shift and go to state 553
    colOptions                     shift and go to state 554
    defaultVal                     shift and go to state 555
    nullOpt                        shift and go to state 556
    constraintOpt                  shift and go to state 557
    primaryOpt                     shift and go to state 558
    referencesOpt                  shift and go to state 559
    constrName                     shift and go to state 563
>>>>>>> main

state 479

<<<<<<< HEAD
    (61) types -> T_TEXT .

    R_DEFAULT       reduce using rule 61 (types -> T_TEXT .)
    R_NOT           reduce using rule 61 (types -> T_TEXT .)
    R_NULL          reduce using rule 61 (types -> T_TEXT .)
    R_PRIMARY       reduce using rule 61 (types -> T_TEXT .)
    R_REFERENCES    reduce using rule 61 (types -> T_TEXT .)
    R_CONSTRAINT    reduce using rule 61 (types -> T_TEXT .)
    R_UNIQUE        reduce using rule 61 (types -> T_TEXT .)
    R_CHECK         reduce using rule 61 (types -> T_TEXT .)
    S_PARDER        reduce using rule 61 (types -> T_TEXT .)
    S_COMA          reduce using rule 61 (types -> T_TEXT .)
    S_PUNTOCOMA     reduce using rule 61 (types -> T_TEXT .)
=======
    (65) types -> T_SMALLINT .

    R_DEFAULT       reduce using rule 65 (types -> T_SMALLINT .)
    R_NOT           reduce using rule 65 (types -> T_SMALLINT .)
    R_NULL          reduce using rule 65 (types -> T_SMALLINT .)
    R_PRIMARY       reduce using rule 65 (types -> T_SMALLINT .)
    R_REFERENCES    reduce using rule 65 (types -> T_SMALLINT .)
    R_CONSTRAINT    reduce using rule 65 (types -> T_SMALLINT .)
    R_UNIQUE        reduce using rule 65 (types -> T_SMALLINT .)
    R_CHECK         reduce using rule 65 (types -> T_SMALLINT .)
    S_PARDER        reduce using rule 65 (types -> T_SMALLINT .)
    S_COMA          reduce using rule 65 (types -> T_SMALLINT .)
    S_PUNTOCOMA     reduce using rule 65 (types -> T_SMALLINT .)
>>>>>>> main


state 480

<<<<<<< HEAD
    (62) types -> T_BOOLEAN .

    R_DEFAULT       reduce using rule 62 (types -> T_BOOLEAN .)
    R_NOT           reduce using rule 62 (types -> T_BOOLEAN .)
    R_NULL          reduce using rule 62 (types -> T_BOOLEAN .)
    R_PRIMARY       reduce using rule 62 (types -> T_BOOLEAN .)
    R_REFERENCES    reduce using rule 62 (types -> T_BOOLEAN .)
    R_CONSTRAINT    reduce using rule 62 (types -> T_BOOLEAN .)
    R_UNIQUE        reduce using rule 62 (types -> T_BOOLEAN .)
    R_CHECK         reduce using rule 62 (types -> T_BOOLEAN .)
    S_PARDER        reduce using rule 62 (types -> T_BOOLEAN .)
    S_COMA          reduce using rule 62 (types -> T_BOOLEAN .)
    S_PUNTOCOMA     reduce using rule 62 (types -> T_BOOLEAN .)
=======
    (66) types -> T_INTEGER .

    R_DEFAULT       reduce using rule 66 (types -> T_INTEGER .)
    R_NOT           reduce using rule 66 (types -> T_INTEGER .)
    R_NULL          reduce using rule 66 (types -> T_INTEGER .)
    R_PRIMARY       reduce using rule 66 (types -> T_INTEGER .)
    R_REFERENCES    reduce using rule 66 (types -> T_INTEGER .)
    R_CONSTRAINT    reduce using rule 66 (types -> T_INTEGER .)
    R_UNIQUE        reduce using rule 66 (types -> T_INTEGER .)
    R_CHECK         reduce using rule 66 (types -> T_INTEGER .)
    S_PARDER        reduce using rule 66 (types -> T_INTEGER .)
    S_COMA          reduce using rule 66 (types -> T_INTEGER .)
    S_PUNTOCOMA     reduce using rule 66 (types -> T_INTEGER .)
>>>>>>> main


state 481

<<<<<<< HEAD
    (63) types -> R_TIMESTAMP .

    R_DEFAULT       reduce using rule 63 (types -> R_TIMESTAMP .)
    R_NOT           reduce using rule 63 (types -> R_TIMESTAMP .)
    R_NULL          reduce using rule 63 (types -> R_TIMESTAMP .)
    R_PRIMARY       reduce using rule 63 (types -> R_TIMESTAMP .)
    R_REFERENCES    reduce using rule 63 (types -> R_TIMESTAMP .)
    R_CONSTRAINT    reduce using rule 63 (types -> R_TIMESTAMP .)
    R_UNIQUE        reduce using rule 63 (types -> R_TIMESTAMP .)
    R_CHECK         reduce using rule 63 (types -> R_TIMESTAMP .)
    S_PARDER        reduce using rule 63 (types -> R_TIMESTAMP .)
    S_COMA          reduce using rule 63 (types -> R_TIMESTAMP .)
    S_PUNTOCOMA     reduce using rule 63 (types -> R_TIMESTAMP .)
=======
    (67) types -> T_BIGINT .

    R_DEFAULT       reduce using rule 67 (types -> T_BIGINT .)
    R_NOT           reduce using rule 67 (types -> T_BIGINT .)
    R_NULL          reduce using rule 67 (types -> T_BIGINT .)
    R_PRIMARY       reduce using rule 67 (types -> T_BIGINT .)
    R_REFERENCES    reduce using rule 67 (types -> T_BIGINT .)
    R_CONSTRAINT    reduce using rule 67 (types -> T_BIGINT .)
    R_UNIQUE        reduce using rule 67 (types -> T_BIGINT .)
    R_CHECK         reduce using rule 67 (types -> T_BIGINT .)
    S_PARDER        reduce using rule 67 (types -> T_BIGINT .)
    S_COMA          reduce using rule 67 (types -> T_BIGINT .)
    S_PUNTOCOMA     reduce using rule 67 (types -> T_BIGINT .)
>>>>>>> main


state 482

<<<<<<< HEAD
    (64) types -> T_DATE .
=======
    (68) types -> T_REAL .

    R_DEFAULT       reduce using rule 68 (types -> T_REAL .)
    R_NOT           reduce using rule 68 (types -> T_REAL .)
    R_NULL          reduce using rule 68 (types -> T_REAL .)
    R_PRIMARY       reduce using rule 68 (types -> T_REAL .)
    R_REFERENCES    reduce using rule 68 (types -> T_REAL .)
    R_CONSTRAINT    reduce using rule 68 (types -> T_REAL .)
    R_UNIQUE        reduce using rule 68 (types -> T_REAL .)
    R_CHECK         reduce using rule 68 (types -> T_REAL .)
    S_PARDER        reduce using rule 68 (types -> T_REAL .)
    S_COMA          reduce using rule 68 (types -> T_REAL .)
    S_PUNTOCOMA     reduce using rule 68 (types -> T_REAL .)

>>>>>>> main

    R_DEFAULT       reduce using rule 64 (types -> T_DATE .)
    R_NOT           reduce using rule 64 (types -> T_DATE .)
    R_NULL          reduce using rule 64 (types -> T_DATE .)
    R_PRIMARY       reduce using rule 64 (types -> T_DATE .)
    R_REFERENCES    reduce using rule 64 (types -> T_DATE .)
    R_CONSTRAINT    reduce using rule 64 (types -> T_DATE .)
    R_UNIQUE        reduce using rule 64 (types -> T_DATE .)
    R_CHECK         reduce using rule 64 (types -> T_DATE .)
    S_PARDER        reduce using rule 64 (types -> T_DATE .)
    S_COMA          reduce using rule 64 (types -> T_DATE .)
    S_PUNTOCOMA     reduce using rule 64 (types -> T_DATE .)

<<<<<<< HEAD
=======
    (69) types -> T_DOUBLE . T_PRECISION

    T_PRECISION     shift and go to state 566

>>>>>>> main

state 483

<<<<<<< HEAD
    (65) types -> T_TIME .
=======
    (70) types -> T_MONEY .

    R_DEFAULT       reduce using rule 70 (types -> T_MONEY .)
    R_NOT           reduce using rule 70 (types -> T_MONEY .)
    R_NULL          reduce using rule 70 (types -> T_MONEY .)
    R_PRIMARY       reduce using rule 70 (types -> T_MONEY .)
    R_REFERENCES    reduce using rule 70 (types -> T_MONEY .)
    R_CONSTRAINT    reduce using rule 70 (types -> T_MONEY .)
    R_UNIQUE        reduce using rule 70 (types -> T_MONEY .)
    R_CHECK         reduce using rule 70 (types -> T_MONEY .)
    S_PARDER        reduce using rule 70 (types -> T_MONEY .)
    S_COMA          reduce using rule 70 (types -> T_MONEY .)
    S_PUNTOCOMA     reduce using rule 70 (types -> T_MONEY .)

>>>>>>> main

    R_DEFAULT       reduce using rule 65 (types -> T_TIME .)
    R_NOT           reduce using rule 65 (types -> T_TIME .)
    R_NULL          reduce using rule 65 (types -> T_TIME .)
    R_PRIMARY       reduce using rule 65 (types -> T_TIME .)
    R_REFERENCES    reduce using rule 65 (types -> T_TIME .)
    R_CONSTRAINT    reduce using rule 65 (types -> T_TIME .)
    R_UNIQUE        reduce using rule 65 (types -> T_TIME .)
    R_CHECK         reduce using rule 65 (types -> T_TIME .)
    S_PARDER        reduce using rule 65 (types -> T_TIME .)
    S_COMA          reduce using rule 65 (types -> T_TIME .)
    S_PUNTOCOMA     reduce using rule 65 (types -> T_TIME .)

<<<<<<< HEAD
=======
    (71) types -> T_TEXT .

    R_DEFAULT       reduce using rule 71 (types -> T_TEXT .)
    R_NOT           reduce using rule 71 (types -> T_TEXT .)
    R_NULL          reduce using rule 71 (types -> T_TEXT .)
    R_PRIMARY       reduce using rule 71 (types -> T_TEXT .)
    R_REFERENCES    reduce using rule 71 (types -> T_TEXT .)
    R_CONSTRAINT    reduce using rule 71 (types -> T_TEXT .)
    R_UNIQUE        reduce using rule 71 (types -> T_TEXT .)
    R_CHECK         reduce using rule 71 (types -> T_TEXT .)
    S_PARDER        reduce using rule 71 (types -> T_TEXT .)
    S_COMA          reduce using rule 71 (types -> T_TEXT .)
    S_PUNTOCOMA     reduce using rule 71 (types -> T_TEXT .)

>>>>>>> main

state 484

<<<<<<< HEAD
    (66) types -> T_DECIMAL . optParams
    (80) optParams -> . S_PARIZQ literalList S_PARDER
    (81) optParams -> .

    S_PARIZQ        shift and go to state 570
    R_DEFAULT       reduce using rule 81 (optParams -> .)
    R_NOT           reduce using rule 81 (optParams -> .)
    R_NULL          reduce using rule 81 (optParams -> .)
    R_PRIMARY       reduce using rule 81 (optParams -> .)
    R_REFERENCES    reduce using rule 81 (optParams -> .)
    R_CONSTRAINT    reduce using rule 81 (optParams -> .)
    R_UNIQUE        reduce using rule 81 (optParams -> .)
    R_CHECK         reduce using rule 81 (optParams -> .)
    S_PARDER        reduce using rule 81 (optParams -> .)
    S_COMA          reduce using rule 81 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 81 (optParams -> .)

    optParams                      shift and go to state 569
=======
    (72) types -> T_BOOLEAN .

    R_DEFAULT       reduce using rule 72 (types -> T_BOOLEAN .)
    R_NOT           reduce using rule 72 (types -> T_BOOLEAN .)
    R_NULL          reduce using rule 72 (types -> T_BOOLEAN .)
    R_PRIMARY       reduce using rule 72 (types -> T_BOOLEAN .)
    R_REFERENCES    reduce using rule 72 (types -> T_BOOLEAN .)
    R_CONSTRAINT    reduce using rule 72 (types -> T_BOOLEAN .)
    R_UNIQUE        reduce using rule 72 (types -> T_BOOLEAN .)
    R_CHECK         reduce using rule 72 (types -> T_BOOLEAN .)
    S_PARDER        reduce using rule 72 (types -> T_BOOLEAN .)
    S_COMA          reduce using rule 72 (types -> T_BOOLEAN .)
    S_PUNTOCOMA     reduce using rule 72 (types -> T_BOOLEAN .)

>>>>>>> main

state 485

<<<<<<< HEAD
    (67) types -> T_NUMERIC . optParams
    (80) optParams -> . S_PARIZQ literalList S_PARDER
    (81) optParams -> .

    S_PARIZQ        shift and go to state 570
    R_DEFAULT       reduce using rule 81 (optParams -> .)
    R_NOT           reduce using rule 81 (optParams -> .)
    R_NULL          reduce using rule 81 (optParams -> .)
    R_PRIMARY       reduce using rule 81 (optParams -> .)
    R_REFERENCES    reduce using rule 81 (optParams -> .)
    R_CONSTRAINT    reduce using rule 81 (optParams -> .)
    R_UNIQUE        reduce using rule 81 (optParams -> .)
    R_CHECK         reduce using rule 81 (optParams -> .)
    S_PARDER        reduce using rule 81 (optParams -> .)
    S_COMA          reduce using rule 81 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 81 (optParams -> .)

    optParams                      shift and go to state 571
=======
    (73) types -> R_TIMESTAMP .

    R_DEFAULT       reduce using rule 73 (types -> R_TIMESTAMP .)
    R_NOT           reduce using rule 73 (types -> R_TIMESTAMP .)
    R_NULL          reduce using rule 73 (types -> R_TIMESTAMP .)
    R_PRIMARY       reduce using rule 73 (types -> R_TIMESTAMP .)
    R_REFERENCES    reduce using rule 73 (types -> R_TIMESTAMP .)
    R_CONSTRAINT    reduce using rule 73 (types -> R_TIMESTAMP .)
    R_UNIQUE        reduce using rule 73 (types -> R_TIMESTAMP .)
    R_CHECK         reduce using rule 73 (types -> R_TIMESTAMP .)
    S_PARDER        reduce using rule 73 (types -> R_TIMESTAMP .)
    S_COMA          reduce using rule 73 (types -> R_TIMESTAMP .)
    S_PUNTOCOMA     reduce using rule 73 (types -> R_TIMESTAMP .)

>>>>>>> main

state 486

<<<<<<< HEAD
    (68) types -> T_VARCHAR . optParams
    (80) optParams -> . S_PARIZQ literalList S_PARDER
    (81) optParams -> .

    S_PARIZQ        shift and go to state 570
    R_DEFAULT       reduce using rule 81 (optParams -> .)
    R_NOT           reduce using rule 81 (optParams -> .)
    R_NULL          reduce using rule 81 (optParams -> .)
    R_PRIMARY       reduce using rule 81 (optParams -> .)
    R_REFERENCES    reduce using rule 81 (optParams -> .)
    R_CONSTRAINT    reduce using rule 81 (optParams -> .)
    R_UNIQUE        reduce using rule 81 (optParams -> .)
    R_CHECK         reduce using rule 81 (optParams -> .)
    S_PARDER        reduce using rule 81 (optParams -> .)
    S_COMA          reduce using rule 81 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 81 (optParams -> .)

    optParams                      shift and go to state 572

state 487

    (69) types -> T_CHARACTER . optParams
    (71) types -> T_CHARACTER . T_VARYING optParams
    (80) optParams -> . S_PARIZQ literalList S_PARDER
    (81) optParams -> .

    T_VARYING       shift and go to state 574
    S_PARIZQ        shift and go to state 570
    R_DEFAULT       reduce using rule 81 (optParams -> .)
    R_NOT           reduce using rule 81 (optParams -> .)
    R_NULL          reduce using rule 81 (optParams -> .)
    R_PRIMARY       reduce using rule 81 (optParams -> .)
    R_REFERENCES    reduce using rule 81 (optParams -> .)
    R_CONSTRAINT    reduce using rule 81 (optParams -> .)
    R_UNIQUE        reduce using rule 81 (optParams -> .)
    R_CHECK         reduce using rule 81 (optParams -> .)
    S_PARDER        reduce using rule 81 (optParams -> .)
    S_COMA          reduce using rule 81 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 81 (optParams -> .)

    optParams                      shift and go to state 573
=======
    (74) types -> T_DATE .

    R_DEFAULT       reduce using rule 74 (types -> T_DATE .)
    R_NOT           reduce using rule 74 (types -> T_DATE .)
    R_NULL          reduce using rule 74 (types -> T_DATE .)
    R_PRIMARY       reduce using rule 74 (types -> T_DATE .)
    R_REFERENCES    reduce using rule 74 (types -> T_DATE .)
    R_CONSTRAINT    reduce using rule 74 (types -> T_DATE .)
    R_UNIQUE        reduce using rule 74 (types -> T_DATE .)
    R_CHECK         reduce using rule 74 (types -> T_DATE .)
    S_PARDER        reduce using rule 74 (types -> T_DATE .)
    S_COMA          reduce using rule 74 (types -> T_DATE .)
    S_PUNTOCOMA     reduce using rule 74 (types -> T_DATE .)

>>>>>>> main

state 488

<<<<<<< HEAD
    (70) types -> T_CHAR . optParams
    (80) optParams -> . S_PARIZQ literalList S_PARDER
    (81) optParams -> .

    S_PARIZQ        shift and go to state 570
    R_DEFAULT       reduce using rule 81 (optParams -> .)
    R_NOT           reduce using rule 81 (optParams -> .)
    R_NULL          reduce using rule 81 (optParams -> .)
    R_PRIMARY       reduce using rule 81 (optParams -> .)
    R_REFERENCES    reduce using rule 81 (optParams -> .)
    R_CONSTRAINT    reduce using rule 81 (optParams -> .)
    R_UNIQUE        reduce using rule 81 (optParams -> .)
    R_CHECK         reduce using rule 81 (optParams -> .)
    S_PARDER        reduce using rule 81 (optParams -> .)
    S_COMA          reduce using rule 81 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 81 (optParams -> .)

    optParams                      shift and go to state 575

state 489
=======
    (75) types -> T_TIME .

    R_DEFAULT       reduce using rule 75 (types -> T_TIME .)
    R_NOT           reduce using rule 75 (types -> T_TIME .)
    R_NULL          reduce using rule 75 (types -> T_TIME .)
    R_PRIMARY       reduce using rule 75 (types -> T_TIME .)
    R_REFERENCES    reduce using rule 75 (types -> T_TIME .)
    R_CONSTRAINT    reduce using rule 75 (types -> T_TIME .)
    R_UNIQUE        reduce using rule 75 (types -> T_TIME .)
    R_CHECK         reduce using rule 75 (types -> T_TIME .)
    S_PARDER        reduce using rule 75 (types -> T_TIME .)
    S_COMA          reduce using rule 75 (types -> T_TIME .)
    S_PUNTOCOMA     reduce using rule 75 (types -> T_TIME .)
>>>>>>> main

    (72) types -> R_INTERVAL . intervalFields
    (73) intervalFields -> . R_YEAR
    (74) intervalFields -> . R_MONTH
    (75) intervalFields -> . R_DAY
    (76) intervalFields -> . R_HOUR
    (77) intervalFields -> . R_MINUTE
    (78) intervalFields -> . R_SECOND
    (79) intervalFields -> .

    R_YEAR          shift and go to state 577
    R_MONTH         shift and go to state 578
    R_DAY           shift and go to state 579
    R_HOUR          shift and go to state 580
    R_MINUTE        shift and go to state 581
    R_SECOND        shift and go to state 582
    R_DEFAULT       reduce using rule 79 (intervalFields -> .)
    R_NOT           reduce using rule 79 (intervalFields -> .)
    R_NULL          reduce using rule 79 (intervalFields -> .)
    R_PRIMARY       reduce using rule 79 (intervalFields -> .)
    R_REFERENCES    reduce using rule 79 (intervalFields -> .)
    R_CONSTRAINT    reduce using rule 79 (intervalFields -> .)
    R_UNIQUE        reduce using rule 79 (intervalFields -> .)
    R_CHECK         reduce using rule 79 (intervalFields -> .)
    S_PARDER        reduce using rule 79 (intervalFields -> .)
    S_COMA          reduce using rule 79 (intervalFields -> .)
    S_PUNTOCOMA     reduce using rule 79 (intervalFields -> .)

    intervalFields                 shift and go to state 576

state 490

<<<<<<< HEAD
    (47) createUnique -> R_UNIQUE S_PARIZQ . idList S_PARDER
    (52) idList -> . idList S_COMA ID
    (53) idList -> . ID

    ID              shift and go to state 333

    idList                         shift and go to state 583
=======
    (76) types -> T_DECIMAL . optParams
    (90) optParams -> . S_PARIZQ literalList S_PARDER
    (91) optParams -> .

    S_PARIZQ        shift and go to state 568
    R_DEFAULT       reduce using rule 91 (optParams -> .)
    R_NOT           reduce using rule 91 (optParams -> .)
    R_NULL          reduce using rule 91 (optParams -> .)
    R_PRIMARY       reduce using rule 91 (optParams -> .)
    R_REFERENCES    reduce using rule 91 (optParams -> .)
    R_CONSTRAINT    reduce using rule 91 (optParams -> .)
    R_UNIQUE        reduce using rule 91 (optParams -> .)
    R_CHECK         reduce using rule 91 (optParams -> .)
    S_PARDER        reduce using rule 91 (optParams -> .)
    S_COMA          reduce using rule 91 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 91 (optParams -> .)

    optParams                      shift and go to state 567
>>>>>>> main

state 491

<<<<<<< HEAD
    (21) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .

    S_PUNTOCOMA     reduce using rule 21 (createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .)

=======
    (77) types -> T_NUMERIC . optParams
    (90) optParams -> . S_PARIZQ literalList S_PARDER
    (91) optParams -> .

    S_PARIZQ        shift and go to state 568
    R_DEFAULT       reduce using rule 91 (optParams -> .)
    R_NOT           reduce using rule 91 (optParams -> .)
    R_NULL          reduce using rule 91 (optParams -> .)
    R_PRIMARY       reduce using rule 91 (optParams -> .)
    R_REFERENCES    reduce using rule 91 (optParams -> .)
    R_CONSTRAINT    reduce using rule 91 (optParams -> .)
    R_UNIQUE        reduce using rule 91 (optParams -> .)
    R_CHECK         reduce using rule 91 (optParams -> .)
    S_PARDER        reduce using rule 91 (optParams -> .)
    S_COMA          reduce using rule 91 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 91 (optParams -> .)

    optParams                      shift and go to state 569
>>>>>>> main

state 492

<<<<<<< HEAD
    (34) createMode -> R_MODE . INTEGER
    (35) createMode -> R_MODE . S_IGUAL INTEGER

    INTEGER         shift and go to state 584
    S_IGUAL         shift and go to state 585

=======
    (78) types -> T_VARCHAR . optParams
    (90) optParams -> . S_PARIZQ literalList S_PARDER
    (91) optParams -> .

    S_PARIZQ        shift and go to state 568
    R_DEFAULT       reduce using rule 91 (optParams -> .)
    R_NOT           reduce using rule 91 (optParams -> .)
    R_NULL          reduce using rule 91 (optParams -> .)
    R_PRIMARY       reduce using rule 91 (optParams -> .)
    R_REFERENCES    reduce using rule 91 (optParams -> .)
    R_CONSTRAINT    reduce using rule 91 (optParams -> .)
    R_UNIQUE        reduce using rule 91 (optParams -> .)
    R_CHECK         reduce using rule 91 (optParams -> .)
    S_PARDER        reduce using rule 91 (optParams -> .)
    S_COMA          reduce using rule 91 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 91 (optParams -> .)

    optParams                      shift and go to state 570
>>>>>>> main

state 493

<<<<<<< HEAD
    (29) createOwner -> R_OWNER ID .

    R_MODE          reduce using rule 29 (createOwner -> R_OWNER ID .)
    S_PUNTOCOMA     reduce using rule 29 (createOwner -> R_OWNER ID .)

=======
    (79) types -> T_CHARACTER . optParams
    (81) types -> T_CHARACTER . T_VARYING optParams
    (90) optParams -> . S_PARIZQ literalList S_PARDER
    (91) optParams -> .

    T_VARYING       shift and go to state 572
    S_PARIZQ        shift and go to state 568
    R_DEFAULT       reduce using rule 91 (optParams -> .)
    R_NOT           reduce using rule 91 (optParams -> .)
    R_NULL          reduce using rule 91 (optParams -> .)
    R_PRIMARY       reduce using rule 91 (optParams -> .)
    R_REFERENCES    reduce using rule 91 (optParams -> .)
    R_CONSTRAINT    reduce using rule 91 (optParams -> .)
    R_UNIQUE        reduce using rule 91 (optParams -> .)
    R_CHECK         reduce using rule 91 (optParams -> .)
    S_PARDER        reduce using rule 91 (optParams -> .)
    S_COMA          reduce using rule 91 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 91 (optParams -> .)

    optParams                      shift and go to state 571
>>>>>>> main

state 494

<<<<<<< HEAD
    (30) createOwner -> R_OWNER STRING .
=======
    (80) types -> T_CHAR . optParams
    (90) optParams -> . S_PARIZQ literalList S_PARDER
    (91) optParams -> .

    S_PARIZQ        shift and go to state 568
    R_DEFAULT       reduce using rule 91 (optParams -> .)
    R_NOT           reduce using rule 91 (optParams -> .)
    R_NULL          reduce using rule 91 (optParams -> .)
    R_PRIMARY       reduce using rule 91 (optParams -> .)
    R_REFERENCES    reduce using rule 91 (optParams -> .)
    R_CONSTRAINT    reduce using rule 91 (optParams -> .)
    R_UNIQUE        reduce using rule 91 (optParams -> .)
    R_CHECK         reduce using rule 91 (optParams -> .)
    S_PARDER        reduce using rule 91 (optParams -> .)
    S_COMA          reduce using rule 91 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 91 (optParams -> .)

    optParams                      shift and go to state 573
>>>>>>> main

    R_MODE          reduce using rule 30 (createOwner -> R_OWNER STRING .)
    S_PUNTOCOMA     reduce using rule 30 (createOwner -> R_OWNER STRING .)

<<<<<<< HEAD

state 495

    (31) createOwner -> R_OWNER S_IGUAL . ID
    (32) createOwner -> R_OWNER S_IGUAL . STRING

    ID              shift and go to state 586
    STRING          shift and go to state 587

=======
    (82) types -> R_INTERVAL . intervalFields
    (83) intervalFields -> . R_YEAR
    (84) intervalFields -> . R_MONTH
    (85) intervalFields -> . R_DAY
    (86) intervalFields -> . R_HOUR
    (87) intervalFields -> . R_MINUTE
    (88) intervalFields -> . R_SECOND
    (89) intervalFields -> .

    R_YEAR          shift and go to state 575
    R_MONTH         shift and go to state 576
    R_DAY           shift and go to state 577
    R_HOUR          shift and go to state 578
    R_MINUTE        shift and go to state 579
    R_SECOND        shift and go to state 580
    R_DEFAULT       reduce using rule 89 (intervalFields -> .)
    R_NOT           reduce using rule 89 (intervalFields -> .)
    R_NULL          reduce using rule 89 (intervalFields -> .)
    R_PRIMARY       reduce using rule 89 (intervalFields -> .)
    R_REFERENCES    reduce using rule 89 (intervalFields -> .)
    R_CONSTRAINT    reduce using rule 89 (intervalFields -> .)
    R_UNIQUE        reduce using rule 89 (intervalFields -> .)
    R_CHECK         reduce using rule 89 (intervalFields -> .)
    S_PARDER        reduce using rule 89 (intervalFields -> .)
    S_COMA          reduce using rule 89 (intervalFields -> .)
    S_PUNTOCOMA     reduce using rule 89 (intervalFields -> .)

    intervalFields                 shift and go to state 574

state 488

    (57) createUnique -> R_UNIQUE S_PARIZQ . idList S_PARDER
    (62) idList -> . idList S_COMA ID
    (63) idList -> . ID

    ID              shift and go to state 330

    idList                         shift and go to state 581
>>>>>>> main

state 496

<<<<<<< HEAD
    (24) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ . paramsList S_PARDER
    (134) paramsList -> . paramsList S_COMA datatype
    (135) paramsList -> . datatype
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    S_PARIZQ        shift and go to state 175
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    paramsList                     shift and go to state 588
    datatype                       shift and go to state 240
    columnName                     shift and go to state 174
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    timeStamp                      shift and go to state 96

state 497
=======
    (31) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .

    S_PUNTOCOMA     reduce using rule 31 (createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .)
>>>>>>> main

    (258) alterAlter -> R_COLUMN ID R_SET . nullOpt
    (259) alterAlter -> R_COLUMN ID R_SET . defaultVal
    (90) nullOpt -> . R_NOT R_NULL
    (91) nullOpt -> . R_NULL
    (89) defaultVal -> . R_DEFAULT literal

    R_NOT           shift and go to state 563
    R_NULL          shift and go to state 564
    R_DEFAULT       shift and go to state 562

<<<<<<< HEAD
    nullOpt                        shift and go to state 589
    defaultVal                     shift and go to state 590

state 498
=======
    (44) createMode -> R_MODE . INTEGER
    (45) createMode -> R_MODE . S_IGUAL INTEGER

    INTEGER         shift and go to state 582
    S_IGUAL         shift and go to state 583
>>>>>>> main

    (260) alterAlter -> R_COLUMN ID R_TYPE . types
    (54) types -> . ID
    (55) types -> . T_SMALLINT
    (56) types -> . T_INTEGER
    (57) types -> . T_BIGINT
    (58) types -> . T_REAL
    (59) types -> . T_DOUBLE T_PRECISION
    (60) types -> . T_MONEY
    (61) types -> . T_TEXT
    (62) types -> . T_BOOLEAN
    (63) types -> . R_TIMESTAMP
    (64) types -> . T_DATE
    (65) types -> . T_TIME
    (66) types -> . T_DECIMAL optParams
    (67) types -> . T_NUMERIC optParams
    (68) types -> . T_VARCHAR optParams
    (69) types -> . T_CHARACTER optParams
    (70) types -> . T_CHAR optParams
    (71) types -> . T_CHARACTER T_VARYING optParams
    (72) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 471
    T_SMALLINT      shift and go to state 473
    T_INTEGER       shift and go to state 474
    T_BIGINT        shift and go to state 475
    T_REAL          shift and go to state 476
    T_DOUBLE        shift and go to state 477
    T_MONEY         shift and go to state 478
    T_TEXT          shift and go to state 479
    T_BOOLEAN       shift and go to state 480
    R_TIMESTAMP     shift and go to state 481
    T_DATE          shift and go to state 482
    T_TIME          shift and go to state 483
    T_DECIMAL       shift and go to state 484
    T_NUMERIC       shift and go to state 485
    T_VARCHAR       shift and go to state 486
    T_CHARACTER     shift and go to state 487
    T_CHAR          shift and go to state 488
    R_INTERVAL      shift and go to state 489

    types                          shift and go to state 591

state 499

<<<<<<< HEAD
    (253) alterAdd -> R_COLUMN ID types .

    S_COMA          reduce using rule 253 (alterAdd -> R_COLUMN ID types .)
    S_PUNTOCOMA     reduce using rule 253 (alterAdd -> R_COLUMN ID types .)
=======
    (39) createOwner -> R_OWNER ID .

    R_MODE          reduce using rule 39 (createOwner -> R_OWNER ID .)
    S_PUNTOCOMA     reduce using rule 39 (createOwner -> R_OWNER ID .)

>>>>>>> main


<<<<<<< HEAD
state 500

    (257) alterAdd -> constrName R_UNIQUE S_PARIZQ . ID S_PARDER

    ID              shift and go to state 592
=======
    (40) createOwner -> R_OWNER STRING .

    R_MODE          reduce using rule 40 (createOwner -> R_OWNER STRING .)
    S_PUNTOCOMA     reduce using rule 40 (createOwner -> R_OWNER STRING .)
>>>>>>> main


state 501

<<<<<<< HEAD
    (46) createConstraint -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (225) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (226) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (227) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (228) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (229) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (230) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (231) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (232) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601

    booleanCheck                   shift and go to state 593
    idOrLiteral                    shift and go to state 594

state 502

    (49) createForeign -> constrName R_FOREIGN R_KEY . S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
=======
    (41) createOwner -> R_OWNER S_IGUAL . ID
    (42) createOwner -> R_OWNER S_IGUAL . STRING

    ID              shift and go to state 584
    STRING          shift and go to state 585

>>>>>>> main

    S_PARIZQ        shift and go to state 602

<<<<<<< HEAD

state 503

    (48) createPrimary -> R_PRIMARY R_KEY S_PARIZQ . idList S_PARDER
    (52) idList -> . idList S_COMA ID
    (53) idList -> . ID
=======
    (34) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ . paramsList S_PARDER
    (144) paramsList -> . paramsList S_COMA datatype
    (145) paramsList -> . datatype
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    paramsList                     shift and go to state 586
    datatype                       shift and go to state 239
    columnName                     shift and go to state 173
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    timeStamp                      shift and go to state 95
>>>>>>> main

    ID              shift and go to state 333

<<<<<<< HEAD
    idList                         shift and go to state 603

state 504

    (263) alterRename -> R_COLUMN ID R_TO . ID
=======
    (268) alterAlter -> R_COLUMN ID R_SET . nullOpt
    (269) alterAlter -> R_COLUMN ID R_SET . defaultVal
    (100) nullOpt -> . R_NOT R_NULL
    (101) nullOpt -> . R_NULL
    (99) defaultVal -> . R_DEFAULT literal

    R_NOT           shift and go to state 561
    R_NULL          shift and go to state 562
    R_DEFAULT       shift and go to state 560

    nullOpt                        shift and go to state 587
    defaultVal                     shift and go to state 588
>>>>>>> main

    ID              shift and go to state 604

<<<<<<< HEAD

state 505

    (335) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList . S_PARDER
    (134) paramsList -> paramsList . S_COMA datatype
=======
    (270) alterAlter -> R_COLUMN ID R_TYPE . types
    (64) types -> . ID
    (65) types -> . T_SMALLINT
    (66) types -> . T_INTEGER
    (67) types -> . T_BIGINT
    (68) types -> . T_REAL
    (69) types -> . T_DOUBLE T_PRECISION
    (70) types -> . T_MONEY
    (71) types -> . T_TEXT
    (72) types -> . T_BOOLEAN
    (73) types -> . R_TIMESTAMP
    (74) types -> . T_DATE
    (75) types -> . T_TIME
    (76) types -> . T_DECIMAL optParams
    (77) types -> . T_NUMERIC optParams
    (78) types -> . T_VARCHAR optParams
    (79) types -> . T_CHARACTER optParams
    (80) types -> . T_CHAR optParams
    (81) types -> . T_CHARACTER T_VARYING optParams
    (82) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 469
    T_SMALLINT      shift and go to state 471
    T_INTEGER       shift and go to state 472
    T_BIGINT        shift and go to state 473
    T_REAL          shift and go to state 474
    T_DOUBLE        shift and go to state 475
    T_MONEY         shift and go to state 476
    T_TEXT          shift and go to state 477
    T_BOOLEAN       shift and go to state 478
    R_TIMESTAMP     shift and go to state 479
    T_DATE          shift and go to state 480
    T_TIME          shift and go to state 481
    T_DECIMAL       shift and go to state 482
    T_NUMERIC       shift and go to state 483
    T_VARCHAR       shift and go to state 484
    T_CHARACTER     shift and go to state 485
    T_CHAR          shift and go to state 486
    R_INTERVAL      shift and go to state 487

    types                          shift and go to state 589
>>>>>>> main

    S_PARDER        shift and go to state 605
    S_COMA          shift and go to state 351

<<<<<<< HEAD

state 506
=======
    (263) alterAdd -> R_COLUMN ID types .

    S_COMA          reduce using rule 263 (alterAdd -> R_COLUMN ID types .)
    S_PUNTOCOMA     reduce using rule 263 (alterAdd -> R_COLUMN ID types .)
>>>>>>> main

    (52) idList -> idList S_COMA ID .

    S_PARDER        reduce using rule 52 (idList -> idList S_COMA ID .)
    S_COMA          reduce using rule 52 (idList -> idList S_COMA ID .)

<<<<<<< HEAD

state 507
=======
    (267) alterAdd -> constrName R_UNIQUE S_PARIZQ . ID S_PARDER

    ID              shift and go to state 590
>>>>>>> main

    (268) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (330) limitCl -> . R_LIMIT INTEGER offsetLimit
    (331) limitCl -> . R_LIMIT R_ALL offsetLimit
    (332) limitCl -> .

    R_LIMIT         shift and go to state 509
    S_PUNTOCOMA     reduce using rule 332 (limitCl -> .)
    R_UNION         reduce using rule 332 (limitCl -> .)
    R_INTERSECT     reduce using rule 332 (limitCl -> .)
    R_EXCEPT        reduce using rule 332 (limitCl -> .)
    S_PARDER        reduce using rule 332 (limitCl -> .)

<<<<<<< HEAD
    limitCl                        shift and go to state 606

state 508

    (269) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .
=======
    (56) createConstraint -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (235) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (236) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (237) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (238) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (239) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (240) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (241) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (242) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    booleanCheck                   shift and go to state 591
    idOrLiteral                    shift and go to state 592
>>>>>>> main

    S_PUNTOCOMA     reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 269 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)

<<<<<<< HEAD

state 509

    (330) limitCl -> R_LIMIT . INTEGER offsetLimit
    (331) limitCl -> R_LIMIT . R_ALL offsetLimit
=======
    (59) createForeign -> constrName R_FOREIGN R_KEY . S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 600

>>>>>>> main

    INTEGER         shift and go to state 607
    R_ALL           shift and go to state 608


state 510

<<<<<<< HEAD
    (318) orderByCl -> R_ORDER R_BY . orderList
    (320) orderList -> . orderList S_COMA orderByElem
    (321) orderList -> . orderByElem
    (322) orderByElem -> . columnName orderOpts orderNull
    (323) orderByElem -> . INTEGER orderOpts orderNull
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 612
    ID              shift and go to state 432

    orderList                      shift and go to state 609
    orderByElem                    shift and go to state 610
    columnName                     shift and go to state 611
=======
    (58) createPrimary -> R_PRIMARY R_KEY S_PARIZQ . idList S_PARDER
    (62) idList -> . idList S_COMA ID
    (63) idList -> . ID

    ID              shift and go to state 330

    idList                         shift and go to state 601
>>>>>>> main

state 511

    (273) alterRename -> R_COLUMN ID R_TO . ID

<<<<<<< HEAD
    S_COMA          shift and go to state 614
    R_HAVING        shift and go to state 615
    R_ORDER         reduce using rule 317 (havingCl -> .)
    R_LIMIT         reduce using rule 317 (havingCl -> .)
    S_PUNTOCOMA     reduce using rule 317 (havingCl -> .)
    R_UNION         reduce using rule 317 (havingCl -> .)
    R_INTERSECT     reduce using rule 317 (havingCl -> .)
    R_EXCEPT        reduce using rule 317 (havingCl -> .)
    S_PARDER        reduce using rule 317 (havingCl -> .)

    havingCl                       shift and go to state 613
=======
    ID              shift and go to state 602

>>>>>>> main

state 512

    (345) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList . S_PARDER
    (144) paramsList -> paramsList . S_COMA datatype

<<<<<<< HEAD
    S_COMA          reduce using rule 314 (groupList -> columnName .)
    R_HAVING        reduce using rule 314 (groupList -> columnName .)
    R_ORDER         reduce using rule 314 (groupList -> columnName .)
    R_LIMIT         reduce using rule 314 (groupList -> columnName .)
    S_PUNTOCOMA     reduce using rule 314 (groupList -> columnName .)
    R_UNION         reduce using rule 314 (groupList -> columnName .)
    R_INTERSECT     reduce using rule 314 (groupList -> columnName .)
    R_EXCEPT        reduce using rule 314 (groupList -> columnName .)
    S_PARDER        reduce using rule 314 (groupList -> columnName .)
=======
    S_PARDER        shift and go to state 603
    S_COMA          shift and go to state 348
>>>>>>> main


state 513

    (62) idList -> idList S_COMA ID .

<<<<<<< HEAD
    S_COMA          reduce using rule 315 (groupList -> INTEGER .)
    R_HAVING        reduce using rule 315 (groupList -> INTEGER .)
    R_ORDER         reduce using rule 315 (groupList -> INTEGER .)
    R_LIMIT         reduce using rule 315 (groupList -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 315 (groupList -> INTEGER .)
    R_UNION         reduce using rule 315 (groupList -> INTEGER .)
    R_INTERSECT     reduce using rule 315 (groupList -> INTEGER .)
    R_EXCEPT        reduce using rule 315 (groupList -> INTEGER .)
    S_PARDER        reduce using rule 315 (groupList -> INTEGER .)
=======
    S_PARDER        reduce using rule 62 (idList -> idList S_COMA ID .)
    S_COMA          reduce using rule 62 (idList -> idList S_COMA ID .)
    R_DESC          reduce using rule 62 (idList -> idList S_COMA ID .)
    R_ASC           reduce using rule 62 (idList -> idList S_COMA ID .)
    R_NULLS         reduce using rule 62 (idList -> idList S_COMA ID .)
>>>>>>> main


state 514

<<<<<<< HEAD
    (270) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl . limitCl
    (330) limitCl -> . R_LIMIT INTEGER offsetLimit
    (331) limitCl -> . R_LIMIT R_ALL offsetLimit
    (332) limitCl -> .

    R_LIMIT         shift and go to state 509
    S_PUNTOCOMA     reduce using rule 332 (limitCl -> .)
    R_UNION         reduce using rule 332 (limitCl -> .)
    R_INTERSECT     reduce using rule 332 (limitCl -> .)
    R_EXCEPT        reduce using rule 332 (limitCl -> .)
    S_PARDER        reduce using rule 332 (limitCl -> .)

    limitCl                        shift and go to state 616
=======
    (278) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .

    S_PUNTOCOMA     reduce using rule 278 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)
    R_UNION         reduce using rule 278 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)
    R_INTERSECT     reduce using rule 278 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)
    R_EXCEPT        reduce using rule 278 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)
    S_PARDER        reduce using rule 278 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl .)

>>>>>>> main

state 515

    (281) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 281 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 281 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 281 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 281 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 281 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)


state 516

    (340) limitCl -> R_LIMIT INTEGER . offsetLimit
    (343) offsetLimit -> . R_OFFSET INTEGER
    (344) offsetLimit -> .

<<<<<<< HEAD
    R_ON            shift and go to state 617
    R_USING         shift and go to state 618
=======
    R_OFFSET        shift and go to state 605
    S_PUNTOCOMA     reduce using rule 344 (offsetLimit -> .)
    R_UNION         reduce using rule 344 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 344 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 344 (offsetLimit -> .)
    S_PARDER        reduce using rule 344 (offsetLimit -> .)
>>>>>>> main

    offsetLimit                    shift and go to state 604

state 517

<<<<<<< HEAD
    (298) joinCl -> R_NATURAL joinOpt R_JOIN columnName . optAlias
    (286) optAlias -> . R_AS idOrString
    (287) optAlias -> . idOrString
    (288) optAlias -> .
    (15) idOrString -> . ID
    (16) idOrString -> . STRING
    (17) idOrString -> . CHARACTER

    R_AS            shift and go to state 130
    R_NATURAL       reduce using rule 288 (optAlias -> .)
    R_INNER         reduce using rule 288 (optAlias -> .)
    R_LEFT          reduce using rule 288 (optAlias -> .)
    R_RIGHT         reduce using rule 288 (optAlias -> .)
    R_FULL          reduce using rule 288 (optAlias -> .)
    R_WHERE         reduce using rule 288 (optAlias -> .)
    R_GROUP         reduce using rule 288 (optAlias -> .)
    R_ORDER         reduce using rule 288 (optAlias -> .)
    R_LIMIT         reduce using rule 288 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 288 (optAlias -> .)
    R_UNION         reduce using rule 288 (optAlias -> .)
    R_INTERSECT     reduce using rule 288 (optAlias -> .)
    R_EXCEPT        reduce using rule 288 (optAlias -> .)
    S_PARDER        reduce using rule 288 (optAlias -> .)
    ID              shift and go to state 119
    STRING          shift and go to state 120
    CHARACTER       shift and go to state 121

    optAlias                       shift and go to state 619
    idOrString                     shift and go to state 131
=======
    (341) limitCl -> R_LIMIT R_ALL . offsetLimit
    (343) offsetLimit -> . R_OFFSET INTEGER
    (344) offsetLimit -> .

    R_OFFSET        shift and go to state 605
    S_PUNTOCOMA     reduce using rule 344 (offsetLimit -> .)
    R_UNION         reduce using rule 344 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 344 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 344 (offsetLimit -> .)
    S_PARDER        reduce using rule 344 (offsetLimit -> .)

    offsetLimit                    shift and go to state 606
>>>>>>> main

state 518

<<<<<<< HEAD
    (208) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 208 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
=======
    (329) orderByCl -> R_ORDER R_BY . orderList
    (330) orderList -> . orderList S_COMA orderByElem
    (331) orderList -> . orderByElem
    (332) orderByElem -> . columnName orderOpts orderNull
    (333) orderByElem -> . INTEGER orderOpts orderNull
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 610
    ID              shift and go to state 430
>>>>>>> main

    orderList                      shift and go to state 607
    orderByElem                    shift and go to state 608
    columnName                     shift and go to state 609

state 519

<<<<<<< HEAD
    (167) expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .
    (186) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 167 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255
=======
    (321) groupByCl -> R_GROUP R_BY groupList . havingCl
    (323) groupList -> groupList . S_COMA columnName
    (324) groupList -> groupList . S_COMA INTEGER
    (327) havingCl -> . R_HAVING expBool
    (328) havingCl -> .

    S_COMA          shift and go to state 612
    R_HAVING        shift and go to state 613
    R_LIMIT         reduce using rule 328 (havingCl -> .)
    R_ORDER         reduce using rule 328 (havingCl -> .)
    S_PUNTOCOMA     reduce using rule 328 (havingCl -> .)
    R_UNION         reduce using rule 328 (havingCl -> .)
    R_INTERSECT     reduce using rule 328 (havingCl -> .)
    R_EXCEPT        reduce using rule 328 (havingCl -> .)
    S_PARDER        reduce using rule 328 (havingCl -> .)

    havingCl                       shift and go to state 611
>>>>>>> main

    subqValues                     shift and go to state 620

<<<<<<< HEAD
state 520
=======
    (325) groupList -> columnName .

    S_COMA          reduce using rule 325 (groupList -> columnName .)
    R_HAVING        reduce using rule 325 (groupList -> columnName .)
    R_LIMIT         reduce using rule 325 (groupList -> columnName .)
    R_ORDER         reduce using rule 325 (groupList -> columnName .)
    S_PUNTOCOMA     reduce using rule 325 (groupList -> columnName .)
    R_UNION         reduce using rule 325 (groupList -> columnName .)
    R_INTERSECT     reduce using rule 325 (groupList -> columnName .)
    R_EXCEPT        reduce using rule 325 (groupList -> columnName .)
    S_PARDER        reduce using rule 325 (groupList -> columnName .)
>>>>>>> main

    (179) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 179 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


<<<<<<< HEAD
state 521
=======
    (326) groupList -> INTEGER .

    S_COMA          reduce using rule 326 (groupList -> INTEGER .)
    R_HAVING        reduce using rule 326 (groupList -> INTEGER .)
    R_LIMIT         reduce using rule 326 (groupList -> INTEGER .)
    R_ORDER         reduce using rule 326 (groupList -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 326 (groupList -> INTEGER .)
    R_UNION         reduce using rule 326 (groupList -> INTEGER .)
    R_INTERSECT     reduce using rule 326 (groupList -> INTEGER .)
    R_EXCEPT        reduce using rule 326 (groupList -> INTEGER .)
    S_PARDER        reduce using rule 326 (groupList -> INTEGER .)
>>>>>>> main

    (180) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 180 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


<<<<<<< HEAD
state 522

    (181) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 181 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (280) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl . limitCl
    (340) limitCl -> . R_LIMIT INTEGER offsetLimit
    (341) limitCl -> . R_LIMIT R_ALL offsetLimit
    (342) limitCl -> .

    R_LIMIT         shift and go to state 425
    S_PUNTOCOMA     reduce using rule 342 (limitCl -> .)
    R_UNION         reduce using rule 342 (limitCl -> .)
    R_INTERSECT     reduce using rule 342 (limitCl -> .)
    R_EXCEPT        reduce using rule 342 (limitCl -> .)
    S_PARDER        reduce using rule 342 (limitCl -> .)

    limitCl                        shift and go to state 614
>>>>>>> main


<<<<<<< HEAD
state 523
=======
    (282) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .

    S_PUNTOCOMA     reduce using rule 282 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_UNION         reduce using rule 282 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_INTERSECT     reduce using rule 282 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_EXCEPT        reduce using rule 282 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    S_PARDER        reduce using rule 282 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
>>>>>>> main

    (182) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 182 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)


<<<<<<< HEAD
state 524

    (184) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 184 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)


state 525

    (188) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 621
=======
    (307) joinCl -> joinOpt R_JOIN columnName optAlias . R_ON expBool
    (308) joinCl -> joinOpt R_JOIN columnName optAlias . R_USING S_PARIZQ nameList S_PARDER

    R_ON            shift and go to state 615
    R_USING         shift and go to state 616


state 516

    (309) joinCl -> R_NATURAL joinOpt R_JOIN columnName . optAlias
    (297) optAlias -> . R_AS idOrString
    (298) optAlias -> . idOrString
    (299) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 129
    R_NATURAL       reduce using rule 299 (optAlias -> .)
    R_INNER         reduce using rule 299 (optAlias -> .)
    R_LEFT          reduce using rule 299 (optAlias -> .)
    R_RIGHT         reduce using rule 299 (optAlias -> .)
    R_FULL          reduce using rule 299 (optAlias -> .)
    R_WHERE         reduce using rule 299 (optAlias -> .)
    R_GROUP         reduce using rule 299 (optAlias -> .)
    R_ORDER         reduce using rule 299 (optAlias -> .)
    R_LIMIT         reduce using rule 299 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 299 (optAlias -> .)
    R_UNION         reduce using rule 299 (optAlias -> .)
    R_INTERSECT     reduce using rule 299 (optAlias -> .)
    R_EXCEPT        reduce using rule 299 (optAlias -> .)
    S_PARDER        reduce using rule 299 (optAlias -> .)
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    optAlias                       shift and go to state 617
    idOrString                     shift and go to state 130
>>>>>>> main


<<<<<<< HEAD
state 526

    (165) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .
    (189) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 165 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 622

state 527

    (191) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 623
=======
    (218) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 218 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)


state 518

    (177) expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .
    (196) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 177 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 618
>>>>>>> main

state 528

<<<<<<< HEAD
    (195) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 624
=======
    (189) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 189 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)

>>>>>>> main

state 529

<<<<<<< HEAD
    (197) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 625
=======
    (190) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 190 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)

>>>>>>> main

state 530

<<<<<<< HEAD
    (199) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 626
=======
    (191) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 191 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)

>>>>>>> main

state 531

<<<<<<< HEAD
    (190) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 627
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (192) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 192 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 532

<<<<<<< HEAD
    (194) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 628
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (194) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 194 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 533

<<<<<<< HEAD
    (196) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 629
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (198) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 619
>>>>>>> main


state 534

<<<<<<< HEAD
    (198) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 630
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (175) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .
    (199) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 175 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 620

state 526

    (201) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 621

state 527

    (205) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 622

state 528

    (207) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 623

state 529

    (209) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 624

state 530

    (200) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 625
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 531

    (204) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 626
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 532

    (206) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 627
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 533

    (208) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 628
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 534

    (195) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 629
>>>>>>> main


state 535

<<<<<<< HEAD
    (185) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 631


state 536

    (168) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .
    (187) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (136) datatype -> datatype . O_SUMA datatype
    (137) datatype -> datatype . O_RESTA datatype
    (138) datatype -> datatype . O_PRODUCTO datatype
    (139) datatype -> datatype . O_DIVISION datatype
    (140) datatype -> datatype . O_EXPONENTE datatype
    (141) datatype -> datatype . O_MODULAR datatype
    (142) datatype -> datatype . OC_CONCATENAR datatype
    (203) subqValues -> . R_ALL
    (204) subqValues -> . R_ANY
    (205) subqValues -> . R_SOME

    R_AND           reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_OR            reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_IS            reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_AS            reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    ID              reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    STRING          reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    CHARACTER       reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_COMA          reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FROM          reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_UNION         reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PARDER        reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_GROUP         reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_ORDER         reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LIMIT         reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_THEN          reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_NATURAL       reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INNER         reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LEFT          reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_RIGHT         reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FULL          reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_WHERE         reduce using rule 168 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    O_SUMA          shift and go to state 144
    O_RESTA         shift and go to state 145
    O_PRODUCTO      shift and go to state 146
    O_DIVISION      shift and go to state 147
    O_EXPONENTE     shift and go to state 148
    O_MODULAR       shift and go to state 149
    OC_CONCATENAR   shift and go to state 150
    R_ALL           shift and go to state 253
    R_ANY           shift and go to state 254
    R_SOME          shift and go to state 255

    subqValues                     shift and go to state 632

state 537

    (192) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 192 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (178) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .
    (197) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (146) datatype -> datatype . O_SUMA datatype
    (147) datatype -> datatype . O_RESTA datatype
    (148) datatype -> datatype . O_PRODUCTO datatype
    (149) datatype -> datatype . O_DIVISION datatype
    (150) datatype -> datatype . O_EXPONENTE datatype
    (151) datatype -> datatype . O_MODULAR datatype
    (152) datatype -> datatype . OC_CONCATENAR datatype
    (213) subqValues -> . R_ALL
    (214) subqValues -> . R_ANY
    (215) subqValues -> . R_SOME

    R_AND           reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_OR            reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_IS            reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_AS            reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    ID              reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    STRING          reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    CHARACTER       reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_COMA          reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FROM          reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_UNION         reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PARDER        reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_GROUP         reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LIMIT         reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_ORDER         reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_THEN          reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_NATURAL       reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INNER         reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LEFT          reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_RIGHT         reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FULL          reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_WHERE         reduce using rule 178 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    O_SUMA          shift and go to state 143
    O_RESTA         shift and go to state 144
    O_PRODUCTO      shift and go to state 145
    O_DIVISION      shift and go to state 146
    O_EXPONENTE     shift and go to state 147
    O_MODULAR       shift and go to state 148
    OC_CONCATENAR   shift and go to state 149
    R_ALL           shift and go to state 252
    R_ANY           shift and go to state 253
    R_SOME          shift and go to state 254

    subqValues                     shift and go to state 630

state 536

    (202) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 202 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 537

    (203) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 203 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 538

<<<<<<< HEAD
    (193) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 193 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (193) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 193 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 539

<<<<<<< HEAD
    (183) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 183 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (116) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .

    O_SUMA          reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_RESTA         reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_PRODUCTO      reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_DIVISION      reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_EXPONENTE     reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_MODULAR       reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OC_CONCATENAR   reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IN            reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOT           reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORQUE     reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORQUE     reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_IGUAL         reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_DISTINTODE   reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IS            reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_BETWEEN       reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ISNULL        reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOTNULL       reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_ESIGUAL      reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AS            reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    ID              reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    STRING          reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    CHARACTER       reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_COMA          reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FROM          reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PUNTOCOMA     reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_UNION         reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INTERSECT     reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_EXCEPT        reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PARDER        reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AND           reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_OR            reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_GROUP         reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LIMIT         reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ORDER         reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_THEN          reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NATURAL       reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INNER         reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LEFT          reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_RIGHT         reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FULL          reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_WHERE         reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ALL           reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ANY           reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_SOME          reduce using rule 116 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
>>>>>>> main


state 540

<<<<<<< HEAD
    (106) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .

    O_SUMA          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_RESTA         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_PRODUCTO      reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_DIVISION      reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_EXPONENTE     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_MODULAR       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OC_CONCATENAR   reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IN            reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOT           reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORQUE     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORQUE     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_IGUAL         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_DISTINTODE   reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IS            reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_BETWEEN       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ISNULL        reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOTNULL       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_ESIGUAL      reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AS            reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    ID              reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    STRING          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    CHARACTER       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_COMA          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FROM          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PUNTOCOMA     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_UNION         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INTERSECT     reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_EXCEPT        reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PARDER        reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AND           reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_OR            reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_GROUP         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ORDER         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LIMIT         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_THEN          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NATURAL       reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INNER         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LEFT          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_RIGHT         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FULL          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_WHERE         reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ALL           reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ANY           reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_SOME          reduce using rule 106 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
=======
    (117) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .

    O_SUMA          reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_RESTA         reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_PRODUCTO      reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_DIVISION      reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_EXPONENTE     reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_MODULAR       reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OC_CONCATENAR   reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IN            reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOT           reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORQUE     reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORQUE     reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_IGUAL         reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_DISTINTODE   reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IS            reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_BETWEEN       reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ISNULL        reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOTNULL       reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_ESIGUAL      reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AS            reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    ID              reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    STRING          reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    CHARACTER       reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_COMA          reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FROM          reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PUNTOCOMA     reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_UNION         reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INTERSECT     reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_EXCEPT        reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PARDER        reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AND           reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_OR            reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_GROUP         reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LIMIT         reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ORDER         reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_THEN          reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NATURAL       reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INNER         reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LEFT          reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_RIGHT         reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FULL          reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_WHERE         reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ALL           reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ANY           reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_SOME          reduce using rule 117 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
>>>>>>> main


state 541

<<<<<<< HEAD
    (107) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .

    O_SUMA          reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_RESTA         reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_PRODUCTO      reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_DIVISION      reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_EXPONENTE     reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_MODULAR       reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OC_CONCATENAR   reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IN            reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOT           reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORQUE     reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORQUE     reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_IGUAL         reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_DISTINTODE   reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IS            reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_BETWEEN       reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ISNULL        reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOTNULL       reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_ESIGUAL      reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AS            reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    ID              reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    STRING          reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    CHARACTER       reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_COMA          reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FROM          reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PUNTOCOMA     reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_UNION         reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INTERSECT     reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_EXCEPT        reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PARDER        reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AND           reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_OR            reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_GROUP         reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ORDER         reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LIMIT         reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_THEN          reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NATURAL       reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INNER         reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LEFT          reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_RIGHT         reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FULL          reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_WHERE         reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ALL           reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ANY           reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_SOME          reduce using rule 107 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
=======
    (126) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .

    O_SUMA          reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_RESTA         reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_PRODUCTO      reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_DIVISION      reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_EXPONENTE     reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_MODULAR       reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OC_CONCATENAR   reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IN            reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOT           reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORQUE     reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORQUE     reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_IGUAL         reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_DISTINTODE   reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IS            reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_BETWEEN       reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ISNULL        reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOTNULL       reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_ESIGUAL      reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AS            reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    ID              reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    STRING          reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    CHARACTER       reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_COMA          reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FROM          reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PUNTOCOMA     reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_UNION         reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INTERSECT     reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_EXCEPT        reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PARDER        reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AND           reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_OR            reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_GROUP         reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LIMIT         reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ORDER         reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_THEN          reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NATURAL       reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INNER         reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LEFT          reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_RIGHT         reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FULL          reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_WHERE         reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ALL           reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ANY           reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_SOME          reduce using rule 126 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
>>>>>>> main


state 542

<<<<<<< HEAD
    (116) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .

    O_SUMA          reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_RESTA         reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_PRODUCTO      reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_DIVISION      reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_EXPONENTE     reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_MODULAR       reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OC_CONCATENAR   reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IN            reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOT           reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORQUE     reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORQUE     reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_IGUAL         reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_DISTINTODE   reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IS            reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_BETWEEN       reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ISNULL        reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOTNULL       reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_ESIGUAL      reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AS            reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    ID              reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    STRING          reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    CHARACTER       reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_COMA          reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FROM          reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PUNTOCOMA     reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_UNION         reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INTERSECT     reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_EXCEPT        reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PARDER        reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AND           reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_OR            reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_GROUP         reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ORDER         reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LIMIT         reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_THEN          reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NATURAL       reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INNER         reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LEFT          reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_RIGHT         reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FULL          reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_WHERE         reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ALL           reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ANY           reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_SOME          reduce using rule 116 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
=======
    (127) dateSource -> R_TIMESTAMP STRING .

    S_PARDER        reduce using rule 127 (dateSource -> R_TIMESTAMP STRING .)
>>>>>>> main


state 543

<<<<<<< HEAD
    (117) dateSource -> R_TIMESTAMP STRING .

    S_PARDER        reduce using rule 117 (dateSource -> R_TIMESTAMP STRING .)
=======
    (128) dateSource -> T_DATE STRING .

    S_PARDER        reduce using rule 128 (dateSource -> T_DATE STRING .)
>>>>>>> main


state 544

<<<<<<< HEAD
    (118) dateSource -> T_DATE STRING .

    S_PARDER        reduce using rule 118 (dateSource -> T_DATE STRING .)
=======
    (129) dateSource -> T_TIME STRING .

    S_PARDER        reduce using rule 129 (dateSource -> T_TIME STRING .)
>>>>>>> main


state 545

<<<<<<< HEAD
    (119) dateSource -> T_TIME STRING .

    S_PARDER        reduce using rule 119 (dateSource -> T_TIME STRING .)
=======
    (130) dateSource -> R_INTERVAL STRING .

    S_PARDER        reduce using rule 130 (dateSource -> R_INTERVAL STRING .)
>>>>>>> main


state 546

<<<<<<< HEAD
    (120) dateSource -> R_INTERVAL STRING .

    S_PARDER        reduce using rule 120 (dateSource -> R_INTERVAL STRING .)
=======
    (131) dateSource -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 631
>>>>>>> main


state 547

<<<<<<< HEAD
    (121) dateSource -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 633
=======
    (19) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ . idList indexasc_desc indexNullS S_PARDER whereCl
    (62) idList -> . idList S_COMA ID
    (63) idList -> . ID

    ID              shift and go to state 330
>>>>>>> main

    idList                         shift and go to state 632

state 548

<<<<<<< HEAD
    (352) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS . S_DOLAR S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 634
=======
    (22) using_hash_index -> R_USING R_HASH .

    S_PARIZQ        reduce using rule 22 (using_hash_index -> R_USING R_HASH .)
>>>>>>> main


state 549

<<<<<<< HEAD
    (357) returnsStmt -> R_RETURNS item_returns .

    R_AS            reduce using rule 357 (returnsStmt -> R_RETURNS item_returns .)
=======
    (30) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .

    S_PUNTOCOMA     reduce using rule 30 (createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .)
>>>>>>> main


state 550

<<<<<<< HEAD
    (359) item_returns -> R_NULL .

    R_AS            reduce using rule 359 (item_returns -> R_NULL .)
=======
    (37) inheritsOpt -> R_INHERITS . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 633
>>>>>>> main


state 551

<<<<<<< HEAD
    (20) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .

    S_PUNTOCOMA     reduce using rule 20 (createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .)
=======
    (47) createTableList -> createTableList S_COMA createTable .

    S_PARDER        reduce using rule 47 (createTableList -> createTableList S_COMA createTable .)
    S_COMA          reduce using rule 47 (createTableList -> createTableList S_COMA createTable .)
>>>>>>> main


state 552

<<<<<<< HEAD
    (27) inheritsOpt -> R_INHERITS . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 635
=======
    (49) createTable -> ID types createColumns .

    S_PARDER        reduce using rule 49 (createTable -> ID types createColumns .)
    S_COMA          reduce using rule 49 (createTable -> ID types createColumns .)
>>>>>>> main


state 553

<<<<<<< HEAD
    (37) createTableList -> createTableList S_COMA createTable .

    S_PARDER        reduce using rule 37 (createTableList -> createTableList S_COMA createTable .)
    S_COMA          reduce using rule 37 (createTableList -> createTableList S_COMA createTable .)


state 554

    (39) createTable -> ID types createColumns .

    S_PARDER        reduce using rule 39 (createTable -> ID types createColumns .)
    S_COMA          reduce using rule 39 (createTable -> ID types createColumns .)
=======
    (54) createColumns -> colOptionsList .
    (92) colOptionsList -> colOptionsList . colOptions
    (94) colOptions -> . defaultVal
    (95) colOptions -> . nullOpt
    (96) colOptions -> . constraintOpt
    (97) colOptions -> . primaryOpt
    (98) colOptions -> . referencesOpt
    (99) defaultVal -> . R_DEFAULT literal
    (100) nullOpt -> . R_NOT R_NULL
    (101) nullOpt -> . R_NULL
    (102) constraintOpt -> . constrName R_UNIQUE
    (103) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (104) primaryOpt -> . R_PRIMARY R_KEY
    (105) referencesOpt -> . R_REFERENCES ID
    (60) constrName -> . R_CONSTRAINT ID
    (61) constrName -> .

    S_PARDER        reduce using rule 54 (createColumns -> colOptionsList .)
    S_COMA          reduce using rule 54 (createColumns -> colOptionsList .)
    R_DEFAULT       shift and go to state 560
    R_NOT           shift and go to state 561
    R_NULL          shift and go to state 562
    R_PRIMARY       shift and go to state 564
    R_REFERENCES    shift and go to state 565
    R_CONSTRAINT    shift and go to state 322
    R_UNIQUE        reduce using rule 61 (constrName -> .)
    R_CHECK         reduce using rule 61 (constrName -> .)

    colOptions                     shift and go to state 634
    defaultVal                     shift and go to state 555
    nullOpt                        shift and go to state 556
    constraintOpt                  shift and go to state 557
    primaryOpt                     shift and go to state 558
    referencesOpt                  shift and go to state 559
    constrName                     shift and go to state 563

state 554

    (93) colOptionsList -> colOptions .

    R_DEFAULT       reduce using rule 93 (colOptionsList -> colOptions .)
    R_NOT           reduce using rule 93 (colOptionsList -> colOptions .)
    R_NULL          reduce using rule 93 (colOptionsList -> colOptions .)
    R_PRIMARY       reduce using rule 93 (colOptionsList -> colOptions .)
    R_REFERENCES    reduce using rule 93 (colOptionsList -> colOptions .)
    R_CONSTRAINT    reduce using rule 93 (colOptionsList -> colOptions .)
    R_UNIQUE        reduce using rule 93 (colOptionsList -> colOptions .)
    R_CHECK         reduce using rule 93 (colOptionsList -> colOptions .)
    S_PARDER        reduce using rule 93 (colOptionsList -> colOptions .)
    S_COMA          reduce using rule 93 (colOptionsList -> colOptions .)
>>>>>>> main


state 555

<<<<<<< HEAD
    (44) createColumns -> colOptionsList .
    (82) colOptionsList -> colOptionsList . colOptions
    (84) colOptions -> . defaultVal
    (85) colOptions -> . nullOpt
    (86) colOptions -> . constraintOpt
    (87) colOptions -> . primaryOpt
    (88) colOptions -> . referencesOpt
    (89) defaultVal -> . R_DEFAULT literal
    (90) nullOpt -> . R_NOT R_NULL
    (91) nullOpt -> . R_NULL
    (92) constraintOpt -> . constrName R_UNIQUE
    (93) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (94) primaryOpt -> . R_PRIMARY R_KEY
    (95) referencesOpt -> . R_REFERENCES ID
    (50) constrName -> . R_CONSTRAINT ID
    (51) constrName -> .

    S_PARDER        reduce using rule 44 (createColumns -> colOptionsList .)
    S_COMA          reduce using rule 44 (createColumns -> colOptionsList .)
    R_DEFAULT       shift and go to state 562
    R_NOT           shift and go to state 563
    R_NULL          shift and go to state 564
    R_PRIMARY       shift and go to state 566
    R_REFERENCES    shift and go to state 567
    R_CONSTRAINT    shift and go to state 325
    R_UNIQUE        reduce using rule 51 (constrName -> .)
    R_CHECK         reduce using rule 51 (constrName -> .)

    colOptions                     shift and go to state 636
    defaultVal                     shift and go to state 557
    nullOpt                        shift and go to state 558
    constraintOpt                  shift and go to state 559
    primaryOpt                     shift and go to state 560
    referencesOpt                  shift and go to state 561
    constrName                     shift and go to state 565

state 556

    (83) colOptionsList -> colOptions .

    R_DEFAULT       reduce using rule 83 (colOptionsList -> colOptions .)
    R_NOT           reduce using rule 83 (colOptionsList -> colOptions .)
    R_NULL          reduce using rule 83 (colOptionsList -> colOptions .)
    R_PRIMARY       reduce using rule 83 (colOptionsList -> colOptions .)
    R_REFERENCES    reduce using rule 83 (colOptionsList -> colOptions .)
    R_CONSTRAINT    reduce using rule 83 (colOptionsList -> colOptions .)
    R_UNIQUE        reduce using rule 83 (colOptionsList -> colOptions .)
    R_CHECK         reduce using rule 83 (colOptionsList -> colOptions .)
    S_PARDER        reduce using rule 83 (colOptionsList -> colOptions .)
    S_COMA          reduce using rule 83 (colOptionsList -> colOptions .)
=======
    (94) colOptions -> defaultVal .

    R_DEFAULT       reduce using rule 94 (colOptions -> defaultVal .)
    R_NOT           reduce using rule 94 (colOptions -> defaultVal .)
    R_NULL          reduce using rule 94 (colOptions -> defaultVal .)
    R_PRIMARY       reduce using rule 94 (colOptions -> defaultVal .)
    R_REFERENCES    reduce using rule 94 (colOptions -> defaultVal .)
    R_CONSTRAINT    reduce using rule 94 (colOptions -> defaultVal .)
    R_UNIQUE        reduce using rule 94 (colOptions -> defaultVal .)
    R_CHECK         reduce using rule 94 (colOptions -> defaultVal .)
    S_PARDER        reduce using rule 94 (colOptions -> defaultVal .)
    S_COMA          reduce using rule 94 (colOptions -> defaultVal .)


state 556

    (95) colOptions -> nullOpt .

    R_DEFAULT       reduce using rule 95 (colOptions -> nullOpt .)
    R_NOT           reduce using rule 95 (colOptions -> nullOpt .)
    R_NULL          reduce using rule 95 (colOptions -> nullOpt .)
    R_PRIMARY       reduce using rule 95 (colOptions -> nullOpt .)
    R_REFERENCES    reduce using rule 95 (colOptions -> nullOpt .)
    R_CONSTRAINT    reduce using rule 95 (colOptions -> nullOpt .)
    R_UNIQUE        reduce using rule 95 (colOptions -> nullOpt .)
    R_CHECK         reduce using rule 95 (colOptions -> nullOpt .)
    S_PARDER        reduce using rule 95 (colOptions -> nullOpt .)
    S_COMA          reduce using rule 95 (colOptions -> nullOpt .)
>>>>>>> main


state 557

<<<<<<< HEAD
    (84) colOptions -> defaultVal .

    R_DEFAULT       reduce using rule 84 (colOptions -> defaultVal .)
    R_NOT           reduce using rule 84 (colOptions -> defaultVal .)
    R_NULL          reduce using rule 84 (colOptions -> defaultVal .)
    R_PRIMARY       reduce using rule 84 (colOptions -> defaultVal .)
    R_REFERENCES    reduce using rule 84 (colOptions -> defaultVal .)
    R_CONSTRAINT    reduce using rule 84 (colOptions -> defaultVal .)
    R_UNIQUE        reduce using rule 84 (colOptions -> defaultVal .)
    R_CHECK         reduce using rule 84 (colOptions -> defaultVal .)
    S_PARDER        reduce using rule 84 (colOptions -> defaultVal .)
    S_COMA          reduce using rule 84 (colOptions -> defaultVal .)
=======
    (96) colOptions -> constraintOpt .

    R_DEFAULT       reduce using rule 96 (colOptions -> constraintOpt .)
    R_NOT           reduce using rule 96 (colOptions -> constraintOpt .)
    R_NULL          reduce using rule 96 (colOptions -> constraintOpt .)
    R_PRIMARY       reduce using rule 96 (colOptions -> constraintOpt .)
    R_REFERENCES    reduce using rule 96 (colOptions -> constraintOpt .)
    R_CONSTRAINT    reduce using rule 96 (colOptions -> constraintOpt .)
    R_UNIQUE        reduce using rule 96 (colOptions -> constraintOpt .)
    R_CHECK         reduce using rule 96 (colOptions -> constraintOpt .)
    S_PARDER        reduce using rule 96 (colOptions -> constraintOpt .)
    S_COMA          reduce using rule 96 (colOptions -> constraintOpt .)
>>>>>>> main


state 558

<<<<<<< HEAD
    (85) colOptions -> nullOpt .

    R_DEFAULT       reduce using rule 85 (colOptions -> nullOpt .)
    R_NOT           reduce using rule 85 (colOptions -> nullOpt .)
    R_NULL          reduce using rule 85 (colOptions -> nullOpt .)
    R_PRIMARY       reduce using rule 85 (colOptions -> nullOpt .)
    R_REFERENCES    reduce using rule 85 (colOptions -> nullOpt .)
    R_CONSTRAINT    reduce using rule 85 (colOptions -> nullOpt .)
    R_UNIQUE        reduce using rule 85 (colOptions -> nullOpt .)
    R_CHECK         reduce using rule 85 (colOptions -> nullOpt .)
    S_PARDER        reduce using rule 85 (colOptions -> nullOpt .)
    S_COMA          reduce using rule 85 (colOptions -> nullOpt .)

=======
    (97) colOptions -> primaryOpt .
>>>>>>> main

    R_DEFAULT       reduce using rule 97 (colOptions -> primaryOpt .)
    R_NOT           reduce using rule 97 (colOptions -> primaryOpt .)
    R_NULL          reduce using rule 97 (colOptions -> primaryOpt .)
    R_PRIMARY       reduce using rule 97 (colOptions -> primaryOpt .)
    R_REFERENCES    reduce using rule 97 (colOptions -> primaryOpt .)
    R_CONSTRAINT    reduce using rule 97 (colOptions -> primaryOpt .)
    R_UNIQUE        reduce using rule 97 (colOptions -> primaryOpt .)
    R_CHECK         reduce using rule 97 (colOptions -> primaryOpt .)
    S_PARDER        reduce using rule 97 (colOptions -> primaryOpt .)
    S_COMA          reduce using rule 97 (colOptions -> primaryOpt .)

<<<<<<< HEAD
    (86) colOptions -> constraintOpt .

    R_DEFAULT       reduce using rule 86 (colOptions -> constraintOpt .)
    R_NOT           reduce using rule 86 (colOptions -> constraintOpt .)
    R_NULL          reduce using rule 86 (colOptions -> constraintOpt .)
    R_PRIMARY       reduce using rule 86 (colOptions -> constraintOpt .)
    R_REFERENCES    reduce using rule 86 (colOptions -> constraintOpt .)
    R_CONSTRAINT    reduce using rule 86 (colOptions -> constraintOpt .)
    R_UNIQUE        reduce using rule 86 (colOptions -> constraintOpt .)
    R_CHECK         reduce using rule 86 (colOptions -> constraintOpt .)
    S_PARDER        reduce using rule 86 (colOptions -> constraintOpt .)
    S_COMA          reduce using rule 86 (colOptions -> constraintOpt .)
=======

state 559
>>>>>>> main

    (98) colOptions -> referencesOpt .

    R_DEFAULT       reduce using rule 98 (colOptions -> referencesOpt .)
    R_NOT           reduce using rule 98 (colOptions -> referencesOpt .)
    R_NULL          reduce using rule 98 (colOptions -> referencesOpt .)
    R_PRIMARY       reduce using rule 98 (colOptions -> referencesOpt .)
    R_REFERENCES    reduce using rule 98 (colOptions -> referencesOpt .)
    R_CONSTRAINT    reduce using rule 98 (colOptions -> referencesOpt .)
    R_UNIQUE        reduce using rule 98 (colOptions -> referencesOpt .)
    R_CHECK         reduce using rule 98 (colOptions -> referencesOpt .)
    S_PARDER        reduce using rule 98 (colOptions -> referencesOpt .)
    S_COMA          reduce using rule 98 (colOptions -> referencesOpt .)

<<<<<<< HEAD
    (87) colOptions -> primaryOpt .

    R_DEFAULT       reduce using rule 87 (colOptions -> primaryOpt .)
    R_NOT           reduce using rule 87 (colOptions -> primaryOpt .)
    R_NULL          reduce using rule 87 (colOptions -> primaryOpt .)
    R_PRIMARY       reduce using rule 87 (colOptions -> primaryOpt .)
    R_REFERENCES    reduce using rule 87 (colOptions -> primaryOpt .)
    R_CONSTRAINT    reduce using rule 87 (colOptions -> primaryOpt .)
    R_UNIQUE        reduce using rule 87 (colOptions -> primaryOpt .)
    R_CHECK         reduce using rule 87 (colOptions -> primaryOpt .)
    S_PARDER        reduce using rule 87 (colOptions -> primaryOpt .)
    S_COMA          reduce using rule 87 (colOptions -> primaryOpt .)
=======

state 560
>>>>>>> main

    (99) defaultVal -> R_DEFAULT . literal
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL

    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89

    literal                        shift and go to state 635

state 561

<<<<<<< HEAD
    (88) colOptions -> referencesOpt .

    R_DEFAULT       reduce using rule 88 (colOptions -> referencesOpt .)
    R_NOT           reduce using rule 88 (colOptions -> referencesOpt .)
    R_NULL          reduce using rule 88 (colOptions -> referencesOpt .)
    R_PRIMARY       reduce using rule 88 (colOptions -> referencesOpt .)
    R_REFERENCES    reduce using rule 88 (colOptions -> referencesOpt .)
    R_CONSTRAINT    reduce using rule 88 (colOptions -> referencesOpt .)
    R_UNIQUE        reduce using rule 88 (colOptions -> referencesOpt .)
    R_CHECK         reduce using rule 88 (colOptions -> referencesOpt .)
    S_PARDER        reduce using rule 88 (colOptions -> referencesOpt .)
    S_COMA          reduce using rule 88 (colOptions -> referencesOpt .)
=======
    (100) nullOpt -> R_NOT . R_NULL

    R_NULL          shift and go to state 636
>>>>>>> main


state 562

<<<<<<< HEAD
    (89) defaultVal -> R_DEFAULT . literal
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL

    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90

    literal                        shift and go to state 637

state 563

    (90) nullOpt -> R_NOT . R_NULL

    R_NULL          shift and go to state 638
=======
    (101) nullOpt -> R_NULL .

    R_DEFAULT       reduce using rule 101 (nullOpt -> R_NULL .)
    R_NOT           reduce using rule 101 (nullOpt -> R_NULL .)
    R_NULL          reduce using rule 101 (nullOpt -> R_NULL .)
    R_PRIMARY       reduce using rule 101 (nullOpt -> R_NULL .)
    R_REFERENCES    reduce using rule 101 (nullOpt -> R_NULL .)
    R_CONSTRAINT    reduce using rule 101 (nullOpt -> R_NULL .)
    R_UNIQUE        reduce using rule 101 (nullOpt -> R_NULL .)
    R_CHECK         reduce using rule 101 (nullOpt -> R_NULL .)
    S_PARDER        reduce using rule 101 (nullOpt -> R_NULL .)
    S_COMA          reduce using rule 101 (nullOpt -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 101 (nullOpt -> R_NULL .)


state 563

    (102) constraintOpt -> constrName . R_UNIQUE
    (103) constraintOpt -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER

    R_UNIQUE        shift and go to state 637
    R_CHECK         shift and go to state 638
>>>>>>> main


state 564

<<<<<<< HEAD
    (91) nullOpt -> R_NULL .

    R_DEFAULT       reduce using rule 91 (nullOpt -> R_NULL .)
    R_NOT           reduce using rule 91 (nullOpt -> R_NULL .)
    R_NULL          reduce using rule 91 (nullOpt -> R_NULL .)
    R_PRIMARY       reduce using rule 91 (nullOpt -> R_NULL .)
    R_REFERENCES    reduce using rule 91 (nullOpt -> R_NULL .)
    R_CONSTRAINT    reduce using rule 91 (nullOpt -> R_NULL .)
    R_UNIQUE        reduce using rule 91 (nullOpt -> R_NULL .)
    R_CHECK         reduce using rule 91 (nullOpt -> R_NULL .)
    S_PARDER        reduce using rule 91 (nullOpt -> R_NULL .)
    S_COMA          reduce using rule 91 (nullOpt -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 91 (nullOpt -> R_NULL .)
=======
    (104) primaryOpt -> R_PRIMARY . R_KEY

    R_KEY           shift and go to state 639
>>>>>>> main


state 565

<<<<<<< HEAD
    (92) constraintOpt -> constrName . R_UNIQUE
    (93) constraintOpt -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER

    R_UNIQUE        shift and go to state 639
    R_CHECK         shift and go to state 640
=======
    (105) referencesOpt -> R_REFERENCES . ID

    ID              shift and go to state 640
>>>>>>> main


state 566

<<<<<<< HEAD
    (94) primaryOpt -> R_PRIMARY . R_KEY

    R_KEY           shift and go to state 641
=======
    (69) types -> T_DOUBLE T_PRECISION .

    R_DEFAULT       reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    R_NOT           reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    R_NULL          reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    R_PRIMARY       reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    R_REFERENCES    reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    R_CONSTRAINT    reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    R_UNIQUE        reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    R_CHECK         reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    S_PARDER        reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    S_COMA          reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
    S_PUNTOCOMA     reduce using rule 69 (types -> T_DOUBLE T_PRECISION .)
>>>>>>> main


state 567

<<<<<<< HEAD
    (95) referencesOpt -> R_REFERENCES . ID

    ID              shift and go to state 642
=======
    (76) types -> T_DECIMAL optParams .

    R_DEFAULT       reduce using rule 76 (types -> T_DECIMAL optParams .)
    R_NOT           reduce using rule 76 (types -> T_DECIMAL optParams .)
    R_NULL          reduce using rule 76 (types -> T_DECIMAL optParams .)
    R_PRIMARY       reduce using rule 76 (types -> T_DECIMAL optParams .)
    R_REFERENCES    reduce using rule 76 (types -> T_DECIMAL optParams .)
    R_CONSTRAINT    reduce using rule 76 (types -> T_DECIMAL optParams .)
    R_UNIQUE        reduce using rule 76 (types -> T_DECIMAL optParams .)
    R_CHECK         reduce using rule 76 (types -> T_DECIMAL optParams .)
    S_PARDER        reduce using rule 76 (types -> T_DECIMAL optParams .)
    S_COMA          reduce using rule 76 (types -> T_DECIMAL optParams .)
    S_PUNTOCOMA     reduce using rule 76 (types -> T_DECIMAL optParams .)
>>>>>>> main


state 568

<<<<<<< HEAD
    (59) types -> T_DOUBLE T_PRECISION .

    R_DEFAULT       reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    R_NOT           reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    R_NULL          reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    R_PRIMARY       reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    R_REFERENCES    reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    R_CONSTRAINT    reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    R_UNIQUE        reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    R_CHECK         reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    S_PARDER        reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    S_COMA          reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)
    S_PUNTOCOMA     reduce using rule 59 (types -> T_DOUBLE T_PRECISION .)


state 569

    (66) types -> T_DECIMAL optParams .

    R_DEFAULT       reduce using rule 66 (types -> T_DECIMAL optParams .)
    R_NOT           reduce using rule 66 (types -> T_DECIMAL optParams .)
    R_NULL          reduce using rule 66 (types -> T_DECIMAL optParams .)
    R_PRIMARY       reduce using rule 66 (types -> T_DECIMAL optParams .)
    R_REFERENCES    reduce using rule 66 (types -> T_DECIMAL optParams .)
    R_CONSTRAINT    reduce using rule 66 (types -> T_DECIMAL optParams .)
    R_UNIQUE        reduce using rule 66 (types -> T_DECIMAL optParams .)
    R_CHECK         reduce using rule 66 (types -> T_DECIMAL optParams .)
    S_PARDER        reduce using rule 66 (types -> T_DECIMAL optParams .)
    S_COMA          reduce using rule 66 (types -> T_DECIMAL optParams .)
    S_PUNTOCOMA     reduce using rule 66 (types -> T_DECIMAL optParams .)
=======
    (90) optParams -> S_PARIZQ . literalList S_PARDER
    (135) literalList -> . literalList S_COMA literal
    (136) literalList -> . literal
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL

    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89

    literalList                    shift and go to state 641
    literal                        shift and go to state 642

state 569

    (77) types -> T_NUMERIC optParams .

    R_DEFAULT       reduce using rule 77 (types -> T_NUMERIC optParams .)
    R_NOT           reduce using rule 77 (types -> T_NUMERIC optParams .)
    R_NULL          reduce using rule 77 (types -> T_NUMERIC optParams .)
    R_PRIMARY       reduce using rule 77 (types -> T_NUMERIC optParams .)
    R_REFERENCES    reduce using rule 77 (types -> T_NUMERIC optParams .)
    R_CONSTRAINT    reduce using rule 77 (types -> T_NUMERIC optParams .)
    R_UNIQUE        reduce using rule 77 (types -> T_NUMERIC optParams .)
    R_CHECK         reduce using rule 77 (types -> T_NUMERIC optParams .)
    S_PARDER        reduce using rule 77 (types -> T_NUMERIC optParams .)
    S_COMA          reduce using rule 77 (types -> T_NUMERIC optParams .)
    S_PUNTOCOMA     reduce using rule 77 (types -> T_NUMERIC optParams .)
>>>>>>> main


state 570

<<<<<<< HEAD
    (80) optParams -> S_PARIZQ . literalList S_PARDER
    (125) literalList -> . literalList S_COMA literal
    (126) literalList -> . literal
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL

    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90

    literalList                    shift and go to state 643
    literal                        shift and go to state 644

state 571

    (67) types -> T_NUMERIC optParams .

    R_DEFAULT       reduce using rule 67 (types -> T_NUMERIC optParams .)
    R_NOT           reduce using rule 67 (types -> T_NUMERIC optParams .)
    R_NULL          reduce using rule 67 (types -> T_NUMERIC optParams .)
    R_PRIMARY       reduce using rule 67 (types -> T_NUMERIC optParams .)
    R_REFERENCES    reduce using rule 67 (types -> T_NUMERIC optParams .)
    R_CONSTRAINT    reduce using rule 67 (types -> T_NUMERIC optParams .)
    R_UNIQUE        reduce using rule 67 (types -> T_NUMERIC optParams .)
    R_CHECK         reduce using rule 67 (types -> T_NUMERIC optParams .)
    S_PARDER        reduce using rule 67 (types -> T_NUMERIC optParams .)
    S_COMA          reduce using rule 67 (types -> T_NUMERIC optParams .)
    S_PUNTOCOMA     reduce using rule 67 (types -> T_NUMERIC optParams .)
=======
    (78) types -> T_VARCHAR optParams .

    R_DEFAULT       reduce using rule 78 (types -> T_VARCHAR optParams .)
    R_NOT           reduce using rule 78 (types -> T_VARCHAR optParams .)
    R_NULL          reduce using rule 78 (types -> T_VARCHAR optParams .)
    R_PRIMARY       reduce using rule 78 (types -> T_VARCHAR optParams .)
    R_REFERENCES    reduce using rule 78 (types -> T_VARCHAR optParams .)
    R_CONSTRAINT    reduce using rule 78 (types -> T_VARCHAR optParams .)
    R_UNIQUE        reduce using rule 78 (types -> T_VARCHAR optParams .)
    R_CHECK         reduce using rule 78 (types -> T_VARCHAR optParams .)
    S_PARDER        reduce using rule 78 (types -> T_VARCHAR optParams .)
    S_COMA          reduce using rule 78 (types -> T_VARCHAR optParams .)
    S_PUNTOCOMA     reduce using rule 78 (types -> T_VARCHAR optParams .)


state 571

    (79) types -> T_CHARACTER optParams .

    R_DEFAULT       reduce using rule 79 (types -> T_CHARACTER optParams .)
    R_NOT           reduce using rule 79 (types -> T_CHARACTER optParams .)
    R_NULL          reduce using rule 79 (types -> T_CHARACTER optParams .)
    R_PRIMARY       reduce using rule 79 (types -> T_CHARACTER optParams .)
    R_REFERENCES    reduce using rule 79 (types -> T_CHARACTER optParams .)
    R_CONSTRAINT    reduce using rule 79 (types -> T_CHARACTER optParams .)
    R_UNIQUE        reduce using rule 79 (types -> T_CHARACTER optParams .)
    R_CHECK         reduce using rule 79 (types -> T_CHARACTER optParams .)
    S_PARDER        reduce using rule 79 (types -> T_CHARACTER optParams .)
    S_COMA          reduce using rule 79 (types -> T_CHARACTER optParams .)
    S_PUNTOCOMA     reduce using rule 79 (types -> T_CHARACTER optParams .)
>>>>>>> main


state 572

<<<<<<< HEAD
    (68) types -> T_VARCHAR optParams .

    R_DEFAULT       reduce using rule 68 (types -> T_VARCHAR optParams .)
    R_NOT           reduce using rule 68 (types -> T_VARCHAR optParams .)
    R_NULL          reduce using rule 68 (types -> T_VARCHAR optParams .)
    R_PRIMARY       reduce using rule 68 (types -> T_VARCHAR optParams .)
    R_REFERENCES    reduce using rule 68 (types -> T_VARCHAR optParams .)
    R_CONSTRAINT    reduce using rule 68 (types -> T_VARCHAR optParams .)
    R_UNIQUE        reduce using rule 68 (types -> T_VARCHAR optParams .)
    R_CHECK         reduce using rule 68 (types -> T_VARCHAR optParams .)
    S_PARDER        reduce using rule 68 (types -> T_VARCHAR optParams .)
    S_COMA          reduce using rule 68 (types -> T_VARCHAR optParams .)
    S_PUNTOCOMA     reduce using rule 68 (types -> T_VARCHAR optParams .)


state 573

    (69) types -> T_CHARACTER optParams .

    R_DEFAULT       reduce using rule 69 (types -> T_CHARACTER optParams .)
    R_NOT           reduce using rule 69 (types -> T_CHARACTER optParams .)
    R_NULL          reduce using rule 69 (types -> T_CHARACTER optParams .)
    R_PRIMARY       reduce using rule 69 (types -> T_CHARACTER optParams .)
    R_REFERENCES    reduce using rule 69 (types -> T_CHARACTER optParams .)
    R_CONSTRAINT    reduce using rule 69 (types -> T_CHARACTER optParams .)
    R_UNIQUE        reduce using rule 69 (types -> T_CHARACTER optParams .)
    R_CHECK         reduce using rule 69 (types -> T_CHARACTER optParams .)
    S_PARDER        reduce using rule 69 (types -> T_CHARACTER optParams .)
    S_COMA          reduce using rule 69 (types -> T_CHARACTER optParams .)
    S_PUNTOCOMA     reduce using rule 69 (types -> T_CHARACTER optParams .)
=======
    (81) types -> T_CHARACTER T_VARYING . optParams
    (90) optParams -> . S_PARIZQ literalList S_PARDER
    (91) optParams -> .

    S_PARIZQ        shift and go to state 568
    R_DEFAULT       reduce using rule 91 (optParams -> .)
    R_NOT           reduce using rule 91 (optParams -> .)
    R_NULL          reduce using rule 91 (optParams -> .)
    R_PRIMARY       reduce using rule 91 (optParams -> .)
    R_REFERENCES    reduce using rule 91 (optParams -> .)
    R_CONSTRAINT    reduce using rule 91 (optParams -> .)
    R_UNIQUE        reduce using rule 91 (optParams -> .)
    R_CHECK         reduce using rule 91 (optParams -> .)
    S_PARDER        reduce using rule 91 (optParams -> .)
    S_COMA          reduce using rule 91 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 91 (optParams -> .)

    optParams                      shift and go to state 643

state 573

    (80) types -> T_CHAR optParams .

    R_DEFAULT       reduce using rule 80 (types -> T_CHAR optParams .)
    R_NOT           reduce using rule 80 (types -> T_CHAR optParams .)
    R_NULL          reduce using rule 80 (types -> T_CHAR optParams .)
    R_PRIMARY       reduce using rule 80 (types -> T_CHAR optParams .)
    R_REFERENCES    reduce using rule 80 (types -> T_CHAR optParams .)
    R_CONSTRAINT    reduce using rule 80 (types -> T_CHAR optParams .)
    R_UNIQUE        reduce using rule 80 (types -> T_CHAR optParams .)
    R_CHECK         reduce using rule 80 (types -> T_CHAR optParams .)
    S_PARDER        reduce using rule 80 (types -> T_CHAR optParams .)
    S_COMA          reduce using rule 80 (types -> T_CHAR optParams .)
    S_PUNTOCOMA     reduce using rule 80 (types -> T_CHAR optParams .)
>>>>>>> main


state 574

<<<<<<< HEAD
    (71) types -> T_CHARACTER T_VARYING . optParams
    (80) optParams -> . S_PARIZQ literalList S_PARDER
    (81) optParams -> .

    S_PARIZQ        shift and go to state 570
    R_DEFAULT       reduce using rule 81 (optParams -> .)
    R_NOT           reduce using rule 81 (optParams -> .)
    R_NULL          reduce using rule 81 (optParams -> .)
    R_PRIMARY       reduce using rule 81 (optParams -> .)
    R_REFERENCES    reduce using rule 81 (optParams -> .)
    R_CONSTRAINT    reduce using rule 81 (optParams -> .)
    R_UNIQUE        reduce using rule 81 (optParams -> .)
    R_CHECK         reduce using rule 81 (optParams -> .)
    S_PARDER        reduce using rule 81 (optParams -> .)
    S_COMA          reduce using rule 81 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 81 (optParams -> .)

    optParams                      shift and go to state 645

state 575

    (70) types -> T_CHAR optParams .

    R_DEFAULT       reduce using rule 70 (types -> T_CHAR optParams .)
    R_NOT           reduce using rule 70 (types -> T_CHAR optParams .)
    R_NULL          reduce using rule 70 (types -> T_CHAR optParams .)
    R_PRIMARY       reduce using rule 70 (types -> T_CHAR optParams .)
    R_REFERENCES    reduce using rule 70 (types -> T_CHAR optParams .)
    R_CONSTRAINT    reduce using rule 70 (types -> T_CHAR optParams .)
    R_UNIQUE        reduce using rule 70 (types -> T_CHAR optParams .)
    R_CHECK         reduce using rule 70 (types -> T_CHAR optParams .)
    S_PARDER        reduce using rule 70 (types -> T_CHAR optParams .)
    S_COMA          reduce using rule 70 (types -> T_CHAR optParams .)
    S_PUNTOCOMA     reduce using rule 70 (types -> T_CHAR optParams .)
=======
    (82) types -> R_INTERVAL intervalFields .

    R_DEFAULT       reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    R_NOT           reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    R_NULL          reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    R_PRIMARY       reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    R_REFERENCES    reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    R_CONSTRAINT    reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    R_UNIQUE        reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    R_CHECK         reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    S_PARDER        reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    S_COMA          reduce using rule 82 (types -> R_INTERVAL intervalFields .)
    S_PUNTOCOMA     reduce using rule 82 (types -> R_INTERVAL intervalFields .)


state 575

    (83) intervalFields -> R_YEAR .

    R_DEFAULT       reduce using rule 83 (intervalFields -> R_YEAR .)
    R_NOT           reduce using rule 83 (intervalFields -> R_YEAR .)
    R_NULL          reduce using rule 83 (intervalFields -> R_YEAR .)
    R_PRIMARY       reduce using rule 83 (intervalFields -> R_YEAR .)
    R_REFERENCES    reduce using rule 83 (intervalFields -> R_YEAR .)
    R_CONSTRAINT    reduce using rule 83 (intervalFields -> R_YEAR .)
    R_UNIQUE        reduce using rule 83 (intervalFields -> R_YEAR .)
    R_CHECK         reduce using rule 83 (intervalFields -> R_YEAR .)
    S_PARDER        reduce using rule 83 (intervalFields -> R_YEAR .)
    S_COMA          reduce using rule 83 (intervalFields -> R_YEAR .)
    S_PUNTOCOMA     reduce using rule 83 (intervalFields -> R_YEAR .)
>>>>>>> main


state 576

<<<<<<< HEAD
    (72) types -> R_INTERVAL intervalFields .

    R_DEFAULT       reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    R_NOT           reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    R_NULL          reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    R_PRIMARY       reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    R_REFERENCES    reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    R_CONSTRAINT    reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    R_UNIQUE        reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    R_CHECK         reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    S_PARDER        reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    S_COMA          reduce using rule 72 (types -> R_INTERVAL intervalFields .)
    S_PUNTOCOMA     reduce using rule 72 (types -> R_INTERVAL intervalFields .)
=======
    (84) intervalFields -> R_MONTH .

    R_DEFAULT       reduce using rule 84 (intervalFields -> R_MONTH .)
    R_NOT           reduce using rule 84 (intervalFields -> R_MONTH .)
    R_NULL          reduce using rule 84 (intervalFields -> R_MONTH .)
    R_PRIMARY       reduce using rule 84 (intervalFields -> R_MONTH .)
    R_REFERENCES    reduce using rule 84 (intervalFields -> R_MONTH .)
    R_CONSTRAINT    reduce using rule 84 (intervalFields -> R_MONTH .)
    R_UNIQUE        reduce using rule 84 (intervalFields -> R_MONTH .)
    R_CHECK         reduce using rule 84 (intervalFields -> R_MONTH .)
    S_PARDER        reduce using rule 84 (intervalFields -> R_MONTH .)
    S_COMA          reduce using rule 84 (intervalFields -> R_MONTH .)
    S_PUNTOCOMA     reduce using rule 84 (intervalFields -> R_MONTH .)
>>>>>>> main


state 577

<<<<<<< HEAD
    (73) intervalFields -> R_YEAR .

    R_DEFAULT       reduce using rule 73 (intervalFields -> R_YEAR .)
    R_NOT           reduce using rule 73 (intervalFields -> R_YEAR .)
    R_NULL          reduce using rule 73 (intervalFields -> R_YEAR .)
    R_PRIMARY       reduce using rule 73 (intervalFields -> R_YEAR .)
    R_REFERENCES    reduce using rule 73 (intervalFields -> R_YEAR .)
    R_CONSTRAINT    reduce using rule 73 (intervalFields -> R_YEAR .)
    R_UNIQUE        reduce using rule 73 (intervalFields -> R_YEAR .)
    R_CHECK         reduce using rule 73 (intervalFields -> R_YEAR .)
    S_PARDER        reduce using rule 73 (intervalFields -> R_YEAR .)
    S_COMA          reduce using rule 73 (intervalFields -> R_YEAR .)
    S_PUNTOCOMA     reduce using rule 73 (intervalFields -> R_YEAR .)
=======
    (85) intervalFields -> R_DAY .

    R_DEFAULT       reduce using rule 85 (intervalFields -> R_DAY .)
    R_NOT           reduce using rule 85 (intervalFields -> R_DAY .)
    R_NULL          reduce using rule 85 (intervalFields -> R_DAY .)
    R_PRIMARY       reduce using rule 85 (intervalFields -> R_DAY .)
    R_REFERENCES    reduce using rule 85 (intervalFields -> R_DAY .)
    R_CONSTRAINT    reduce using rule 85 (intervalFields -> R_DAY .)
    R_UNIQUE        reduce using rule 85 (intervalFields -> R_DAY .)
    R_CHECK         reduce using rule 85 (intervalFields -> R_DAY .)
    S_PARDER        reduce using rule 85 (intervalFields -> R_DAY .)
    S_COMA          reduce using rule 85 (intervalFields -> R_DAY .)
    S_PUNTOCOMA     reduce using rule 85 (intervalFields -> R_DAY .)
>>>>>>> main


state 578

<<<<<<< HEAD
    (74) intervalFields -> R_MONTH .

    R_DEFAULT       reduce using rule 74 (intervalFields -> R_MONTH .)
    R_NOT           reduce using rule 74 (intervalFields -> R_MONTH .)
    R_NULL          reduce using rule 74 (intervalFields -> R_MONTH .)
    R_PRIMARY       reduce using rule 74 (intervalFields -> R_MONTH .)
    R_REFERENCES    reduce using rule 74 (intervalFields -> R_MONTH .)
    R_CONSTRAINT    reduce using rule 74 (intervalFields -> R_MONTH .)
    R_UNIQUE        reduce using rule 74 (intervalFields -> R_MONTH .)
    R_CHECK         reduce using rule 74 (intervalFields -> R_MONTH .)
    S_PARDER        reduce using rule 74 (intervalFields -> R_MONTH .)
    S_COMA          reduce using rule 74 (intervalFields -> R_MONTH .)
    S_PUNTOCOMA     reduce using rule 74 (intervalFields -> R_MONTH .)
=======
    (86) intervalFields -> R_HOUR .

    R_DEFAULT       reduce using rule 86 (intervalFields -> R_HOUR .)
    R_NOT           reduce using rule 86 (intervalFields -> R_HOUR .)
    R_NULL          reduce using rule 86 (intervalFields -> R_HOUR .)
    R_PRIMARY       reduce using rule 86 (intervalFields -> R_HOUR .)
    R_REFERENCES    reduce using rule 86 (intervalFields -> R_HOUR .)
    R_CONSTRAINT    reduce using rule 86 (intervalFields -> R_HOUR .)
    R_UNIQUE        reduce using rule 86 (intervalFields -> R_HOUR .)
    R_CHECK         reduce using rule 86 (intervalFields -> R_HOUR .)
    S_PARDER        reduce using rule 86 (intervalFields -> R_HOUR .)
    S_COMA          reduce using rule 86 (intervalFields -> R_HOUR .)
    S_PUNTOCOMA     reduce using rule 86 (intervalFields -> R_HOUR .)
>>>>>>> main


state 579

<<<<<<< HEAD
    (75) intervalFields -> R_DAY .

    R_DEFAULT       reduce using rule 75 (intervalFields -> R_DAY .)
    R_NOT           reduce using rule 75 (intervalFields -> R_DAY .)
    R_NULL          reduce using rule 75 (intervalFields -> R_DAY .)
    R_PRIMARY       reduce using rule 75 (intervalFields -> R_DAY .)
    R_REFERENCES    reduce using rule 75 (intervalFields -> R_DAY .)
    R_CONSTRAINT    reduce using rule 75 (intervalFields -> R_DAY .)
    R_UNIQUE        reduce using rule 75 (intervalFields -> R_DAY .)
    R_CHECK         reduce using rule 75 (intervalFields -> R_DAY .)
    S_PARDER        reduce using rule 75 (intervalFields -> R_DAY .)
    S_COMA          reduce using rule 75 (intervalFields -> R_DAY .)
    S_PUNTOCOMA     reduce using rule 75 (intervalFields -> R_DAY .)
=======
    (87) intervalFields -> R_MINUTE .

    R_DEFAULT       reduce using rule 87 (intervalFields -> R_MINUTE .)
    R_NOT           reduce using rule 87 (intervalFields -> R_MINUTE .)
    R_NULL          reduce using rule 87 (intervalFields -> R_MINUTE .)
    R_PRIMARY       reduce using rule 87 (intervalFields -> R_MINUTE .)
    R_REFERENCES    reduce using rule 87 (intervalFields -> R_MINUTE .)
    R_CONSTRAINT    reduce using rule 87 (intervalFields -> R_MINUTE .)
    R_UNIQUE        reduce using rule 87 (intervalFields -> R_MINUTE .)
    R_CHECK         reduce using rule 87 (intervalFields -> R_MINUTE .)
    S_PARDER        reduce using rule 87 (intervalFields -> R_MINUTE .)
    S_COMA          reduce using rule 87 (intervalFields -> R_MINUTE .)
    S_PUNTOCOMA     reduce using rule 87 (intervalFields -> R_MINUTE .)
>>>>>>> main


state 580

<<<<<<< HEAD
    (76) intervalFields -> R_HOUR .

    R_DEFAULT       reduce using rule 76 (intervalFields -> R_HOUR .)
    R_NOT           reduce using rule 76 (intervalFields -> R_HOUR .)
    R_NULL          reduce using rule 76 (intervalFields -> R_HOUR .)
    R_PRIMARY       reduce using rule 76 (intervalFields -> R_HOUR .)
    R_REFERENCES    reduce using rule 76 (intervalFields -> R_HOUR .)
    R_CONSTRAINT    reduce using rule 76 (intervalFields -> R_HOUR .)
    R_UNIQUE        reduce using rule 76 (intervalFields -> R_HOUR .)
    R_CHECK         reduce using rule 76 (intervalFields -> R_HOUR .)
    S_PARDER        reduce using rule 76 (intervalFields -> R_HOUR .)
    S_COMA          reduce using rule 76 (intervalFields -> R_HOUR .)
    S_PUNTOCOMA     reduce using rule 76 (intervalFields -> R_HOUR .)
=======
    (88) intervalFields -> R_SECOND .

    R_DEFAULT       reduce using rule 88 (intervalFields -> R_SECOND .)
    R_NOT           reduce using rule 88 (intervalFields -> R_SECOND .)
    R_NULL          reduce using rule 88 (intervalFields -> R_SECOND .)
    R_PRIMARY       reduce using rule 88 (intervalFields -> R_SECOND .)
    R_REFERENCES    reduce using rule 88 (intervalFields -> R_SECOND .)
    R_CONSTRAINT    reduce using rule 88 (intervalFields -> R_SECOND .)
    R_UNIQUE        reduce using rule 88 (intervalFields -> R_SECOND .)
    R_CHECK         reduce using rule 88 (intervalFields -> R_SECOND .)
    S_PARDER        reduce using rule 88 (intervalFields -> R_SECOND .)
    S_COMA          reduce using rule 88 (intervalFields -> R_SECOND .)
    S_PUNTOCOMA     reduce using rule 88 (intervalFields -> R_SECOND .)
>>>>>>> main


state 581

<<<<<<< HEAD
    (77) intervalFields -> R_MINUTE .

    R_DEFAULT       reduce using rule 77 (intervalFields -> R_MINUTE .)
    R_NOT           reduce using rule 77 (intervalFields -> R_MINUTE .)
    R_NULL          reduce using rule 77 (intervalFields -> R_MINUTE .)
    R_PRIMARY       reduce using rule 77 (intervalFields -> R_MINUTE .)
    R_REFERENCES    reduce using rule 77 (intervalFields -> R_MINUTE .)
    R_CONSTRAINT    reduce using rule 77 (intervalFields -> R_MINUTE .)
    R_UNIQUE        reduce using rule 77 (intervalFields -> R_MINUTE .)
    R_CHECK         reduce using rule 77 (intervalFields -> R_MINUTE .)
    S_PARDER        reduce using rule 77 (intervalFields -> R_MINUTE .)
    S_COMA          reduce using rule 77 (intervalFields -> R_MINUTE .)
    S_PUNTOCOMA     reduce using rule 77 (intervalFields -> R_MINUTE .)
=======
    (57) createUnique -> R_UNIQUE S_PARIZQ idList . S_PARDER
    (62) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 644
    S_COMA          shift and go to state 416
>>>>>>> main


state 582

<<<<<<< HEAD
    (78) intervalFields -> R_SECOND .

    R_DEFAULT       reduce using rule 78 (intervalFields -> R_SECOND .)
    R_NOT           reduce using rule 78 (intervalFields -> R_SECOND .)
    R_NULL          reduce using rule 78 (intervalFields -> R_SECOND .)
    R_PRIMARY       reduce using rule 78 (intervalFields -> R_SECOND .)
    R_REFERENCES    reduce using rule 78 (intervalFields -> R_SECOND .)
    R_CONSTRAINT    reduce using rule 78 (intervalFields -> R_SECOND .)
    R_UNIQUE        reduce using rule 78 (intervalFields -> R_SECOND .)
    R_CHECK         reduce using rule 78 (intervalFields -> R_SECOND .)
    S_PARDER        reduce using rule 78 (intervalFields -> R_SECOND .)
    S_COMA          reduce using rule 78 (intervalFields -> R_SECOND .)
    S_PUNTOCOMA     reduce using rule 78 (intervalFields -> R_SECOND .)
=======
    (44) createMode -> R_MODE INTEGER .

    S_PUNTOCOMA     reduce using rule 44 (createMode -> R_MODE INTEGER .)
>>>>>>> main


state 583

<<<<<<< HEAD
    (47) createUnique -> R_UNIQUE S_PARIZQ idList . S_PARDER
    (52) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 646
    S_COMA          shift and go to state 420
=======
    (45) createMode -> R_MODE S_IGUAL . INTEGER

    INTEGER         shift and go to state 645
>>>>>>> main


state 584

<<<<<<< HEAD
    (34) createMode -> R_MODE INTEGER .

    S_PUNTOCOMA     reduce using rule 34 (createMode -> R_MODE INTEGER .)
=======
    (41) createOwner -> R_OWNER S_IGUAL ID .

    R_MODE          reduce using rule 41 (createOwner -> R_OWNER S_IGUAL ID .)
    S_PUNTOCOMA     reduce using rule 41 (createOwner -> R_OWNER S_IGUAL ID .)
>>>>>>> main


state 585

<<<<<<< HEAD
    (35) createMode -> R_MODE S_IGUAL . INTEGER

    INTEGER         shift and go to state 647
=======
    (42) createOwner -> R_OWNER S_IGUAL STRING .

    R_MODE          reduce using rule 42 (createOwner -> R_OWNER S_IGUAL STRING .)
    S_PUNTOCOMA     reduce using rule 42 (createOwner -> R_OWNER S_IGUAL STRING .)
>>>>>>> main


state 586

<<<<<<< HEAD
    (31) createOwner -> R_OWNER S_IGUAL ID .

    R_MODE          reduce using rule 31 (createOwner -> R_OWNER S_IGUAL ID .)
    S_PUNTOCOMA     reduce using rule 31 (createOwner -> R_OWNER S_IGUAL ID .)
=======
    (34) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList . S_PARDER
    (144) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 646
    S_COMA          shift and go to state 348
>>>>>>> main


state 587

<<<<<<< HEAD
    (32) createOwner -> R_OWNER S_IGUAL STRING .

    R_MODE          reduce using rule 32 (createOwner -> R_OWNER S_IGUAL STRING .)
    S_PUNTOCOMA     reduce using rule 32 (createOwner -> R_OWNER S_IGUAL STRING .)
=======
    (268) alterAlter -> R_COLUMN ID R_SET nullOpt .

    S_COMA          reduce using rule 268 (alterAlter -> R_COLUMN ID R_SET nullOpt .)
    S_PUNTOCOMA     reduce using rule 268 (alterAlter -> R_COLUMN ID R_SET nullOpt .)
>>>>>>> main


state 588

<<<<<<< HEAD
    (24) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList . S_PARDER
    (134) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 648
    S_COMA          shift and go to state 351
=======
    (269) alterAlter -> R_COLUMN ID R_SET defaultVal .

    S_COMA          reduce using rule 269 (alterAlter -> R_COLUMN ID R_SET defaultVal .)
    S_PUNTOCOMA     reduce using rule 269 (alterAlter -> R_COLUMN ID R_SET defaultVal .)
>>>>>>> main


state 589

<<<<<<< HEAD
    (258) alterAlter -> R_COLUMN ID R_SET nullOpt .

    S_COMA          reduce using rule 258 (alterAlter -> R_COLUMN ID R_SET nullOpt .)
    S_PUNTOCOMA     reduce using rule 258 (alterAlter -> R_COLUMN ID R_SET nullOpt .)
=======
    (270) alterAlter -> R_COLUMN ID R_TYPE types .

    S_COMA          reduce using rule 270 (alterAlter -> R_COLUMN ID R_TYPE types .)
    S_PUNTOCOMA     reduce using rule 270 (alterAlter -> R_COLUMN ID R_TYPE types .)
>>>>>>> main


state 590

<<<<<<< HEAD
    (259) alterAlter -> R_COLUMN ID R_SET defaultVal .

    S_COMA          reduce using rule 259 (alterAlter -> R_COLUMN ID R_SET defaultVal .)
    S_PUNTOCOMA     reduce using rule 259 (alterAlter -> R_COLUMN ID R_SET defaultVal .)
=======
    (267) alterAdd -> constrName R_UNIQUE S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 647
>>>>>>> main


state 591

<<<<<<< HEAD
    (260) alterAlter -> R_COLUMN ID R_TYPE types .

    S_COMA          reduce using rule 260 (alterAlter -> R_COLUMN ID R_TYPE types .)
    S_PUNTOCOMA     reduce using rule 260 (alterAlter -> R_COLUMN ID R_TYPE types .)
=======
    (56) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 648
>>>>>>> main


state 592

<<<<<<< HEAD
    (257) alterAdd -> constrName R_UNIQUE S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 649
=======
    (235) booleanCheck -> idOrLiteral . OL_MENORQUE idOrLiteral
    (236) booleanCheck -> idOrLiteral . OL_MAYORQUE idOrLiteral
    (237) booleanCheck -> idOrLiteral . OL_MAYORIGUALQUE idOrLiteral
    (238) booleanCheck -> idOrLiteral . OL_MENORIGUALQUE idOrLiteral
    (239) booleanCheck -> idOrLiteral . S_IGUAL idOrLiteral
    (240) booleanCheck -> idOrLiteral . OL_DISTINTODE idOrLiteral
    (241) booleanCheck -> idOrLiteral . R_IS R_DISTINCT R_FROM idOrLiteral
    (242) booleanCheck -> idOrLiteral . R_IS R_NOT R_DISTINCT R_FROM idOrLiteral

    OL_MENORQUE     shift and go to state 649
    OL_MAYORQUE     shift and go to state 650
    OL_MAYORIGUALQUE shift and go to state 651
    OL_MENORIGUALQUE shift and go to state 652
    S_IGUAL         shift and go to state 653
    OL_DISTINTODE   shift and go to state 654
    R_IS            shift and go to state 655
>>>>>>> main


state 593

<<<<<<< HEAD
    (46) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 650
=======
    (243) idOrLiteral -> ID .

    OL_MENORQUE     reduce using rule 243 (idOrLiteral -> ID .)
    OL_MAYORQUE     reduce using rule 243 (idOrLiteral -> ID .)
    OL_MAYORIGUALQUE reduce using rule 243 (idOrLiteral -> ID .)
    OL_MENORIGUALQUE reduce using rule 243 (idOrLiteral -> ID .)
    S_IGUAL         reduce using rule 243 (idOrLiteral -> ID .)
    OL_DISTINTODE   reduce using rule 243 (idOrLiteral -> ID .)
    R_IS            reduce using rule 243 (idOrLiteral -> ID .)
    S_PARDER        reduce using rule 243 (idOrLiteral -> ID .)
>>>>>>> main


state 594

<<<<<<< HEAD
    (225) booleanCheck -> idOrLiteral . OL_MENORQUE idOrLiteral
    (226) booleanCheck -> idOrLiteral . OL_MAYORQUE idOrLiteral
    (227) booleanCheck -> idOrLiteral . OL_MAYORIGUALQUE idOrLiteral
    (228) booleanCheck -> idOrLiteral . OL_MENORIGUALQUE idOrLiteral
    (229) booleanCheck -> idOrLiteral . S_IGUAL idOrLiteral
    (230) booleanCheck -> idOrLiteral . OL_DISTINTODE idOrLiteral
    (231) booleanCheck -> idOrLiteral . R_IS R_DISTINCT R_FROM idOrLiteral
    (232) booleanCheck -> idOrLiteral . R_IS R_NOT R_DISTINCT R_FROM idOrLiteral

    OL_MENORQUE     shift and go to state 651
    OL_MAYORQUE     shift and go to state 652
    OL_MAYORIGUALQUE shift and go to state 653
    OL_MENORIGUALQUE shift and go to state 654
    S_IGUAL         shift and go to state 655
    OL_DISTINTODE   shift and go to state 656
    R_IS            shift and go to state 657
=======
    (244) idOrLiteral -> INTEGER .

    OL_MENORQUE     reduce using rule 244 (idOrLiteral -> INTEGER .)
    OL_MAYORQUE     reduce using rule 244 (idOrLiteral -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 244 (idOrLiteral -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 244 (idOrLiteral -> INTEGER .)
    S_IGUAL         reduce using rule 244 (idOrLiteral -> INTEGER .)
    OL_DISTINTODE   reduce using rule 244 (idOrLiteral -> INTEGER .)
    R_IS            reduce using rule 244 (idOrLiteral -> INTEGER .)
    S_PARDER        reduce using rule 244 (idOrLiteral -> INTEGER .)
>>>>>>> main


state 595

<<<<<<< HEAD
    (233) idOrLiteral -> ID .

    OL_MENORQUE     reduce using rule 233 (idOrLiteral -> ID .)
    OL_MAYORQUE     reduce using rule 233 (idOrLiteral -> ID .)
    OL_MAYORIGUALQUE reduce using rule 233 (idOrLiteral -> ID .)
    OL_MENORIGUALQUE reduce using rule 233 (idOrLiteral -> ID .)
    S_IGUAL         reduce using rule 233 (idOrLiteral -> ID .)
    OL_DISTINTODE   reduce using rule 233 (idOrLiteral -> ID .)
    R_IS            reduce using rule 233 (idOrLiteral -> ID .)
    S_PARDER        reduce using rule 233 (idOrLiteral -> ID .)
=======
    (245) idOrLiteral -> STRING .

    OL_MENORQUE     reduce using rule 245 (idOrLiteral -> STRING .)
    OL_MAYORQUE     reduce using rule 245 (idOrLiteral -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 245 (idOrLiteral -> STRING .)
    OL_MENORIGUALQUE reduce using rule 245 (idOrLiteral -> STRING .)
    S_IGUAL         reduce using rule 245 (idOrLiteral -> STRING .)
    OL_DISTINTODE   reduce using rule 245 (idOrLiteral -> STRING .)
    R_IS            reduce using rule 245 (idOrLiteral -> STRING .)
    S_PARDER        reduce using rule 245 (idOrLiteral -> STRING .)
>>>>>>> main


state 596

<<<<<<< HEAD
    (234) idOrLiteral -> INTEGER .

    OL_MENORQUE     reduce using rule 234 (idOrLiteral -> INTEGER .)
    OL_MAYORQUE     reduce using rule 234 (idOrLiteral -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 234 (idOrLiteral -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 234 (idOrLiteral -> INTEGER .)
    S_IGUAL         reduce using rule 234 (idOrLiteral -> INTEGER .)
    OL_DISTINTODE   reduce using rule 234 (idOrLiteral -> INTEGER .)
    R_IS            reduce using rule 234 (idOrLiteral -> INTEGER .)
    S_PARDER        reduce using rule 234 (idOrLiteral -> INTEGER .)
=======
    (246) idOrLiteral -> DECIMAL .

    OL_MENORQUE     reduce using rule 246 (idOrLiteral -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 246 (idOrLiteral -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 246 (idOrLiteral -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 246 (idOrLiteral -> DECIMAL .)
    S_IGUAL         reduce using rule 246 (idOrLiteral -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 246 (idOrLiteral -> DECIMAL .)
    R_IS            reduce using rule 246 (idOrLiteral -> DECIMAL .)
    S_PARDER        reduce using rule 246 (idOrLiteral -> DECIMAL .)
>>>>>>> main


state 597

<<<<<<< HEAD
    (235) idOrLiteral -> STRING .

    OL_MENORQUE     reduce using rule 235 (idOrLiteral -> STRING .)
    OL_MAYORQUE     reduce using rule 235 (idOrLiteral -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 235 (idOrLiteral -> STRING .)
    OL_MENORIGUALQUE reduce using rule 235 (idOrLiteral -> STRING .)
    S_IGUAL         reduce using rule 235 (idOrLiteral -> STRING .)
    OL_DISTINTODE   reduce using rule 235 (idOrLiteral -> STRING .)
    R_IS            reduce using rule 235 (idOrLiteral -> STRING .)
    S_PARDER        reduce using rule 235 (idOrLiteral -> STRING .)


state 598

    (236) idOrLiteral -> DECIMAL .

    OL_MENORQUE     reduce using rule 236 (idOrLiteral -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 236 (idOrLiteral -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 236 (idOrLiteral -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 236 (idOrLiteral -> DECIMAL .)
    S_IGUAL         reduce using rule 236 (idOrLiteral -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 236 (idOrLiteral -> DECIMAL .)
    R_IS            reduce using rule 236 (idOrLiteral -> DECIMAL .)
    S_PARDER        reduce using rule 236 (idOrLiteral -> DECIMAL .)


state 599

    (237) idOrLiteral -> CHARACTER .

    OL_MENORQUE     reduce using rule 237 (idOrLiteral -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 237 (idOrLiteral -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 237 (idOrLiteral -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 237 (idOrLiteral -> CHARACTER .)
    S_IGUAL         reduce using rule 237 (idOrLiteral -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 237 (idOrLiteral -> CHARACTER .)
    R_IS            reduce using rule 237 (idOrLiteral -> CHARACTER .)
    S_PARDER        reduce using rule 237 (idOrLiteral -> CHARACTER .)


state 600

    (238) idOrLiteral -> R_TRUE .

    OL_MENORQUE     reduce using rule 238 (idOrLiteral -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 238 (idOrLiteral -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 238 (idOrLiteral -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 238 (idOrLiteral -> R_TRUE .)
    S_IGUAL         reduce using rule 238 (idOrLiteral -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 238 (idOrLiteral -> R_TRUE .)
    R_IS            reduce using rule 238 (idOrLiteral -> R_TRUE .)
    S_PARDER        reduce using rule 238 (idOrLiteral -> R_TRUE .)


state 601

    (239) idOrLiteral -> R_FALSE .

    OL_MENORQUE     reduce using rule 239 (idOrLiteral -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 239 (idOrLiteral -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 239 (idOrLiteral -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 239 (idOrLiteral -> R_FALSE .)
    S_IGUAL         reduce using rule 239 (idOrLiteral -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 239 (idOrLiteral -> R_FALSE .)
    R_IS            reduce using rule 239 (idOrLiteral -> R_FALSE .)
    S_PARDER        reduce using rule 239 (idOrLiteral -> R_FALSE .)


state 602

    (49) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ . idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (52) idList -> . idList S_COMA ID
    (53) idList -> . ID

    ID              shift and go to state 333

    idList                         shift and go to state 658

state 603

    (48) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList . S_PARDER
    (52) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 659
    S_COMA          shift and go to state 420


state 604

    (263) alterRename -> R_COLUMN ID R_TO ID .

    S_COMA          reduce using rule 263 (alterRename -> R_COLUMN ID R_TO ID .)
    S_PUNTOCOMA     reduce using rule 263 (alterRename -> R_COLUMN ID R_TO ID .)


state 605

    (335) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 335 (insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .)


state 606

    (268) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 268 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 268 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 268 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 268 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 268 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)


state 607

    (330) limitCl -> R_LIMIT INTEGER . offsetLimit
    (333) offsetLimit -> . R_OFFSET INTEGER
    (334) offsetLimit -> .

    R_OFFSET        shift and go to state 661
    S_PUNTOCOMA     reduce using rule 334 (offsetLimit -> .)
    R_UNION         reduce using rule 334 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 334 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 334 (offsetLimit -> .)
    S_PARDER        reduce using rule 334 (offsetLimit -> .)

    offsetLimit                    shift and go to state 660

state 608

    (331) limitCl -> R_LIMIT R_ALL . offsetLimit
    (333) offsetLimit -> . R_OFFSET INTEGER
    (334) offsetLimit -> .

    R_OFFSET        shift and go to state 661
    S_PUNTOCOMA     reduce using rule 334 (offsetLimit -> .)
    R_UNION         reduce using rule 334 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 334 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 334 (offsetLimit -> .)
    S_PARDER        reduce using rule 334 (offsetLimit -> .)

    offsetLimit                    shift and go to state 662

state 609

    (318) orderByCl -> R_ORDER R_BY orderList .
    (320) orderList -> orderList . S_COMA orderByElem

    R_LIMIT         reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    S_PUNTOCOMA     reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    R_UNION         reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    R_INTERSECT     reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    R_EXCEPT        reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    S_PARDER        reduce using rule 318 (orderByCl -> R_ORDER R_BY orderList .)
    S_COMA          shift and go to state 663
=======
    (247) idOrLiteral -> CHARACTER .

    OL_MENORQUE     reduce using rule 247 (idOrLiteral -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 247 (idOrLiteral -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 247 (idOrLiteral -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 247 (idOrLiteral -> CHARACTER .)
    S_IGUAL         reduce using rule 247 (idOrLiteral -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 247 (idOrLiteral -> CHARACTER .)
    R_IS            reduce using rule 247 (idOrLiteral -> CHARACTER .)
    S_PARDER        reduce using rule 247 (idOrLiteral -> CHARACTER .)
>>>>>>> main


state 610

<<<<<<< HEAD
    (321) orderList -> orderByElem .

    S_COMA          reduce using rule 321 (orderList -> orderByElem .)
    R_LIMIT         reduce using rule 321 (orderList -> orderByElem .)
    S_PUNTOCOMA     reduce using rule 321 (orderList -> orderByElem .)
    R_UNION         reduce using rule 321 (orderList -> orderByElem .)
    R_INTERSECT     reduce using rule 321 (orderList -> orderByElem .)
    R_EXCEPT        reduce using rule 321 (orderList -> orderByElem .)
    S_PARDER        reduce using rule 321 (orderList -> orderByElem .)
=======
    (248) idOrLiteral -> R_TRUE .

    OL_MENORQUE     reduce using rule 248 (idOrLiteral -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 248 (idOrLiteral -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 248 (idOrLiteral -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 248 (idOrLiteral -> R_TRUE .)
    S_IGUAL         reduce using rule 248 (idOrLiteral -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 248 (idOrLiteral -> R_TRUE .)
    R_IS            reduce using rule 248 (idOrLiteral -> R_TRUE .)
    S_PARDER        reduce using rule 248 (idOrLiteral -> R_TRUE .)
>>>>>>> main


state 611

<<<<<<< HEAD
    (322) orderByElem -> columnName . orderOpts orderNull
    (324) orderOpts -> . R_ASC
    (325) orderOpts -> . R_DESC
    (326) orderOpts -> .

    R_ASC           shift and go to state 665
    R_DESC          shift and go to state 666
    R_NULL          reduce using rule 326 (orderOpts -> .)
    S_COMA          reduce using rule 326 (orderOpts -> .)
    R_LIMIT         reduce using rule 326 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 326 (orderOpts -> .)
    R_UNION         reduce using rule 326 (orderOpts -> .)
    R_INTERSECT     reduce using rule 326 (orderOpts -> .)
    R_EXCEPT        reduce using rule 326 (orderOpts -> .)
    S_PARDER        reduce using rule 326 (orderOpts -> .)

    orderOpts                      shift and go to state 664
=======
    (249) idOrLiteral -> R_FALSE .

    OL_MENORQUE     reduce using rule 249 (idOrLiteral -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 249 (idOrLiteral -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 249 (idOrLiteral -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 249 (idOrLiteral -> R_FALSE .)
    S_IGUAL         reduce using rule 249 (idOrLiteral -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 249 (idOrLiteral -> R_FALSE .)
    R_IS            reduce using rule 249 (idOrLiteral -> R_FALSE .)
    S_PARDER        reduce using rule 249 (idOrLiteral -> R_FALSE .)

>>>>>>> main

state 612

<<<<<<< HEAD
    (323) orderByElem -> INTEGER . orderOpts orderNull
    (324) orderOpts -> . R_ASC
    (325) orderOpts -> . R_DESC
    (326) orderOpts -> .

    R_ASC           shift and go to state 665
    R_DESC          shift and go to state 666
    R_NULL          reduce using rule 326 (orderOpts -> .)
    S_COMA          reduce using rule 326 (orderOpts -> .)
    R_LIMIT         reduce using rule 326 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 326 (orderOpts -> .)
    R_UNION         reduce using rule 326 (orderOpts -> .)
    R_INTERSECT     reduce using rule 326 (orderOpts -> .)
    R_EXCEPT        reduce using rule 326 (orderOpts -> .)
    S_PARDER        reduce using rule 326 (orderOpts -> .)

    orderOpts                      shift and go to state 667
=======
    (59) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ . idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (62) idList -> . idList S_COMA ID
    (63) idList -> . ID

    ID              shift and go to state 330

    idList                         shift and go to state 656
>>>>>>> main

state 613

    (58) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList . S_PARDER
    (62) idList -> idList . S_COMA ID

<<<<<<< HEAD
    R_ORDER         reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_LIMIT         reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PUNTOCOMA     reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_UNION         reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_INTERSECT     reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_EXCEPT        reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PARDER        reduce using rule 310 (groupByCl -> R_GROUP R_BY groupList havingCl .)
=======
    S_PARDER        shift and go to state 657
    S_COMA          shift and go to state 416
>>>>>>> main


state 614

<<<<<<< HEAD
    (312) groupList -> groupList S_COMA . columnName
    (313) groupList -> groupList S_COMA . INTEGER
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 669
    ID              shift and go to state 432

    columnName                     shift and go to state 668
=======
    (273) alterRename -> R_COLUMN ID R_TO ID .

    S_COMA          reduce using rule 273 (alterRename -> R_COLUMN ID R_TO ID .)
    S_PUNTOCOMA     reduce using rule 273 (alterRename -> R_COLUMN ID R_TO ID .)

>>>>>>> main

state 615

<<<<<<< HEAD
    (316) havingCl -> R_HAVING . expBool
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 82
    S_PARIZQ        shift and go to state 182
    R_EXISTS        shift and go to state 100
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 670
    boolean                        shift and go to state 83
    datatype                       shift and go to state 183
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    columnName                     shift and go to state 76
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    stringExp                      shift and go to state 105
    timeStamp                      shift and go to state 96
=======
    (345) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 345 (insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .)

>>>>>>> main

state 616

<<<<<<< HEAD
    (270) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 270 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
=======
    (340) limitCl -> R_LIMIT INTEGER offsetLimit .

    S_PUNTOCOMA     reduce using rule 340 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_UNION         reduce using rule 340 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_INTERSECT     reduce using rule 340 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_EXCEPT        reduce using rule 340 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    S_PARDER        reduce using rule 340 (limitCl -> R_LIMIT INTEGER offsetLimit .)
>>>>>>> main


state 617

<<<<<<< HEAD
    (296) joinCl -> joinOpt R_JOIN columnName optAlias R_ON . expBool
    (211) expBool -> . expBool R_AND expBool
    (212) expBool -> . expBool R_OR expBool
    (213) expBool -> . R_NOT expBool
    (214) expBool -> . S_PARIZQ expBool S_PARDER
    (215) expBool -> . expBool optBoolPredicate
    (216) expBool -> . boolean
    (206) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (208) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (209) boolean -> . expComp
    (210) boolean -> . expSubq
    (136) datatype -> . datatype O_SUMA datatype
    (137) datatype -> . datatype O_RESTA datatype
    (138) datatype -> . datatype O_PRODUCTO datatype
    (139) datatype -> . datatype O_DIVISION datatype
    (140) datatype -> . datatype O_EXPONENTE datatype
    (141) datatype -> . datatype O_MODULAR datatype
    (142) datatype -> . datatype OC_CONCATENAR datatype
    (143) datatype -> . R_CASE caseList optElse R_END
    (149) datatype -> . O_RESTA datatype
    (150) datatype -> . O_SUMA datatype
    (151) datatype -> . columnName
    (152) datatype -> . literal
    (153) datatype -> . funcCall
    (154) datatype -> . extract
    (155) datatype -> . datePart
    (156) datatype -> . current
    (157) datatype -> . S_PARIZQ datatype S_PARDER
    (158) expComp -> . datatype OL_MENORQUE datatype
    (159) expComp -> . datatype OL_MAYORQUE datatype
    (160) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (161) expComp -> . datatype OL_MENORIGUALQUE datatype
    (162) expComp -> . datatype S_IGUAL datatype
    (163) expComp -> . datatype OL_DISTINTODE datatype
    (164) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (165) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (166) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (167) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (168) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (169) expComp -> . datatype R_ISNULL
    (170) expComp -> . datatype R_NOTNULL
    (171) expComp -> . datatype R_IS R_NULL
    (172) expComp -> . datatype R_IS R_TRUE
    (173) expComp -> . datatype R_IS R_FALSE
    (174) expComp -> . datatype R_IS R_UNKNOWN
    (175) expComp -> . datatype R_IS R_NOT R_NULL
    (176) expComp -> . datatype R_IS R_NOT R_TRUE
    (177) expComp -> . datatype R_IS R_NOT R_FALSE
    (178) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (179) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (180) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (181) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (182) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (183) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (184) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (185) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (186) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (187) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (188) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (189) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . stringExp R_LIKE STRING
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL
    (99) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (100) funcCall -> . ID S_PARIZQ S_PARDER
    (101) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (102) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (103) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (104) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (105) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (106) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (107) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (116) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (122) current -> . R_CURRENT_DATE
    (123) current -> . R_CURRENT_TIME
    (124) current -> . timeStamp
    (201) stringExp -> . STRING
    (202) stringExp -> . columnName
    (108) timeStamp -> . R_TIMESTAMP STRING
    (109) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 82
    S_PARIZQ        shift and go to state 182
    R_EXISTS        shift and go to state 100
    R_CASE          shift and go to state 75
    O_RESTA         shift and go to state 74
    O_SUMA          shift and go to state 73
    ID              shift and go to state 172
    INTEGER         shift and go to state 84
    STRING          shift and go to state 85
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90
    R_NOW           shift and go to state 91
    R_COUNT         shift and go to state 92
    R_SUM           shift and go to state 93
    R_PROM          shift and go to state 94
    R_EXTRACT       shift and go to state 95
    R_DATE_PART     shift and go to state 97
    R_CURRENT_DATE  shift and go to state 98
    R_CURRENT_TIME  shift and go to state 99
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    columnName                     shift and go to state 76
    expBool                        shift and go to state 671
    boolean                        shift and go to state 83
    datatype                       shift and go to state 183
    expComp                        shift and go to state 101
    expSubq                        shift and go to state 102
    literal                        shift and go to state 77
    funcCall                       shift and go to state 78
    extract                        shift and go to state 79
    datePart                       shift and go to state 80
    current                        shift and go to state 81
    stringExp                      shift and go to state 105
    timeStamp                      shift and go to state 96
=======
    (343) offsetLimit -> R_OFFSET . INTEGER

    INTEGER         shift and go to state 658

>>>>>>> main

state 618

    (341) limitCl -> R_LIMIT R_ALL offsetLimit .

<<<<<<< HEAD
    S_PARIZQ        shift and go to state 672
=======
    S_PUNTOCOMA     reduce using rule 341 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_UNION         reduce using rule 341 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_INTERSECT     reduce using rule 341 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_EXCEPT        reduce using rule 341 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    S_PARDER        reduce using rule 341 (limitCl -> R_LIMIT R_ALL offsetLimit .)
>>>>>>> main


state 619

    (329) orderByCl -> R_ORDER R_BY orderList .
    (330) orderList -> orderList . S_COMA orderByElem

    R_LIMIT         reduce using rule 329 (orderByCl -> R_ORDER R_BY orderList .)
    S_PUNTOCOMA     reduce using rule 329 (orderByCl -> R_ORDER R_BY orderList .)
    R_UNION         reduce using rule 329 (orderByCl -> R_ORDER R_BY orderList .)
    R_INTERSECT     reduce using rule 329 (orderByCl -> R_ORDER R_BY orderList .)
    R_EXCEPT        reduce using rule 329 (orderByCl -> R_ORDER R_BY orderList .)
    S_PARDER        reduce using rule 329 (orderByCl -> R_ORDER R_BY orderList .)
    S_COMA          shift and go to state 659


state 620

<<<<<<< HEAD
    (186) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 673
=======
    (331) orderList -> orderByElem .

    S_COMA          reduce using rule 331 (orderList -> orderByElem .)
    R_LIMIT         reduce using rule 331 (orderList -> orderByElem .)
    S_PUNTOCOMA     reduce using rule 331 (orderList -> orderByElem .)
    R_UNION         reduce using rule 331 (orderList -> orderByElem .)
    R_INTERSECT     reduce using rule 331 (orderList -> orderByElem .)
    R_EXCEPT        reduce using rule 331 (orderList -> orderByElem .)
    S_PARDER        reduce using rule 331 (orderList -> orderByElem .)
>>>>>>> main


state 621

<<<<<<< HEAD
    (188) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 674
=======
    (332) orderByElem -> columnName . orderOpts orderNull
    (334) orderOpts -> . R_ASC
    (335) orderOpts -> . R_DESC
    (336) orderOpts -> .

    R_ASC           shift and go to state 661
    R_DESC          shift and go to state 662
    R_NULL          reduce using rule 336 (orderOpts -> .)
    S_COMA          reduce using rule 336 (orderOpts -> .)
    R_LIMIT         reduce using rule 336 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 336 (orderOpts -> .)
    R_UNION         reduce using rule 336 (orderOpts -> .)
    R_INTERSECT     reduce using rule 336 (orderOpts -> .)
    R_EXCEPT        reduce using rule 336 (orderOpts -> .)
    S_PARDER        reduce using rule 336 (orderOpts -> .)

    orderOpts                      shift and go to state 660
>>>>>>> main

state 622

<<<<<<< HEAD
    (189) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 675
=======
    (333) orderByElem -> INTEGER . orderOpts orderNull
    (334) orderOpts -> . R_ASC
    (335) orderOpts -> . R_DESC
    (336) orderOpts -> .

    R_ASC           shift and go to state 661
    R_DESC          shift and go to state 662
    R_NULL          reduce using rule 336 (orderOpts -> .)
    S_COMA          reduce using rule 336 (orderOpts -> .)
    R_LIMIT         reduce using rule 336 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 336 (orderOpts -> .)
    R_UNION         reduce using rule 336 (orderOpts -> .)
    R_INTERSECT     reduce using rule 336 (orderOpts -> .)
    R_EXCEPT        reduce using rule 336 (orderOpts -> .)
    S_PARDER        reduce using rule 336 (orderOpts -> .)
>>>>>>> main

    orderOpts                      shift and go to state 663

state 623

<<<<<<< HEAD
    (191) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 676
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (321) groupByCl -> R_GROUP R_BY groupList havingCl .

    R_LIMIT         reduce using rule 321 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_ORDER         reduce using rule 321 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PUNTOCOMA     reduce using rule 321 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_UNION         reduce using rule 321 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_INTERSECT     reduce using rule 321 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_EXCEPT        reduce using rule 321 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PARDER        reduce using rule 321 (groupByCl -> R_GROUP R_BY groupList havingCl .)
>>>>>>> main


state 624

<<<<<<< HEAD
    (195) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 677
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (323) groupList -> groupList S_COMA . columnName
    (324) groupList -> groupList S_COMA . INTEGER
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 665
    ID              shift and go to state 430
>>>>>>> main

    columnName                     shift and go to state 664

state 625

<<<<<<< HEAD
    (197) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 678
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39

=======
    (327) havingCl -> R_HAVING . expBool
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 81
    S_PARIZQ        shift and go to state 181
    R_EXISTS        shift and go to state 99
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    expBool                        shift and go to state 666
    boolean                        shift and go to state 82
    datatype                       shift and go to state 182
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    columnName                     shift and go to state 75
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    stringExp                      shift and go to state 104
    timeStamp                      shift and go to state 95
>>>>>>> main

state 626

<<<<<<< HEAD
    (199) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 679
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (280) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 280 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 280 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 280 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 280 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 280 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
>>>>>>> main


state 627

<<<<<<< HEAD
    (190) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 190 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)

=======
    (307) joinCl -> joinOpt R_JOIN columnName optAlias R_ON . expBool
    (221) expBool -> . expBool R_AND expBool
    (222) expBool -> . expBool R_OR expBool
    (223) expBool -> . R_NOT expBool
    (224) expBool -> . S_PARIZQ expBool S_PARDER
    (225) expBool -> . expBool optBoolPredicate
    (226) expBool -> . boolean
    (216) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (217) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (218) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (219) boolean -> . expComp
    (220) boolean -> . expSubq
    (146) datatype -> . datatype O_SUMA datatype
    (147) datatype -> . datatype O_RESTA datatype
    (148) datatype -> . datatype O_PRODUCTO datatype
    (149) datatype -> . datatype O_DIVISION datatype
    (150) datatype -> . datatype O_EXPONENTE datatype
    (151) datatype -> . datatype O_MODULAR datatype
    (152) datatype -> . datatype OC_CONCATENAR datatype
    (153) datatype -> . R_CASE caseList optElse R_END
    (159) datatype -> . O_RESTA datatype
    (160) datatype -> . O_SUMA datatype
    (161) datatype -> . columnName
    (162) datatype -> . literal
    (163) datatype -> . funcCall
    (164) datatype -> . extract
    (165) datatype -> . datePart
    (166) datatype -> . current
    (167) datatype -> . S_PARIZQ datatype S_PARDER
    (168) expComp -> . datatype OL_MENORQUE datatype
    (169) expComp -> . datatype OL_MAYORQUE datatype
    (170) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (171) expComp -> . datatype OL_MENORIGUALQUE datatype
    (172) expComp -> . datatype S_IGUAL datatype
    (173) expComp -> . datatype OL_DISTINTODE datatype
    (174) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (175) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (176) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (177) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (178) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (179) expComp -> . datatype R_ISNULL
    (180) expComp -> . datatype R_NOTNULL
    (181) expComp -> . datatype R_IS R_NULL
    (182) expComp -> . datatype R_IS R_TRUE
    (183) expComp -> . datatype R_IS R_FALSE
    (184) expComp -> . datatype R_IS R_UNKNOWN
    (185) expComp -> . datatype R_IS R_NOT R_NULL
    (186) expComp -> . datatype R_IS R_NOT R_TRUE
    (187) expComp -> . datatype R_IS R_NOT R_FALSE
    (188) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (189) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (190) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (191) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (192) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (193) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (194) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (195) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (196) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (197) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (198) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (199) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (200) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (201) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (202) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (203) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (204) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (205) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (206) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (207) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (208) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (209) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (210) expSubq -> . stringExp R_LIKE STRING
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL
    (109) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (110) funcCall -> . ID S_PARIZQ S_PARDER
    (111) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (112) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (113) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (114) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (115) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (116) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (117) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (126) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (132) current -> . R_CURRENT_DATE
    (133) current -> . R_CURRENT_TIME
    (134) current -> . timeStamp
    (211) stringExp -> . STRING
    (212) stringExp -> . columnName
    (118) timeStamp -> . R_TIMESTAMP STRING
    (119) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 81
    S_PARIZQ        shift and go to state 181
    R_EXISTS        shift and go to state 99
    R_CASE          shift and go to state 74
    O_RESTA         shift and go to state 73
    O_SUMA          shift and go to state 72
    ID              shift and go to state 171
    INTEGER         shift and go to state 83
    STRING          shift and go to state 84
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89
    R_NOW           shift and go to state 90
    R_COUNT         shift and go to state 91
    R_SUM           shift and go to state 92
    R_PROM          shift and go to state 93
    R_EXTRACT       shift and go to state 94
    R_DATE_PART     shift and go to state 96
    R_CURRENT_DATE  shift and go to state 97
    R_CURRENT_TIME  shift and go to state 98
    R_TIMESTAMP     shift and go to state 102
    R_INTERVAL      shift and go to state 103

    columnName                     shift and go to state 75
    expBool                        shift and go to state 667
    boolean                        shift and go to state 82
    datatype                       shift and go to state 182
    expComp                        shift and go to state 100
    expSubq                        shift and go to state 101
    literal                        shift and go to state 76
    funcCall                       shift and go to state 77
    extract                        shift and go to state 78
    datePart                       shift and go to state 79
    current                        shift and go to state 80
    stringExp                      shift and go to state 104
    timeStamp                      shift and go to state 95
>>>>>>> main

state 628

<<<<<<< HEAD
    (194) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 194 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (308) joinCl -> joinOpt R_JOIN columnName optAlias R_USING . S_PARIZQ nameList S_PARDER

    S_PARIZQ        shift and go to state 668
>>>>>>> main


state 629

<<<<<<< HEAD
    (196) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 196 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (309) joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .

    R_NATURAL       reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INNER         reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LEFT          reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_RIGHT         reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_FULL          reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_WHERE         reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_GROUP         reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_ORDER         reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LIMIT         reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PUNTOCOMA     reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_UNION         reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INTERSECT     reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_EXCEPT        reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PARDER        reduce using rule 309 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
>>>>>>> main


state 630

<<<<<<< HEAD
    (198) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 198 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (196) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 669
>>>>>>> main


state 631

<<<<<<< HEAD
    (185) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams
=======
    (198) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams
>>>>>>> main

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

<<<<<<< HEAD
    selectStmt                     shift and go to state 680
=======
    selectStmt                     shift and go to state 670
>>>>>>> main

state 632

<<<<<<< HEAD
    (187) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 681
=======
    (199) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 671
>>>>>>> main


state 633

<<<<<<< HEAD
    (121) dateSource -> R_NOW S_PARIZQ S_PARDER .

    S_PARDER        reduce using rule 121 (dateSource -> R_NOW S_PARIZQ S_PARDER .)
=======
    (201) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 672
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 634

<<<<<<< HEAD
    (352) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR . S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 682
=======
    (205) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 673
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 635

<<<<<<< HEAD
    (27) inheritsOpt -> R_INHERITS S_PARIZQ . ID S_PARDER

    ID              shift and go to state 683
=======
    (207) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 674
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 636

<<<<<<< HEAD
    (82) colOptionsList -> colOptionsList colOptions .

    R_DEFAULT       reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
    R_NOT           reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
    R_NULL          reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
    R_PRIMARY       reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
    R_REFERENCES    reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
    R_CONSTRAINT    reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
    R_UNIQUE        reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
    R_CHECK         reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
    S_PARDER        reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
    S_COMA          reduce using rule 82 (colOptionsList -> colOptionsList colOptions .)
=======
    (209) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 675
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 637

<<<<<<< HEAD
    (89) defaultVal -> R_DEFAULT literal .

    R_DEFAULT       reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    R_NOT           reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    R_NULL          reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    R_PRIMARY       reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    R_REFERENCES    reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    R_CONSTRAINT    reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    R_UNIQUE        reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    R_CHECK         reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    S_PARDER        reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    S_COMA          reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
    S_PUNTOCOMA     reduce using rule 89 (defaultVal -> R_DEFAULT literal .)
=======
    (200) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 200 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 638

<<<<<<< HEAD
    (90) nullOpt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    R_NOT           reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    R_NULL          reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    R_PRIMARY       reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    R_REFERENCES    reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    R_CONSTRAINT    reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    R_UNIQUE        reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    R_CHECK         reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    S_PARDER        reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    S_COMA          reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 90 (nullOpt -> R_NOT R_NULL .)
=======
    (204) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 204 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 639

<<<<<<< HEAD
    (92) constraintOpt -> constrName R_UNIQUE .

    R_DEFAULT       reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
    R_NOT           reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
    R_NULL          reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
    R_PRIMARY       reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
    R_REFERENCES    reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
    R_CONSTRAINT    reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
    R_UNIQUE        reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
    R_CHECK         reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
    S_PARDER        reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
    S_COMA          reduce using rule 92 (constraintOpt -> constrName R_UNIQUE .)
=======
    (206) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 206 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 640

<<<<<<< HEAD
    (93) constraintOpt -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 684
=======
    (208) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 208 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 641

<<<<<<< HEAD
    (94) primaryOpt -> R_PRIMARY R_KEY .

    R_DEFAULT       reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NOT           reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NULL          reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
    R_PRIMARY       reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
    R_REFERENCES    reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CONSTRAINT    reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
    R_UNIQUE        reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CHECK         reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
    S_PARDER        reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
    S_COMA          reduce using rule 94 (primaryOpt -> R_PRIMARY R_KEY .)
=======
    (195) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19
>>>>>>> main

    selectStmt                     shift and go to state 676

state 642

<<<<<<< HEAD
    (95) referencesOpt -> R_REFERENCES ID .

    R_DEFAULT       reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
    R_NOT           reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
    R_NULL          reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
    R_PRIMARY       reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
    R_REFERENCES    reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
    R_CONSTRAINT    reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
    R_UNIQUE        reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
    R_CHECK         reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
    S_PARDER        reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
    S_COMA          reduce using rule 95 (referencesOpt -> R_REFERENCES ID .)
=======
    (197) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 677
>>>>>>> main


state 643

<<<<<<< HEAD
    (80) optParams -> S_PARIZQ literalList . S_PARDER
    (125) literalList -> literalList . S_COMA literal

    S_PARDER        shift and go to state 685
    S_COMA          shift and go to state 686
=======
    (131) dateSource -> R_NOW S_PARIZQ S_PARDER .

    S_PARDER        reduce using rule 131 (dateSource -> R_NOW S_PARIZQ S_PARDER .)
>>>>>>> main


state 644

<<<<<<< HEAD
    (126) literalList -> literal .

    S_PARDER        reduce using rule 126 (literalList -> literal .)
    S_COMA          reduce using rule 126 (literalList -> literal .)
=======
    (19) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList . indexasc_desc indexNullS S_PARDER whereCl
    (62) idList -> idList . S_COMA ID
    (27) indexasc_desc -> . R_DESC
    (28) indexasc_desc -> . R_ASC
    (29) indexasc_desc -> .

    S_COMA          shift and go to state 416
    R_DESC          shift and go to state 679
    R_ASC           shift and go to state 680
    R_NULLS         reduce using rule 29 (indexasc_desc -> .)
    S_PARDER        reduce using rule 29 (indexasc_desc -> .)
>>>>>>> main

    indexasc_desc                  shift and go to state 678

state 645

<<<<<<< HEAD
    (71) types -> T_CHARACTER T_VARYING optParams .

    R_DEFAULT       reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    R_NOT           reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    R_NULL          reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    R_PRIMARY       reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    R_REFERENCES    reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    R_CONSTRAINT    reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    R_UNIQUE        reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    R_CHECK         reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    S_PARDER        reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    S_COMA          reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
    S_PUNTOCOMA     reduce using rule 71 (types -> T_CHARACTER T_VARYING optParams .)
=======
    (37) inheritsOpt -> R_INHERITS S_PARIZQ . ID S_PARDER

    ID              shift and go to state 681
>>>>>>> main


state 646

<<<<<<< HEAD
    (47) createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .

    S_PARDER        reduce using rule 47 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)
    S_COMA          reduce using rule 47 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)
=======
    (92) colOptionsList -> colOptionsList colOptions .

    R_DEFAULT       reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
    R_NOT           reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
    R_NULL          reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
    R_PRIMARY       reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
    R_REFERENCES    reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
    R_CONSTRAINT    reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
    R_UNIQUE        reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
    R_CHECK         reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
    S_PARDER        reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
    S_COMA          reduce using rule 92 (colOptionsList -> colOptionsList colOptions .)
>>>>>>> main


state 647

<<<<<<< HEAD
    (35) createMode -> R_MODE S_IGUAL INTEGER .

    S_PUNTOCOMA     reduce using rule 35 (createMode -> R_MODE S_IGUAL INTEGER .)
=======
    (99) defaultVal -> R_DEFAULT literal .

    R_DEFAULT       reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    R_NOT           reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    R_NULL          reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    R_PRIMARY       reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    R_REFERENCES    reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    R_CONSTRAINT    reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    R_UNIQUE        reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    R_CHECK         reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    S_PARDER        reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    S_COMA          reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
    S_PUNTOCOMA     reduce using rule 99 (defaultVal -> R_DEFAULT literal .)
>>>>>>> main


state 648

<<<<<<< HEAD
    (24) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 24 (createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .)
=======
    (100) nullOpt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    R_NOT           reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    R_NULL          reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    R_PRIMARY       reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    R_REFERENCES    reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    R_CONSTRAINT    reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    R_UNIQUE        reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    R_CHECK         reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    S_PARDER        reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    S_COMA          reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 100 (nullOpt -> R_NOT R_NULL .)
>>>>>>> main


state 649

<<<<<<< HEAD
    (257) alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .

    S_COMA          reduce using rule 257 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)
    S_PUNTOCOMA     reduce using rule 257 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)
=======
    (102) constraintOpt -> constrName R_UNIQUE .

    R_DEFAULT       reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
    R_NOT           reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
    R_NULL          reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
    R_PRIMARY       reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
    R_REFERENCES    reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
    R_CONSTRAINT    reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
    R_UNIQUE        reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
    R_CHECK         reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
    S_PARDER        reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
    S_COMA          reduce using rule 102 (constraintOpt -> constrName R_UNIQUE .)
>>>>>>> main


state 650

<<<<<<< HEAD
    (46) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    S_COMA          reduce using rule 46 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PUNTOCOMA     reduce using rule 46 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 46 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
=======
    (103) constraintOpt -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 682
>>>>>>> main


state 651

<<<<<<< HEAD
    (225) booleanCheck -> idOrLiteral OL_MENORQUE . idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601

    idOrLiteral                    shift and go to state 687

state 652

    (226) booleanCheck -> idOrLiteral OL_MAYORQUE . idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601

    idOrLiteral                    shift and go to state 688
=======
    (104) primaryOpt -> R_PRIMARY R_KEY .

    R_DEFAULT       reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NOT           reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NULL          reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)
    R_PRIMARY       reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)
    R_REFERENCES    reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CONSTRAINT    reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)
    R_UNIQUE        reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CHECK         reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)
    S_PARDER        reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)
    S_COMA          reduce using rule 104 (primaryOpt -> R_PRIMARY R_KEY .)

>>>>>>> main

state 653

<<<<<<< HEAD
    (227) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE . idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601

    idOrLiteral                    shift and go to state 689

state 654

    (228) booleanCheck -> idOrLiteral OL_MENORIGUALQUE . idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601

    idOrLiteral                    shift and go to state 690
=======
    (105) referencesOpt -> R_REFERENCES ID .

    R_DEFAULT       reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)
    R_NOT           reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)
    R_NULL          reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)
    R_PRIMARY       reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)
    R_REFERENCES    reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)
    R_CONSTRAINT    reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)
    R_UNIQUE        reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)
    R_CHECK         reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)
    S_PARDER        reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)
    S_COMA          reduce using rule 105 (referencesOpt -> R_REFERENCES ID .)

>>>>>>> main

state 655

<<<<<<< HEAD
    (229) booleanCheck -> idOrLiteral S_IGUAL . idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601

    idOrLiteral                    shift and go to state 691

state 656

    (230) booleanCheck -> idOrLiteral OL_DISTINTODE . idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601

    idOrLiteral                    shift and go to state 692
=======
    (90) optParams -> S_PARIZQ literalList . S_PARDER
    (135) literalList -> literalList . S_COMA literal

    S_PARDER        shift and go to state 683
    S_COMA          shift and go to state 684

>>>>>>> main

state 657

<<<<<<< HEAD
    (231) booleanCheck -> idOrLiteral R_IS . R_DISTINCT R_FROM idOrLiteral
    (232) booleanCheck -> idOrLiteral R_IS . R_NOT R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 693
    R_NOT           shift and go to state 694
=======
    (136) literalList -> literal .

    S_PARDER        reduce using rule 136 (literalList -> literal .)
    S_COMA          reduce using rule 136 (literalList -> literal .)
>>>>>>> main


state 658

<<<<<<< HEAD
    (49) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList . S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (52) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 695
    S_COMA          shift and go to state 420
=======
    (81) types -> T_CHARACTER T_VARYING optParams .

    R_DEFAULT       reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    R_NOT           reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    R_NULL          reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    R_PRIMARY       reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    R_REFERENCES    reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    R_CONSTRAINT    reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    R_UNIQUE        reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    R_CHECK         reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    S_PARDER        reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    S_COMA          reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
    S_PUNTOCOMA     reduce using rule 81 (types -> T_CHARACTER T_VARYING optParams .)
>>>>>>> main


state 659

<<<<<<< HEAD
    (48) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 48 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 48 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 48 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
=======
    (57) createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .

    S_PARDER        reduce using rule 57 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)
    S_COMA          reduce using rule 57 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)
>>>>>>> main


state 660

<<<<<<< HEAD
    (330) limitCl -> R_LIMIT INTEGER offsetLimit .

    S_PUNTOCOMA     reduce using rule 330 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_UNION         reduce using rule 330 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_INTERSECT     reduce using rule 330 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_EXCEPT        reduce using rule 330 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    S_PARDER        reduce using rule 330 (limitCl -> R_LIMIT INTEGER offsetLimit .)
=======
    (45) createMode -> R_MODE S_IGUAL INTEGER .

    S_PUNTOCOMA     reduce using rule 45 (createMode -> R_MODE S_IGUAL INTEGER .)
>>>>>>> main


state 661

<<<<<<< HEAD
    (333) offsetLimit -> R_OFFSET . INTEGER

    INTEGER         shift and go to state 696
=======
    (34) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 34 (createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .)
>>>>>>> main


state 662

<<<<<<< HEAD
    (331) limitCl -> R_LIMIT R_ALL offsetLimit .

    S_PUNTOCOMA     reduce using rule 331 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_UNION         reduce using rule 331 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_INTERSECT     reduce using rule 331 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_EXCEPT        reduce using rule 331 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    S_PARDER        reduce using rule 331 (limitCl -> R_LIMIT R_ALL offsetLimit .)
=======
    (267) alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .

    S_COMA          reduce using rule 267 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)
    S_PUNTOCOMA     reduce using rule 267 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)
>>>>>>> main


state 663

<<<<<<< HEAD
    (320) orderList -> orderList S_COMA . orderByElem
    (322) orderByElem -> . columnName orderOpts orderNull
    (323) orderByElem -> . INTEGER orderOpts orderNull
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 612
    ID              shift and go to state 432

    orderByElem                    shift and go to state 697
    columnName                     shift and go to state 611
=======
    (56) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    S_COMA          reduce using rule 56 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PUNTOCOMA     reduce using rule 56 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 56 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)

>>>>>>> main

state 664

<<<<<<< HEAD
    (322) orderByElem -> columnName orderOpts . orderNull
    (327) orderNull -> . R_NULL R_FIRST
    (328) orderNull -> . R_NULL R_LAST
    (329) orderNull -> .

    R_NULL          shift and go to state 699
    S_COMA          reduce using rule 329 (orderNull -> .)
    R_LIMIT         reduce using rule 329 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 329 (orderNull -> .)
    R_UNION         reduce using rule 329 (orderNull -> .)
    R_INTERSECT     reduce using rule 329 (orderNull -> .)
    R_EXCEPT        reduce using rule 329 (orderNull -> .)
    S_PARDER        reduce using rule 329 (orderNull -> .)

    orderNull                      shift and go to state 698
=======
    (235) booleanCheck -> idOrLiteral OL_MENORQUE . idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    idOrLiteral                    shift and go to state 685
>>>>>>> main

state 665

<<<<<<< HEAD
    (324) orderOpts -> R_ASC .

    R_NULL          reduce using rule 324 (orderOpts -> R_ASC .)
    S_COMA          reduce using rule 324 (orderOpts -> R_ASC .)
    R_LIMIT         reduce using rule 324 (orderOpts -> R_ASC .)
    S_PUNTOCOMA     reduce using rule 324 (orderOpts -> R_ASC .)
    R_UNION         reduce using rule 324 (orderOpts -> R_ASC .)
    R_INTERSECT     reduce using rule 324 (orderOpts -> R_ASC .)
    R_EXCEPT        reduce using rule 324 (orderOpts -> R_ASC .)
    S_PARDER        reduce using rule 324 (orderOpts -> R_ASC .)

=======
    (236) booleanCheck -> idOrLiteral OL_MAYORQUE . idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    idOrLiteral                    shift and go to state 686
>>>>>>> main

state 666

<<<<<<< HEAD
    (325) orderOpts -> R_DESC .

    R_NULL          reduce using rule 325 (orderOpts -> R_DESC .)
    S_COMA          reduce using rule 325 (orderOpts -> R_DESC .)
    R_LIMIT         reduce using rule 325 (orderOpts -> R_DESC .)
    S_PUNTOCOMA     reduce using rule 325 (orderOpts -> R_DESC .)
    R_UNION         reduce using rule 325 (orderOpts -> R_DESC .)
    R_INTERSECT     reduce using rule 325 (orderOpts -> R_DESC .)
    R_EXCEPT        reduce using rule 325 (orderOpts -> R_DESC .)
    S_PARDER        reduce using rule 325 (orderOpts -> R_DESC .)

=======
    (237) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE . idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    idOrLiteral                    shift and go to state 687
>>>>>>> main

state 667

<<<<<<< HEAD
    (323) orderByElem -> INTEGER orderOpts . orderNull
    (327) orderNull -> . R_NULL R_FIRST
    (328) orderNull -> . R_NULL R_LAST
    (329) orderNull -> .

    R_NULL          shift and go to state 699
    S_COMA          reduce using rule 329 (orderNull -> .)
    R_LIMIT         reduce using rule 329 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 329 (orderNull -> .)
    R_UNION         reduce using rule 329 (orderNull -> .)
    R_INTERSECT     reduce using rule 329 (orderNull -> .)
    R_EXCEPT        reduce using rule 329 (orderNull -> .)
    S_PARDER        reduce using rule 329 (orderNull -> .)

    orderNull                      shift and go to state 700
=======
    (238) booleanCheck -> idOrLiteral OL_MENORIGUALQUE . idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    idOrLiteral                    shift and go to state 688
>>>>>>> main

state 668

<<<<<<< HEAD
    (312) groupList -> groupList S_COMA columnName .

    S_COMA          reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_HAVING        reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_ORDER         reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_LIMIT         reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    S_PUNTOCOMA     reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_UNION         reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_INTERSECT     reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    R_EXCEPT        reduce using rule 312 (groupList -> groupList S_COMA columnName .)
    S_PARDER        reduce using rule 312 (groupList -> groupList S_COMA columnName .)

=======
    (239) booleanCheck -> idOrLiteral S_IGUAL . idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    idOrLiteral                    shift and go to state 689
>>>>>>> main

state 669

    (240) booleanCheck -> idOrLiteral OL_DISTINTODE . idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    idOrLiteral                    shift and go to state 690

<<<<<<< HEAD
    S_COMA          reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_HAVING        reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_ORDER         reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_LIMIT         reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    S_PUNTOCOMA     reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_UNION         reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_INTERSECT     reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    R_EXCEPT        reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
    S_PARDER        reduce using rule 313 (groupList -> groupList S_COMA INTEGER .)
=======
state 655
>>>>>>> main

    (241) booleanCheck -> idOrLiteral R_IS . R_DISTINCT R_FROM idOrLiteral
    (242) booleanCheck -> idOrLiteral R_IS . R_NOT R_DISTINCT R_FROM idOrLiteral

<<<<<<< HEAD
state 670

    (316) havingCl -> R_HAVING expBool .
    (211) expBool -> expBool . R_AND expBool
    (212) expBool -> expBool . R_OR expBool
    (215) expBool -> expBool . optBoolPredicate
    (217) optBoolPredicate -> . R_IS R_TRUE
    (218) optBoolPredicate -> . R_IS R_FALSE
    (219) optBoolPredicate -> . R_IS R_UNKNOWN
    (220) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (221) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (222) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_ORDER         reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_LIMIT         reduce using rule 316 (havingCl -> R_HAVING expBool .)
    S_PUNTOCOMA     reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_UNION         reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_INTERSECT     reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_EXCEPT        reduce using rule 316 (havingCl -> R_HAVING expBool .)
    S_PARDER        reduce using rule 316 (havingCl -> R_HAVING expBool .)
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166
=======
    R_DISTINCT      shift and go to state 691
    R_NOT           shift and go to state 692

>>>>>>> main

state 671

<<<<<<< HEAD
    (296) joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .
    (211) expBool -> expBool . R_AND expBool
    (212) expBool -> expBool . R_OR expBool
    (215) expBool -> expBool . optBoolPredicate
    (217) optBoolPredicate -> . R_IS R_TRUE
    (218) optBoolPredicate -> . R_IS R_FALSE
    (219) optBoolPredicate -> . R_IS R_UNKNOWN
    (220) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (221) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (222) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_NATURAL       reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INNER         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LEFT          reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_RIGHT         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_FULL          reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_WHERE         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_GROUP         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_ORDER         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LIMIT         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PUNTOCOMA     reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_UNION         reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INTERSECT     reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_EXCEPT        reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PARDER        reduce using rule 296 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166
=======
    (59) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList . S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (62) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 693
    S_COMA          shift and go to state 416

>>>>>>> main

state 672

<<<<<<< HEAD
    (297) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ . nameList S_PARDER
    (299) nameList -> . nameList S_COMA columnName
    (300) nameList -> . columnName
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 432

    columnName                     shift and go to state 701
    nameList                       shift and go to state 702
=======
    (58) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 58 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 58 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 58 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)

>>>>>>> main

state 673

<<<<<<< HEAD
    (186) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 703
=======
    (343) offsetLimit -> R_OFFSET INTEGER .

    S_PUNTOCOMA     reduce using rule 343 (offsetLimit -> R_OFFSET INTEGER .)
    R_UNION         reduce using rule 343 (offsetLimit -> R_OFFSET INTEGER .)
    R_INTERSECT     reduce using rule 343 (offsetLimit -> R_OFFSET INTEGER .)
    R_EXCEPT        reduce using rule 343 (offsetLimit -> R_OFFSET INTEGER .)
    S_PARDER        reduce using rule 343 (offsetLimit -> R_OFFSET INTEGER .)

>>>>>>> main

state 674

<<<<<<< HEAD
    (188) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 704
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (330) orderList -> orderList S_COMA . orderByElem
    (332) orderByElem -> . columnName orderOpts orderNull
    (333) orderByElem -> . INTEGER orderOpts orderNull
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 610
    ID              shift and go to state 430
>>>>>>> main

    orderByElem                    shift and go to state 694
    columnName                     shift and go to state 609

state 675

<<<<<<< HEAD
    (189) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 705
=======
    (332) orderByElem -> columnName orderOpts . orderNull
    (337) orderNull -> . R_NULL R_FIRST
    (338) orderNull -> . R_NULL R_LAST
    (339) orderNull -> .

    R_NULL          shift and go to state 696
    S_COMA          reduce using rule 339 (orderNull -> .)
    R_LIMIT         reduce using rule 339 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 339 (orderNull -> .)
    R_UNION         reduce using rule 339 (orderNull -> .)
    R_INTERSECT     reduce using rule 339 (orderNull -> .)
    R_EXCEPT        reduce using rule 339 (orderNull -> .)
    S_PARDER        reduce using rule 339 (orderNull -> .)

    orderNull                      shift and go to state 695
>>>>>>> main

state 676

<<<<<<< HEAD
    (191) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 191 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (334) orderOpts -> R_ASC .

    R_NULL          reduce using rule 334 (orderOpts -> R_ASC .)
    S_COMA          reduce using rule 334 (orderOpts -> R_ASC .)
    R_LIMIT         reduce using rule 334 (orderOpts -> R_ASC .)
    S_PUNTOCOMA     reduce using rule 334 (orderOpts -> R_ASC .)
    R_UNION         reduce using rule 334 (orderOpts -> R_ASC .)
    R_INTERSECT     reduce using rule 334 (orderOpts -> R_ASC .)
    R_EXCEPT        reduce using rule 334 (orderOpts -> R_ASC .)
    S_PARDER        reduce using rule 334 (orderOpts -> R_ASC .)
>>>>>>> main


state 677

<<<<<<< HEAD
    (195) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 195 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (335) orderOpts -> R_DESC .

    R_NULL          reduce using rule 335 (orderOpts -> R_DESC .)
    S_COMA          reduce using rule 335 (orderOpts -> R_DESC .)
    R_LIMIT         reduce using rule 335 (orderOpts -> R_DESC .)
    S_PUNTOCOMA     reduce using rule 335 (orderOpts -> R_DESC .)
    R_UNION         reduce using rule 335 (orderOpts -> R_DESC .)
    R_INTERSECT     reduce using rule 335 (orderOpts -> R_DESC .)
    R_EXCEPT        reduce using rule 335 (orderOpts -> R_DESC .)
    S_PARDER        reduce using rule 335 (orderOpts -> R_DESC .)
>>>>>>> main


state 678

<<<<<<< HEAD
    (197) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 197 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (333) orderByElem -> INTEGER orderOpts . orderNull
    (337) orderNull -> . R_NULL R_FIRST
    (338) orderNull -> . R_NULL R_LAST
    (339) orderNull -> .
>>>>>>> main

    R_NULL          shift and go to state 696
    S_COMA          reduce using rule 339 (orderNull -> .)
    R_LIMIT         reduce using rule 339 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 339 (orderNull -> .)
    R_UNION         reduce using rule 339 (orderNull -> .)
    R_INTERSECT     reduce using rule 339 (orderNull -> .)
    R_EXCEPT        reduce using rule 339 (orderNull -> .)
    S_PARDER        reduce using rule 339 (orderNull -> .)

    orderNull                      shift and go to state 697

state 679

<<<<<<< HEAD
    (199) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (323) groupList -> groupList S_COMA columnName .

    S_COMA          reduce using rule 323 (groupList -> groupList S_COMA columnName .)
    R_HAVING        reduce using rule 323 (groupList -> groupList S_COMA columnName .)
    R_LIMIT         reduce using rule 323 (groupList -> groupList S_COMA columnName .)
    R_ORDER         reduce using rule 323 (groupList -> groupList S_COMA columnName .)
    S_PUNTOCOMA     reduce using rule 323 (groupList -> groupList S_COMA columnName .)
    R_UNION         reduce using rule 323 (groupList -> groupList S_COMA columnName .)
    R_INTERSECT     reduce using rule 323 (groupList -> groupList S_COMA columnName .)
    R_EXCEPT        reduce using rule 323 (groupList -> groupList S_COMA columnName .)
    S_PARDER        reduce using rule 323 (groupList -> groupList S_COMA columnName .)
>>>>>>> main


state 680

<<<<<<< HEAD
    (185) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 706
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (324) groupList -> groupList S_COMA INTEGER .

    S_COMA          reduce using rule 324 (groupList -> groupList S_COMA INTEGER .)
    R_HAVING        reduce using rule 324 (groupList -> groupList S_COMA INTEGER .)
    R_LIMIT         reduce using rule 324 (groupList -> groupList S_COMA INTEGER .)
    R_ORDER         reduce using rule 324 (groupList -> groupList S_COMA INTEGER .)
    S_PUNTOCOMA     reduce using rule 324 (groupList -> groupList S_COMA INTEGER .)
    R_UNION         reduce using rule 324 (groupList -> groupList S_COMA INTEGER .)
    R_INTERSECT     reduce using rule 324 (groupList -> groupList S_COMA INTEGER .)
    R_EXCEPT        reduce using rule 324 (groupList -> groupList S_COMA INTEGER .)
    S_PARDER        reduce using rule 324 (groupList -> groupList S_COMA INTEGER .)
>>>>>>> main


state 681

<<<<<<< HEAD
    (187) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (268) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (269) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (270) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (271) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (272) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (273) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (274) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (275) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (277) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 25
    S_PARIZQ        shift and go to state 20

    selectStmt                     shift and go to state 707
=======
    (327) havingCl -> R_HAVING expBool .
    (221) expBool -> expBool . R_AND expBool
    (222) expBool -> expBool . R_OR expBool
    (225) expBool -> expBool . optBoolPredicate
    (227) optBoolPredicate -> . R_IS R_TRUE
    (228) optBoolPredicate -> . R_IS R_FALSE
    (229) optBoolPredicate -> . R_IS R_UNKNOWN
    (230) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (231) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (232) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_LIMIT         reduce using rule 327 (havingCl -> R_HAVING expBool .)
    R_ORDER         reduce using rule 327 (havingCl -> R_HAVING expBool .)
    S_PUNTOCOMA     reduce using rule 327 (havingCl -> R_HAVING expBool .)
    R_UNION         reduce using rule 327 (havingCl -> R_HAVING expBool .)
    R_INTERSECT     reduce using rule 327 (havingCl -> R_HAVING expBool .)
    R_EXCEPT        reduce using rule 327 (havingCl -> R_HAVING expBool .)
    S_PARDER        reduce using rule 327 (havingCl -> R_HAVING expBool .)
    R_AND           shift and go to state 163
    R_OR            shift and go to state 164
    R_IS            shift and go to state 166

    optBoolPredicate               shift and go to state 165
>>>>>>> main

state 682

<<<<<<< HEAD
    (352) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR . bloqueFunction
    (353) bloqueFunction -> . declareStmt R_BEGIN beginStmt R_END labelEnd
    (360) declareStmt -> .

    R_BEGIN         reduce using rule 360 (declareStmt -> .)

    bloqueFunction                 shift and go to state 708
    declareStmt                    shift and go to state 709
=======
    (307) joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .
    (221) expBool -> expBool . R_AND expBool
    (222) expBool -> expBool . R_OR expBool
    (225) expBool -> expBool . optBoolPredicate
    (227) optBoolPredicate -> . R_IS R_TRUE
    (228) optBoolPredicate -> . R_IS R_FALSE
    (229) optBoolPredicate -> . R_IS R_UNKNOWN
    (230) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (231) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (232) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_NATURAL       reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INNER         reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LEFT          reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_RIGHT         reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_FULL          reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_WHERE         reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_GROUP         reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_ORDER         reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LIMIT         reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PUNTOCOMA     reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_UNION         reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INTERSECT     reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_EXCEPT        reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PARDER        reduce using rule 307 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_AND           shift and go to state 163
    R_OR            shift and go to state 164
    R_IS            shift and go to state 166

    optBoolPredicate               shift and go to state 165
>>>>>>> main

state 683

<<<<<<< HEAD
    (27) inheritsOpt -> R_INHERITS S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 710
=======
    (308) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ . nameList S_PARDER
    (310) nameList -> . nameList S_COMA columnName
    (311) nameList -> . columnName
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 430

    columnName                     shift and go to state 698
    nameList                       shift and go to state 699
>>>>>>> main


<<<<<<< HEAD
state 684

    (93) constraintOpt -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (225) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (226) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (227) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (228) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (229) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (230) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (231) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (232) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601

    booleanCheck                   shift and go to state 711
    idOrLiteral                    shift and go to state 594

state 685
=======
    (196) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 700
>>>>>>> main

    (80) optParams -> S_PARIZQ literalList S_PARDER .

<<<<<<< HEAD
    R_DEFAULT       reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NOT           reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NULL          reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_PRIMARY       reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_REFERENCES    reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CONSTRAINT    reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_UNIQUE        reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CHECK         reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PARDER        reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_COMA          reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 80 (optParams -> S_PARIZQ literalList S_PARDER .)
=======
    (198) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 701
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38

>>>>>>> main


<<<<<<< HEAD
state 686

    (125) literalList -> literalList S_COMA . literal
    (127) literal -> . INTEGER
    (128) literal -> . STRING
    (129) literal -> . DECIMAL
    (130) literal -> . CHARACTER
    (131) literal -> . R_TRUE
    (132) literal -> . R_FALSE
    (133) literal -> . R_NULL

    INTEGER         shift and go to state 84
    STRING          shift and go to state 176
    DECIMAL         shift and go to state 86
    CHARACTER       shift and go to state 87
    R_TRUE          shift and go to state 88
    R_FALSE         shift and go to state 89
    R_NULL          shift and go to state 90

    literal                        shift and go to state 712

state 687
=======
    (199) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 702
>>>>>>> main

    (225) booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .

<<<<<<< HEAD
    S_PARDER        reduce using rule 225 (booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .)

=======
    (201) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 201 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main

state 688

    (226) booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .

<<<<<<< HEAD
    S_PARDER        reduce using rule 226 (booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .)

=======
    (205) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 205 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main

state 689

    (227) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .

<<<<<<< HEAD
    S_PARDER        reduce using rule 227 (booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .)

=======
    (207) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 207 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main

state 690

    (228) booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .

<<<<<<< HEAD
    S_PARDER        reduce using rule 228 (booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .)

=======
    (209) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 209 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main

state 691

    (229) booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .

<<<<<<< HEAD
    S_PARDER        reduce using rule 229 (booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .)

=======
    (195) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 703
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main

state 692

    (230) booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .

<<<<<<< HEAD
    S_PARDER        reduce using rule 230 (booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .)


state 693
=======
    (197) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (278) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl
    (279) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl
    (280) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (281) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (282) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (283) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (284) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (285) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (286) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (288) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 704
>>>>>>> main

    (231) booleanCheck -> idOrLiteral R_IS R_DISTINCT . R_FROM idOrLiteral

<<<<<<< HEAD
    R_FROM          shift and go to state 713


state 694
=======
    (19) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc . indexNullS S_PARDER whereCl
    (24) indexNullS -> . R_NULLS R_FIRST
    (25) indexNullS -> . R_NULLS R_LAST
    (26) indexNullS -> .

    R_NULLS         shift and go to state 706
    S_PARDER        reduce using rule 26 (indexNullS -> .)

    indexNullS                     shift and go to state 705
>>>>>>> main

    (232) booleanCheck -> idOrLiteral R_IS R_NOT . R_DISTINCT R_FROM idOrLiteral

<<<<<<< HEAD
    R_DISTINCT      shift and go to state 714

=======
    (27) indexasc_desc -> R_DESC .

    R_NULLS         reduce using rule 27 (indexasc_desc -> R_DESC .)
    S_PARDER        reduce using rule 27 (indexasc_desc -> R_DESC .)
>>>>>>> main

state 695

    (49) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER . R_REFERENCES ID S_PARIZQ idList S_PARDER

<<<<<<< HEAD
    R_REFERENCES    shift and go to state 715

=======
    (28) indexasc_desc -> R_ASC .

    R_NULLS         reduce using rule 28 (indexasc_desc -> R_ASC .)
    S_PARDER        reduce using rule 28 (indexasc_desc -> R_ASC .)
>>>>>>> main

state 696

    (333) offsetLimit -> R_OFFSET INTEGER .

<<<<<<< HEAD
    S_PUNTOCOMA     reduce using rule 333 (offsetLimit -> R_OFFSET INTEGER .)
    R_UNION         reduce using rule 333 (offsetLimit -> R_OFFSET INTEGER .)
    R_INTERSECT     reduce using rule 333 (offsetLimit -> R_OFFSET INTEGER .)
    R_EXCEPT        reduce using rule 333 (offsetLimit -> R_OFFSET INTEGER .)
    S_PARDER        reduce using rule 333 (offsetLimit -> R_OFFSET INTEGER .)

=======
    (37) inheritsOpt -> R_INHERITS S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 707
>>>>>>> main

state 697

    (320) orderList -> orderList S_COMA orderByElem .

<<<<<<< HEAD
    S_COMA          reduce using rule 320 (orderList -> orderList S_COMA orderByElem .)
    R_LIMIT         reduce using rule 320 (orderList -> orderList S_COMA orderByElem .)
    S_PUNTOCOMA     reduce using rule 320 (orderList -> orderList S_COMA orderByElem .)
    R_UNION         reduce using rule 320 (orderList -> orderList S_COMA orderByElem .)
    R_INTERSECT     reduce using rule 320 (orderList -> orderList S_COMA orderByElem .)
    R_EXCEPT        reduce using rule 320 (orderList -> orderList S_COMA orderByElem .)
    S_PARDER        reduce using rule 320 (orderList -> orderList S_COMA orderByElem .)


state 698
=======
    (103) constraintOpt -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (235) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (236) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (237) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (238) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (239) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (240) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (241) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (242) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    booleanCheck                   shift and go to state 708
    idOrLiteral                    shift and go to state 592
>>>>>>> main

    (322) orderByElem -> columnName orderOpts orderNull .

<<<<<<< HEAD
    S_COMA          reduce using rule 322 (orderByElem -> columnName orderOpts orderNull .)
    R_LIMIT         reduce using rule 322 (orderByElem -> columnName orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 322 (orderByElem -> columnName orderOpts orderNull .)
    R_UNION         reduce using rule 322 (orderByElem -> columnName orderOpts orderNull .)
    R_INTERSECT     reduce using rule 322 (orderByElem -> columnName orderOpts orderNull .)
    R_EXCEPT        reduce using rule 322 (orderByElem -> columnName orderOpts orderNull .)
    S_PARDER        reduce using rule 322 (orderByElem -> columnName orderOpts orderNull .)

=======
    (90) optParams -> S_PARIZQ literalList S_PARDER .

    R_DEFAULT       reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NOT           reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NULL          reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_PRIMARY       reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_REFERENCES    reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CONSTRAINT    reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_UNIQUE        reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CHECK         reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PARDER        reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_COMA          reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 90 (optParams -> S_PARIZQ literalList S_PARDER .)
>>>>>>> main

state 699

    (327) orderNull -> R_NULL . R_FIRST
    (328) orderNull -> R_NULL . R_LAST

    R_FIRST         shift and go to state 716
    R_LAST          shift and go to state 717


state 700

    (323) orderByElem -> INTEGER orderOpts orderNull .

    S_COMA          reduce using rule 323 (orderByElem -> INTEGER orderOpts orderNull .)
    R_LIMIT         reduce using rule 323 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 323 (orderByElem -> INTEGER orderOpts orderNull .)
    R_UNION         reduce using rule 323 (orderByElem -> INTEGER orderOpts orderNull .)
    R_INTERSECT     reduce using rule 323 (orderByElem -> INTEGER orderOpts orderNull .)
    R_EXCEPT        reduce using rule 323 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PARDER        reduce using rule 323 (orderByElem -> INTEGER orderOpts orderNull .)


state 701

    (135) literalList -> literalList S_COMA . literal
    (137) literal -> . INTEGER
    (138) literal -> . STRING
    (139) literal -> . DECIMAL
    (140) literal -> . CHARACTER
    (141) literal -> . R_TRUE
    (142) literal -> . R_FALSE
    (143) literal -> . R_NULL

    INTEGER         shift and go to state 83
    STRING          shift and go to state 175
    DECIMAL         shift and go to state 85
    CHARACTER       shift and go to state 86
    R_TRUE          shift and go to state 87
    R_FALSE         shift and go to state 88
    R_NULL          shift and go to state 89

    literal                        shift and go to state 709

state 702

    (235) booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .

<<<<<<< HEAD
    S_PARDER        shift and go to state 718
    S_COMA          shift and go to state 719
=======
    S_PARDER        reduce using rule 235 (booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .)
>>>>>>> main


state 703

<<<<<<< HEAD
    (186) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 720
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (236) booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .

    S_PARDER        reduce using rule 236 (booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .)
>>>>>>> main


state 704

<<<<<<< HEAD
    (188) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 188 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (237) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 237 (booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .)
>>>>>>> main


state 705

<<<<<<< HEAD
    (189) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 721
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (238) booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 238 (booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .)
>>>>>>> main


state 706

<<<<<<< HEAD
    (185) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 185 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
=======
    (239) booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .

    S_PARDER        reduce using rule 239 (booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .)
>>>>>>> main


state 707

<<<<<<< HEAD
    (187) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (272) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (273) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (274) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 722
    R_UNION         shift and go to state 37
    R_INTERSECT     shift and go to state 38
    R_EXCEPT        shift and go to state 39
=======
    (240) booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .

    S_PARDER        reduce using rule 240 (booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .)
>>>>>>> main


state 708

<<<<<<< HEAD
    (352) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .

    S_PUNTOCOMA     reduce using rule 352 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
=======
    (241) booleanCheck -> idOrLiteral R_IS R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 710
>>>>>>> main


state 709

<<<<<<< HEAD
    (353) bloqueFunction -> declareStmt . R_BEGIN beginStmt R_END labelEnd

    R_BEGIN         shift and go to state 723
=======
    (242) booleanCheck -> idOrLiteral R_IS R_NOT . R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 711
>>>>>>> main


state 710

<<<<<<< HEAD
    (27) inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .

    S_PUNTOCOMA     reduce using rule 27 (inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .)
=======
    (59) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER . R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_REFERENCES    shift and go to state 712
>>>>>>> main


state 711

<<<<<<< HEAD
    (93) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 724
=======
    (330) orderList -> orderList S_COMA orderByElem .

    S_COMA          reduce using rule 330 (orderList -> orderList S_COMA orderByElem .)
    R_LIMIT         reduce using rule 330 (orderList -> orderList S_COMA orderByElem .)
    S_PUNTOCOMA     reduce using rule 330 (orderList -> orderList S_COMA orderByElem .)
    R_UNION         reduce using rule 330 (orderList -> orderList S_COMA orderByElem .)
    R_INTERSECT     reduce using rule 330 (orderList -> orderList S_COMA orderByElem .)
    R_EXCEPT        reduce using rule 330 (orderList -> orderList S_COMA orderByElem .)
    S_PARDER        reduce using rule 330 (orderList -> orderList S_COMA orderByElem .)
>>>>>>> main


state 712

<<<<<<< HEAD
    (125) literalList -> literalList S_COMA literal .

    S_PARDER        reduce using rule 125 (literalList -> literalList S_COMA literal .)
    S_COMA          reduce using rule 125 (literalList -> literalList S_COMA literal .)
=======
    (332) orderByElem -> columnName orderOpts orderNull .

    S_COMA          reduce using rule 332 (orderByElem -> columnName orderOpts orderNull .)
    R_LIMIT         reduce using rule 332 (orderByElem -> columnName orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 332 (orderByElem -> columnName orderOpts orderNull .)
    R_UNION         reduce using rule 332 (orderByElem -> columnName orderOpts orderNull .)
    R_INTERSECT     reduce using rule 332 (orderByElem -> columnName orderOpts orderNull .)
    R_EXCEPT        reduce using rule 332 (orderByElem -> columnName orderOpts orderNull .)
    S_PARDER        reduce using rule 332 (orderByElem -> columnName orderOpts orderNull .)
>>>>>>> main


state 713

<<<<<<< HEAD
    (231) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM . idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601
=======
    (337) orderNull -> R_NULL . R_FIRST
    (338) orderNull -> R_NULL . R_LAST

    R_FIRST         shift and go to state 713
    R_LAST          shift and go to state 714
>>>>>>> main

    idOrLiteral                    shift and go to state 725

state 714

<<<<<<< HEAD
    (232) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 726
=======
    (333) orderByElem -> INTEGER orderOpts orderNull .

    S_COMA          reduce using rule 333 (orderByElem -> INTEGER orderOpts orderNull .)
    R_LIMIT         reduce using rule 333 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 333 (orderByElem -> INTEGER orderOpts orderNull .)
    R_UNION         reduce using rule 333 (orderByElem -> INTEGER orderOpts orderNull .)
    R_INTERSECT     reduce using rule 333 (orderByElem -> INTEGER orderOpts orderNull .)
    R_EXCEPT        reduce using rule 333 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PARDER        reduce using rule 333 (orderByElem -> INTEGER orderOpts orderNull .)
>>>>>>> main


state 715

<<<<<<< HEAD
    (49) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES . ID S_PARIZQ idList S_PARDER

    ID              shift and go to state 727
=======
    (311) nameList -> columnName .

    S_PARDER        reduce using rule 311 (nameList -> columnName .)
    S_COMA          reduce using rule 311 (nameList -> columnName .)
>>>>>>> main


state 716

    (327) orderNull -> R_NULL R_FIRST .

    S_COMA          reduce using rule 327 (orderNull -> R_NULL R_FIRST .)
    R_LIMIT         reduce using rule 327 (orderNull -> R_NULL R_FIRST .)
    S_PUNTOCOMA     reduce using rule 327 (orderNull -> R_NULL R_FIRST .)
    R_UNION         reduce using rule 327 (orderNull -> R_NULL R_FIRST .)
    R_INTERSECT     reduce using rule 327 (orderNull -> R_NULL R_FIRST .)
    R_EXCEPT        reduce using rule 327 (orderNull -> R_NULL R_FIRST .)
    S_PARDER        reduce using rule 327 (orderNull -> R_NULL R_FIRST .)


state 717

    (328) orderNull -> R_NULL R_LAST .

    S_COMA          reduce using rule 328 (orderNull -> R_NULL R_LAST .)
    R_LIMIT         reduce using rule 328 (orderNull -> R_NULL R_LAST .)
    S_PUNTOCOMA     reduce using rule 328 (orderNull -> R_NULL R_LAST .)
    R_UNION         reduce using rule 328 (orderNull -> R_NULL R_LAST .)
    R_INTERSECT     reduce using rule 328 (orderNull -> R_NULL R_LAST .)
    R_EXCEPT        reduce using rule 328 (orderNull -> R_NULL R_LAST .)
    S_PARDER        reduce using rule 328 (orderNull -> R_NULL R_LAST .)


state 718

    (308) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList . S_PARDER
    (310) nameList -> nameList . S_COMA columnName

    S_PARDER        shift and go to state 715
    S_COMA          shift and go to state 716


state 719

<<<<<<< HEAD
    (299) nameList -> nameList S_COMA . columnName
    (223) columnName -> . ID
    (224) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 432

    columnName                     shift and go to state 728

state 720

    (186) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 186 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 721

    (189) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 189 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 722

    (187) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 187 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 723

    (353) bloqueFunction -> declareStmt R_BEGIN . beginStmt R_END labelEnd
    (367) beginStmt -> . R_NULL

    R_NULL          shift and go to state 730

    beginStmt                      shift and go to state 729

state 724

    (93) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    R_DEFAULT       reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NOT           reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NULL          reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_PRIMARY       reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_REFERENCES    reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CONSTRAINT    reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_UNIQUE        reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CHECK         reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_COMA          reduce using rule 93 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 725

    (231) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 231 (booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .)


state 726

    (232) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM . idOrLiteral
    (233) idOrLiteral -> . ID
    (234) idOrLiteral -> . INTEGER
    (235) idOrLiteral -> . STRING
    (236) idOrLiteral -> . DECIMAL
    (237) idOrLiteral -> . CHARACTER
    (238) idOrLiteral -> . R_TRUE
    (239) idOrLiteral -> . R_FALSE

    ID              shift and go to state 595
    INTEGER         shift and go to state 596
    STRING          shift and go to state 597
    DECIMAL         shift and go to state 598
    CHARACTER       shift and go to state 599
    R_TRUE          shift and go to state 600
    R_FALSE         shift and go to state 601

    idOrLiteral                    shift and go to state 731

state 727
=======
    (196) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 717
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 701

    (198) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 198 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main

    (49) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 732

<<<<<<< HEAD
=======
    (199) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 718
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main

state 728

    (299) nameList -> nameList S_COMA columnName .

<<<<<<< HEAD
    S_PARDER        reduce using rule 299 (nameList -> nameList S_COMA columnName .)
    S_COMA          reduce using rule 299 (nameList -> nameList S_COMA columnName .)
=======
    (195) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 195 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
>>>>>>> main


state 729

<<<<<<< HEAD
    (353) bloqueFunction -> declareStmt R_BEGIN beginStmt . R_END labelEnd

    R_END           shift and go to state 733
=======
    (197) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (283) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (284) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (285) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 719
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38
>>>>>>> main


state 730

<<<<<<< HEAD
    (367) beginStmt -> R_NULL .

    R_END           reduce using rule 367 (beginStmt -> R_NULL .)
=======
    (19) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS . S_PARDER whereCl

    S_PARDER        shift and go to state 720
>>>>>>> main


state 731

<<<<<<< HEAD
    (232) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 232 (booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .)
=======
    (24) indexNullS -> R_NULLS . R_FIRST
    (25) indexNullS -> R_NULLS . R_LAST

    R_FIRST         shift and go to state 721
    R_LAST          shift and go to state 722
>>>>>>> main


state 732

<<<<<<< HEAD
    (49) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ . idList S_PARDER
    (52) idList -> . idList S_COMA ID
    (53) idList -> . ID

    ID              shift and go to state 333
=======
    (37) inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .

    S_PUNTOCOMA     reduce using rule 37 (inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .)
>>>>>>> main

    idList                         shift and go to state 734

state 733

<<<<<<< HEAD
    (353) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END . labelEnd
    (368) labelEnd -> . R_NULL

    R_NULL          shift and go to state 736
=======
    (103) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 723
>>>>>>> main

    labelEnd                       shift and go to state 735

state 734

<<<<<<< HEAD
    (49) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList . S_PARDER
    (52) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 737
    S_COMA          shift and go to state 420
=======
    (135) literalList -> literalList S_COMA literal .

    S_PARDER        reduce using rule 135 (literalList -> literalList S_COMA literal .)
    S_COMA          reduce using rule 135 (literalList -> literalList S_COMA literal .)
>>>>>>> main


state 735

<<<<<<< HEAD
    (353) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END labelEnd .

    S_PUNTOCOMA     reduce using rule 353 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END labelEnd .)

=======
    (241) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM . idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    idOrLiteral                    shift and go to state 724
>>>>>>> main

state 736

<<<<<<< HEAD
    (368) labelEnd -> R_NULL .

    S_PUNTOCOMA     reduce using rule 368 (labelEnd -> R_NULL .)
=======
    (242) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 725
>>>>>>> main


state 737

<<<<<<< HEAD
    (49) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 49 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 49 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 49 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
=======
    (59) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES . ID S_PARIZQ idList S_PARDER

    ID              shift and go to state 726


state 713

    (337) orderNull -> R_NULL R_FIRST .

    S_COMA          reduce using rule 337 (orderNull -> R_NULL R_FIRST .)
    R_LIMIT         reduce using rule 337 (orderNull -> R_NULL R_FIRST .)
    S_PUNTOCOMA     reduce using rule 337 (orderNull -> R_NULL R_FIRST .)
    R_UNION         reduce using rule 337 (orderNull -> R_NULL R_FIRST .)
    R_INTERSECT     reduce using rule 337 (orderNull -> R_NULL R_FIRST .)
    R_EXCEPT        reduce using rule 337 (orderNull -> R_NULL R_FIRST .)
    S_PARDER        reduce using rule 337 (orderNull -> R_NULL R_FIRST .)


state 714

    (338) orderNull -> R_NULL R_LAST .

    S_COMA          reduce using rule 338 (orderNull -> R_NULL R_LAST .)
    R_LIMIT         reduce using rule 338 (orderNull -> R_NULL R_LAST .)
    S_PUNTOCOMA     reduce using rule 338 (orderNull -> R_NULL R_LAST .)
    R_UNION         reduce using rule 338 (orderNull -> R_NULL R_LAST .)
    R_INTERSECT     reduce using rule 338 (orderNull -> R_NULL R_LAST .)
    R_EXCEPT        reduce using rule 338 (orderNull -> R_NULL R_LAST .)
    S_PARDER        reduce using rule 338 (orderNull -> R_NULL R_LAST .)


state 715

    (308) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .

    R_NATURAL       reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INNER         reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LEFT          reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_RIGHT         reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_FULL          reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_WHERE         reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_GROUP         reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_ORDER         reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LIMIT         reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_UNION         reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INTERSECT     reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_EXCEPT        reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PARDER        reduce using rule 308 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)


state 716

    (310) nameList -> nameList S_COMA . columnName
    (233) columnName -> . ID
    (234) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 430

    columnName                     shift and go to state 727

state 717

    (196) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 196 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 718

    (199) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 199 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 719

    (197) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 197 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 720

    (19) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER . whereCl
    (319) whereCl -> . R_WHERE expBool
    (320) whereCl -> .

    R_WHERE         shift and go to state 133
    S_PUNTOCOMA     reduce using rule 320 (whereCl -> .)

    whereCl                        shift and go to state 728

state 721

    (24) indexNullS -> R_NULLS R_FIRST .

    S_PARDER        reduce using rule 24 (indexNullS -> R_NULLS R_FIRST .)


state 722

    (25) indexNullS -> R_NULLS R_LAST .

    S_PARDER        reduce using rule 25 (indexNullS -> R_NULLS R_LAST .)


state 723

    (103) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    R_DEFAULT       reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NOT           reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NULL          reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_PRIMARY       reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_REFERENCES    reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CONSTRAINT    reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_UNIQUE        reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CHECK         reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_COMA          reduce using rule 103 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 724

    (241) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 241 (booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .)


state 725

    (242) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM . idOrLiteral
    (243) idOrLiteral -> . ID
    (244) idOrLiteral -> . INTEGER
    (245) idOrLiteral -> . STRING
    (246) idOrLiteral -> . DECIMAL
    (247) idOrLiteral -> . CHARACTER
    (248) idOrLiteral -> . R_TRUE
    (249) idOrLiteral -> . R_FALSE

    ID              shift and go to state 593
    INTEGER         shift and go to state 594
    STRING          shift and go to state 595
    DECIMAL         shift and go to state 596
    CHARACTER       shift and go to state 597
    R_TRUE          shift and go to state 598
    R_FALSE         shift and go to state 599

    idOrLiteral                    shift and go to state 729

state 726

    (59) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 730


state 727

    (310) nameList -> nameList S_COMA columnName .

    S_PARDER        reduce using rule 310 (nameList -> nameList S_COMA columnName .)
    S_COMA          reduce using rule 310 (nameList -> nameList S_COMA columnName .)


state 728

    (19) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl .

    S_PUNTOCOMA     reduce using rule 19 (createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl .)


state 729

    (242) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 242 (booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .)


state 730

    (59) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ . idList S_PARDER
    (62) idList -> . idList S_COMA ID
    (63) idList -> . ID

    ID              shift and go to state 330

    idList                         shift and go to state 731

state 731

    (59) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList . S_PARDER
    (62) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 732
    S_COMA          shift and go to state 416


state 732

    (59) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 59 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 59 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 59 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
>>>>>>> main

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_LIMIT in state 430 resolved as shift
WARNING: reduce/reduce conflict in state 430 resolved using rule (orderByCl -> <empty>)
WARNING: rejected rule (limitCl -> <empty>) in state 430
