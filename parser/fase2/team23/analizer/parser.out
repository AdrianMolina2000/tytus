Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OC_AND
    OC_NOT
    OC_OR
    OC_SHIFTL
    OC_SHIFTR
    OC_XOR

Grammar

Rule 0     S' -> init
Rule 1     init -> stmtList
Rule 2     stmtList -> stmtList stmt
Rule 3     stmtList -> stmt
Rule 4     stmt -> createStmt S_PUNTOCOMA
Rule 5     stmt -> showStmt S_PUNTOCOMA
Rule 6     stmt -> alterStmt S_PUNTOCOMA
Rule 7     stmt -> dropStmt S_PUNTOCOMA
Rule 8     stmt -> insertStmt S_PUNTOCOMA
Rule 9     stmt -> updateStmt S_PUNTOCOMA
Rule 10    stmt -> deleteStmt S_PUNTOCOMA
Rule 11    stmt -> truncateStmt S_PUNTOCOMA
Rule 12    stmt -> useStmt S_PUNTOCOMA
Rule 13    stmt -> selectStmt S_PUNTOCOMA
Rule 14    stmt -> functionStmt
Rule 15    stmt -> ifStmt R_END R_IF S_PUNTOCOMA
Rule 16    ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
Rule 17    else_ -> R_ELSE List_body
Rule 18    else_ -> Lista_elsif_
Rule 19    else_ -> <empty>
Rule 20    Lista_elsif_ -> Lista_elsif_ elsif_
Rule 21    Lista_elsif_ -> elsif_
Rule 22    elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body
Rule 23    List_body -> List_body body
Rule 24    List_body -> body
Rule 25    body -> createStmt S_PUNTOCOMA
Rule 26    body -> showStmt S_PUNTOCOMA
Rule 27    body -> alterStmt S_PUNTOCOMA
Rule 28    body -> dropStmt S_PUNTOCOMA
Rule 29    body -> insertStmt S_PUNTOCOMA
Rule 30    body -> updateStmt S_PUNTOCOMA
Rule 31    body -> deleteStmt S_PUNTOCOMA
Rule 32    body -> truncateStmt S_PUNTOCOMA
Rule 33    body -> useStmt S_PUNTOCOMA
Rule 34    body -> selectStmt S_PUNTOCOMA
Rule 35    body -> functionStmt
Rule 36    body -> ifStmt R_END R_IF S_PUNTOCOMA
Rule 37    idOrString -> ID
Rule 38    idOrString -> STRING
Rule 39    idOrString -> CHARACTER
Rule 40    createStmt -> R_CREATE createBody
Rule 41    createBody -> createOpts
Rule 42    createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
Rule 43    unique_index -> R_UNIQUE
Rule 44    unique_index -> <empty>
Rule 45    using_hash_index -> R_USING R_HASH
Rule 46    using_hash_index -> <empty>
Rule 47    indexNullS -> R_NULLS R_FIRST
Rule 48    indexNullS -> R_NULLS R_LAST
Rule 49    indexNullS -> <empty>
Rule 50    indexasc_desc -> R_DESC
Rule 51    indexasc_desc -> R_ASC
Rule 52    indexasc_desc -> <empty>
Rule 53    createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
Rule 54    createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode
Rule 55    orReplace -> R_OR R_REPLACE
Rule 56    orReplace -> <empty>
Rule 57    createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
Rule 58    ifNotExists -> R_IF R_NOT R_EXISTS
Rule 59    ifNotExists -> <empty>
Rule 60    inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER
Rule 61    inheritsOpt -> <empty>
Rule 62    createOwner -> R_OWNER ID
Rule 63    createOwner -> R_OWNER STRING
Rule 64    createOwner -> R_OWNER S_IGUAL ID
Rule 65    createOwner -> R_OWNER S_IGUAL STRING
Rule 66    createOwner -> <empty>
Rule 67    createMode -> R_MODE INTEGER
Rule 68    createMode -> R_MODE S_IGUAL INTEGER
Rule 69    createMode -> <empty>
Rule 70    createTableList -> createTableList S_COMA createTable
Rule 71    createTableList -> createTable
Rule 72    createTable -> ID types createColumns
Rule 73    createTable -> createConstraint
Rule 74    createTable -> createUnique
Rule 75    createTable -> createPrimary
Rule 76    createTable -> createForeign
Rule 77    createColumns -> colOptionsList
Rule 78    createColumns -> <empty>
Rule 79    createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 80    createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER
Rule 81    createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
Rule 82    createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
Rule 83    constrName -> R_CONSTRAINT ID
Rule 84    constrName -> <empty>
Rule 85    idList -> idList S_COMA ID
Rule 86    idList -> ID
Rule 87    types -> ID
Rule 88    types -> T_SMALLINT
Rule 89    types -> T_INTEGER
Rule 90    types -> T_BIGINT
Rule 91    types -> T_REAL
Rule 92    types -> T_DOUBLE T_PRECISION
Rule 93    types -> T_MONEY
Rule 94    types -> T_TEXT
Rule 95    types -> T_BOOLEAN
Rule 96    types -> R_TIMESTAMP
Rule 97    types -> T_DATE
Rule 98    types -> T_TIME
Rule 99    types -> T_DECIMAL optParams
Rule 100   types -> T_NUMERIC optParams
Rule 101   types -> T_VARCHAR optParams
Rule 102   types -> T_CHARACTER optParams
Rule 103   types -> T_CHAR optParams
Rule 104   types -> T_CHARACTER T_VARYING optParams
Rule 105   types -> R_INTERVAL intervalFields
Rule 106   intervalFields -> R_YEAR
Rule 107   intervalFields -> R_MONTH
Rule 108   intervalFields -> R_DAY
Rule 109   intervalFields -> R_HOUR
Rule 110   intervalFields -> R_MINUTE
Rule 111   intervalFields -> R_SECOND
Rule 112   intervalFields -> <empty>
Rule 113   optParams -> S_PARIZQ literalList S_PARDER
Rule 114   optParams -> <empty>
Rule 115   colOptionsList -> colOptionsList colOptions
Rule 116   colOptionsList -> colOptions
Rule 117   colOptions -> defaultVal
Rule 118   colOptions -> nullOpt
Rule 119   colOptions -> constraintOpt
Rule 120   colOptions -> primaryOpt
Rule 121   colOptions -> referencesOpt
Rule 122   defaultVal -> R_DEFAULT literal
Rule 123   nullOpt -> R_NOT R_NULL
Rule 124   nullOpt -> R_NULL
Rule 125   constraintOpt -> constrName R_UNIQUE
Rule 126   constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 127   primaryOpt -> R_PRIMARY R_KEY
Rule 128   referencesOpt -> R_REFERENCES ID
Rule 129   expresion -> datatype
Rule 130   expresion -> expBool
Rule 131   expresion -> S_PARIZQ selectStmt S_PARDER
Rule 132   funcCall -> ID S_PARIZQ paramsList S_PARDER
Rule 133   funcCall -> ID S_PARIZQ S_PARDER
Rule 134   funcCall -> R_NOW S_PARIZQ S_PARDER
Rule 135   funcCall -> R_COUNT S_PARIZQ datatype S_PARDER
Rule 136   funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
Rule 137   funcCall -> R_SUM S_PARIZQ datatype S_PARDER
Rule 138   funcCall -> R_PROM S_PARIZQ datatype S_PARDER
Rule 139   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
Rule 140   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
Rule 141   timeStamp -> R_TIMESTAMP STRING
Rule 142   timeStamp -> R_INTERVAL STRING
Rule 143   optsExtract -> R_YEAR
Rule 144   optsExtract -> R_MONTH
Rule 145   optsExtract -> R_DAY
Rule 146   optsExtract -> R_HOUR
Rule 147   optsExtract -> R_MINUTE
Rule 148   optsExtract -> R_SECOND
Rule 149   datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
Rule 150   dateSource -> R_TIMESTAMP STRING
Rule 151   dateSource -> T_DATE STRING
Rule 152   dateSource -> T_TIME STRING
Rule 153   dateSource -> R_INTERVAL STRING
Rule 154   dateSource -> R_NOW S_PARIZQ S_PARDER
Rule 155   current -> R_CURRENT_DATE
Rule 156   current -> R_CURRENT_TIME
Rule 157   current -> timeStamp
Rule 158   literalList -> literalList S_COMA literal
Rule 159   literalList -> literal
Rule 160   literal -> INTEGER
Rule 161   literal -> STRING
Rule 162   literal -> DECIMAL
Rule 163   literal -> CHARACTER
Rule 164   literal -> R_TRUE
Rule 165   literal -> R_FALSE
Rule 166   literal -> R_NULL
Rule 167   paramsList -> paramsList S_COMA datatype
Rule 168   paramsList -> datatype
Rule 169   datatype -> datatype O_SUMA datatype
Rule 170   datatype -> datatype O_RESTA datatype
Rule 171   datatype -> datatype O_PRODUCTO datatype
Rule 172   datatype -> datatype O_DIVISION datatype
Rule 173   datatype -> datatype O_EXPONENTE datatype
Rule 174   datatype -> datatype O_MODULAR datatype
Rule 175   datatype -> datatype OC_CONCATENAR datatype
Rule 176   datatype -> R_CASE caseList optElse R_END
Rule 177   caseList -> caseList caseWhen
Rule 178   caseList -> caseWhen
Rule 179   caseWhen -> R_WHEN expBool R_THEN literal
Rule 180   optElse -> R_ELSE literal
Rule 181   optElse -> <empty>
Rule 182   datatype -> O_RESTA datatype
Rule 183   datatype -> O_SUMA datatype
Rule 184   datatype -> columnName
Rule 185   datatype -> literal
Rule 186   datatype -> funcCall
Rule 187   datatype -> extract
Rule 188   datatype -> datePart
Rule 189   datatype -> current
Rule 190   datatype -> S_PARIZQ datatype S_PARDER
Rule 191   expComp -> datatype OL_MENORQUE datatype
Rule 192   expComp -> datatype OL_MAYORQUE datatype
Rule 193   expComp -> datatype OL_MAYORIGUALQUE datatype
Rule 194   expComp -> datatype OL_MENORIGUALQUE datatype
Rule 195   expComp -> datatype S_IGUAL datatype
Rule 196   expComp -> datatype OL_DISTINTODE datatype
Rule 197   expComp -> datatype R_IS R_DISTINCT R_FROM datatype
Rule 198   expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype
Rule 199   expComp -> datatype R_BETWEEN datatype R_AND datatype
Rule 200   expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype
Rule 201   expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
Rule 202   expComp -> datatype R_ISNULL
Rule 203   expComp -> datatype R_NOTNULL
Rule 204   expComp -> datatype R_IS R_NULL
Rule 205   expComp -> datatype R_IS R_TRUE
Rule 206   expComp -> datatype R_IS R_FALSE
Rule 207   expComp -> datatype R_IS R_UNKNOWN
Rule 208   expComp -> datatype R_IS R_NOT R_NULL
Rule 209   expComp -> datatype R_IS R_NOT R_TRUE
Rule 210   expComp -> datatype R_IS R_NOT R_FALSE
Rule 211   expComp -> datatype R_IS R_NOT R_UNKNOWN
Rule 212   expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 213   expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 214   expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 215   expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 216   expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
Rule 217   expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
Rule 218   expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 219   expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 220   expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 221   expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 222   expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
Rule 223   expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 224   expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 225   expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 226   expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
Rule 227   expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 228   expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
Rule 229   expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 230   expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
Rule 231   expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 232   expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
Rule 233   expSubq -> stringExp R_LIKE STRING
Rule 234   stringExp -> STRING
Rule 235   stringExp -> columnName
Rule 236   subqValues -> R_ALL
Rule 237   subqValues -> R_ANY
Rule 238   subqValues -> R_SOME
Rule 239   boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER
Rule 240   boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER
Rule 241   boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
Rule 242   boolean -> expComp
Rule 243   boolean -> expSubq
Rule 244   expBool -> expBool R_AND expBool
Rule 245   expBool -> expBool R_OR expBool
Rule 246   expBool -> R_NOT expBool
Rule 247   expBool -> S_PARIZQ expBool S_PARDER
Rule 248   expBool -> expBool optBoolPredicate
Rule 249   expBool -> boolean
Rule 250   optBoolPredicate -> R_IS R_TRUE
Rule 251   optBoolPredicate -> R_IS R_FALSE
Rule 252   optBoolPredicate -> R_IS R_UNKNOWN
Rule 253   optBoolPredicate -> R_IS R_NOT R_TRUE
Rule 254   optBoolPredicate -> R_IS R_NOT R_FALSE
Rule 255   optBoolPredicate -> R_IS R_NOT R_UNKNOWN
Rule 256   columnName -> ID
Rule 257   columnName -> ID S_PUNTO ID
Rule 258   booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral
Rule 259   booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral
Rule 260   booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral
Rule 261   booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral
Rule 262   booleanCheck -> idOrLiteral S_IGUAL idOrLiteral
Rule 263   booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral
Rule 264   booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
Rule 265   booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
Rule 266   idOrLiteral -> ID
Rule 267   idOrLiteral -> INTEGER
Rule 268   idOrLiteral -> STRING
Rule 269   idOrLiteral -> DECIMAL
Rule 270   idOrLiteral -> CHARACTER
Rule 271   idOrLiteral -> R_TRUE
Rule 272   idOrLiteral -> R_FALSE
Rule 273   alterStmt -> R_ALTER R_DATABASE idOrString alterDb
Rule 274   alterStmt -> R_ALTER R_TABLE idOrString alterTableList
Rule 275   alterDb -> R_RENAME R_TO idOrString
Rule 276   alterDb -> R_OWNER R_TO ownerOPts
Rule 277   ownerOPts -> idOrString
Rule 278   ownerOPts -> R_CURRENT_USER
Rule 279   ownerOPts -> R_SESSION_USER
Rule 280   alterTableList -> alterTableList S_COMA alterTable
Rule 281   alterTableList -> alterTable
Rule 282   alterTable -> R_ADD alterAdd
Rule 283   alterTable -> R_ALTER alterAlter
Rule 284   alterTable -> R_DROP alterDrop
Rule 285   alterTable -> R_RENAME alterRename
Rule 286   alterAdd -> R_COLUMN ID types
Rule 287   alterAdd -> createConstraint
Rule 288   alterAdd -> createPrimary
Rule 289   alterAdd -> createForeign
Rule 290   alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER
Rule 291   alterAlter -> R_COLUMN ID R_SET nullOpt
Rule 292   alterAlter -> R_COLUMN ID R_SET defaultVal
Rule 293   alterAlter -> R_COLUMN ID R_TYPE types
Rule 294   alterDrop -> R_CONSTRAINT ID
Rule 295   alterDrop -> R_COLUMN ID
Rule 296   alterRename -> R_COLUMN ID R_TO ID
Rule 297   dropStmt -> R_DROP R_TABLE ifExists idOrString
Rule 298   dropStmt -> R_DROP R_DATABASE ifExists idOrString
Rule 299   ifExists -> R_IF R_EXISTS
Rule 300   ifExists -> <empty>
Rule 301   selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 302   selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
Rule 303   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
Rule 304   selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
Rule 305   selectStmt -> selectStmt R_UNION allOpt selectStmt
Rule 306   selectStmt -> selectStmt R_INTERSECT allOpt selectStmt
Rule 307   selectStmt -> selectStmt R_EXCEPT allOpt selectStmt
Rule 308   selectStmt -> S_PARIZQ selectStmt S_PARDER
Rule 309   fromCl -> R_FROM tableExp
Rule 310   selectStmt -> R_SELECT selectParams
Rule 311   allOpt -> R_ALL
Rule 312   allOpt -> <empty>
Rule 313   selectParams -> O_PRODUCTO
Rule 314   selectParams -> selectList
Rule 315   selectList -> selectList S_COMA selectListParams optAlias
Rule 316   selectList -> selectListParams optAlias
Rule 317   selectListParams -> expresion
Rule 318   selectListParams -> ID S_PUNTO O_PRODUCTO
Rule 319   optAlias -> R_AS idOrString
Rule 320   optAlias -> idOrString
Rule 321   optAlias -> <empty>
Rule 322   tableExp -> tableExp S_COMA fromBody
Rule 323   tableExp -> fromBody
Rule 324   fromBody -> ID optAlias
Rule 325   fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString
Rule 326   joinList -> joinList2
Rule 327   joinList2 -> joinList2 joinCl
Rule 328   joinList2 -> joinCl
Rule 329   joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool
Rule 330   joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
Rule 331   joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias
Rule 332   nameList -> nameList S_COMA columnName
Rule 333   nameList -> columnName
Rule 334   joinOpt -> R_INNER
Rule 335   joinOpt -> R_LEFT
Rule 336   joinOpt -> R_LEFT R_OUTER
Rule 337   joinOpt -> R_RIGHT
Rule 338   joinOpt -> R_RIGHT R_OUTER
Rule 339   joinOpt -> R_FULL
Rule 340   joinOpt -> R_FULL R_OUTER
Rule 341   whereCl -> R_WHERE expBool
Rule 342   whereCl -> <empty>
Rule 343   groupByCl -> R_GROUP R_BY groupList havingCl
Rule 344   groupByCl -> <empty>
Rule 345   groupList -> groupList S_COMA columnName
Rule 346   groupList -> groupList S_COMA INTEGER
Rule 347   groupList -> columnName
Rule 348   groupList -> INTEGER
Rule 349   havingCl -> R_HAVING expBool
Rule 350   havingCl -> <empty>
Rule 351   orderByCl -> R_ORDER R_BY orderList
Rule 352   orderByCl -> <empty>
Rule 353   orderList -> orderList S_COMA orderByElem
Rule 354   orderList -> orderByElem
Rule 355   orderByElem -> columnName orderOpts orderNull
Rule 356   orderByElem -> INTEGER orderOpts orderNull
Rule 357   orderOpts -> R_ASC
Rule 358   orderOpts -> R_DESC
Rule 359   orderOpts -> <empty>
Rule 360   orderNull -> R_NULL R_FIRST
Rule 361   orderNull -> R_NULL R_LAST
Rule 362   orderNull -> <empty>
Rule 363   limitCl -> R_LIMIT INTEGER offsetLimit
Rule 364   limitCl -> R_LIMIT R_ALL offsetLimit
Rule 365   limitCl -> <empty>
Rule 366   offsetLimit -> R_OFFSET INTEGER
Rule 367   offsetLimit -> <empty>
Rule 368   insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
Rule 369   paramsColumn -> S_PARIZQ idList S_PARDER
Rule 370   paramsColumn -> <empty>
Rule 371   updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl
Rule 372   updateCols -> updateCols S_COMA updateVals
Rule 373   updateCols -> updateVals
Rule 374   updateVals -> ID S_IGUAL updateExp
Rule 375   updateExp -> datatype
Rule 376   updateExp -> R_DEFAULT
Rule 377   deleteStmt -> R_DELETE fromCl whereCl
Rule 378   truncateStmt -> R_TRUNCATE tableOpt ID
Rule 379   tableOpt -> R_TABLE
Rule 380   tableOpt -> <empty>
Rule 381   showStmt -> R_SHOW R_DATABASES likeOpt
Rule 382   likeOpt -> R_LIKE STRING
Rule 383   likeOpt -> <empty>
Rule 384   useStmt -> R_USE ID
Rule 385   functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
Rule 386   functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
Rule 387   bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd
Rule 388   params_list -> params_list S_COMA param_item
Rule 389   params_list -> param_item
Rule 390   param_item -> ID types
Rule 391   returnsStmt -> R_RETURNS types
Rule 392   returnsStmt -> <empty>
Rule 393   declareStmt -> R_DECLARE declaracion_list
Rule 394   declareStmt -> <empty>
Rule 395   declaracion_list -> declaracion_list declaracion_item
Rule 396   declaracion_list -> declaracion_item
Rule 397   declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA
Rule 398   declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA
Rule 399   constant_opt -> R_CONSTANT
Rule 400   constant_opt -> <empty>
Rule 401   null_opt -> R_NOT R_NULL
Rule 402   null_opt -> <empty>
Rule 403   default_opt -> R_DEFAULT
Rule 404   default_opt -> S_DOSPUNTOS S_IGUAL
Rule 405   default_opt -> S_IGUAL
Rule 406   default_item -> default_opt expresion
Rule 407   default_item -> <empty>
Rule 408   alias_declaracion -> ID
Rule 409   alias_declaracion -> IDEspecial
Rule 410   beginStmt -> beginStmt beginItem
Rule 411   beginStmt -> beginItem
Rule 412   beginItem -> stmt
Rule 413   beginItem -> returnStmt S_PUNTOCOMA
Rule 414   returnStmt -> R_RETURN expresion
Rule 415   labelEnd -> <empty>
Rule 416   labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA

Terminals, with rules where they appear

CHARACTER            : 39 163 270
COMMENT              : 
DECIMAL              : 162 269
ID                   : 37 42 42 57 60 62 64 72 82 83 85 86 87 128 132 133 256 257 257 266 286 290 291 292 293 294 295 296 296 318 324 368 374 378 384 385 386 390 397 398 408 416
IDEspecial           : 409
INTEGER              : 67 68 160 267 346 348 356 363 366
OC_AND               : 
OC_CONCATENAR        : 175
OC_NOT               : 
OC_OR                : 
OC_SHIFTL            : 
OC_SHIFTR            : 
OC_XOR               : 
OL_DISTINTODE        : 196 217 263
OL_ESIGUAL           : 216
OL_MAYORIGUALQUE     : 193 214 260
OL_MAYORQUE          : 192 213 259
OL_MENORIGUALQUE     : 194 215 261
OL_MENORQUE          : 191 212 258
O_DIVISION           : 172
O_EXPONENTE          : 173
O_MODULAR            : 174
O_PRODUCTO           : 136 171 313 318
O_RESTA              : 170 182
O_SUMA               : 169 183
R_ADD                : 282
R_ALIAS              : 398
R_ALL                : 236 311 364
R_ALTER              : 273 274 283
R_AND                : 199 200 201 218 219 220 244
R_ANY                : 237
R_AS                 : 57 319 325 385 386
R_ASC                : 51 357
R_BEGIN              : 387
R_BETWEEN            : 199 200 201 218 219 220
R_BY                 : 343 351
R_CASE               : 176
R_CHECK              : 79 126
R_COLUMN             : 286 291 292 293 295 296
R_CONSTANT           : 399
R_CONSTRAINT         : 83 294
R_COUNT              : 135 136
R_CREATE             : 40 385 386
R_CURRENT_DATE       : 155
R_CURRENT_TIME       : 156
R_CURRENT_USER       : 278
R_DATABASE           : 54 273 298
R_DATABASES          : 381
R_DATE_PART          : 149
R_DAY                : 108 145
R_DECLARE            : 393
R_DEFAULT            : 122 376 403
R_DELETE             : 377
R_DESC               : 50 358
R_DISTINCT           : 197 198 221 222 264 265 301
R_DROP               : 284 297 298
R_ELSE               : 17 180
R_ELSIF              : 22
R_END                : 15 36 176 387
R_ENUM               : 57
R_EXCEPT             : 307
R_EXISTS             : 58 239 299
R_EXTRACT            : 139 140
R_FALSE              : 165 206 210 229 230 251 254 272
R_FIRST              : 47 360
R_FOR                : 398
R_FOREIGN            : 82
R_FROM               : 139 140 197 198 221 222 264 265 309
R_FULL               : 339 340
R_FUNCTION           : 385 386
R_GROUP              : 343
R_HASH               : 45
R_HAVING             : 349
R_HOUR               : 109 146
R_IF                 : 15 16 36 58 299
R_IN                 : 240 241
R_INDEX              : 42
R_INHERITS           : 60
R_INNER              : 334
R_INSERT             : 368
R_INTERSECT          : 306
R_INTERVAL           : 105 142 153
R_INTO               : 368
R_IS                 : 197 198 204 205 206 207 208 209 210 211 221 222 223 224 227 228 229 230 231 232 250 251 252 253 254 255 264 265
R_ISNULL             : 202 225
R_JOIN               : 329 330 331
R_KEY                : 81 82 127
R_LANGUAGE           : 416
R_LAST               : 48 361
R_LEFT               : 335 336
R_LIKE               : 233 382
R_LIMIT              : 363 364
R_MINUTE             : 110 147
R_MODE               : 67 68
R_MONTH              : 107 144
R_NATURAL            : 331
R_NOT                : 58 123 198 200 208 209 210 211 219 222 224 228 230 232 241 246 253 254 255 265 401
R_NOTNULL            : 203 226
R_NOW                : 134 154
R_NULL               : 123 124 166 204 208 223 224 360 361 401
R_NULLS              : 47 48
R_OFFSET             : 366
R_ON                 : 42 329
R_OR                 : 55 245
R_ORDER              : 351
R_OUTER              : 336 338 340
R_OWNER              : 62 63 64 65 276
R_PRIMARY            : 81 127
R_PROM               : 138
R_REFERENCES         : 82 128
R_RENAME             : 275 285
R_REPLACE            : 55
R_RETURN             : 414
R_RETURNS            : 391
R_RIGHT              : 337 338
R_SECOND             : 111 148
R_SELECT             : 301 302 303 304 310
R_SESSION_USER       : 279
R_SET                : 291 292 371
R_SHOW               : 381
R_SOME               : 238
R_SUM                : 137
R_SYMMETRIC          : 201 220
R_TABLE              : 53 274 297 379
R_THEN               : 16 22 179
R_TIMESTAMP          : 96 141 150
R_TO                 : 275 276 296
R_TRUE               : 164 205 209 227 228 250 253 271
R_TRUNCATE           : 378
R_TYPE               : 57 293
R_UNION              : 305
R_UNIQUE             : 43 80 125 290
R_UNKNOWN            : 207 211 231 232 252 255
R_UPDATE             : 371
R_USE                : 384
R_USING              : 45 330
R_VALUES             : 368
R_WHEN               : 179
R_WHERE              : 341
R_YEAR               : 106 143
STRING               : 38 63 65 141 142 149 150 151 152 153 161 233 234 268 382
S_COMA               : 70 85 149 158 167 280 315 322 332 345 346 353 372 388
S_DOLAR              : 385 385 386 386 416 416
S_DOSPUNTOS          : 404
S_IGUAL              : 64 65 68 195 262 374 404 405
S_PARDER             : 16 22 42 53 57 60 79 80 81 82 82 113 126 131 132 133 134 135 136 137 138 139 140 149 154 190 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 239 240 241 247 290 308 325 330 368 369 385 386
S_PARIZQ             : 16 22 42 53 57 60 79 80 81 82 82 113 126 131 132 133 134 135 136 137 138 139 140 149 154 190 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 239 240 241 247 290 308 325 330 368 369 385 386
S_PUNTO              : 257 318
S_PUNTOCOMA          : 4 5 6 7 8 9 10 11 12 13 15 25 26 27 28 29 30 31 32 33 34 36 387 397 398 413 416
T_BIGINT             : 90
T_BOOLEAN            : 95
T_CHAR               : 103
T_CHARACTER          : 102 104
T_DATE               : 97 151
T_DECIMAL            : 99
T_DOUBLE             : 92
T_INTEGER            : 89
T_MONEY              : 93
T_NUMERIC            : 100
T_PRECISION          : 92
T_REAL               : 91
T_SMALLINT           : 88
T_TEXT               : 94
T_TIME               : 98 152
T_VARCHAR            : 101
T_VARYING            : 104
error                : 

Nonterminals, with rules where they appear

List_body            : 16 17 22 23
Lista_elsif_         : 18 20
alias_declaracion    : 398
allOpt               : 305 306 307
alterAdd             : 282
alterAlter           : 283
alterDb              : 273
alterDrop            : 284
alterRename          : 285
alterStmt            : 6 27
alterTable           : 280 281
alterTableList       : 274 280
beginItem            : 410 411
beginStmt            : 387 410
bloqueFunction       : 385 386
body                 : 23 24
boolean              : 249
booleanCheck         : 79 126
caseList             : 176 177
caseWhen             : 177 178
colOptions           : 115 116
colOptionsList       : 77 115
columnName           : 140 184 235 329 330 331 332 333 345 347 355
constant_opt         : 397
constrName           : 79 82 125 126 290
constraintOpt        : 119
createBody           : 40
createColumns        : 72
createConstraint     : 73 287
createForeign        : 76 289
createMode           : 54
createOpts           : 41
createOwner          : 54
createPrimary        : 75 288
createStmt           : 4 25
createTable          : 70 71
createTableList      : 53 70
createUnique         : 74
current              : 189
datatype             : 129 135 137 138 167 168 169 169 170 170 171 171 172 172 173 173 174 174 175 175 182 183 190 191 191 192 192 193 193 194 194 195 195 196 196 197 197 198 198 199 199 199 200 200 200 201 201 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 218 218 219 219 219 220 220 220 221 221 222 222 223 224 225 226 227 228 229 230 231 232 240 241 375
datePart             : 188
dateSource           : 149
declaracion_item     : 395 396
declaracion_list     : 393 395
declareStmt          : 387
defaultVal           : 117 292
default_item         : 397
default_opt          : 406
deleteStmt           : 10 31
dropStmt             : 7 28
else_                : 16
elsif_               : 20 21
expBool              : 130 179 244 244 245 245 246 247 248 329 341 349
expComp              : 242
expSubq              : 243
expresion            : 16 22 317 406 414
extract              : 187
fromBody             : 322 323 371
fromCl               : 301 302 303 304 377
funcCall             : 186
functionStmt         : 14 35
groupByCl            : 301 302 303 304
groupList            : 343 345 346
havingCl             : 343
idList               : 42 80 81 82 82 85 369
idOrLiteral          : 258 258 259 259 260 260 261 261 262 262 263 263 264 264 265 265
idOrString           : 53 54 273 274 275 277 297 298 319 320 325
ifExists             : 297 298
ifNotExists          : 53 54 57
ifStmt               : 15 36
indexNullS           : 42
indexasc_desc        : 42
inheritsOpt          : 53
init                 : 0
insertStmt           : 8 29
intervalFields       : 105
joinCl               : 327 328
joinList             : 303 304
joinList2            : 326 327
joinOpt              : 329 330 331
labelEnd             : 387
likeOpt              : 381
limitCl              : 301 302 303 304
literal              : 122 158 159 179 180 185
literalList          : 113 158
nameList             : 330 332
nullOpt              : 118 291
null_opt             : 397
offsetLimit          : 363 364
optAlias             : 315 316 324 329 330 331
optBoolPredicate     : 248
optElse              : 176
optParams            : 99 100 101 102 103 104
optsExtract          : 139 140
orReplace            : 54
orderByCl            : 301 302 303
orderByElem          : 353 354
orderList            : 351 353
orderNull            : 355 356
orderOpts            : 355 356
ownerOPts            : 276
param_item           : 388 389
paramsColumn         : 368
paramsList           : 57 132 167 368
params_list          : 385 388
primaryOpt           : 120
referencesOpt        : 121
returnStmt           : 413
returnsStmt          : 385 386
selectList           : 314 315
selectListParams     : 315 316
selectParams         : 301 302 303 304 310
selectStmt           : 13 34 131 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 239 240 241 305 305 306 306 307 307 308 325
showStmt             : 5 26
stmt                 : 2 3 412
stmtList             : 1 2
stringExp            : 233
subqValues           : 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232
tableExp             : 309 322
tableOpt             : 378
timeStamp            : 139 157
truncateStmt         : 11 32
types                : 72 286 293 390 391 397
unique_index         : 42
updateCols           : 371 372
updateExp            : 374
updateStmt           : 9 30
updateVals           : 372 373
useStmt              : 12 33
using_hash_index     : 42
whereCl              : 42 301 302 303 304 371 377

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . stmtList
    (2) stmtList -> . stmtList stmt
    (3) stmtList -> . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16

    init                           shift and go to state 1
    stmtList                       shift and go to state 2
    stmt                           shift and go to state 3
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    ifStmt                         shift and go to state 15

state 1

    (0) S' -> init .



state 2

    (1) init -> stmtList .
    (2) stmtList -> stmtList . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    $end            reduce using rule 1 (init -> stmtList .)
    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16

    stmt                           shift and go to state 28
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    ifStmt                         shift and go to state 15

state 3

    (3) stmtList -> stmt .

    R_CREATE        reduce using rule 3 (stmtList -> stmt .)
    R_SHOW          reduce using rule 3 (stmtList -> stmt .)
    R_ALTER         reduce using rule 3 (stmtList -> stmt .)
    R_DROP          reduce using rule 3 (stmtList -> stmt .)
    R_INSERT        reduce using rule 3 (stmtList -> stmt .)
    R_UPDATE        reduce using rule 3 (stmtList -> stmt .)
    R_DELETE        reduce using rule 3 (stmtList -> stmt .)
    R_TRUNCATE      reduce using rule 3 (stmtList -> stmt .)
    R_USE           reduce using rule 3 (stmtList -> stmt .)
    R_SELECT        reduce using rule 3 (stmtList -> stmt .)
    S_PARIZQ        reduce using rule 3 (stmtList -> stmt .)
    R_IF            reduce using rule 3 (stmtList -> stmt .)
    $end            reduce using rule 3 (stmtList -> stmt .)


state 4

    (4) stmt -> createStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 29


state 5

    (5) stmt -> showStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 30


state 6

    (6) stmt -> alterStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 31


state 7

    (7) stmt -> dropStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 32


state 8

    (8) stmt -> insertStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 33


state 9

    (9) stmt -> updateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 34


state 10

    (10) stmt -> deleteStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 35


state 11

    (11) stmt -> truncateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 36


state 12

    (12) stmt -> useStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 37


state 13

    (13) stmt -> selectStmt . S_PUNTOCOMA
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     shift and go to state 38
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 14

    (14) stmt -> functionStmt .

    R_CREATE        reduce using rule 14 (stmt -> functionStmt .)
    R_SHOW          reduce using rule 14 (stmt -> functionStmt .)
    R_ALTER         reduce using rule 14 (stmt -> functionStmt .)
    R_DROP          reduce using rule 14 (stmt -> functionStmt .)
    R_INSERT        reduce using rule 14 (stmt -> functionStmt .)
    R_UPDATE        reduce using rule 14 (stmt -> functionStmt .)
    R_DELETE        reduce using rule 14 (stmt -> functionStmt .)
    R_TRUNCATE      reduce using rule 14 (stmt -> functionStmt .)
    R_USE           reduce using rule 14 (stmt -> functionStmt .)
    R_SELECT        reduce using rule 14 (stmt -> functionStmt .)
    S_PARIZQ        reduce using rule 14 (stmt -> functionStmt .)
    R_IF            reduce using rule 14 (stmt -> functionStmt .)
    $end            reduce using rule 14 (stmt -> functionStmt .)
    R_END           reduce using rule 14 (stmt -> functionStmt .)
    R_RETURN        reduce using rule 14 (stmt -> functionStmt .)


state 15

    (15) stmt -> ifStmt . R_END R_IF S_PUNTOCOMA

    R_END           shift and go to state 42


state 16

    (16) ifStmt -> R_IF . S_PARIZQ expresion S_PARDER R_THEN List_body else_

    S_PARIZQ        shift and go to state 43


state 17

    (40) createStmt -> R_CREATE . createBody
    (385) functionStmt -> R_CREATE . R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> R_CREATE . R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (41) createBody -> . createOpts
    (42) createOpts -> . unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
    (53) createOpts -> . R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (54) createOpts -> . orReplace R_DATABASE ifNotExists idOrString createOwner createMode
    (57) createOpts -> . R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (43) unique_index -> . R_UNIQUE
    (44) unique_index -> .
    (55) orReplace -> . R_OR R_REPLACE
    (56) orReplace -> .

    R_FUNCTION      shift and go to state 45
    R_TABLE         shift and go to state 48
    R_TYPE          shift and go to state 50
    R_UNIQUE        shift and go to state 51
    R_INDEX         reduce using rule 44 (unique_index -> .)
    R_OR            shift and go to state 52
    R_DATABASE      reduce using rule 56 (orReplace -> .)

    createBody                     shift and go to state 44
    createOpts                     shift and go to state 46
    unique_index                   shift and go to state 47
    orReplace                      shift and go to state 49

state 18

    (381) showStmt -> R_SHOW . R_DATABASES likeOpt

    R_DATABASES     shift and go to state 53


state 19

    (273) alterStmt -> R_ALTER . R_DATABASE idOrString alterDb
    (274) alterStmt -> R_ALTER . R_TABLE idOrString alterTableList

    R_DATABASE      shift and go to state 54
    R_TABLE         shift and go to state 55


state 20

    (297) dropStmt -> R_DROP . R_TABLE ifExists idOrString
    (298) dropStmt -> R_DROP . R_DATABASE ifExists idOrString

    R_TABLE         shift and go to state 56
    R_DATABASE      shift and go to state 57


state 21

    (368) insertStmt -> R_INSERT . R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    R_INTO          shift and go to state 58


state 22

    (308) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 59

state 23

    (371) updateStmt -> R_UPDATE . fromBody R_SET updateCols whereCl
    (324) fromBody -> . ID optAlias
    (325) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 61
    S_PARIZQ        shift and go to state 62

    fromBody                       shift and go to state 60

state 24

    (377) deleteStmt -> R_DELETE . fromCl whereCl
    (309) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 64

    fromCl                         shift and go to state 63

state 25

    (378) truncateStmt -> R_TRUNCATE . tableOpt ID
    (379) tableOpt -> . R_TABLE
    (380) tableOpt -> .

    R_TABLE         shift and go to state 66
    ID              reduce using rule 380 (tableOpt -> .)

    tableOpt                       shift and go to state 65

state 26

    (384) useStmt -> R_USE . ID

    ID              shift and go to state 67


state 27

    (301) selectStmt -> R_SELECT . R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> R_SELECT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> R_SELECT . selectParams fromCl joinList whereCl groupByCl limitCl
    (310) selectStmt -> R_SELECT . selectParams
    (313) selectParams -> . O_PRODUCTO
    (314) selectParams -> . selectList
    (315) selectList -> . selectList S_COMA selectListParams optAlias
    (316) selectList -> . selectListParams optAlias
    (317) selectListParams -> . expresion
    (318) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (129) expresion -> . datatype
    (130) expresion -> . expBool
    (131) expresion -> . S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    R_DISTINCT      shift and go to state 68
    O_PRODUCTO      shift and go to state 70
    ID              shift and go to state 74
    S_PARIZQ        shift and go to state 77
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_NOT           shift and go to state 87
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_EXISTS        shift and go to state 105
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    selectParams                   shift and go to state 69
    selectList                     shift and go to state 71
    selectListParams               shift and go to state 72
    expresion                      shift and go to state 73
    datatype                       shift and go to state 75
    expBool                        shift and go to state 76
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    boolean                        shift and go to state 88
    timeStamp                      shift and go to state 101
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    stringExp                      shift and go to state 110

state 28

    (2) stmtList -> stmtList stmt .

    R_CREATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SHOW          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_ALTER         reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DROP          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_INSERT        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_UPDATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DELETE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_TRUNCATE      reduce using rule 2 (stmtList -> stmtList stmt .)
    R_USE           reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SELECT        reduce using rule 2 (stmtList -> stmtList stmt .)
    S_PARIZQ        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_IF            reduce using rule 2 (stmtList -> stmtList stmt .)
    $end            reduce using rule 2 (stmtList -> stmtList stmt .)


state 29

    (4) stmt -> createStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    $end            reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_END           reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)


state 30

    (5) stmt -> showStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    $end            reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_END           reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)


state 31

    (6) stmt -> alterStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    $end            reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_END           reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)


state 32

    (7) stmt -> dropStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    $end            reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_END           reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)


state 33

    (8) stmt -> insertStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    $end            reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_END           reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)


state 34

    (9) stmt -> updateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    $end            reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)


state 35

    (10) stmt -> deleteStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    $end            reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_END           reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)


state 36

    (11) stmt -> truncateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    $end            reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)


state 37

    (12) stmt -> useStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    $end            reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_END           reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)


state 38

    (13) stmt -> selectStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    $end            reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_END           reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)


state 39

    (305) selectStmt -> selectStmt R_UNION . allOpt selectStmt
    (311) allOpt -> . R_ALL
    (312) allOpt -> .

    R_ALL           shift and go to state 112
    R_SELECT        reduce using rule 312 (allOpt -> .)
    S_PARIZQ        reduce using rule 312 (allOpt -> .)

    allOpt                         shift and go to state 111

state 40

    (306) selectStmt -> selectStmt R_INTERSECT . allOpt selectStmt
    (311) allOpt -> . R_ALL
    (312) allOpt -> .

    R_ALL           shift and go to state 112
    R_SELECT        reduce using rule 312 (allOpt -> .)
    S_PARIZQ        reduce using rule 312 (allOpt -> .)

    allOpt                         shift and go to state 113

state 41

    (307) selectStmt -> selectStmt R_EXCEPT . allOpt selectStmt
    (311) allOpt -> . R_ALL
    (312) allOpt -> .

    R_ALL           shift and go to state 112
    R_SELECT        reduce using rule 312 (allOpt -> .)
    S_PARIZQ        reduce using rule 312 (allOpt -> .)

    allOpt                         shift and go to state 114

state 42

    (15) stmt -> ifStmt R_END . R_IF S_PUNTOCOMA

    R_IF            shift and go to state 115


state 43

    (16) ifStmt -> R_IF S_PARIZQ . expresion S_PARDER R_THEN List_body else_
    (129) expresion -> . datatype
    (130) expresion -> . expBool
    (131) expresion -> . S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    S_PARIZQ        shift and go to state 77
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_NOT           shift and go to state 87
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_EXISTS        shift and go to state 105
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expresion                      shift and go to state 116
    datatype                       shift and go to state 75
    expBool                        shift and go to state 76
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    boolean                        shift and go to state 88
    timeStamp                      shift and go to state 101
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    stringExp                      shift and go to state 110

state 44

    (40) createStmt -> R_CREATE createBody .

    S_PUNTOCOMA     reduce using rule 40 (createStmt -> R_CREATE createBody .)


state 45

    (385) functionStmt -> R_CREATE R_FUNCTION . ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> R_CREATE R_FUNCTION . ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction

    ID              shift and go to state 118


state 46

    (41) createBody -> createOpts .

    S_PUNTOCOMA     reduce using rule 41 (createBody -> createOpts .)


state 47

    (42) createOpts -> unique_index . R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    R_INDEX         shift and go to state 119


state 48

    (53) createOpts -> R_TABLE . ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (58) ifNotExists -> . R_IF R_NOT R_EXISTS
    (59) ifNotExists -> .

    R_IF            shift and go to state 121
    ID              reduce using rule 59 (ifNotExists -> .)
    STRING          reduce using rule 59 (ifNotExists -> .)
    CHARACTER       reduce using rule 59 (ifNotExists -> .)

    ifNotExists                    shift and go to state 120

state 49

    (54) createOpts -> orReplace . R_DATABASE ifNotExists idOrString createOwner createMode

    R_DATABASE      shift and go to state 122


state 50

    (57) createOpts -> R_TYPE . ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (58) ifNotExists -> . R_IF R_NOT R_EXISTS
    (59) ifNotExists -> .

    R_IF            shift and go to state 121
    ID              reduce using rule 59 (ifNotExists -> .)

    ifNotExists                    shift and go to state 123

state 51

    (43) unique_index -> R_UNIQUE .

    R_INDEX         reduce using rule 43 (unique_index -> R_UNIQUE .)


state 52

    (55) orReplace -> R_OR . R_REPLACE

    R_REPLACE       shift and go to state 124


state 53

    (381) showStmt -> R_SHOW R_DATABASES . likeOpt
    (382) likeOpt -> . R_LIKE STRING
    (383) likeOpt -> .

    R_LIKE          shift and go to state 126
    S_PUNTOCOMA     reduce using rule 383 (likeOpt -> .)

    likeOpt                        shift and go to state 125

state 54

    (273) alterStmt -> R_ALTER R_DATABASE . idOrString alterDb
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    idOrString                     shift and go to state 127

state 55

    (274) alterStmt -> R_ALTER R_TABLE . idOrString alterTableList
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    idOrString                     shift and go to state 131

state 56

    (297) dropStmt -> R_DROP R_TABLE . ifExists idOrString
    (299) ifExists -> . R_IF R_EXISTS
    (300) ifExists -> .

    R_IF            shift and go to state 133
    ID              reduce using rule 300 (ifExists -> .)
    STRING          reduce using rule 300 (ifExists -> .)
    CHARACTER       reduce using rule 300 (ifExists -> .)

    ifExists                       shift and go to state 132

state 57

    (298) dropStmt -> R_DROP R_DATABASE . ifExists idOrString
    (299) ifExists -> . R_IF R_EXISTS
    (300) ifExists -> .

    R_IF            shift and go to state 133
    ID              reduce using rule 300 (ifExists -> .)
    STRING          reduce using rule 300 (ifExists -> .)
    CHARACTER       reduce using rule 300 (ifExists -> .)

    ifExists                       shift and go to state 134

state 58

    (368) insertStmt -> R_INSERT R_INTO . ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 135


state 59

    (308) selectStmt -> S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 136
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 60

    (371) updateStmt -> R_UPDATE fromBody . R_SET updateCols whereCl

    R_SET           shift and go to state 137


state 61

    (324) fromBody -> ID . optAlias
    (319) optAlias -> . R_AS idOrString
    (320) optAlias -> . idOrString
    (321) optAlias -> .
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    R_AS            shift and go to state 139
    R_SET           reduce using rule 321 (optAlias -> .)
    S_COMA          reduce using rule 321 (optAlias -> .)
    R_WHERE         reduce using rule 321 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 321 (optAlias -> .)
    R_NATURAL       reduce using rule 321 (optAlias -> .)
    R_INNER         reduce using rule 321 (optAlias -> .)
    R_LEFT          reduce using rule 321 (optAlias -> .)
    R_RIGHT         reduce using rule 321 (optAlias -> .)
    R_FULL          reduce using rule 321 (optAlias -> .)
    R_GROUP         reduce using rule 321 (optAlias -> .)
    R_ORDER         reduce using rule 321 (optAlias -> .)
    R_LIMIT         reduce using rule 321 (optAlias -> .)
    R_UNION         reduce using rule 321 (optAlias -> .)
    R_INTERSECT     reduce using rule 321 (optAlias -> .)
    R_EXCEPT        reduce using rule 321 (optAlias -> .)
    S_PARDER        reduce using rule 321 (optAlias -> .)
    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    optAlias                       shift and go to state 138
    idOrString                     shift and go to state 140

state 62

    (325) fromBody -> S_PARIZQ . selectStmt S_PARDER R_AS idOrString
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 141

state 63

    (377) deleteStmt -> R_DELETE fromCl . whereCl
    (341) whereCl -> . R_WHERE expBool
    (342) whereCl -> .

    R_WHERE         shift and go to state 143
    S_PUNTOCOMA     reduce using rule 342 (whereCl -> .)

    whereCl                        shift and go to state 142

state 64

    (309) fromCl -> R_FROM . tableExp
    (322) tableExp -> . tableExp S_COMA fromBody
    (323) tableExp -> . fromBody
    (324) fromBody -> . ID optAlias
    (325) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 61
    S_PARIZQ        shift and go to state 62

    tableExp                       shift and go to state 144
    fromBody                       shift and go to state 145

state 65

    (378) truncateStmt -> R_TRUNCATE tableOpt . ID

    ID              shift and go to state 146


state 66

    (379) tableOpt -> R_TABLE .

    ID              reduce using rule 379 (tableOpt -> R_TABLE .)


state 67

    (384) useStmt -> R_USE ID .

    S_PUNTOCOMA     reduce using rule 384 (useStmt -> R_USE ID .)


state 68

    (301) selectStmt -> R_SELECT R_DISTINCT . selectParams fromCl whereCl groupByCl orderByCl limitCl
    (313) selectParams -> . O_PRODUCTO
    (314) selectParams -> . selectList
    (315) selectList -> . selectList S_COMA selectListParams optAlias
    (316) selectList -> . selectListParams optAlias
    (317) selectListParams -> . expresion
    (318) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (129) expresion -> . datatype
    (130) expresion -> . expBool
    (131) expresion -> . S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    O_PRODUCTO      shift and go to state 70
    ID              shift and go to state 74
    S_PARIZQ        shift and go to state 77
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_NOT           shift and go to state 87
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_EXISTS        shift and go to state 105
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    selectParams                   shift and go to state 147
    selectList                     shift and go to state 71
    selectListParams               shift and go to state 72
    expresion                      shift and go to state 73
    datatype                       shift and go to state 75
    expBool                        shift and go to state 76
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    boolean                        shift and go to state 88
    timeStamp                      shift and go to state 101
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    stringExp                      shift and go to state 110

state 69

    (302) selectStmt -> R_SELECT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> R_SELECT selectParams . fromCl joinList whereCl groupByCl limitCl
    (310) selectStmt -> R_SELECT selectParams .
    (309) fromCl -> . R_FROM tableExp

    S_PUNTOCOMA     reduce using rule 310 (selectStmt -> R_SELECT selectParams .)
    R_UNION         reduce using rule 310 (selectStmt -> R_SELECT selectParams .)
    R_INTERSECT     reduce using rule 310 (selectStmt -> R_SELECT selectParams .)
    R_EXCEPT        reduce using rule 310 (selectStmt -> R_SELECT selectParams .)
    S_PARDER        reduce using rule 310 (selectStmt -> R_SELECT selectParams .)
    R_FROM          shift and go to state 64

    fromCl                         shift and go to state 148

state 70

    (313) selectParams -> O_PRODUCTO .

    R_FROM          reduce using rule 313 (selectParams -> O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 313 (selectParams -> O_PRODUCTO .)
    R_UNION         reduce using rule 313 (selectParams -> O_PRODUCTO .)
    R_INTERSECT     reduce using rule 313 (selectParams -> O_PRODUCTO .)
    R_EXCEPT        reduce using rule 313 (selectParams -> O_PRODUCTO .)
    S_PARDER        reduce using rule 313 (selectParams -> O_PRODUCTO .)


state 71

    (314) selectParams -> selectList .
    (315) selectList -> selectList . S_COMA selectListParams optAlias

    R_FROM          reduce using rule 314 (selectParams -> selectList .)
    S_PUNTOCOMA     reduce using rule 314 (selectParams -> selectList .)
    R_UNION         reduce using rule 314 (selectParams -> selectList .)
    R_INTERSECT     reduce using rule 314 (selectParams -> selectList .)
    R_EXCEPT        reduce using rule 314 (selectParams -> selectList .)
    S_PARDER        reduce using rule 314 (selectParams -> selectList .)
    S_COMA          shift and go to state 149


state 72

    (316) selectList -> selectListParams . optAlias
    (319) optAlias -> . R_AS idOrString
    (320) optAlias -> . idOrString
    (321) optAlias -> .
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    R_AS            shift and go to state 139
    S_COMA          reduce using rule 321 (optAlias -> .)
    R_FROM          reduce using rule 321 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 321 (optAlias -> .)
    R_UNION         reduce using rule 321 (optAlias -> .)
    R_INTERSECT     reduce using rule 321 (optAlias -> .)
    R_EXCEPT        reduce using rule 321 (optAlias -> .)
    S_PARDER        reduce using rule 321 (optAlias -> .)
    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    optAlias                       shift and go to state 150
    idOrString                     shift and go to state 140

state 73

    (317) selectListParams -> expresion .

    R_AS            reduce using rule 317 (selectListParams -> expresion .)
    ID              reduce using rule 317 (selectListParams -> expresion .)
    STRING          reduce using rule 317 (selectListParams -> expresion .)
    CHARACTER       reduce using rule 317 (selectListParams -> expresion .)
    S_COMA          reduce using rule 317 (selectListParams -> expresion .)
    R_FROM          reduce using rule 317 (selectListParams -> expresion .)
    S_PUNTOCOMA     reduce using rule 317 (selectListParams -> expresion .)
    R_UNION         reduce using rule 317 (selectListParams -> expresion .)
    R_INTERSECT     reduce using rule 317 (selectListParams -> expresion .)
    R_EXCEPT        reduce using rule 317 (selectListParams -> expresion .)
    S_PARDER        reduce using rule 317 (selectListParams -> expresion .)


state 74

    (318) selectListParams -> ID . S_PUNTO O_PRODUCTO
    (256) columnName -> ID .
    (257) columnName -> ID . S_PUNTO ID
    (132) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (133) funcCall -> ID . S_PARIZQ S_PARDER

    S_PUNTO         shift and go to state 151
    O_SUMA          reduce using rule 256 (columnName -> ID .)
    O_RESTA         reduce using rule 256 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 256 (columnName -> ID .)
    O_DIVISION      reduce using rule 256 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 256 (columnName -> ID .)
    O_MODULAR       reduce using rule 256 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 256 (columnName -> ID .)
    R_IN            reduce using rule 256 (columnName -> ID .)
    R_NOT           reduce using rule 256 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 256 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 256 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 256 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 256 (columnName -> ID .)
    S_IGUAL         reduce using rule 256 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 256 (columnName -> ID .)
    R_IS            reduce using rule 256 (columnName -> ID .)
    R_BETWEEN       reduce using rule 256 (columnName -> ID .)
    R_ISNULL        reduce using rule 256 (columnName -> ID .)
    R_NOTNULL       reduce using rule 256 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 256 (columnName -> ID .)
    R_AS            reduce using rule 256 (columnName -> ID .)
    ID              reduce using rule 256 (columnName -> ID .)
    STRING          reduce using rule 256 (columnName -> ID .)
    CHARACTER       reduce using rule 256 (columnName -> ID .)
    S_COMA          reduce using rule 256 (columnName -> ID .)
    R_FROM          reduce using rule 256 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 256 (columnName -> ID .)
    R_UNION         reduce using rule 256 (columnName -> ID .)
    R_INTERSECT     reduce using rule 256 (columnName -> ID .)
    R_EXCEPT        reduce using rule 256 (columnName -> ID .)
    S_PARDER        reduce using rule 256 (columnName -> ID .)
    R_LIKE          reduce using rule 256 (columnName -> ID .)
    S_PARIZQ        shift and go to state 152


state 75

    (129) expresion -> datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype
    (240) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (191) expComp -> datatype . OL_MENORQUE datatype
    (192) expComp -> datatype . OL_MAYORQUE datatype
    (193) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (194) expComp -> datatype . OL_MENORIGUALQUE datatype
    (195) expComp -> datatype . S_IGUAL datatype
    (196) expComp -> datatype . OL_DISTINTODE datatype
    (197) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (200) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> datatype . R_ISNULL
    (203) expComp -> datatype . R_NOTNULL
    (204) expComp -> datatype . R_IS R_NULL
    (205) expComp -> datatype . R_IS R_TRUE
    (206) expComp -> datatype . R_IS R_FALSE
    (207) expComp -> datatype . R_IS R_UNKNOWN
    (208) expComp -> datatype . R_IS R_NOT R_NULL
    (209) expComp -> datatype . R_IS R_NOT R_TRUE
    (210) expComp -> datatype . R_IS R_NOT R_FALSE
    (211) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (212) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_AS            reduce using rule 129 (expresion -> datatype .)
    ID              reduce using rule 129 (expresion -> datatype .)
    STRING          reduce using rule 129 (expresion -> datatype .)
    CHARACTER       reduce using rule 129 (expresion -> datatype .)
    S_COMA          reduce using rule 129 (expresion -> datatype .)
    R_FROM          reduce using rule 129 (expresion -> datatype .)
    S_PUNTOCOMA     reduce using rule 129 (expresion -> datatype .)
    R_UNION         reduce using rule 129 (expresion -> datatype .)
    R_INTERSECT     reduce using rule 129 (expresion -> datatype .)
    R_EXCEPT        reduce using rule 129 (expresion -> datatype .)
    S_PARDER        reduce using rule 129 (expresion -> datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159
    R_IN            shift and go to state 160
    R_NOT           shift and go to state 161
    OL_MENORQUE     shift and go to state 162
    OL_MAYORQUE     shift and go to state 163
    OL_MAYORIGUALQUE shift and go to state 164
    OL_MENORIGUALQUE shift and go to state 165
    S_IGUAL         shift and go to state 166
    OL_DISTINTODE   shift and go to state 167
    R_IS            shift and go to state 168
    R_BETWEEN       shift and go to state 169
    R_ISNULL        shift and go to state 170
    R_NOTNULL       shift and go to state 171
    OL_ESIGUAL      shift and go to state 172


state 76

    (130) expresion -> expBool .
    (244) expBool -> expBool . R_AND expBool
    (245) expBool -> expBool . R_OR expBool
    (248) expBool -> expBool . optBoolPredicate
    (250) optBoolPredicate -> . R_IS R_TRUE
    (251) optBoolPredicate -> . R_IS R_FALSE
    (252) optBoolPredicate -> . R_IS R_UNKNOWN
    (253) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (254) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (255) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 130 (expresion -> expBool .)
    ID              reduce using rule 130 (expresion -> expBool .)
    STRING          reduce using rule 130 (expresion -> expBool .)
    CHARACTER       reduce using rule 130 (expresion -> expBool .)
    S_COMA          reduce using rule 130 (expresion -> expBool .)
    R_FROM          reduce using rule 130 (expresion -> expBool .)
    S_PUNTOCOMA     reduce using rule 130 (expresion -> expBool .)
    R_UNION         reduce using rule 130 (expresion -> expBool .)
    R_INTERSECT     reduce using rule 130 (expresion -> expBool .)
    R_EXCEPT        reduce using rule 130 (expresion -> expBool .)
    S_PARDER        reduce using rule 130 (expresion -> expBool .)
    R_AND           shift and go to state 173
    R_OR            shift and go to state 174
    R_IS            shift and go to state 176

    optBoolPredicate               shift and go to state 175

state 77

    (131) expresion -> S_PARIZQ . selectStmt S_PARDER
    (190) datatype -> S_PARIZQ . datatype S_PARDER
    (247) expBool -> S_PARIZQ . expBool S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 177
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_NOT           shift and go to state 87
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_EXISTS        shift and go to state 105
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    selectStmt                     shift and go to state 178
    datatype                       shift and go to state 179
    expBool                        shift and go to state 180
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    boolean                        shift and go to state 88
    timeStamp                      shift and go to state 101
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    stringExp                      shift and go to state 110

state 78

    (183) datatype -> O_SUMA . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 181
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 79

    (182) datatype -> O_RESTA . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 185
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 80

    (176) datatype -> R_CASE . caseList optElse R_END
    (177) caseList -> . caseList caseWhen
    (178) caseList -> . caseWhen
    (179) caseWhen -> . R_WHEN expBool R_THEN literal

    R_WHEN          shift and go to state 188

    caseList                       shift and go to state 186
    caseWhen                       shift and go to state 187

state 81

    (184) datatype -> columnName .
    (235) stringExp -> columnName .

    O_SUMA          reduce using rule 184 (datatype -> columnName .)
    O_RESTA         reduce using rule 184 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 184 (datatype -> columnName .)
    O_DIVISION      reduce using rule 184 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 184 (datatype -> columnName .)
    O_MODULAR       reduce using rule 184 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 184 (datatype -> columnName .)
    R_IN            reduce using rule 184 (datatype -> columnName .)
    R_NOT           reduce using rule 184 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 184 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 184 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 184 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 184 (datatype -> columnName .)
    S_IGUAL         reduce using rule 184 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 184 (datatype -> columnName .)
    R_IS            reduce using rule 184 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 184 (datatype -> columnName .)
    R_ISNULL        reduce using rule 184 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 184 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 184 (datatype -> columnName .)
    R_AS            reduce using rule 184 (datatype -> columnName .)
    ID              reduce using rule 184 (datatype -> columnName .)
    STRING          reduce using rule 184 (datatype -> columnName .)
    CHARACTER       reduce using rule 184 (datatype -> columnName .)
    S_COMA          reduce using rule 184 (datatype -> columnName .)
    R_FROM          reduce using rule 184 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 184 (datatype -> columnName .)
    R_UNION         reduce using rule 184 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 184 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 184 (datatype -> columnName .)
    S_PARDER        reduce using rule 184 (datatype -> columnName .)
    R_LIKE          reduce using rule 235 (stringExp -> columnName .)


state 82

    (185) datatype -> literal .

    O_SUMA          reduce using rule 185 (datatype -> literal .)
    O_RESTA         reduce using rule 185 (datatype -> literal .)
    O_PRODUCTO      reduce using rule 185 (datatype -> literal .)
    O_DIVISION      reduce using rule 185 (datatype -> literal .)
    O_EXPONENTE     reduce using rule 185 (datatype -> literal .)
    O_MODULAR       reduce using rule 185 (datatype -> literal .)
    OC_CONCATENAR   reduce using rule 185 (datatype -> literal .)
    R_IN            reduce using rule 185 (datatype -> literal .)
    R_NOT           reduce using rule 185 (datatype -> literal .)
    OL_MENORQUE     reduce using rule 185 (datatype -> literal .)
    OL_MAYORQUE     reduce using rule 185 (datatype -> literal .)
    OL_MAYORIGUALQUE reduce using rule 185 (datatype -> literal .)
    OL_MENORIGUALQUE reduce using rule 185 (datatype -> literal .)
    S_IGUAL         reduce using rule 185 (datatype -> literal .)
    OL_DISTINTODE   reduce using rule 185 (datatype -> literal .)
    R_IS            reduce using rule 185 (datatype -> literal .)
    R_BETWEEN       reduce using rule 185 (datatype -> literal .)
    R_ISNULL        reduce using rule 185 (datatype -> literal .)
    R_NOTNULL       reduce using rule 185 (datatype -> literal .)
    OL_ESIGUAL      reduce using rule 185 (datatype -> literal .)
    R_AS            reduce using rule 185 (datatype -> literal .)
    ID              reduce using rule 185 (datatype -> literal .)
    STRING          reduce using rule 185 (datatype -> literal .)
    CHARACTER       reduce using rule 185 (datatype -> literal .)
    S_COMA          reduce using rule 185 (datatype -> literal .)
    R_FROM          reduce using rule 185 (datatype -> literal .)
    S_PUNTOCOMA     reduce using rule 185 (datatype -> literal .)
    R_UNION         reduce using rule 185 (datatype -> literal .)
    R_INTERSECT     reduce using rule 185 (datatype -> literal .)
    R_EXCEPT        reduce using rule 185 (datatype -> literal .)
    S_PARDER        reduce using rule 185 (datatype -> literal .)
    R_AND           reduce using rule 185 (datatype -> literal .)
    R_OR            reduce using rule 185 (datatype -> literal .)
    R_GROUP         reduce using rule 185 (datatype -> literal .)
    R_ORDER         reduce using rule 185 (datatype -> literal .)
    R_LIMIT         reduce using rule 185 (datatype -> literal .)
    R_THEN          reduce using rule 185 (datatype -> literal .)
    R_NATURAL       reduce using rule 185 (datatype -> literal .)
    R_INNER         reduce using rule 185 (datatype -> literal .)
    R_LEFT          reduce using rule 185 (datatype -> literal .)
    R_RIGHT         reduce using rule 185 (datatype -> literal .)
    R_FULL          reduce using rule 185 (datatype -> literal .)
    R_WHERE         reduce using rule 185 (datatype -> literal .)
    R_ALL           reduce using rule 185 (datatype -> literal .)
    R_ANY           reduce using rule 185 (datatype -> literal .)
    R_SOME          reduce using rule 185 (datatype -> literal .)


state 83

    (186) datatype -> funcCall .

    O_SUMA          reduce using rule 186 (datatype -> funcCall .)
    O_RESTA         reduce using rule 186 (datatype -> funcCall .)
    O_PRODUCTO      reduce using rule 186 (datatype -> funcCall .)
    O_DIVISION      reduce using rule 186 (datatype -> funcCall .)
    O_EXPONENTE     reduce using rule 186 (datatype -> funcCall .)
    O_MODULAR       reduce using rule 186 (datatype -> funcCall .)
    OC_CONCATENAR   reduce using rule 186 (datatype -> funcCall .)
    R_IN            reduce using rule 186 (datatype -> funcCall .)
    R_NOT           reduce using rule 186 (datatype -> funcCall .)
    OL_MENORQUE     reduce using rule 186 (datatype -> funcCall .)
    OL_MAYORQUE     reduce using rule 186 (datatype -> funcCall .)
    OL_MAYORIGUALQUE reduce using rule 186 (datatype -> funcCall .)
    OL_MENORIGUALQUE reduce using rule 186 (datatype -> funcCall .)
    S_IGUAL         reduce using rule 186 (datatype -> funcCall .)
    OL_DISTINTODE   reduce using rule 186 (datatype -> funcCall .)
    R_IS            reduce using rule 186 (datatype -> funcCall .)
    R_BETWEEN       reduce using rule 186 (datatype -> funcCall .)
    R_ISNULL        reduce using rule 186 (datatype -> funcCall .)
    R_NOTNULL       reduce using rule 186 (datatype -> funcCall .)
    OL_ESIGUAL      reduce using rule 186 (datatype -> funcCall .)
    R_AS            reduce using rule 186 (datatype -> funcCall .)
    ID              reduce using rule 186 (datatype -> funcCall .)
    STRING          reduce using rule 186 (datatype -> funcCall .)
    CHARACTER       reduce using rule 186 (datatype -> funcCall .)
    S_COMA          reduce using rule 186 (datatype -> funcCall .)
    R_FROM          reduce using rule 186 (datatype -> funcCall .)
    S_PUNTOCOMA     reduce using rule 186 (datatype -> funcCall .)
    R_UNION         reduce using rule 186 (datatype -> funcCall .)
    R_INTERSECT     reduce using rule 186 (datatype -> funcCall .)
    R_EXCEPT        reduce using rule 186 (datatype -> funcCall .)
    S_PARDER        reduce using rule 186 (datatype -> funcCall .)
    R_AND           reduce using rule 186 (datatype -> funcCall .)
    R_OR            reduce using rule 186 (datatype -> funcCall .)
    R_GROUP         reduce using rule 186 (datatype -> funcCall .)
    R_ORDER         reduce using rule 186 (datatype -> funcCall .)
    R_LIMIT         reduce using rule 186 (datatype -> funcCall .)
    R_THEN          reduce using rule 186 (datatype -> funcCall .)
    R_NATURAL       reduce using rule 186 (datatype -> funcCall .)
    R_INNER         reduce using rule 186 (datatype -> funcCall .)
    R_LEFT          reduce using rule 186 (datatype -> funcCall .)
    R_RIGHT         reduce using rule 186 (datatype -> funcCall .)
    R_FULL          reduce using rule 186 (datatype -> funcCall .)
    R_WHERE         reduce using rule 186 (datatype -> funcCall .)
    R_ALL           reduce using rule 186 (datatype -> funcCall .)
    R_ANY           reduce using rule 186 (datatype -> funcCall .)
    R_SOME          reduce using rule 186 (datatype -> funcCall .)


state 84

    (187) datatype -> extract .

    O_SUMA          reduce using rule 187 (datatype -> extract .)
    O_RESTA         reduce using rule 187 (datatype -> extract .)
    O_PRODUCTO      reduce using rule 187 (datatype -> extract .)
    O_DIVISION      reduce using rule 187 (datatype -> extract .)
    O_EXPONENTE     reduce using rule 187 (datatype -> extract .)
    O_MODULAR       reduce using rule 187 (datatype -> extract .)
    OC_CONCATENAR   reduce using rule 187 (datatype -> extract .)
    R_IN            reduce using rule 187 (datatype -> extract .)
    R_NOT           reduce using rule 187 (datatype -> extract .)
    OL_MENORQUE     reduce using rule 187 (datatype -> extract .)
    OL_MAYORQUE     reduce using rule 187 (datatype -> extract .)
    OL_MAYORIGUALQUE reduce using rule 187 (datatype -> extract .)
    OL_MENORIGUALQUE reduce using rule 187 (datatype -> extract .)
    S_IGUAL         reduce using rule 187 (datatype -> extract .)
    OL_DISTINTODE   reduce using rule 187 (datatype -> extract .)
    R_IS            reduce using rule 187 (datatype -> extract .)
    R_BETWEEN       reduce using rule 187 (datatype -> extract .)
    R_ISNULL        reduce using rule 187 (datatype -> extract .)
    R_NOTNULL       reduce using rule 187 (datatype -> extract .)
    OL_ESIGUAL      reduce using rule 187 (datatype -> extract .)
    R_AS            reduce using rule 187 (datatype -> extract .)
    ID              reduce using rule 187 (datatype -> extract .)
    STRING          reduce using rule 187 (datatype -> extract .)
    CHARACTER       reduce using rule 187 (datatype -> extract .)
    S_COMA          reduce using rule 187 (datatype -> extract .)
    R_FROM          reduce using rule 187 (datatype -> extract .)
    S_PUNTOCOMA     reduce using rule 187 (datatype -> extract .)
    R_UNION         reduce using rule 187 (datatype -> extract .)
    R_INTERSECT     reduce using rule 187 (datatype -> extract .)
    R_EXCEPT        reduce using rule 187 (datatype -> extract .)
    S_PARDER        reduce using rule 187 (datatype -> extract .)
    R_AND           reduce using rule 187 (datatype -> extract .)
    R_OR            reduce using rule 187 (datatype -> extract .)
    R_GROUP         reduce using rule 187 (datatype -> extract .)
    R_ORDER         reduce using rule 187 (datatype -> extract .)
    R_LIMIT         reduce using rule 187 (datatype -> extract .)
    R_THEN          reduce using rule 187 (datatype -> extract .)
    R_NATURAL       reduce using rule 187 (datatype -> extract .)
    R_INNER         reduce using rule 187 (datatype -> extract .)
    R_LEFT          reduce using rule 187 (datatype -> extract .)
    R_RIGHT         reduce using rule 187 (datatype -> extract .)
    R_FULL          reduce using rule 187 (datatype -> extract .)
    R_WHERE         reduce using rule 187 (datatype -> extract .)
    R_ALL           reduce using rule 187 (datatype -> extract .)
    R_ANY           reduce using rule 187 (datatype -> extract .)
    R_SOME          reduce using rule 187 (datatype -> extract .)


state 85

    (188) datatype -> datePart .

    O_SUMA          reduce using rule 188 (datatype -> datePart .)
    O_RESTA         reduce using rule 188 (datatype -> datePart .)
    O_PRODUCTO      reduce using rule 188 (datatype -> datePart .)
    O_DIVISION      reduce using rule 188 (datatype -> datePart .)
    O_EXPONENTE     reduce using rule 188 (datatype -> datePart .)
    O_MODULAR       reduce using rule 188 (datatype -> datePart .)
    OC_CONCATENAR   reduce using rule 188 (datatype -> datePart .)
    R_IN            reduce using rule 188 (datatype -> datePart .)
    R_NOT           reduce using rule 188 (datatype -> datePart .)
    OL_MENORQUE     reduce using rule 188 (datatype -> datePart .)
    OL_MAYORQUE     reduce using rule 188 (datatype -> datePart .)
    OL_MAYORIGUALQUE reduce using rule 188 (datatype -> datePart .)
    OL_MENORIGUALQUE reduce using rule 188 (datatype -> datePart .)
    S_IGUAL         reduce using rule 188 (datatype -> datePart .)
    OL_DISTINTODE   reduce using rule 188 (datatype -> datePart .)
    R_IS            reduce using rule 188 (datatype -> datePart .)
    R_BETWEEN       reduce using rule 188 (datatype -> datePart .)
    R_ISNULL        reduce using rule 188 (datatype -> datePart .)
    R_NOTNULL       reduce using rule 188 (datatype -> datePart .)
    OL_ESIGUAL      reduce using rule 188 (datatype -> datePart .)
    R_AS            reduce using rule 188 (datatype -> datePart .)
    ID              reduce using rule 188 (datatype -> datePart .)
    STRING          reduce using rule 188 (datatype -> datePart .)
    CHARACTER       reduce using rule 188 (datatype -> datePart .)
    S_COMA          reduce using rule 188 (datatype -> datePart .)
    R_FROM          reduce using rule 188 (datatype -> datePart .)
    S_PUNTOCOMA     reduce using rule 188 (datatype -> datePart .)
    R_UNION         reduce using rule 188 (datatype -> datePart .)
    R_INTERSECT     reduce using rule 188 (datatype -> datePart .)
    R_EXCEPT        reduce using rule 188 (datatype -> datePart .)
    S_PARDER        reduce using rule 188 (datatype -> datePart .)
    R_AND           reduce using rule 188 (datatype -> datePart .)
    R_OR            reduce using rule 188 (datatype -> datePart .)
    R_GROUP         reduce using rule 188 (datatype -> datePart .)
    R_ORDER         reduce using rule 188 (datatype -> datePart .)
    R_LIMIT         reduce using rule 188 (datatype -> datePart .)
    R_THEN          reduce using rule 188 (datatype -> datePart .)
    R_NATURAL       reduce using rule 188 (datatype -> datePart .)
    R_INNER         reduce using rule 188 (datatype -> datePart .)
    R_LEFT          reduce using rule 188 (datatype -> datePart .)
    R_RIGHT         reduce using rule 188 (datatype -> datePart .)
    R_FULL          reduce using rule 188 (datatype -> datePart .)
    R_WHERE         reduce using rule 188 (datatype -> datePart .)
    R_ALL           reduce using rule 188 (datatype -> datePart .)
    R_ANY           reduce using rule 188 (datatype -> datePart .)
    R_SOME          reduce using rule 188 (datatype -> datePart .)


state 86

    (189) datatype -> current .

    O_SUMA          reduce using rule 189 (datatype -> current .)
    O_RESTA         reduce using rule 189 (datatype -> current .)
    O_PRODUCTO      reduce using rule 189 (datatype -> current .)
    O_DIVISION      reduce using rule 189 (datatype -> current .)
    O_EXPONENTE     reduce using rule 189 (datatype -> current .)
    O_MODULAR       reduce using rule 189 (datatype -> current .)
    OC_CONCATENAR   reduce using rule 189 (datatype -> current .)
    R_IN            reduce using rule 189 (datatype -> current .)
    R_NOT           reduce using rule 189 (datatype -> current .)
    OL_MENORQUE     reduce using rule 189 (datatype -> current .)
    OL_MAYORQUE     reduce using rule 189 (datatype -> current .)
    OL_MAYORIGUALQUE reduce using rule 189 (datatype -> current .)
    OL_MENORIGUALQUE reduce using rule 189 (datatype -> current .)
    S_IGUAL         reduce using rule 189 (datatype -> current .)
    OL_DISTINTODE   reduce using rule 189 (datatype -> current .)
    R_IS            reduce using rule 189 (datatype -> current .)
    R_BETWEEN       reduce using rule 189 (datatype -> current .)
    R_ISNULL        reduce using rule 189 (datatype -> current .)
    R_NOTNULL       reduce using rule 189 (datatype -> current .)
    OL_ESIGUAL      reduce using rule 189 (datatype -> current .)
    R_AS            reduce using rule 189 (datatype -> current .)
    ID              reduce using rule 189 (datatype -> current .)
    STRING          reduce using rule 189 (datatype -> current .)
    CHARACTER       reduce using rule 189 (datatype -> current .)
    S_COMA          reduce using rule 189 (datatype -> current .)
    R_FROM          reduce using rule 189 (datatype -> current .)
    S_PUNTOCOMA     reduce using rule 189 (datatype -> current .)
    R_UNION         reduce using rule 189 (datatype -> current .)
    R_INTERSECT     reduce using rule 189 (datatype -> current .)
    R_EXCEPT        reduce using rule 189 (datatype -> current .)
    S_PARDER        reduce using rule 189 (datatype -> current .)
    R_AND           reduce using rule 189 (datatype -> current .)
    R_OR            reduce using rule 189 (datatype -> current .)
    R_GROUP         reduce using rule 189 (datatype -> current .)
    R_ORDER         reduce using rule 189 (datatype -> current .)
    R_LIMIT         reduce using rule 189 (datatype -> current .)
    R_THEN          reduce using rule 189 (datatype -> current .)
    R_NATURAL       reduce using rule 189 (datatype -> current .)
    R_INNER         reduce using rule 189 (datatype -> current .)
    R_LEFT          reduce using rule 189 (datatype -> current .)
    R_RIGHT         reduce using rule 189 (datatype -> current .)
    R_FULL          reduce using rule 189 (datatype -> current .)
    R_WHERE         reduce using rule 189 (datatype -> current .)
    R_ALL           reduce using rule 189 (datatype -> current .)
    R_ANY           reduce using rule 189 (datatype -> current .)
    R_SOME          reduce using rule 189 (datatype -> current .)


state 87

    (246) expBool -> R_NOT . expBool
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 87
    S_PARIZQ        shift and go to state 190
    R_EXISTS        shift and go to state 105
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expBool                        shift and go to state 189
    boolean                        shift and go to state 88
    datatype                       shift and go to state 191
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    stringExp                      shift and go to state 110
    timeStamp                      shift and go to state 101

state 88

    (249) expBool -> boolean .

    R_AND           reduce using rule 249 (expBool -> boolean .)
    R_OR            reduce using rule 249 (expBool -> boolean .)
    R_IS            reduce using rule 249 (expBool -> boolean .)
    R_AS            reduce using rule 249 (expBool -> boolean .)
    ID              reduce using rule 249 (expBool -> boolean .)
    STRING          reduce using rule 249 (expBool -> boolean .)
    CHARACTER       reduce using rule 249 (expBool -> boolean .)
    S_COMA          reduce using rule 249 (expBool -> boolean .)
    R_FROM          reduce using rule 249 (expBool -> boolean .)
    S_PUNTOCOMA     reduce using rule 249 (expBool -> boolean .)
    R_UNION         reduce using rule 249 (expBool -> boolean .)
    R_INTERSECT     reduce using rule 249 (expBool -> boolean .)
    R_EXCEPT        reduce using rule 249 (expBool -> boolean .)
    S_PARDER        reduce using rule 249 (expBool -> boolean .)
    R_GROUP         reduce using rule 249 (expBool -> boolean .)
    R_ORDER         reduce using rule 249 (expBool -> boolean .)
    R_LIMIT         reduce using rule 249 (expBool -> boolean .)
    R_THEN          reduce using rule 249 (expBool -> boolean .)
    R_NATURAL       reduce using rule 249 (expBool -> boolean .)
    R_INNER         reduce using rule 249 (expBool -> boolean .)
    R_LEFT          reduce using rule 249 (expBool -> boolean .)
    R_RIGHT         reduce using rule 249 (expBool -> boolean .)
    R_FULL          reduce using rule 249 (expBool -> boolean .)
    R_WHERE         reduce using rule 249 (expBool -> boolean .)


state 89

    (160) literal -> INTEGER .

    O_SUMA          reduce using rule 160 (literal -> INTEGER .)
    O_RESTA         reduce using rule 160 (literal -> INTEGER .)
    O_PRODUCTO      reduce using rule 160 (literal -> INTEGER .)
    O_DIVISION      reduce using rule 160 (literal -> INTEGER .)
    O_EXPONENTE     reduce using rule 160 (literal -> INTEGER .)
    O_MODULAR       reduce using rule 160 (literal -> INTEGER .)
    OC_CONCATENAR   reduce using rule 160 (literal -> INTEGER .)
    R_IN            reduce using rule 160 (literal -> INTEGER .)
    R_NOT           reduce using rule 160 (literal -> INTEGER .)
    OL_MENORQUE     reduce using rule 160 (literal -> INTEGER .)
    OL_MAYORQUE     reduce using rule 160 (literal -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 160 (literal -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 160 (literal -> INTEGER .)
    S_IGUAL         reduce using rule 160 (literal -> INTEGER .)
    OL_DISTINTODE   reduce using rule 160 (literal -> INTEGER .)
    R_IS            reduce using rule 160 (literal -> INTEGER .)
    R_BETWEEN       reduce using rule 160 (literal -> INTEGER .)
    R_ISNULL        reduce using rule 160 (literal -> INTEGER .)
    R_NOTNULL       reduce using rule 160 (literal -> INTEGER .)
    OL_ESIGUAL      reduce using rule 160 (literal -> INTEGER .)
    R_AS            reduce using rule 160 (literal -> INTEGER .)
    ID              reduce using rule 160 (literal -> INTEGER .)
    STRING          reduce using rule 160 (literal -> INTEGER .)
    CHARACTER       reduce using rule 160 (literal -> INTEGER .)
    S_COMA          reduce using rule 160 (literal -> INTEGER .)
    R_FROM          reduce using rule 160 (literal -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 160 (literal -> INTEGER .)
    R_UNION         reduce using rule 160 (literal -> INTEGER .)
    R_INTERSECT     reduce using rule 160 (literal -> INTEGER .)
    R_EXCEPT        reduce using rule 160 (literal -> INTEGER .)
    S_PARDER        reduce using rule 160 (literal -> INTEGER .)
    R_AND           reduce using rule 160 (literal -> INTEGER .)
    R_OR            reduce using rule 160 (literal -> INTEGER .)
    R_GROUP         reduce using rule 160 (literal -> INTEGER .)
    R_ORDER         reduce using rule 160 (literal -> INTEGER .)
    R_LIMIT         reduce using rule 160 (literal -> INTEGER .)
    R_THEN          reduce using rule 160 (literal -> INTEGER .)
    R_NATURAL       reduce using rule 160 (literal -> INTEGER .)
    R_INNER         reduce using rule 160 (literal -> INTEGER .)
    R_LEFT          reduce using rule 160 (literal -> INTEGER .)
    R_RIGHT         reduce using rule 160 (literal -> INTEGER .)
    R_FULL          reduce using rule 160 (literal -> INTEGER .)
    R_WHERE         reduce using rule 160 (literal -> INTEGER .)
    R_ALL           reduce using rule 160 (literal -> INTEGER .)
    R_ANY           reduce using rule 160 (literal -> INTEGER .)
    R_SOME          reduce using rule 160 (literal -> INTEGER .)
    R_END           reduce using rule 160 (literal -> INTEGER .)
    R_ELSE          reduce using rule 160 (literal -> INTEGER .)
    R_WHEN          reduce using rule 160 (literal -> INTEGER .)
    R_DEFAULT       reduce using rule 160 (literal -> INTEGER .)
    R_NULL          reduce using rule 160 (literal -> INTEGER .)
    R_PRIMARY       reduce using rule 160 (literal -> INTEGER .)
    R_REFERENCES    reduce using rule 160 (literal -> INTEGER .)
    R_CONSTRAINT    reduce using rule 160 (literal -> INTEGER .)
    R_UNIQUE        reduce using rule 160 (literal -> INTEGER .)
    R_CHECK         reduce using rule 160 (literal -> INTEGER .)


state 90

    (161) literal -> STRING .
    (234) stringExp -> STRING .

    O_SUMA          reduce using rule 161 (literal -> STRING .)
    O_RESTA         reduce using rule 161 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 161 (literal -> STRING .)
    O_DIVISION      reduce using rule 161 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 161 (literal -> STRING .)
    O_MODULAR       reduce using rule 161 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 161 (literal -> STRING .)
    R_IN            reduce using rule 161 (literal -> STRING .)
    R_NOT           reduce using rule 161 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 161 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 161 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 161 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 161 (literal -> STRING .)
    S_IGUAL         reduce using rule 161 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 161 (literal -> STRING .)
    R_IS            reduce using rule 161 (literal -> STRING .)
    R_BETWEEN       reduce using rule 161 (literal -> STRING .)
    R_ISNULL        reduce using rule 161 (literal -> STRING .)
    R_NOTNULL       reduce using rule 161 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 161 (literal -> STRING .)
    R_AS            reduce using rule 161 (literal -> STRING .)
    ID              reduce using rule 161 (literal -> STRING .)
    STRING          reduce using rule 161 (literal -> STRING .)
    CHARACTER       reduce using rule 161 (literal -> STRING .)
    S_COMA          reduce using rule 161 (literal -> STRING .)
    R_FROM          reduce using rule 161 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 161 (literal -> STRING .)
    R_UNION         reduce using rule 161 (literal -> STRING .)
    R_INTERSECT     reduce using rule 161 (literal -> STRING .)
    R_EXCEPT        reduce using rule 161 (literal -> STRING .)
    S_PARDER        reduce using rule 161 (literal -> STRING .)
    R_LIKE          reduce using rule 234 (stringExp -> STRING .)


state 91

    (162) literal -> DECIMAL .

    O_SUMA          reduce using rule 162 (literal -> DECIMAL .)
    O_RESTA         reduce using rule 162 (literal -> DECIMAL .)
    O_PRODUCTO      reduce using rule 162 (literal -> DECIMAL .)
    O_DIVISION      reduce using rule 162 (literal -> DECIMAL .)
    O_EXPONENTE     reduce using rule 162 (literal -> DECIMAL .)
    O_MODULAR       reduce using rule 162 (literal -> DECIMAL .)
    OC_CONCATENAR   reduce using rule 162 (literal -> DECIMAL .)
    R_IN            reduce using rule 162 (literal -> DECIMAL .)
    R_NOT           reduce using rule 162 (literal -> DECIMAL .)
    OL_MENORQUE     reduce using rule 162 (literal -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 162 (literal -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 162 (literal -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 162 (literal -> DECIMAL .)
    S_IGUAL         reduce using rule 162 (literal -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 162 (literal -> DECIMAL .)
    R_IS            reduce using rule 162 (literal -> DECIMAL .)
    R_BETWEEN       reduce using rule 162 (literal -> DECIMAL .)
    R_ISNULL        reduce using rule 162 (literal -> DECIMAL .)
    R_NOTNULL       reduce using rule 162 (literal -> DECIMAL .)
    OL_ESIGUAL      reduce using rule 162 (literal -> DECIMAL .)
    R_AS            reduce using rule 162 (literal -> DECIMAL .)
    ID              reduce using rule 162 (literal -> DECIMAL .)
    STRING          reduce using rule 162 (literal -> DECIMAL .)
    CHARACTER       reduce using rule 162 (literal -> DECIMAL .)
    S_COMA          reduce using rule 162 (literal -> DECIMAL .)
    R_FROM          reduce using rule 162 (literal -> DECIMAL .)
    S_PUNTOCOMA     reduce using rule 162 (literal -> DECIMAL .)
    R_UNION         reduce using rule 162 (literal -> DECIMAL .)
    R_INTERSECT     reduce using rule 162 (literal -> DECIMAL .)
    R_EXCEPT        reduce using rule 162 (literal -> DECIMAL .)
    S_PARDER        reduce using rule 162 (literal -> DECIMAL .)
    R_AND           reduce using rule 162 (literal -> DECIMAL .)
    R_OR            reduce using rule 162 (literal -> DECIMAL .)
    R_GROUP         reduce using rule 162 (literal -> DECIMAL .)
    R_ORDER         reduce using rule 162 (literal -> DECIMAL .)
    R_LIMIT         reduce using rule 162 (literal -> DECIMAL .)
    R_THEN          reduce using rule 162 (literal -> DECIMAL .)
    R_NATURAL       reduce using rule 162 (literal -> DECIMAL .)
    R_INNER         reduce using rule 162 (literal -> DECIMAL .)
    R_LEFT          reduce using rule 162 (literal -> DECIMAL .)
    R_RIGHT         reduce using rule 162 (literal -> DECIMAL .)
    R_FULL          reduce using rule 162 (literal -> DECIMAL .)
    R_WHERE         reduce using rule 162 (literal -> DECIMAL .)
    R_ALL           reduce using rule 162 (literal -> DECIMAL .)
    R_ANY           reduce using rule 162 (literal -> DECIMAL .)
    R_SOME          reduce using rule 162 (literal -> DECIMAL .)
    R_END           reduce using rule 162 (literal -> DECIMAL .)
    R_ELSE          reduce using rule 162 (literal -> DECIMAL .)
    R_WHEN          reduce using rule 162 (literal -> DECIMAL .)
    R_DEFAULT       reduce using rule 162 (literal -> DECIMAL .)
    R_NULL          reduce using rule 162 (literal -> DECIMAL .)
    R_PRIMARY       reduce using rule 162 (literal -> DECIMAL .)
    R_REFERENCES    reduce using rule 162 (literal -> DECIMAL .)
    R_CONSTRAINT    reduce using rule 162 (literal -> DECIMAL .)
    R_UNIQUE        reduce using rule 162 (literal -> DECIMAL .)
    R_CHECK         reduce using rule 162 (literal -> DECIMAL .)


state 92

    (163) literal -> CHARACTER .

    O_SUMA          reduce using rule 163 (literal -> CHARACTER .)
    O_RESTA         reduce using rule 163 (literal -> CHARACTER .)
    O_PRODUCTO      reduce using rule 163 (literal -> CHARACTER .)
    O_DIVISION      reduce using rule 163 (literal -> CHARACTER .)
    O_EXPONENTE     reduce using rule 163 (literal -> CHARACTER .)
    O_MODULAR       reduce using rule 163 (literal -> CHARACTER .)
    OC_CONCATENAR   reduce using rule 163 (literal -> CHARACTER .)
    R_IN            reduce using rule 163 (literal -> CHARACTER .)
    R_NOT           reduce using rule 163 (literal -> CHARACTER .)
    OL_MENORQUE     reduce using rule 163 (literal -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 163 (literal -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 163 (literal -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 163 (literal -> CHARACTER .)
    S_IGUAL         reduce using rule 163 (literal -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 163 (literal -> CHARACTER .)
    R_IS            reduce using rule 163 (literal -> CHARACTER .)
    R_BETWEEN       reduce using rule 163 (literal -> CHARACTER .)
    R_ISNULL        reduce using rule 163 (literal -> CHARACTER .)
    R_NOTNULL       reduce using rule 163 (literal -> CHARACTER .)
    OL_ESIGUAL      reduce using rule 163 (literal -> CHARACTER .)
    R_AS            reduce using rule 163 (literal -> CHARACTER .)
    ID              reduce using rule 163 (literal -> CHARACTER .)
    STRING          reduce using rule 163 (literal -> CHARACTER .)
    CHARACTER       reduce using rule 163 (literal -> CHARACTER .)
    S_COMA          reduce using rule 163 (literal -> CHARACTER .)
    R_FROM          reduce using rule 163 (literal -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 163 (literal -> CHARACTER .)
    R_UNION         reduce using rule 163 (literal -> CHARACTER .)
    R_INTERSECT     reduce using rule 163 (literal -> CHARACTER .)
    R_EXCEPT        reduce using rule 163 (literal -> CHARACTER .)
    S_PARDER        reduce using rule 163 (literal -> CHARACTER .)
    R_AND           reduce using rule 163 (literal -> CHARACTER .)
    R_OR            reduce using rule 163 (literal -> CHARACTER .)
    R_GROUP         reduce using rule 163 (literal -> CHARACTER .)
    R_ORDER         reduce using rule 163 (literal -> CHARACTER .)
    R_LIMIT         reduce using rule 163 (literal -> CHARACTER .)
    R_THEN          reduce using rule 163 (literal -> CHARACTER .)
    R_NATURAL       reduce using rule 163 (literal -> CHARACTER .)
    R_INNER         reduce using rule 163 (literal -> CHARACTER .)
    R_LEFT          reduce using rule 163 (literal -> CHARACTER .)
    R_RIGHT         reduce using rule 163 (literal -> CHARACTER .)
    R_FULL          reduce using rule 163 (literal -> CHARACTER .)
    R_WHERE         reduce using rule 163 (literal -> CHARACTER .)
    R_ALL           reduce using rule 163 (literal -> CHARACTER .)
    R_ANY           reduce using rule 163 (literal -> CHARACTER .)
    R_SOME          reduce using rule 163 (literal -> CHARACTER .)
    R_END           reduce using rule 163 (literal -> CHARACTER .)
    R_ELSE          reduce using rule 163 (literal -> CHARACTER .)
    R_WHEN          reduce using rule 163 (literal -> CHARACTER .)
    R_DEFAULT       reduce using rule 163 (literal -> CHARACTER .)
    R_NULL          reduce using rule 163 (literal -> CHARACTER .)
    R_PRIMARY       reduce using rule 163 (literal -> CHARACTER .)
    R_REFERENCES    reduce using rule 163 (literal -> CHARACTER .)
    R_CONSTRAINT    reduce using rule 163 (literal -> CHARACTER .)
    R_UNIQUE        reduce using rule 163 (literal -> CHARACTER .)
    R_CHECK         reduce using rule 163 (literal -> CHARACTER .)


state 93

    (164) literal -> R_TRUE .

    O_SUMA          reduce using rule 164 (literal -> R_TRUE .)
    O_RESTA         reduce using rule 164 (literal -> R_TRUE .)
    O_PRODUCTO      reduce using rule 164 (literal -> R_TRUE .)
    O_DIVISION      reduce using rule 164 (literal -> R_TRUE .)
    O_EXPONENTE     reduce using rule 164 (literal -> R_TRUE .)
    O_MODULAR       reduce using rule 164 (literal -> R_TRUE .)
    OC_CONCATENAR   reduce using rule 164 (literal -> R_TRUE .)
    R_IN            reduce using rule 164 (literal -> R_TRUE .)
    R_NOT           reduce using rule 164 (literal -> R_TRUE .)
    OL_MENORQUE     reduce using rule 164 (literal -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 164 (literal -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 164 (literal -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 164 (literal -> R_TRUE .)
    S_IGUAL         reduce using rule 164 (literal -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 164 (literal -> R_TRUE .)
    R_IS            reduce using rule 164 (literal -> R_TRUE .)
    R_BETWEEN       reduce using rule 164 (literal -> R_TRUE .)
    R_ISNULL        reduce using rule 164 (literal -> R_TRUE .)
    R_NOTNULL       reduce using rule 164 (literal -> R_TRUE .)
    OL_ESIGUAL      reduce using rule 164 (literal -> R_TRUE .)
    R_AS            reduce using rule 164 (literal -> R_TRUE .)
    ID              reduce using rule 164 (literal -> R_TRUE .)
    STRING          reduce using rule 164 (literal -> R_TRUE .)
    CHARACTER       reduce using rule 164 (literal -> R_TRUE .)
    S_COMA          reduce using rule 164 (literal -> R_TRUE .)
    R_FROM          reduce using rule 164 (literal -> R_TRUE .)
    S_PUNTOCOMA     reduce using rule 164 (literal -> R_TRUE .)
    R_UNION         reduce using rule 164 (literal -> R_TRUE .)
    R_INTERSECT     reduce using rule 164 (literal -> R_TRUE .)
    R_EXCEPT        reduce using rule 164 (literal -> R_TRUE .)
    S_PARDER        reduce using rule 164 (literal -> R_TRUE .)
    R_AND           reduce using rule 164 (literal -> R_TRUE .)
    R_OR            reduce using rule 164 (literal -> R_TRUE .)
    R_GROUP         reduce using rule 164 (literal -> R_TRUE .)
    R_ORDER         reduce using rule 164 (literal -> R_TRUE .)
    R_LIMIT         reduce using rule 164 (literal -> R_TRUE .)
    R_THEN          reduce using rule 164 (literal -> R_TRUE .)
    R_NATURAL       reduce using rule 164 (literal -> R_TRUE .)
    R_INNER         reduce using rule 164 (literal -> R_TRUE .)
    R_LEFT          reduce using rule 164 (literal -> R_TRUE .)
    R_RIGHT         reduce using rule 164 (literal -> R_TRUE .)
    R_FULL          reduce using rule 164 (literal -> R_TRUE .)
    R_WHERE         reduce using rule 164 (literal -> R_TRUE .)
    R_ALL           reduce using rule 164 (literal -> R_TRUE .)
    R_ANY           reduce using rule 164 (literal -> R_TRUE .)
    R_SOME          reduce using rule 164 (literal -> R_TRUE .)
    R_END           reduce using rule 164 (literal -> R_TRUE .)
    R_ELSE          reduce using rule 164 (literal -> R_TRUE .)
    R_WHEN          reduce using rule 164 (literal -> R_TRUE .)
    R_DEFAULT       reduce using rule 164 (literal -> R_TRUE .)
    R_NULL          reduce using rule 164 (literal -> R_TRUE .)
    R_PRIMARY       reduce using rule 164 (literal -> R_TRUE .)
    R_REFERENCES    reduce using rule 164 (literal -> R_TRUE .)
    R_CONSTRAINT    reduce using rule 164 (literal -> R_TRUE .)
    R_UNIQUE        reduce using rule 164 (literal -> R_TRUE .)
    R_CHECK         reduce using rule 164 (literal -> R_TRUE .)


state 94

    (165) literal -> R_FALSE .

    O_SUMA          reduce using rule 165 (literal -> R_FALSE .)
    O_RESTA         reduce using rule 165 (literal -> R_FALSE .)
    O_PRODUCTO      reduce using rule 165 (literal -> R_FALSE .)
    O_DIVISION      reduce using rule 165 (literal -> R_FALSE .)
    O_EXPONENTE     reduce using rule 165 (literal -> R_FALSE .)
    O_MODULAR       reduce using rule 165 (literal -> R_FALSE .)
    OC_CONCATENAR   reduce using rule 165 (literal -> R_FALSE .)
    R_IN            reduce using rule 165 (literal -> R_FALSE .)
    R_NOT           reduce using rule 165 (literal -> R_FALSE .)
    OL_MENORQUE     reduce using rule 165 (literal -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 165 (literal -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 165 (literal -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 165 (literal -> R_FALSE .)
    S_IGUAL         reduce using rule 165 (literal -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 165 (literal -> R_FALSE .)
    R_IS            reduce using rule 165 (literal -> R_FALSE .)
    R_BETWEEN       reduce using rule 165 (literal -> R_FALSE .)
    R_ISNULL        reduce using rule 165 (literal -> R_FALSE .)
    R_NOTNULL       reduce using rule 165 (literal -> R_FALSE .)
    OL_ESIGUAL      reduce using rule 165 (literal -> R_FALSE .)
    R_AS            reduce using rule 165 (literal -> R_FALSE .)
    ID              reduce using rule 165 (literal -> R_FALSE .)
    STRING          reduce using rule 165 (literal -> R_FALSE .)
    CHARACTER       reduce using rule 165 (literal -> R_FALSE .)
    S_COMA          reduce using rule 165 (literal -> R_FALSE .)
    R_FROM          reduce using rule 165 (literal -> R_FALSE .)
    S_PUNTOCOMA     reduce using rule 165 (literal -> R_FALSE .)
    R_UNION         reduce using rule 165 (literal -> R_FALSE .)
    R_INTERSECT     reduce using rule 165 (literal -> R_FALSE .)
    R_EXCEPT        reduce using rule 165 (literal -> R_FALSE .)
    S_PARDER        reduce using rule 165 (literal -> R_FALSE .)
    R_AND           reduce using rule 165 (literal -> R_FALSE .)
    R_OR            reduce using rule 165 (literal -> R_FALSE .)
    R_GROUP         reduce using rule 165 (literal -> R_FALSE .)
    R_ORDER         reduce using rule 165 (literal -> R_FALSE .)
    R_LIMIT         reduce using rule 165 (literal -> R_FALSE .)
    R_THEN          reduce using rule 165 (literal -> R_FALSE .)
    R_NATURAL       reduce using rule 165 (literal -> R_FALSE .)
    R_INNER         reduce using rule 165 (literal -> R_FALSE .)
    R_LEFT          reduce using rule 165 (literal -> R_FALSE .)
    R_RIGHT         reduce using rule 165 (literal -> R_FALSE .)
    R_FULL          reduce using rule 165 (literal -> R_FALSE .)
    R_WHERE         reduce using rule 165 (literal -> R_FALSE .)
    R_ALL           reduce using rule 165 (literal -> R_FALSE .)
    R_ANY           reduce using rule 165 (literal -> R_FALSE .)
    R_SOME          reduce using rule 165 (literal -> R_FALSE .)
    R_END           reduce using rule 165 (literal -> R_FALSE .)
    R_ELSE          reduce using rule 165 (literal -> R_FALSE .)
    R_WHEN          reduce using rule 165 (literal -> R_FALSE .)
    R_DEFAULT       reduce using rule 165 (literal -> R_FALSE .)
    R_NULL          reduce using rule 165 (literal -> R_FALSE .)
    R_PRIMARY       reduce using rule 165 (literal -> R_FALSE .)
    R_REFERENCES    reduce using rule 165 (literal -> R_FALSE .)
    R_CONSTRAINT    reduce using rule 165 (literal -> R_FALSE .)
    R_UNIQUE        reduce using rule 165 (literal -> R_FALSE .)
    R_CHECK         reduce using rule 165 (literal -> R_FALSE .)


state 95

    (166) literal -> R_NULL .

    O_SUMA          reduce using rule 166 (literal -> R_NULL .)
    O_RESTA         reduce using rule 166 (literal -> R_NULL .)
    O_PRODUCTO      reduce using rule 166 (literal -> R_NULL .)
    O_DIVISION      reduce using rule 166 (literal -> R_NULL .)
    O_EXPONENTE     reduce using rule 166 (literal -> R_NULL .)
    O_MODULAR       reduce using rule 166 (literal -> R_NULL .)
    OC_CONCATENAR   reduce using rule 166 (literal -> R_NULL .)
    R_IN            reduce using rule 166 (literal -> R_NULL .)
    R_NOT           reduce using rule 166 (literal -> R_NULL .)
    OL_MENORQUE     reduce using rule 166 (literal -> R_NULL .)
    OL_MAYORQUE     reduce using rule 166 (literal -> R_NULL .)
    OL_MAYORIGUALQUE reduce using rule 166 (literal -> R_NULL .)
    OL_MENORIGUALQUE reduce using rule 166 (literal -> R_NULL .)
    S_IGUAL         reduce using rule 166 (literal -> R_NULL .)
    OL_DISTINTODE   reduce using rule 166 (literal -> R_NULL .)
    R_IS            reduce using rule 166 (literal -> R_NULL .)
    R_BETWEEN       reduce using rule 166 (literal -> R_NULL .)
    R_ISNULL        reduce using rule 166 (literal -> R_NULL .)
    R_NOTNULL       reduce using rule 166 (literal -> R_NULL .)
    OL_ESIGUAL      reduce using rule 166 (literal -> R_NULL .)
    R_AS            reduce using rule 166 (literal -> R_NULL .)
    ID              reduce using rule 166 (literal -> R_NULL .)
    STRING          reduce using rule 166 (literal -> R_NULL .)
    CHARACTER       reduce using rule 166 (literal -> R_NULL .)
    S_COMA          reduce using rule 166 (literal -> R_NULL .)
    R_FROM          reduce using rule 166 (literal -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 166 (literal -> R_NULL .)
    R_UNION         reduce using rule 166 (literal -> R_NULL .)
    R_INTERSECT     reduce using rule 166 (literal -> R_NULL .)
    R_EXCEPT        reduce using rule 166 (literal -> R_NULL .)
    S_PARDER        reduce using rule 166 (literal -> R_NULL .)
    R_AND           reduce using rule 166 (literal -> R_NULL .)
    R_OR            reduce using rule 166 (literal -> R_NULL .)
    R_GROUP         reduce using rule 166 (literal -> R_NULL .)
    R_ORDER         reduce using rule 166 (literal -> R_NULL .)
    R_LIMIT         reduce using rule 166 (literal -> R_NULL .)
    R_THEN          reduce using rule 166 (literal -> R_NULL .)
    R_NATURAL       reduce using rule 166 (literal -> R_NULL .)
    R_INNER         reduce using rule 166 (literal -> R_NULL .)
    R_LEFT          reduce using rule 166 (literal -> R_NULL .)
    R_RIGHT         reduce using rule 166 (literal -> R_NULL .)
    R_FULL          reduce using rule 166 (literal -> R_NULL .)
    R_WHERE         reduce using rule 166 (literal -> R_NULL .)
    R_ALL           reduce using rule 166 (literal -> R_NULL .)
    R_ANY           reduce using rule 166 (literal -> R_NULL .)
    R_SOME          reduce using rule 166 (literal -> R_NULL .)
    R_END           reduce using rule 166 (literal -> R_NULL .)
    R_ELSE          reduce using rule 166 (literal -> R_NULL .)
    R_WHEN          reduce using rule 166 (literal -> R_NULL .)
    R_DEFAULT       reduce using rule 166 (literal -> R_NULL .)
    R_NULL          reduce using rule 166 (literal -> R_NULL .)
    R_PRIMARY       reduce using rule 166 (literal -> R_NULL .)
    R_REFERENCES    reduce using rule 166 (literal -> R_NULL .)
    R_CONSTRAINT    reduce using rule 166 (literal -> R_NULL .)
    R_UNIQUE        reduce using rule 166 (literal -> R_NULL .)
    R_CHECK         reduce using rule 166 (literal -> R_NULL .)


state 96

    (134) funcCall -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 192


state 97

    (135) funcCall -> R_COUNT . S_PARIZQ datatype S_PARDER
    (136) funcCall -> R_COUNT . S_PARIZQ O_PRODUCTO S_PARDER

    S_PARIZQ        shift and go to state 193


state 98

    (137) funcCall -> R_SUM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 194


state 99

    (138) funcCall -> R_PROM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 195


state 100

    (139) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM columnName S_PARDER

    S_PARIZQ        shift and go to state 196


state 101

    (157) current -> timeStamp .

    O_SUMA          reduce using rule 157 (current -> timeStamp .)
    O_RESTA         reduce using rule 157 (current -> timeStamp .)
    O_PRODUCTO      reduce using rule 157 (current -> timeStamp .)
    O_DIVISION      reduce using rule 157 (current -> timeStamp .)
    O_EXPONENTE     reduce using rule 157 (current -> timeStamp .)
    O_MODULAR       reduce using rule 157 (current -> timeStamp .)
    OC_CONCATENAR   reduce using rule 157 (current -> timeStamp .)
    R_IN            reduce using rule 157 (current -> timeStamp .)
    R_NOT           reduce using rule 157 (current -> timeStamp .)
    OL_MENORQUE     reduce using rule 157 (current -> timeStamp .)
    OL_MAYORQUE     reduce using rule 157 (current -> timeStamp .)
    OL_MAYORIGUALQUE reduce using rule 157 (current -> timeStamp .)
    OL_MENORIGUALQUE reduce using rule 157 (current -> timeStamp .)
    S_IGUAL         reduce using rule 157 (current -> timeStamp .)
    OL_DISTINTODE   reduce using rule 157 (current -> timeStamp .)
    R_IS            reduce using rule 157 (current -> timeStamp .)
    R_BETWEEN       reduce using rule 157 (current -> timeStamp .)
    R_ISNULL        reduce using rule 157 (current -> timeStamp .)
    R_NOTNULL       reduce using rule 157 (current -> timeStamp .)
    OL_ESIGUAL      reduce using rule 157 (current -> timeStamp .)
    R_AS            reduce using rule 157 (current -> timeStamp .)
    ID              reduce using rule 157 (current -> timeStamp .)
    STRING          reduce using rule 157 (current -> timeStamp .)
    CHARACTER       reduce using rule 157 (current -> timeStamp .)
    S_COMA          reduce using rule 157 (current -> timeStamp .)
    R_FROM          reduce using rule 157 (current -> timeStamp .)
    S_PUNTOCOMA     reduce using rule 157 (current -> timeStamp .)
    R_UNION         reduce using rule 157 (current -> timeStamp .)
    R_INTERSECT     reduce using rule 157 (current -> timeStamp .)
    R_EXCEPT        reduce using rule 157 (current -> timeStamp .)
    S_PARDER        reduce using rule 157 (current -> timeStamp .)
    R_AND           reduce using rule 157 (current -> timeStamp .)
    R_OR            reduce using rule 157 (current -> timeStamp .)
    R_GROUP         reduce using rule 157 (current -> timeStamp .)
    R_ORDER         reduce using rule 157 (current -> timeStamp .)
    R_LIMIT         reduce using rule 157 (current -> timeStamp .)
    R_THEN          reduce using rule 157 (current -> timeStamp .)
    R_NATURAL       reduce using rule 157 (current -> timeStamp .)
    R_INNER         reduce using rule 157 (current -> timeStamp .)
    R_LEFT          reduce using rule 157 (current -> timeStamp .)
    R_RIGHT         reduce using rule 157 (current -> timeStamp .)
    R_FULL          reduce using rule 157 (current -> timeStamp .)
    R_WHERE         reduce using rule 157 (current -> timeStamp .)
    R_ALL           reduce using rule 157 (current -> timeStamp .)
    R_ANY           reduce using rule 157 (current -> timeStamp .)
    R_SOME          reduce using rule 157 (current -> timeStamp .)


state 102

    (149) datePart -> R_DATE_PART . S_PARIZQ STRING S_COMA dateSource S_PARDER

    S_PARIZQ        shift and go to state 197


state 103

    (155) current -> R_CURRENT_DATE .

    O_SUMA          reduce using rule 155 (current -> R_CURRENT_DATE .)
    O_RESTA         reduce using rule 155 (current -> R_CURRENT_DATE .)
    O_PRODUCTO      reduce using rule 155 (current -> R_CURRENT_DATE .)
    O_DIVISION      reduce using rule 155 (current -> R_CURRENT_DATE .)
    O_EXPONENTE     reduce using rule 155 (current -> R_CURRENT_DATE .)
    O_MODULAR       reduce using rule 155 (current -> R_CURRENT_DATE .)
    OC_CONCATENAR   reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_IN            reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_NOT           reduce using rule 155 (current -> R_CURRENT_DATE .)
    OL_MENORQUE     reduce using rule 155 (current -> R_CURRENT_DATE .)
    OL_MAYORQUE     reduce using rule 155 (current -> R_CURRENT_DATE .)
    OL_MAYORIGUALQUE reduce using rule 155 (current -> R_CURRENT_DATE .)
    OL_MENORIGUALQUE reduce using rule 155 (current -> R_CURRENT_DATE .)
    S_IGUAL         reduce using rule 155 (current -> R_CURRENT_DATE .)
    OL_DISTINTODE   reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_IS            reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_BETWEEN       reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_ISNULL        reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_NOTNULL       reduce using rule 155 (current -> R_CURRENT_DATE .)
    OL_ESIGUAL      reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_AS            reduce using rule 155 (current -> R_CURRENT_DATE .)
    ID              reduce using rule 155 (current -> R_CURRENT_DATE .)
    STRING          reduce using rule 155 (current -> R_CURRENT_DATE .)
    CHARACTER       reduce using rule 155 (current -> R_CURRENT_DATE .)
    S_COMA          reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_FROM          reduce using rule 155 (current -> R_CURRENT_DATE .)
    S_PUNTOCOMA     reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_UNION         reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_INTERSECT     reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_EXCEPT        reduce using rule 155 (current -> R_CURRENT_DATE .)
    S_PARDER        reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_AND           reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_OR            reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_GROUP         reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_ORDER         reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_LIMIT         reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_THEN          reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_NATURAL       reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_INNER         reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_LEFT          reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_RIGHT         reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_FULL          reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_WHERE         reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_ALL           reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_ANY           reduce using rule 155 (current -> R_CURRENT_DATE .)
    R_SOME          reduce using rule 155 (current -> R_CURRENT_DATE .)


state 104

    (156) current -> R_CURRENT_TIME .

    O_SUMA          reduce using rule 156 (current -> R_CURRENT_TIME .)
    O_RESTA         reduce using rule 156 (current -> R_CURRENT_TIME .)
    O_PRODUCTO      reduce using rule 156 (current -> R_CURRENT_TIME .)
    O_DIVISION      reduce using rule 156 (current -> R_CURRENT_TIME .)
    O_EXPONENTE     reduce using rule 156 (current -> R_CURRENT_TIME .)
    O_MODULAR       reduce using rule 156 (current -> R_CURRENT_TIME .)
    OC_CONCATENAR   reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_IN            reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_NOT           reduce using rule 156 (current -> R_CURRENT_TIME .)
    OL_MENORQUE     reduce using rule 156 (current -> R_CURRENT_TIME .)
    OL_MAYORQUE     reduce using rule 156 (current -> R_CURRENT_TIME .)
    OL_MAYORIGUALQUE reduce using rule 156 (current -> R_CURRENT_TIME .)
    OL_MENORIGUALQUE reduce using rule 156 (current -> R_CURRENT_TIME .)
    S_IGUAL         reduce using rule 156 (current -> R_CURRENT_TIME .)
    OL_DISTINTODE   reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_IS            reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_BETWEEN       reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_ISNULL        reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_NOTNULL       reduce using rule 156 (current -> R_CURRENT_TIME .)
    OL_ESIGUAL      reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_AS            reduce using rule 156 (current -> R_CURRENT_TIME .)
    ID              reduce using rule 156 (current -> R_CURRENT_TIME .)
    STRING          reduce using rule 156 (current -> R_CURRENT_TIME .)
    CHARACTER       reduce using rule 156 (current -> R_CURRENT_TIME .)
    S_COMA          reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_FROM          reduce using rule 156 (current -> R_CURRENT_TIME .)
    S_PUNTOCOMA     reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_UNION         reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_INTERSECT     reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_EXCEPT        reduce using rule 156 (current -> R_CURRENT_TIME .)
    S_PARDER        reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_AND           reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_OR            reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_GROUP         reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_ORDER         reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_LIMIT         reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_THEN          reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_NATURAL       reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_INNER         reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_LEFT          reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_RIGHT         reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_FULL          reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_WHERE         reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_ALL           reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_ANY           reduce using rule 156 (current -> R_CURRENT_TIME .)
    R_SOME          reduce using rule 156 (current -> R_CURRENT_TIME .)


state 105

    (239) boolean -> R_EXISTS . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 198


state 106

    (242) boolean -> expComp .

    R_AND           reduce using rule 242 (boolean -> expComp .)
    R_OR            reduce using rule 242 (boolean -> expComp .)
    R_IS            reduce using rule 242 (boolean -> expComp .)
    R_AS            reduce using rule 242 (boolean -> expComp .)
    ID              reduce using rule 242 (boolean -> expComp .)
    STRING          reduce using rule 242 (boolean -> expComp .)
    CHARACTER       reduce using rule 242 (boolean -> expComp .)
    S_COMA          reduce using rule 242 (boolean -> expComp .)
    R_FROM          reduce using rule 242 (boolean -> expComp .)
    S_PUNTOCOMA     reduce using rule 242 (boolean -> expComp .)
    R_UNION         reduce using rule 242 (boolean -> expComp .)
    R_INTERSECT     reduce using rule 242 (boolean -> expComp .)
    R_EXCEPT        reduce using rule 242 (boolean -> expComp .)
    S_PARDER        reduce using rule 242 (boolean -> expComp .)
    R_GROUP         reduce using rule 242 (boolean -> expComp .)
    R_ORDER         reduce using rule 242 (boolean -> expComp .)
    R_LIMIT         reduce using rule 242 (boolean -> expComp .)
    R_THEN          reduce using rule 242 (boolean -> expComp .)
    R_NATURAL       reduce using rule 242 (boolean -> expComp .)
    R_INNER         reduce using rule 242 (boolean -> expComp .)
    R_LEFT          reduce using rule 242 (boolean -> expComp .)
    R_RIGHT         reduce using rule 242 (boolean -> expComp .)
    R_FULL          reduce using rule 242 (boolean -> expComp .)
    R_WHERE         reduce using rule 242 (boolean -> expComp .)


state 107

    (243) boolean -> expSubq .

    R_AND           reduce using rule 243 (boolean -> expSubq .)
    R_OR            reduce using rule 243 (boolean -> expSubq .)
    R_IS            reduce using rule 243 (boolean -> expSubq .)
    R_AS            reduce using rule 243 (boolean -> expSubq .)
    ID              reduce using rule 243 (boolean -> expSubq .)
    STRING          reduce using rule 243 (boolean -> expSubq .)
    CHARACTER       reduce using rule 243 (boolean -> expSubq .)
    S_COMA          reduce using rule 243 (boolean -> expSubq .)
    R_FROM          reduce using rule 243 (boolean -> expSubq .)
    S_PUNTOCOMA     reduce using rule 243 (boolean -> expSubq .)
    R_UNION         reduce using rule 243 (boolean -> expSubq .)
    R_INTERSECT     reduce using rule 243 (boolean -> expSubq .)
    R_EXCEPT        reduce using rule 243 (boolean -> expSubq .)
    S_PARDER        reduce using rule 243 (boolean -> expSubq .)
    R_GROUP         reduce using rule 243 (boolean -> expSubq .)
    R_ORDER         reduce using rule 243 (boolean -> expSubq .)
    R_LIMIT         reduce using rule 243 (boolean -> expSubq .)
    R_THEN          reduce using rule 243 (boolean -> expSubq .)
    R_NATURAL       reduce using rule 243 (boolean -> expSubq .)
    R_INNER         reduce using rule 243 (boolean -> expSubq .)
    R_LEFT          reduce using rule 243 (boolean -> expSubq .)
    R_RIGHT         reduce using rule 243 (boolean -> expSubq .)
    R_FULL          reduce using rule 243 (boolean -> expSubq .)
    R_WHERE         reduce using rule 243 (boolean -> expSubq .)


state 108

    (141) timeStamp -> R_TIMESTAMP . STRING

    STRING          shift and go to state 199


state 109

    (142) timeStamp -> R_INTERVAL . STRING

    STRING          shift and go to state 200


state 110

    (233) expSubq -> stringExp . R_LIKE STRING

    R_LIKE          shift and go to state 201


state 111

    (305) selectStmt -> selectStmt R_UNION allOpt . selectStmt
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 202

state 112

    (311) allOpt -> R_ALL .

    R_SELECT        reduce using rule 311 (allOpt -> R_ALL .)
    S_PARIZQ        reduce using rule 311 (allOpt -> R_ALL .)


state 113

    (306) selectStmt -> selectStmt R_INTERSECT allOpt . selectStmt
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 203

state 114

    (307) selectStmt -> selectStmt R_EXCEPT allOpt . selectStmt
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 204

state 115

    (15) stmt -> ifStmt R_END R_IF . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 205


state 116

    (16) ifStmt -> R_IF S_PARIZQ expresion . S_PARDER R_THEN List_body else_

    S_PARDER        shift and go to state 206


state 117

    (256) columnName -> ID .
    (257) columnName -> ID . S_PUNTO ID
    (132) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (133) funcCall -> ID . S_PARIZQ S_PARDER

    O_SUMA          reduce using rule 256 (columnName -> ID .)
    O_RESTA         reduce using rule 256 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 256 (columnName -> ID .)
    O_DIVISION      reduce using rule 256 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 256 (columnName -> ID .)
    O_MODULAR       reduce using rule 256 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 256 (columnName -> ID .)
    R_IN            reduce using rule 256 (columnName -> ID .)
    R_NOT           reduce using rule 256 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 256 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 256 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 256 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 256 (columnName -> ID .)
    S_IGUAL         reduce using rule 256 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 256 (columnName -> ID .)
    R_IS            reduce using rule 256 (columnName -> ID .)
    R_BETWEEN       reduce using rule 256 (columnName -> ID .)
    R_ISNULL        reduce using rule 256 (columnName -> ID .)
    R_NOTNULL       reduce using rule 256 (columnName -> ID .)
    OL_ESIGUAL      reduce using rule 256 (columnName -> ID .)
    S_PARDER        reduce using rule 256 (columnName -> ID .)
    R_LIKE          reduce using rule 256 (columnName -> ID .)
    R_AS            reduce using rule 256 (columnName -> ID .)
    ID              reduce using rule 256 (columnName -> ID .)
    STRING          reduce using rule 256 (columnName -> ID .)
    CHARACTER       reduce using rule 256 (columnName -> ID .)
    S_COMA          reduce using rule 256 (columnName -> ID .)
    R_FROM          reduce using rule 256 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 256 (columnName -> ID .)
    R_UNION         reduce using rule 256 (columnName -> ID .)
    R_INTERSECT     reduce using rule 256 (columnName -> ID .)
    R_EXCEPT        reduce using rule 256 (columnName -> ID .)
    R_AND           reduce using rule 256 (columnName -> ID .)
    R_OR            reduce using rule 256 (columnName -> ID .)
    R_GROUP         reduce using rule 256 (columnName -> ID .)
    R_ORDER         reduce using rule 256 (columnName -> ID .)
    R_LIMIT         reduce using rule 256 (columnName -> ID .)
    R_THEN          reduce using rule 256 (columnName -> ID .)
    R_NATURAL       reduce using rule 256 (columnName -> ID .)
    R_INNER         reduce using rule 256 (columnName -> ID .)
    R_LEFT          reduce using rule 256 (columnName -> ID .)
    R_RIGHT         reduce using rule 256 (columnName -> ID .)
    R_FULL          reduce using rule 256 (columnName -> ID .)
    R_WHERE         reduce using rule 256 (columnName -> ID .)
    R_ALL           reduce using rule 256 (columnName -> ID .)
    R_ANY           reduce using rule 256 (columnName -> ID .)
    R_SOME          reduce using rule 256 (columnName -> ID .)
    S_PUNTO         shift and go to state 207
    S_PARIZQ        shift and go to state 152


state 118

    (385) functionStmt -> R_CREATE R_FUNCTION ID . S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> R_CREATE R_FUNCTION ID . S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction

    S_PARIZQ        shift and go to state 208


state 119

    (42) createOpts -> unique_index R_INDEX . ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    ID              shift and go to state 209


state 120

    (53) createOpts -> R_TABLE ifNotExists . idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    idOrString                     shift and go to state 210

state 121

    (58) ifNotExists -> R_IF . R_NOT R_EXISTS

    R_NOT           shift and go to state 211


state 122

    (54) createOpts -> orReplace R_DATABASE . ifNotExists idOrString createOwner createMode
    (58) ifNotExists -> . R_IF R_NOT R_EXISTS
    (59) ifNotExists -> .

    R_IF            shift and go to state 121
    ID              reduce using rule 59 (ifNotExists -> .)
    STRING          reduce using rule 59 (ifNotExists -> .)
    CHARACTER       reduce using rule 59 (ifNotExists -> .)

    ifNotExists                    shift and go to state 212

state 123

    (57) createOpts -> R_TYPE ifNotExists . ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 213


state 124

    (55) orReplace -> R_OR R_REPLACE .

    R_DATABASE      reduce using rule 55 (orReplace -> R_OR R_REPLACE .)


state 125

    (381) showStmt -> R_SHOW R_DATABASES likeOpt .

    S_PUNTOCOMA     reduce using rule 381 (showStmt -> R_SHOW R_DATABASES likeOpt .)


state 126

    (382) likeOpt -> R_LIKE . STRING

    STRING          shift and go to state 214


state 127

    (273) alterStmt -> R_ALTER R_DATABASE idOrString . alterDb
    (275) alterDb -> . R_RENAME R_TO idOrString
    (276) alterDb -> . R_OWNER R_TO ownerOPts

    R_RENAME        shift and go to state 216
    R_OWNER         shift and go to state 217

    alterDb                        shift and go to state 215

state 128

    (37) idOrString -> ID .

    R_RENAME        reduce using rule 37 (idOrString -> ID .)
    R_OWNER         reduce using rule 37 (idOrString -> ID .)
    R_ADD           reduce using rule 37 (idOrString -> ID .)
    R_ALTER         reduce using rule 37 (idOrString -> ID .)
    R_DROP          reduce using rule 37 (idOrString -> ID .)
    R_SET           reduce using rule 37 (idOrString -> ID .)
    S_COMA          reduce using rule 37 (idOrString -> ID .)
    R_WHERE         reduce using rule 37 (idOrString -> ID .)
    S_PUNTOCOMA     reduce using rule 37 (idOrString -> ID .)
    R_NATURAL       reduce using rule 37 (idOrString -> ID .)
    R_INNER         reduce using rule 37 (idOrString -> ID .)
    R_LEFT          reduce using rule 37 (idOrString -> ID .)
    R_RIGHT         reduce using rule 37 (idOrString -> ID .)
    R_FULL          reduce using rule 37 (idOrString -> ID .)
    R_GROUP         reduce using rule 37 (idOrString -> ID .)
    R_ORDER         reduce using rule 37 (idOrString -> ID .)
    R_LIMIT         reduce using rule 37 (idOrString -> ID .)
    R_UNION         reduce using rule 37 (idOrString -> ID .)
    R_INTERSECT     reduce using rule 37 (idOrString -> ID .)
    R_EXCEPT        reduce using rule 37 (idOrString -> ID .)
    S_PARDER        reduce using rule 37 (idOrString -> ID .)
    R_FROM          reduce using rule 37 (idOrString -> ID .)
    S_PARIZQ        reduce using rule 37 (idOrString -> ID .)
    R_ON            reduce using rule 37 (idOrString -> ID .)
    R_USING         reduce using rule 37 (idOrString -> ID .)
    R_MODE          reduce using rule 37 (idOrString -> ID .)


state 129

    (38) idOrString -> STRING .

    R_RENAME        reduce using rule 38 (idOrString -> STRING .)
    R_OWNER         reduce using rule 38 (idOrString -> STRING .)
    R_ADD           reduce using rule 38 (idOrString -> STRING .)
    R_ALTER         reduce using rule 38 (idOrString -> STRING .)
    R_DROP          reduce using rule 38 (idOrString -> STRING .)
    R_SET           reduce using rule 38 (idOrString -> STRING .)
    S_COMA          reduce using rule 38 (idOrString -> STRING .)
    R_WHERE         reduce using rule 38 (idOrString -> STRING .)
    S_PUNTOCOMA     reduce using rule 38 (idOrString -> STRING .)
    R_NATURAL       reduce using rule 38 (idOrString -> STRING .)
    R_INNER         reduce using rule 38 (idOrString -> STRING .)
    R_LEFT          reduce using rule 38 (idOrString -> STRING .)
    R_RIGHT         reduce using rule 38 (idOrString -> STRING .)
    R_FULL          reduce using rule 38 (idOrString -> STRING .)
    R_GROUP         reduce using rule 38 (idOrString -> STRING .)
    R_ORDER         reduce using rule 38 (idOrString -> STRING .)
    R_LIMIT         reduce using rule 38 (idOrString -> STRING .)
    R_UNION         reduce using rule 38 (idOrString -> STRING .)
    R_INTERSECT     reduce using rule 38 (idOrString -> STRING .)
    R_EXCEPT        reduce using rule 38 (idOrString -> STRING .)
    S_PARDER        reduce using rule 38 (idOrString -> STRING .)
    R_FROM          reduce using rule 38 (idOrString -> STRING .)
    S_PARIZQ        reduce using rule 38 (idOrString -> STRING .)
    R_ON            reduce using rule 38 (idOrString -> STRING .)
    R_USING         reduce using rule 38 (idOrString -> STRING .)
    R_MODE          reduce using rule 38 (idOrString -> STRING .)


state 130

    (39) idOrString -> CHARACTER .

    R_RENAME        reduce using rule 39 (idOrString -> CHARACTER .)
    R_OWNER         reduce using rule 39 (idOrString -> CHARACTER .)
    R_ADD           reduce using rule 39 (idOrString -> CHARACTER .)
    R_ALTER         reduce using rule 39 (idOrString -> CHARACTER .)
    R_DROP          reduce using rule 39 (idOrString -> CHARACTER .)
    R_SET           reduce using rule 39 (idOrString -> CHARACTER .)
    S_COMA          reduce using rule 39 (idOrString -> CHARACTER .)
    R_WHERE         reduce using rule 39 (idOrString -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 39 (idOrString -> CHARACTER .)
    R_NATURAL       reduce using rule 39 (idOrString -> CHARACTER .)
    R_INNER         reduce using rule 39 (idOrString -> CHARACTER .)
    R_LEFT          reduce using rule 39 (idOrString -> CHARACTER .)
    R_RIGHT         reduce using rule 39 (idOrString -> CHARACTER .)
    R_FULL          reduce using rule 39 (idOrString -> CHARACTER .)
    R_GROUP         reduce using rule 39 (idOrString -> CHARACTER .)
    R_ORDER         reduce using rule 39 (idOrString -> CHARACTER .)
    R_LIMIT         reduce using rule 39 (idOrString -> CHARACTER .)
    R_UNION         reduce using rule 39 (idOrString -> CHARACTER .)
    R_INTERSECT     reduce using rule 39 (idOrString -> CHARACTER .)
    R_EXCEPT        reduce using rule 39 (idOrString -> CHARACTER .)
    S_PARDER        reduce using rule 39 (idOrString -> CHARACTER .)
    R_FROM          reduce using rule 39 (idOrString -> CHARACTER .)
    S_PARIZQ        reduce using rule 39 (idOrString -> CHARACTER .)
    R_ON            reduce using rule 39 (idOrString -> CHARACTER .)
    R_USING         reduce using rule 39 (idOrString -> CHARACTER .)
    R_MODE          reduce using rule 39 (idOrString -> CHARACTER .)


state 131

    (274) alterStmt -> R_ALTER R_TABLE idOrString . alterTableList
    (280) alterTableList -> . alterTableList S_COMA alterTable
    (281) alterTableList -> . alterTable
    (282) alterTable -> . R_ADD alterAdd
    (283) alterTable -> . R_ALTER alterAlter
    (284) alterTable -> . R_DROP alterDrop
    (285) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 221
    R_ALTER         shift and go to state 218
    R_DROP          shift and go to state 222
    R_RENAME        shift and go to state 223

    alterTableList                 shift and go to state 219
    alterTable                     shift and go to state 220

state 132

    (297) dropStmt -> R_DROP R_TABLE ifExists . idOrString
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    idOrString                     shift and go to state 224

state 133

    (299) ifExists -> R_IF . R_EXISTS

    R_EXISTS        shift and go to state 225


state 134

    (298) dropStmt -> R_DROP R_DATABASE ifExists . idOrString
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    idOrString                     shift and go to state 226

state 135

    (368) insertStmt -> R_INSERT R_INTO ID . paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (369) paramsColumn -> . S_PARIZQ idList S_PARDER
    (370) paramsColumn -> .

    S_PARIZQ        shift and go to state 228
    R_VALUES        reduce using rule 370 (paramsColumn -> .)

    paramsColumn                   shift and go to state 227

state 136

    (308) selectStmt -> S_PARIZQ selectStmt S_PARDER .

    S_PUNTOCOMA     reduce using rule 308 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 308 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 308 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 308 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 308 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)


state 137

    (371) updateStmt -> R_UPDATE fromBody R_SET . updateCols whereCl
    (372) updateCols -> . updateCols S_COMA updateVals
    (373) updateCols -> . updateVals
    (374) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 231

    updateCols                     shift and go to state 229
    updateVals                     shift and go to state 230

state 138

    (324) fromBody -> ID optAlias .

    R_SET           reduce using rule 324 (fromBody -> ID optAlias .)
    S_COMA          reduce using rule 324 (fromBody -> ID optAlias .)
    R_WHERE         reduce using rule 324 (fromBody -> ID optAlias .)
    S_PUNTOCOMA     reduce using rule 324 (fromBody -> ID optAlias .)
    R_NATURAL       reduce using rule 324 (fromBody -> ID optAlias .)
    R_INNER         reduce using rule 324 (fromBody -> ID optAlias .)
    R_LEFT          reduce using rule 324 (fromBody -> ID optAlias .)
    R_RIGHT         reduce using rule 324 (fromBody -> ID optAlias .)
    R_FULL          reduce using rule 324 (fromBody -> ID optAlias .)
    R_GROUP         reduce using rule 324 (fromBody -> ID optAlias .)
    R_ORDER         reduce using rule 324 (fromBody -> ID optAlias .)
    R_LIMIT         reduce using rule 324 (fromBody -> ID optAlias .)
    R_UNION         reduce using rule 324 (fromBody -> ID optAlias .)
    R_INTERSECT     reduce using rule 324 (fromBody -> ID optAlias .)
    R_EXCEPT        reduce using rule 324 (fromBody -> ID optAlias .)
    S_PARDER        reduce using rule 324 (fromBody -> ID optAlias .)


state 139

    (319) optAlias -> R_AS . idOrString
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    idOrString                     shift and go to state 232

state 140

    (320) optAlias -> idOrString .

    R_SET           reduce using rule 320 (optAlias -> idOrString .)
    S_COMA          reduce using rule 320 (optAlias -> idOrString .)
    R_WHERE         reduce using rule 320 (optAlias -> idOrString .)
    S_PUNTOCOMA     reduce using rule 320 (optAlias -> idOrString .)
    R_NATURAL       reduce using rule 320 (optAlias -> idOrString .)
    R_INNER         reduce using rule 320 (optAlias -> idOrString .)
    R_LEFT          reduce using rule 320 (optAlias -> idOrString .)
    R_RIGHT         reduce using rule 320 (optAlias -> idOrString .)
    R_FULL          reduce using rule 320 (optAlias -> idOrString .)
    R_GROUP         reduce using rule 320 (optAlias -> idOrString .)
    R_ORDER         reduce using rule 320 (optAlias -> idOrString .)
    R_LIMIT         reduce using rule 320 (optAlias -> idOrString .)
    R_UNION         reduce using rule 320 (optAlias -> idOrString .)
    R_INTERSECT     reduce using rule 320 (optAlias -> idOrString .)
    R_EXCEPT        reduce using rule 320 (optAlias -> idOrString .)
    S_PARDER        reduce using rule 320 (optAlias -> idOrString .)
    R_FROM          reduce using rule 320 (optAlias -> idOrString .)
    R_ON            reduce using rule 320 (optAlias -> idOrString .)
    R_USING         reduce using rule 320 (optAlias -> idOrString .)


state 141

    (325) fromBody -> S_PARIZQ selectStmt . S_PARDER R_AS idOrString
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 233
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 142

    (377) deleteStmt -> R_DELETE fromCl whereCl .

    S_PUNTOCOMA     reduce using rule 377 (deleteStmt -> R_DELETE fromCl whereCl .)


state 143

    (341) whereCl -> R_WHERE . expBool
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 87
    S_PARIZQ        shift and go to state 190
    R_EXISTS        shift and go to state 105
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expBool                        shift and go to state 234
    boolean                        shift and go to state 88
    datatype                       shift and go to state 191
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    stringExp                      shift and go to state 110
    timeStamp                      shift and go to state 101

state 144

    (309) fromCl -> R_FROM tableExp .
    (322) tableExp -> tableExp . S_COMA fromBody

    R_WHERE         reduce using rule 309 (fromCl -> R_FROM tableExp .)
    S_PUNTOCOMA     reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_NATURAL       reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_INNER         reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_LEFT          reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_RIGHT         reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_FULL          reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_GROUP         reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_ORDER         reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_LIMIT         reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_UNION         reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_INTERSECT     reduce using rule 309 (fromCl -> R_FROM tableExp .)
    R_EXCEPT        reduce using rule 309 (fromCl -> R_FROM tableExp .)
    S_PARDER        reduce using rule 309 (fromCl -> R_FROM tableExp .)
    S_COMA          shift and go to state 235


state 145

    (323) tableExp -> fromBody .

    S_COMA          reduce using rule 323 (tableExp -> fromBody .)
    R_WHERE         reduce using rule 323 (tableExp -> fromBody .)
    S_PUNTOCOMA     reduce using rule 323 (tableExp -> fromBody .)
    R_NATURAL       reduce using rule 323 (tableExp -> fromBody .)
    R_INNER         reduce using rule 323 (tableExp -> fromBody .)
    R_LEFT          reduce using rule 323 (tableExp -> fromBody .)
    R_RIGHT         reduce using rule 323 (tableExp -> fromBody .)
    R_FULL          reduce using rule 323 (tableExp -> fromBody .)
    R_GROUP         reduce using rule 323 (tableExp -> fromBody .)
    R_ORDER         reduce using rule 323 (tableExp -> fromBody .)
    R_LIMIT         reduce using rule 323 (tableExp -> fromBody .)
    R_UNION         reduce using rule 323 (tableExp -> fromBody .)
    R_INTERSECT     reduce using rule 323 (tableExp -> fromBody .)
    R_EXCEPT        reduce using rule 323 (tableExp -> fromBody .)
    S_PARDER        reduce using rule 323 (tableExp -> fromBody .)


state 146

    (378) truncateStmt -> R_TRUNCATE tableOpt ID .

    S_PUNTOCOMA     reduce using rule 378 (truncateStmt -> R_TRUNCATE tableOpt ID .)


state 147

    (301) selectStmt -> R_SELECT R_DISTINCT selectParams . fromCl whereCl groupByCl orderByCl limitCl
    (309) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 64

    fromCl                         shift and go to state 236

state 148

    (302) selectStmt -> R_SELECT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> R_SELECT selectParams fromCl . joinList whereCl groupByCl limitCl
    (341) whereCl -> . R_WHERE expBool
    (342) whereCl -> .
    (326) joinList -> . joinList2
    (327) joinList2 -> . joinList2 joinCl
    (328) joinList2 -> . joinCl
    (329) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (330) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (331) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (334) joinOpt -> . R_INNER
    (335) joinOpt -> . R_LEFT
    (336) joinOpt -> . R_LEFT R_OUTER
    (337) joinOpt -> . R_RIGHT
    (338) joinOpt -> . R_RIGHT R_OUTER
    (339) joinOpt -> . R_FULL
    (340) joinOpt -> . R_FULL R_OUTER

    R_WHERE         shift and go to state 143
    R_GROUP         reduce using rule 342 (whereCl -> .)
    R_ORDER         reduce using rule 342 (whereCl -> .)
    R_LIMIT         reduce using rule 342 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 342 (whereCl -> .)
    R_UNION         reduce using rule 342 (whereCl -> .)
    R_INTERSECT     reduce using rule 342 (whereCl -> .)
    R_EXCEPT        reduce using rule 342 (whereCl -> .)
    S_PARDER        reduce using rule 342 (whereCl -> .)
    R_NATURAL       shift and go to state 242
    R_INNER         shift and go to state 243
    R_LEFT          shift and go to state 244
    R_RIGHT         shift and go to state 245
    R_FULL          shift and go to state 246

    whereCl                        shift and go to state 237
    joinList                       shift and go to state 238
    joinList2                      shift and go to state 239
    joinCl                         shift and go to state 240
    joinOpt                        shift and go to state 241

state 149

    (315) selectList -> selectList S_COMA . selectListParams optAlias
    (317) selectListParams -> . expresion
    (318) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (129) expresion -> . datatype
    (130) expresion -> . expBool
    (131) expresion -> . S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    ID              shift and go to state 74
    S_PARIZQ        shift and go to state 77
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_NOT           shift and go to state 87
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_EXISTS        shift and go to state 105
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    selectListParams               shift and go to state 247
    expresion                      shift and go to state 73
    datatype                       shift and go to state 75
    expBool                        shift and go to state 76
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    boolean                        shift and go to state 88
    timeStamp                      shift and go to state 101
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    stringExp                      shift and go to state 110

state 150

    (316) selectList -> selectListParams optAlias .

    S_COMA          reduce using rule 316 (selectList -> selectListParams optAlias .)
    R_FROM          reduce using rule 316 (selectList -> selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 316 (selectList -> selectListParams optAlias .)
    R_UNION         reduce using rule 316 (selectList -> selectListParams optAlias .)
    R_INTERSECT     reduce using rule 316 (selectList -> selectListParams optAlias .)
    R_EXCEPT        reduce using rule 316 (selectList -> selectListParams optAlias .)
    S_PARDER        reduce using rule 316 (selectList -> selectListParams optAlias .)


state 151

    (318) selectListParams -> ID S_PUNTO . O_PRODUCTO
    (257) columnName -> ID S_PUNTO . ID

    O_PRODUCTO      shift and go to state 249
    ID              shift and go to state 248


state 152

    (132) funcCall -> ID S_PARIZQ . paramsList S_PARDER
    (133) funcCall -> ID S_PARIZQ . S_PARDER
    (167) paramsList -> . paramsList S_COMA datatype
    (168) paramsList -> . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    S_PARDER        shift and go to state 251
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    paramsList                     shift and go to state 250
    datatype                       shift and go to state 252
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 153

    (169) datatype -> datatype O_SUMA . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 253
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 154

    (170) datatype -> datatype O_RESTA . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 254
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 155

    (171) datatype -> datatype O_PRODUCTO . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 255
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 156

    (172) datatype -> datatype O_DIVISION . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 256
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 157

    (173) datatype -> datatype O_EXPONENTE . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 257
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 158

    (174) datatype -> datatype O_MODULAR . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 258
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 159

    (175) datatype -> datatype OC_CONCATENAR . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 259
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 160

    (240) boolean -> datatype R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 260


state 161

    (241) boolean -> datatype R_NOT . R_IN S_PARIZQ selectStmt S_PARDER
    (200) expComp -> datatype R_NOT . R_BETWEEN datatype R_AND datatype
    (219) expSubq -> datatype R_NOT . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 261
    R_BETWEEN       shift and go to state 262


state 162

    (191) expComp -> datatype OL_MENORQUE . datatype
    (212) expSubq -> datatype OL_MENORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 263
    subqValues                     shift and go to state 264
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 163

    (192) expComp -> datatype OL_MAYORQUE . datatype
    (213) expSubq -> datatype OL_MAYORQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 268
    subqValues                     shift and go to state 269
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 164

    (193) expComp -> datatype OL_MAYORIGUALQUE . datatype
    (214) expSubq -> datatype OL_MAYORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 270
    subqValues                     shift and go to state 271
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 165

    (194) expComp -> datatype OL_MENORIGUALQUE . datatype
    (215) expSubq -> datatype OL_MENORIGUALQUE . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 272
    subqValues                     shift and go to state 273
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 166

    (195) expComp -> datatype S_IGUAL . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 274
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 167

    (196) expComp -> datatype OL_DISTINTODE . datatype
    (217) expSubq -> datatype OL_DISTINTODE . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 275
    subqValues                     shift and go to state 276
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 168

    (197) expComp -> datatype R_IS . R_DISTINCT R_FROM datatype
    (198) expComp -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype
    (204) expComp -> datatype R_IS . R_NULL
    (205) expComp -> datatype R_IS . R_TRUE
    (206) expComp -> datatype R_IS . R_FALSE
    (207) expComp -> datatype R_IS . R_UNKNOWN
    (208) expComp -> datatype R_IS . R_NOT R_NULL
    (209) expComp -> datatype R_IS . R_NOT R_TRUE
    (210) expComp -> datatype R_IS . R_NOT R_FALSE
    (211) expComp -> datatype R_IS . R_NOT R_UNKNOWN
    (221) expSubq -> datatype R_IS . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype R_IS . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype R_IS . R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype R_IS . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype R_IS . R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype R_IS . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype R_IS . R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype R_IS . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype R_IS . R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 277
    R_NOT           shift and go to state 278
    R_NULL          shift and go to state 279
    R_TRUE          shift and go to state 280
    R_FALSE         shift and go to state 281
    R_UNKNOWN       shift and go to state 282


state 169

    (199) expComp -> datatype R_BETWEEN . datatype R_AND datatype
    (201) expComp -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype
    (218) expSubq -> datatype R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_SYMMETRIC     shift and go to state 284
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 283
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 170

    (202) expComp -> datatype R_ISNULL .
    (225) expSubq -> datatype R_ISNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_OR            reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_IS            reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_AS            reduce using rule 202 (expComp -> datatype R_ISNULL .)
    ID              reduce using rule 202 (expComp -> datatype R_ISNULL .)
    STRING          reduce using rule 202 (expComp -> datatype R_ISNULL .)
    CHARACTER       reduce using rule 202 (expComp -> datatype R_ISNULL .)
    S_COMA          reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_FROM          reduce using rule 202 (expComp -> datatype R_ISNULL .)
    S_PUNTOCOMA     reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_UNION         reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_INTERSECT     reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_EXCEPT        reduce using rule 202 (expComp -> datatype R_ISNULL .)
    S_PARDER        reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_GROUP         reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_ORDER         reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_LIMIT         reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_THEN          reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_NATURAL       reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_INNER         reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_LEFT          reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_RIGHT         reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_FULL          reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_WHERE         reduce using rule 202 (expComp -> datatype R_ISNULL .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 285

state 171

    (203) expComp -> datatype R_NOTNULL .
    (226) expSubq -> datatype R_NOTNULL . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_OR            reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_IS            reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_AS            reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    ID              reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    STRING          reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    CHARACTER       reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    S_COMA          reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_FROM          reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    S_PUNTOCOMA     reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_UNION         reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_INTERSECT     reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_EXCEPT        reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    S_PARDER        reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_GROUP         reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_ORDER         reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_LIMIT         reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_THEN          reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_NATURAL       reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_INNER         reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_LEFT          reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_RIGHT         reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_FULL          reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_WHERE         reduce using rule 203 (expComp -> datatype R_NOTNULL .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 286

state 172

    (216) expSubq -> datatype OL_ESIGUAL . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 287

state 173

    (244) expBool -> expBool R_AND . expBool
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 87
    S_PARIZQ        shift and go to state 190
    R_EXISTS        shift and go to state 105
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expBool                        shift and go to state 288
    boolean                        shift and go to state 88
    datatype                       shift and go to state 191
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    stringExp                      shift and go to state 110
    timeStamp                      shift and go to state 101

state 174

    (245) expBool -> expBool R_OR . expBool
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 87
    S_PARIZQ        shift and go to state 190
    R_EXISTS        shift and go to state 105
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expBool                        shift and go to state 289
    boolean                        shift and go to state 88
    datatype                       shift and go to state 191
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    stringExp                      shift and go to state 110
    timeStamp                      shift and go to state 101

state 175

    (248) expBool -> expBool optBoolPredicate .

    R_AND           reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_OR            reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_IS            reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_AS            reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    ID              reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    STRING          reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    CHARACTER       reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    S_COMA          reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_FROM          reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    S_PUNTOCOMA     reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_UNION         reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_INTERSECT     reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_EXCEPT        reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    S_PARDER        reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_GROUP         reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_ORDER         reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_LIMIT         reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_THEN          reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_NATURAL       reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_INNER         reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_LEFT          reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_RIGHT         reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_FULL          reduce using rule 248 (expBool -> expBool optBoolPredicate .)
    R_WHERE         reduce using rule 248 (expBool -> expBool optBoolPredicate .)


state 176

    (250) optBoolPredicate -> R_IS . R_TRUE
    (251) optBoolPredicate -> R_IS . R_FALSE
    (252) optBoolPredicate -> R_IS . R_UNKNOWN
    (253) optBoolPredicate -> R_IS . R_NOT R_TRUE
    (254) optBoolPredicate -> R_IS . R_NOT R_FALSE
    (255) optBoolPredicate -> R_IS . R_NOT R_UNKNOWN

    R_TRUE          shift and go to state 290
    R_FALSE         shift and go to state 291
    R_UNKNOWN       shift and go to state 292
    R_NOT           shift and go to state 293


state 177

    (308) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (190) datatype -> S_PARIZQ . datatype S_PARDER
    (247) expBool -> S_PARIZQ . expBool S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 177
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_NOT           shift and go to state 87
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_EXISTS        shift and go to state 105
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    selectStmt                     shift and go to state 59
    datatype                       shift and go to state 179
    expBool                        shift and go to state 180
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    boolean                        shift and go to state 88
    timeStamp                      shift and go to state 101
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    stringExp                      shift and go to state 110

state 178

    (131) expresion -> S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 294
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 179

    (190) datatype -> S_PARIZQ datatype . S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype
    (240) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (191) expComp -> datatype . OL_MENORQUE datatype
    (192) expComp -> datatype . OL_MAYORQUE datatype
    (193) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (194) expComp -> datatype . OL_MENORIGUALQUE datatype
    (195) expComp -> datatype . S_IGUAL datatype
    (196) expComp -> datatype . OL_DISTINTODE datatype
    (197) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (200) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> datatype . R_ISNULL
    (203) expComp -> datatype . R_NOTNULL
    (204) expComp -> datatype . R_IS R_NULL
    (205) expComp -> datatype . R_IS R_TRUE
    (206) expComp -> datatype . R_IS R_FALSE
    (207) expComp -> datatype . R_IS R_UNKNOWN
    (208) expComp -> datatype . R_IS R_NOT R_NULL
    (209) expComp -> datatype . R_IS R_NOT R_TRUE
    (210) expComp -> datatype . R_IS R_NOT R_FALSE
    (211) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (212) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    S_PARDER        shift and go to state 295
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159
    R_IN            shift and go to state 160
    R_NOT           shift and go to state 161
    OL_MENORQUE     shift and go to state 162
    OL_MAYORQUE     shift and go to state 163
    OL_MAYORIGUALQUE shift and go to state 164
    OL_MENORIGUALQUE shift and go to state 165
    S_IGUAL         shift and go to state 166
    OL_DISTINTODE   shift and go to state 167
    R_IS            shift and go to state 168
    R_BETWEEN       shift and go to state 169
    R_ISNULL        shift and go to state 170
    R_NOTNULL       shift and go to state 171
    OL_ESIGUAL      shift and go to state 172


state 180

    (247) expBool -> S_PARIZQ expBool . S_PARDER
    (244) expBool -> expBool . R_AND expBool
    (245) expBool -> expBool . R_OR expBool
    (248) expBool -> expBool . optBoolPredicate
    (250) optBoolPredicate -> . R_IS R_TRUE
    (251) optBoolPredicate -> . R_IS R_FALSE
    (252) optBoolPredicate -> . R_IS R_UNKNOWN
    (253) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (254) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (255) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PARDER        shift and go to state 296
    R_AND           shift and go to state 173
    R_OR            shift and go to state 174
    R_IS            shift and go to state 176

    optBoolPredicate               shift and go to state 175

state 181

    (183) datatype -> O_SUMA datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 183 (datatype -> O_SUMA datatype .)
    O_RESTA         reduce using rule 183 (datatype -> O_SUMA datatype .)
    O_PRODUCTO      reduce using rule 183 (datatype -> O_SUMA datatype .)
    O_DIVISION      reduce using rule 183 (datatype -> O_SUMA datatype .)
    O_MODULAR       reduce using rule 183 (datatype -> O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_IN            reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_NOT           reduce using rule 183 (datatype -> O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 183 (datatype -> O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 183 (datatype -> O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 183 (datatype -> O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 183 (datatype -> O_SUMA datatype .)
    S_IGUAL         reduce using rule 183 (datatype -> O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_IS            reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_BETWEEN       reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_ISNULL        reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_NOTNULL       reduce using rule 183 (datatype -> O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_AS            reduce using rule 183 (datatype -> O_SUMA datatype .)
    ID              reduce using rule 183 (datatype -> O_SUMA datatype .)
    STRING          reduce using rule 183 (datatype -> O_SUMA datatype .)
    CHARACTER       reduce using rule 183 (datatype -> O_SUMA datatype .)
    S_COMA          reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_FROM          reduce using rule 183 (datatype -> O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_UNION         reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_INTERSECT     reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_EXCEPT        reduce using rule 183 (datatype -> O_SUMA datatype .)
    S_PARDER        reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_AND           reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_OR            reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_GROUP         reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_ORDER         reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_LIMIT         reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_THEN          reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_NATURAL       reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_INNER         reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_LEFT          reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_RIGHT         reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_FULL          reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_WHERE         reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_ALL           reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_ANY           reduce using rule 183 (datatype -> O_SUMA datatype .)
    R_SOME          reduce using rule 183 (datatype -> O_SUMA datatype .)
    O_EXPONENTE     shift and go to state 157

  ! O_EXPONENTE     [ reduce using rule 183 (datatype -> O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 153 ]
  ! O_RESTA         [ shift and go to state 154 ]
  ! O_PRODUCTO      [ shift and go to state 155 ]
  ! O_DIVISION      [ shift and go to state 156 ]
  ! O_MODULAR       [ shift and go to state 158 ]
  ! OC_CONCATENAR   [ shift and go to state 159 ]


state 182

    (184) datatype -> columnName .

    O_SUMA          reduce using rule 184 (datatype -> columnName .)
    O_RESTA         reduce using rule 184 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 184 (datatype -> columnName .)
    O_DIVISION      reduce using rule 184 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 184 (datatype -> columnName .)
    O_MODULAR       reduce using rule 184 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 184 (datatype -> columnName .)
    R_IN            reduce using rule 184 (datatype -> columnName .)
    R_NOT           reduce using rule 184 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 184 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 184 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 184 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 184 (datatype -> columnName .)
    S_IGUAL         reduce using rule 184 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 184 (datatype -> columnName .)
    R_IS            reduce using rule 184 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 184 (datatype -> columnName .)
    R_ISNULL        reduce using rule 184 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 184 (datatype -> columnName .)
    OL_ESIGUAL      reduce using rule 184 (datatype -> columnName .)
    R_AS            reduce using rule 184 (datatype -> columnName .)
    ID              reduce using rule 184 (datatype -> columnName .)
    STRING          reduce using rule 184 (datatype -> columnName .)
    CHARACTER       reduce using rule 184 (datatype -> columnName .)
    S_COMA          reduce using rule 184 (datatype -> columnName .)
    R_FROM          reduce using rule 184 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 184 (datatype -> columnName .)
    R_UNION         reduce using rule 184 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 184 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 184 (datatype -> columnName .)
    S_PARDER        reduce using rule 184 (datatype -> columnName .)
    R_AND           reduce using rule 184 (datatype -> columnName .)
    R_OR            reduce using rule 184 (datatype -> columnName .)
    R_GROUP         reduce using rule 184 (datatype -> columnName .)
    R_ORDER         reduce using rule 184 (datatype -> columnName .)
    R_LIMIT         reduce using rule 184 (datatype -> columnName .)
    R_THEN          reduce using rule 184 (datatype -> columnName .)
    R_NATURAL       reduce using rule 184 (datatype -> columnName .)
    R_INNER         reduce using rule 184 (datatype -> columnName .)
    R_LEFT          reduce using rule 184 (datatype -> columnName .)
    R_RIGHT         reduce using rule 184 (datatype -> columnName .)
    R_FULL          reduce using rule 184 (datatype -> columnName .)
    R_WHERE         reduce using rule 184 (datatype -> columnName .)
    R_ALL           reduce using rule 184 (datatype -> columnName .)
    R_ANY           reduce using rule 184 (datatype -> columnName .)
    R_SOME          reduce using rule 184 (datatype -> columnName .)


state 183

    (190) datatype -> S_PARIZQ . datatype S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 297
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 184

    (161) literal -> STRING .

    O_SUMA          reduce using rule 161 (literal -> STRING .)
    O_RESTA         reduce using rule 161 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 161 (literal -> STRING .)
    O_DIVISION      reduce using rule 161 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 161 (literal -> STRING .)
    O_MODULAR       reduce using rule 161 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 161 (literal -> STRING .)
    R_IN            reduce using rule 161 (literal -> STRING .)
    R_NOT           reduce using rule 161 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 161 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 161 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 161 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 161 (literal -> STRING .)
    S_IGUAL         reduce using rule 161 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 161 (literal -> STRING .)
    R_IS            reduce using rule 161 (literal -> STRING .)
    R_BETWEEN       reduce using rule 161 (literal -> STRING .)
    R_ISNULL        reduce using rule 161 (literal -> STRING .)
    R_NOTNULL       reduce using rule 161 (literal -> STRING .)
    OL_ESIGUAL      reduce using rule 161 (literal -> STRING .)
    R_AS            reduce using rule 161 (literal -> STRING .)
    ID              reduce using rule 161 (literal -> STRING .)
    STRING          reduce using rule 161 (literal -> STRING .)
    CHARACTER       reduce using rule 161 (literal -> STRING .)
    S_COMA          reduce using rule 161 (literal -> STRING .)
    R_FROM          reduce using rule 161 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 161 (literal -> STRING .)
    R_UNION         reduce using rule 161 (literal -> STRING .)
    R_INTERSECT     reduce using rule 161 (literal -> STRING .)
    R_EXCEPT        reduce using rule 161 (literal -> STRING .)
    S_PARDER        reduce using rule 161 (literal -> STRING .)
    R_AND           reduce using rule 161 (literal -> STRING .)
    R_OR            reduce using rule 161 (literal -> STRING .)
    R_GROUP         reduce using rule 161 (literal -> STRING .)
    R_ORDER         reduce using rule 161 (literal -> STRING .)
    R_LIMIT         reduce using rule 161 (literal -> STRING .)
    R_THEN          reduce using rule 161 (literal -> STRING .)
    R_NATURAL       reduce using rule 161 (literal -> STRING .)
    R_INNER         reduce using rule 161 (literal -> STRING .)
    R_LEFT          reduce using rule 161 (literal -> STRING .)
    R_RIGHT         reduce using rule 161 (literal -> STRING .)
    R_FULL          reduce using rule 161 (literal -> STRING .)
    R_WHERE         reduce using rule 161 (literal -> STRING .)
    R_ALL           reduce using rule 161 (literal -> STRING .)
    R_ANY           reduce using rule 161 (literal -> STRING .)
    R_SOME          reduce using rule 161 (literal -> STRING .)
    R_END           reduce using rule 161 (literal -> STRING .)
    R_ELSE          reduce using rule 161 (literal -> STRING .)
    R_WHEN          reduce using rule 161 (literal -> STRING .)
    R_DEFAULT       reduce using rule 161 (literal -> STRING .)
    R_NULL          reduce using rule 161 (literal -> STRING .)
    R_PRIMARY       reduce using rule 161 (literal -> STRING .)
    R_REFERENCES    reduce using rule 161 (literal -> STRING .)
    R_CONSTRAINT    reduce using rule 161 (literal -> STRING .)
    R_UNIQUE        reduce using rule 161 (literal -> STRING .)
    R_CHECK         reduce using rule 161 (literal -> STRING .)


state 185

    (182) datatype -> O_RESTA datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 182 (datatype -> O_RESTA datatype .)
    O_RESTA         reduce using rule 182 (datatype -> O_RESTA datatype .)
    O_PRODUCTO      reduce using rule 182 (datatype -> O_RESTA datatype .)
    O_DIVISION      reduce using rule 182 (datatype -> O_RESTA datatype .)
    O_MODULAR       reduce using rule 182 (datatype -> O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_IN            reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_NOT           reduce using rule 182 (datatype -> O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 182 (datatype -> O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 182 (datatype -> O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 182 (datatype -> O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 182 (datatype -> O_RESTA datatype .)
    S_IGUAL         reduce using rule 182 (datatype -> O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_IS            reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_BETWEEN       reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_ISNULL        reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_NOTNULL       reduce using rule 182 (datatype -> O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_AS            reduce using rule 182 (datatype -> O_RESTA datatype .)
    ID              reduce using rule 182 (datatype -> O_RESTA datatype .)
    STRING          reduce using rule 182 (datatype -> O_RESTA datatype .)
    CHARACTER       reduce using rule 182 (datatype -> O_RESTA datatype .)
    S_COMA          reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_FROM          reduce using rule 182 (datatype -> O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_UNION         reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_INTERSECT     reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_EXCEPT        reduce using rule 182 (datatype -> O_RESTA datatype .)
    S_PARDER        reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_AND           reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_OR            reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_GROUP         reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_ORDER         reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_LIMIT         reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_THEN          reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_NATURAL       reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_INNER         reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_LEFT          reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_RIGHT         reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_FULL          reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_WHERE         reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_ALL           reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_ANY           reduce using rule 182 (datatype -> O_RESTA datatype .)
    R_SOME          reduce using rule 182 (datatype -> O_RESTA datatype .)
    O_EXPONENTE     shift and go to state 157

  ! O_EXPONENTE     [ reduce using rule 182 (datatype -> O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 153 ]
  ! O_RESTA         [ shift and go to state 154 ]
  ! O_PRODUCTO      [ shift and go to state 155 ]
  ! O_DIVISION      [ shift and go to state 156 ]
  ! O_MODULAR       [ shift and go to state 158 ]
  ! OC_CONCATENAR   [ shift and go to state 159 ]


state 186

    (176) datatype -> R_CASE caseList . optElse R_END
    (177) caseList -> caseList . caseWhen
    (180) optElse -> . R_ELSE literal
    (181) optElse -> .
    (179) caseWhen -> . R_WHEN expBool R_THEN literal

    R_ELSE          shift and go to state 300
    R_END           reduce using rule 181 (optElse -> .)
    R_WHEN          shift and go to state 188

    optElse                        shift and go to state 298
    caseWhen                       shift and go to state 299

state 187

    (178) caseList -> caseWhen .

    R_ELSE          reduce using rule 178 (caseList -> caseWhen .)
    R_WHEN          reduce using rule 178 (caseList -> caseWhen .)
    R_END           reduce using rule 178 (caseList -> caseWhen .)


state 188

    (179) caseWhen -> R_WHEN . expBool R_THEN literal
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 87
    S_PARIZQ        shift and go to state 190
    R_EXISTS        shift and go to state 105
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expBool                        shift and go to state 301
    literal                        shift and go to state 82
    boolean                        shift and go to state 88
    datatype                       shift and go to state 191
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    columnName                     shift and go to state 81
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    stringExp                      shift and go to state 110
    timeStamp                      shift and go to state 101

state 189

    (246) expBool -> R_NOT expBool .
    (244) expBool -> expBool . R_AND expBool
    (245) expBool -> expBool . R_OR expBool
    (248) expBool -> expBool . optBoolPredicate
    (250) optBoolPredicate -> . R_IS R_TRUE
    (251) optBoolPredicate -> . R_IS R_FALSE
    (252) optBoolPredicate -> . R_IS R_UNKNOWN
    (253) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (254) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (255) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 246 (expBool -> R_NOT expBool .)
    ID              reduce using rule 246 (expBool -> R_NOT expBool .)
    STRING          reduce using rule 246 (expBool -> R_NOT expBool .)
    CHARACTER       reduce using rule 246 (expBool -> R_NOT expBool .)
    S_COMA          reduce using rule 246 (expBool -> R_NOT expBool .)
    R_FROM          reduce using rule 246 (expBool -> R_NOT expBool .)
    S_PUNTOCOMA     reduce using rule 246 (expBool -> R_NOT expBool .)
    R_UNION         reduce using rule 246 (expBool -> R_NOT expBool .)
    R_INTERSECT     reduce using rule 246 (expBool -> R_NOT expBool .)
    R_EXCEPT        reduce using rule 246 (expBool -> R_NOT expBool .)
    S_PARDER        reduce using rule 246 (expBool -> R_NOT expBool .)
    R_GROUP         reduce using rule 246 (expBool -> R_NOT expBool .)
    R_ORDER         reduce using rule 246 (expBool -> R_NOT expBool .)
    R_LIMIT         reduce using rule 246 (expBool -> R_NOT expBool .)
    R_THEN          reduce using rule 246 (expBool -> R_NOT expBool .)
    R_NATURAL       reduce using rule 246 (expBool -> R_NOT expBool .)
    R_INNER         reduce using rule 246 (expBool -> R_NOT expBool .)
    R_LEFT          reduce using rule 246 (expBool -> R_NOT expBool .)
    R_RIGHT         reduce using rule 246 (expBool -> R_NOT expBool .)
    R_FULL          reduce using rule 246 (expBool -> R_NOT expBool .)
    R_WHERE         reduce using rule 246 (expBool -> R_NOT expBool .)
    R_AND           shift and go to state 173
    R_OR            shift and go to state 174
    R_IS            shift and go to state 176

  ! R_AND           [ reduce using rule 246 (expBool -> R_NOT expBool .) ]
  ! R_OR            [ reduce using rule 246 (expBool -> R_NOT expBool .) ]
  ! R_IS            [ reduce using rule 246 (expBool -> R_NOT expBool .) ]

    optBoolPredicate               shift and go to state 175

state 190

    (247) expBool -> S_PARIZQ . expBool S_PARDER
    (190) datatype -> S_PARIZQ . datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    R_NOT           shift and go to state 87
    S_PARIZQ        shift and go to state 190
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_EXISTS        shift and go to state 105
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expBool                        shift and go to state 180
    datatype                       shift and go to state 179
    boolean                        shift and go to state 88
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    timeStamp                      shift and go to state 101
    stringExp                      shift and go to state 110

state 191

    (240) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype
    (191) expComp -> datatype . OL_MENORQUE datatype
    (192) expComp -> datatype . OL_MAYORQUE datatype
    (193) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (194) expComp -> datatype . OL_MENORIGUALQUE datatype
    (195) expComp -> datatype . S_IGUAL datatype
    (196) expComp -> datatype . OL_DISTINTODE datatype
    (197) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (200) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> datatype . R_ISNULL
    (203) expComp -> datatype . R_NOTNULL
    (204) expComp -> datatype . R_IS R_NULL
    (205) expComp -> datatype . R_IS R_TRUE
    (206) expComp -> datatype . R_IS R_FALSE
    (207) expComp -> datatype . R_IS R_UNKNOWN
    (208) expComp -> datatype . R_IS R_NOT R_NULL
    (209) expComp -> datatype . R_IS R_NOT R_TRUE
    (210) expComp -> datatype . R_IS R_NOT R_FALSE
    (211) expComp -> datatype . R_IS R_NOT R_UNKNOWN
    (212) expSubq -> datatype . OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> datatype . OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> datatype . OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> datatype . OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> datatype . OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> datatype . OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> datatype . R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> datatype . R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> datatype . R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> datatype . R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype . R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> datatype . R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> datatype . R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> datatype . R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype . R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> datatype . R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype . R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> datatype . R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype . R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_IN            shift and go to state 160
    R_NOT           shift and go to state 161
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159
    OL_MENORQUE     shift and go to state 162
    OL_MAYORQUE     shift and go to state 163
    OL_MAYORIGUALQUE shift and go to state 164
    OL_MENORIGUALQUE shift and go to state 165
    S_IGUAL         shift and go to state 166
    OL_DISTINTODE   shift and go to state 167
    R_IS            shift and go to state 168
    R_BETWEEN       shift and go to state 169
    R_ISNULL        shift and go to state 170
    R_NOTNULL       shift and go to state 171
    OL_ESIGUAL      shift and go to state 172


state 192

    (134) funcCall -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 302


state 193

    (135) funcCall -> R_COUNT S_PARIZQ . datatype S_PARDER
    (136) funcCall -> R_COUNT S_PARIZQ . O_PRODUCTO S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    O_PRODUCTO      shift and go to state 304
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 303
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 194

    (137) funcCall -> R_SUM S_PARIZQ . datatype S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 305
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 195

    (138) funcCall -> R_PROM S_PARIZQ . datatype S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 306
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 196

    (139) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM columnName S_PARDER
    (143) optsExtract -> . R_YEAR
    (144) optsExtract -> . R_MONTH
    (145) optsExtract -> . R_DAY
    (146) optsExtract -> . R_HOUR
    (147) optsExtract -> . R_MINUTE
    (148) optsExtract -> . R_SECOND

    R_YEAR          shift and go to state 308
    R_MONTH         shift and go to state 309
    R_DAY           shift and go to state 310
    R_HOUR          shift and go to state 311
    R_MINUTE        shift and go to state 312
    R_SECOND        shift and go to state 313

    optsExtract                    shift and go to state 307

state 197

    (149) datePart -> R_DATE_PART S_PARIZQ . STRING S_COMA dateSource S_PARDER

    STRING          shift and go to state 314


state 198

    (239) boolean -> R_EXISTS S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 315

state 199

    (141) timeStamp -> R_TIMESTAMP STRING .

    O_SUMA          reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    O_RESTA         reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    O_PRODUCTO      reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    O_DIVISION      reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    O_EXPONENTE     reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    O_MODULAR       reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    OC_CONCATENAR   reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_IN            reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOT           reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORQUE     reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORQUE     reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORIGUALQUE reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORIGUALQUE reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    S_IGUAL         reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    OL_DISTINTODE   reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_IS            reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_BETWEEN       reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_ISNULL        reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOTNULL       reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    OL_ESIGUAL      reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_AS            reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    ID              reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    STRING          reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    CHARACTER       reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    S_COMA          reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_FROM          reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    S_PUNTOCOMA     reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_UNION         reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_INTERSECT     reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_EXCEPT        reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    S_PARDER        reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_AND           reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_OR            reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_GROUP         reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_ORDER         reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_LIMIT         reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_THEN          reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_NATURAL       reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_INNER         reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_LEFT          reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_RIGHT         reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_FULL          reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_WHERE         reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_ALL           reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_ANY           reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)
    R_SOME          reduce using rule 141 (timeStamp -> R_TIMESTAMP STRING .)


state 200

    (142) timeStamp -> R_INTERVAL STRING .

    O_SUMA          reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    O_RESTA         reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    O_PRODUCTO      reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    O_DIVISION      reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    O_EXPONENTE     reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    O_MODULAR       reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    OC_CONCATENAR   reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_IN            reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_NOT           reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORQUE     reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORQUE     reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORIGUALQUE reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORIGUALQUE reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    S_IGUAL         reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    OL_DISTINTODE   reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_IS            reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_BETWEEN       reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_ISNULL        reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_NOTNULL       reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    OL_ESIGUAL      reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_AS            reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    ID              reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    STRING          reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    CHARACTER       reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    S_COMA          reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_FROM          reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    S_PUNTOCOMA     reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_UNION         reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_INTERSECT     reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_EXCEPT        reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    S_PARDER        reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_AND           reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_OR            reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_GROUP         reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_ORDER         reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_LIMIT         reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_THEN          reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_NATURAL       reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_INNER         reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_LEFT          reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_RIGHT         reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_FULL          reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_WHERE         reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_ALL           reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_ANY           reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)
    R_SOME          reduce using rule 142 (timeStamp -> R_INTERVAL STRING .)


state 201

    (233) expSubq -> stringExp R_LIKE . STRING

    STRING          shift and go to state 316


state 202

    (305) selectStmt -> selectStmt R_UNION allOpt selectStmt .
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 305 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_UNION         reduce using rule 305 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_INTERSECT     reduce using rule 305 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_EXCEPT        reduce using rule 305 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    S_PARDER        reduce using rule 305 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 39 ]
  ! R_INTERSECT     [ shift and go to state 40 ]
  ! R_EXCEPT        [ shift and go to state 41 ]


state 203

    (306) selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 306 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_UNION         reduce using rule 306 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 306 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 306 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    S_PARDER        reduce using rule 306 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 39 ]
  ! R_INTERSECT     [ shift and go to state 40 ]
  ! R_EXCEPT        [ shift and go to state 41 ]


state 204

    (307) selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 307 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_UNION         reduce using rule 307 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 307 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 307 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    S_PARDER        reduce using rule 307 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 39 ]
  ! R_INTERSECT     [ shift and go to state 40 ]
  ! R_EXCEPT        [ shift and go to state 41 ]


state 205

    (15) stmt -> ifStmt R_END R_IF S_PUNTOCOMA .

    R_CREATE        reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SHOW          reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ALTER         reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DROP          reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_INSERT        reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DELETE        reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_USE           reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SELECT        reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_IF            reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    $end            reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_END           reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_RETURN        reduce using rule 15 (stmt -> ifStmt R_END R_IF S_PUNTOCOMA .)


state 206

    (16) ifStmt -> R_IF S_PARIZQ expresion S_PARDER . R_THEN List_body else_

    R_THEN          shift and go to state 317


state 207

    (257) columnName -> ID S_PUNTO . ID

    ID              shift and go to state 248


state 208

    (385) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ . params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ . S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (388) params_list -> . params_list S_COMA param_item
    (389) params_list -> . param_item
    (390) param_item -> . ID types

    S_PARDER        shift and go to state 320
    ID              shift and go to state 318

    params_list                    shift and go to state 319
    param_item                     shift and go to state 321

state 209

    (42) createOpts -> unique_index R_INDEX ID . R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    R_ON            shift and go to state 322


state 210

    (53) createOpts -> R_TABLE ifNotExists idOrString . S_PARIZQ createTableList S_PARDER inheritsOpt

    S_PARIZQ        shift and go to state 323


state 211

    (58) ifNotExists -> R_IF R_NOT . R_EXISTS

    R_EXISTS        shift and go to state 324


state 212

    (54) createOpts -> orReplace R_DATABASE ifNotExists . idOrString createOwner createMode
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    idOrString                     shift and go to state 325

state 213

    (57) createOpts -> R_TYPE ifNotExists ID . R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    R_AS            shift and go to state 326


state 214

    (382) likeOpt -> R_LIKE STRING .

    S_PUNTOCOMA     reduce using rule 382 (likeOpt -> R_LIKE STRING .)


state 215

    (273) alterStmt -> R_ALTER R_DATABASE idOrString alterDb .

    S_PUNTOCOMA     reduce using rule 273 (alterStmt -> R_ALTER R_DATABASE idOrString alterDb .)


state 216

    (275) alterDb -> R_RENAME . R_TO idOrString

    R_TO            shift and go to state 327


state 217

    (276) alterDb -> R_OWNER . R_TO ownerOPts

    R_TO            shift and go to state 328


state 218

    (283) alterTable -> R_ALTER . alterAlter
    (291) alterAlter -> . R_COLUMN ID R_SET nullOpt
    (292) alterAlter -> . R_COLUMN ID R_SET defaultVal
    (293) alterAlter -> . R_COLUMN ID R_TYPE types

    R_COLUMN        shift and go to state 330

    alterAlter                     shift and go to state 329

state 219

    (274) alterStmt -> R_ALTER R_TABLE idOrString alterTableList .
    (280) alterTableList -> alterTableList . S_COMA alterTable

    S_PUNTOCOMA     reduce using rule 274 (alterStmt -> R_ALTER R_TABLE idOrString alterTableList .)
    S_COMA          shift and go to state 331


state 220

    (281) alterTableList -> alterTable .

    S_COMA          reduce using rule 281 (alterTableList -> alterTable .)
    S_PUNTOCOMA     reduce using rule 281 (alterTableList -> alterTable .)


state 221

    (282) alterTable -> R_ADD . alterAdd
    (286) alterAdd -> . R_COLUMN ID types
    (287) alterAdd -> . createConstraint
    (288) alterAdd -> . createPrimary
    (289) alterAdd -> . createForeign
    (290) alterAdd -> . constrName R_UNIQUE S_PARIZQ ID S_PARDER
    (79) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (81) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (82) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (83) constrName -> . R_CONSTRAINT ID
    (84) constrName -> .

    R_COLUMN        shift and go to state 333
    R_PRIMARY       shift and go to state 338
    R_CONSTRAINT    shift and go to state 339
    R_UNIQUE        reduce using rule 84 (constrName -> .)
    R_CHECK         reduce using rule 84 (constrName -> .)
    R_FOREIGN       reduce using rule 84 (constrName -> .)

    alterAdd                       shift and go to state 332
    createConstraint               shift and go to state 334
    createPrimary                  shift and go to state 335
    createForeign                  shift and go to state 336
    constrName                     shift and go to state 337

state 222

    (284) alterTable -> R_DROP . alterDrop
    (294) alterDrop -> . R_CONSTRAINT ID
    (295) alterDrop -> . R_COLUMN ID

    R_CONSTRAINT    shift and go to state 341
    R_COLUMN        shift and go to state 342

    alterDrop                      shift and go to state 340

state 223

    (285) alterTable -> R_RENAME . alterRename
    (296) alterRename -> . R_COLUMN ID R_TO ID

    R_COLUMN        shift and go to state 344

    alterRename                    shift and go to state 343

state 224

    (297) dropStmt -> R_DROP R_TABLE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 297 (dropStmt -> R_DROP R_TABLE ifExists idOrString .)


state 225

    (299) ifExists -> R_IF R_EXISTS .

    ID              reduce using rule 299 (ifExists -> R_IF R_EXISTS .)
    STRING          reduce using rule 299 (ifExists -> R_IF R_EXISTS .)
    CHARACTER       reduce using rule 299 (ifExists -> R_IF R_EXISTS .)


state 226

    (298) dropStmt -> R_DROP R_DATABASE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 298 (dropStmt -> R_DROP R_DATABASE ifExists idOrString .)


state 227

    (368) insertStmt -> R_INSERT R_INTO ID paramsColumn . R_VALUES S_PARIZQ paramsList S_PARDER

    R_VALUES        shift and go to state 345


state 228

    (369) paramsColumn -> S_PARIZQ . idList S_PARDER
    (85) idList -> . idList S_COMA ID
    (86) idList -> . ID

    ID              shift and go to state 347

    idList                         shift and go to state 346

state 229

    (371) updateStmt -> R_UPDATE fromBody R_SET updateCols . whereCl
    (372) updateCols -> updateCols . S_COMA updateVals
    (341) whereCl -> . R_WHERE expBool
    (342) whereCl -> .

    S_COMA          shift and go to state 349
    R_WHERE         shift and go to state 143
    S_PUNTOCOMA     reduce using rule 342 (whereCl -> .)

    whereCl                        shift and go to state 348

state 230

    (373) updateCols -> updateVals .

    S_COMA          reduce using rule 373 (updateCols -> updateVals .)
    R_WHERE         reduce using rule 373 (updateCols -> updateVals .)
    S_PUNTOCOMA     reduce using rule 373 (updateCols -> updateVals .)


state 231

    (374) updateVals -> ID . S_IGUAL updateExp

    S_IGUAL         shift and go to state 350


state 232

    (319) optAlias -> R_AS idOrString .

    R_SET           reduce using rule 319 (optAlias -> R_AS idOrString .)
    S_COMA          reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_WHERE         reduce using rule 319 (optAlias -> R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_NATURAL       reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_INNER         reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_LEFT          reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_RIGHT         reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_FULL          reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_GROUP         reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_ORDER         reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_LIMIT         reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_UNION         reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_INTERSECT     reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_EXCEPT        reduce using rule 319 (optAlias -> R_AS idOrString .)
    S_PARDER        reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_FROM          reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_ON            reduce using rule 319 (optAlias -> R_AS idOrString .)
    R_USING         reduce using rule 319 (optAlias -> R_AS idOrString .)


state 233

    (325) fromBody -> S_PARIZQ selectStmt S_PARDER . R_AS idOrString

    R_AS            shift and go to state 351


state 234

    (341) whereCl -> R_WHERE expBool .
    (244) expBool -> expBool . R_AND expBool
    (245) expBool -> expBool . R_OR expBool
    (248) expBool -> expBool . optBoolPredicate
    (250) optBoolPredicate -> . R_IS R_TRUE
    (251) optBoolPredicate -> . R_IS R_FALSE
    (252) optBoolPredicate -> . R_IS R_UNKNOWN
    (253) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (254) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (255) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PUNTOCOMA     reduce using rule 341 (whereCl -> R_WHERE expBool .)
    R_GROUP         reduce using rule 341 (whereCl -> R_WHERE expBool .)
    R_ORDER         reduce using rule 341 (whereCl -> R_WHERE expBool .)
    R_LIMIT         reduce using rule 341 (whereCl -> R_WHERE expBool .)
    R_UNION         reduce using rule 341 (whereCl -> R_WHERE expBool .)
    R_INTERSECT     reduce using rule 341 (whereCl -> R_WHERE expBool .)
    R_EXCEPT        reduce using rule 341 (whereCl -> R_WHERE expBool .)
    S_PARDER        reduce using rule 341 (whereCl -> R_WHERE expBool .)
    R_AND           shift and go to state 173
    R_OR            shift and go to state 174
    R_IS            shift and go to state 176

    optBoolPredicate               shift and go to state 175

state 235

    (322) tableExp -> tableExp S_COMA . fromBody
    (324) fromBody -> . ID optAlias
    (325) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 61
    S_PARIZQ        shift and go to state 62

    fromBody                       shift and go to state 352

state 236

    (301) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl . whereCl groupByCl orderByCl limitCl
    (341) whereCl -> . R_WHERE expBool
    (342) whereCl -> .

    R_WHERE         shift and go to state 143
    R_GROUP         reduce using rule 342 (whereCl -> .)
    R_ORDER         reduce using rule 342 (whereCl -> .)
    R_LIMIT         reduce using rule 342 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 342 (whereCl -> .)
    R_UNION         reduce using rule 342 (whereCl -> .)
    R_INTERSECT     reduce using rule 342 (whereCl -> .)
    R_EXCEPT        reduce using rule 342 (whereCl -> .)
    S_PARDER        reduce using rule 342 (whereCl -> .)

    whereCl                        shift and go to state 353

state 237

    (302) selectStmt -> R_SELECT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (343) groupByCl -> . R_GROUP R_BY groupList havingCl
    (344) groupByCl -> .

    R_GROUP         shift and go to state 355
    R_ORDER         reduce using rule 344 (groupByCl -> .)
    R_LIMIT         reduce using rule 344 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 344 (groupByCl -> .)
    R_UNION         reduce using rule 344 (groupByCl -> .)
    R_INTERSECT     reduce using rule 344 (groupByCl -> .)
    R_EXCEPT        reduce using rule 344 (groupByCl -> .)
    S_PARDER        reduce using rule 344 (groupByCl -> .)

    groupByCl                      shift and go to state 354

state 238

    (303) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> R_SELECT selectParams fromCl joinList . whereCl groupByCl limitCl
    (341) whereCl -> . R_WHERE expBool
    (342) whereCl -> .

    R_WHERE         shift and go to state 143
    R_GROUP         reduce using rule 342 (whereCl -> .)
    R_ORDER         reduce using rule 342 (whereCl -> .)
    R_LIMIT         reduce using rule 342 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 342 (whereCl -> .)
    R_UNION         reduce using rule 342 (whereCl -> .)
    R_INTERSECT     reduce using rule 342 (whereCl -> .)
    R_EXCEPT        reduce using rule 342 (whereCl -> .)
    S_PARDER        reduce using rule 342 (whereCl -> .)

    whereCl                        shift and go to state 356

state 239

    (326) joinList -> joinList2 .
    (327) joinList2 -> joinList2 . joinCl
    (329) joinCl -> . joinOpt R_JOIN columnName optAlias R_ON expBool
    (330) joinCl -> . joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (331) joinCl -> . R_NATURAL joinOpt R_JOIN columnName optAlias
    (334) joinOpt -> . R_INNER
    (335) joinOpt -> . R_LEFT
    (336) joinOpt -> . R_LEFT R_OUTER
    (337) joinOpt -> . R_RIGHT
    (338) joinOpt -> . R_RIGHT R_OUTER
    (339) joinOpt -> . R_FULL
    (340) joinOpt -> . R_FULL R_OUTER

    R_WHERE         reduce using rule 326 (joinList -> joinList2 .)
    R_GROUP         reduce using rule 326 (joinList -> joinList2 .)
    R_ORDER         reduce using rule 326 (joinList -> joinList2 .)
    R_LIMIT         reduce using rule 326 (joinList -> joinList2 .)
    S_PUNTOCOMA     reduce using rule 326 (joinList -> joinList2 .)
    R_UNION         reduce using rule 326 (joinList -> joinList2 .)
    R_INTERSECT     reduce using rule 326 (joinList -> joinList2 .)
    R_EXCEPT        reduce using rule 326 (joinList -> joinList2 .)
    S_PARDER        reduce using rule 326 (joinList -> joinList2 .)
    R_NATURAL       shift and go to state 242
    R_INNER         shift and go to state 243
    R_LEFT          shift and go to state 244
    R_RIGHT         shift and go to state 245
    R_FULL          shift and go to state 246

    joinCl                         shift and go to state 357
    joinOpt                        shift and go to state 241

state 240

    (328) joinList2 -> joinCl .

    R_NATURAL       reduce using rule 328 (joinList2 -> joinCl .)
    R_INNER         reduce using rule 328 (joinList2 -> joinCl .)
    R_LEFT          reduce using rule 328 (joinList2 -> joinCl .)
    R_RIGHT         reduce using rule 328 (joinList2 -> joinCl .)
    R_FULL          reduce using rule 328 (joinList2 -> joinCl .)
    R_WHERE         reduce using rule 328 (joinList2 -> joinCl .)
    R_GROUP         reduce using rule 328 (joinList2 -> joinCl .)
    R_ORDER         reduce using rule 328 (joinList2 -> joinCl .)
    R_LIMIT         reduce using rule 328 (joinList2 -> joinCl .)
    S_PUNTOCOMA     reduce using rule 328 (joinList2 -> joinCl .)
    R_UNION         reduce using rule 328 (joinList2 -> joinCl .)
    R_INTERSECT     reduce using rule 328 (joinList2 -> joinCl .)
    R_EXCEPT        reduce using rule 328 (joinList2 -> joinCl .)
    S_PARDER        reduce using rule 328 (joinList2 -> joinCl .)


state 241

    (329) joinCl -> joinOpt . R_JOIN columnName optAlias R_ON expBool
    (330) joinCl -> joinOpt . R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER

    R_JOIN          shift and go to state 358


state 242

    (331) joinCl -> R_NATURAL . joinOpt R_JOIN columnName optAlias
    (334) joinOpt -> . R_INNER
    (335) joinOpt -> . R_LEFT
    (336) joinOpt -> . R_LEFT R_OUTER
    (337) joinOpt -> . R_RIGHT
    (338) joinOpt -> . R_RIGHT R_OUTER
    (339) joinOpt -> . R_FULL
    (340) joinOpt -> . R_FULL R_OUTER

    R_INNER         shift and go to state 243
    R_LEFT          shift and go to state 244
    R_RIGHT         shift and go to state 245
    R_FULL          shift and go to state 246

    joinOpt                        shift and go to state 359

state 243

    (334) joinOpt -> R_INNER .

    R_JOIN          reduce using rule 334 (joinOpt -> R_INNER .)


state 244

    (335) joinOpt -> R_LEFT .
    (336) joinOpt -> R_LEFT . R_OUTER

    R_JOIN          reduce using rule 335 (joinOpt -> R_LEFT .)
    R_OUTER         shift and go to state 360


state 245

    (337) joinOpt -> R_RIGHT .
    (338) joinOpt -> R_RIGHT . R_OUTER

    R_JOIN          reduce using rule 337 (joinOpt -> R_RIGHT .)
    R_OUTER         shift and go to state 361


state 246

    (339) joinOpt -> R_FULL .
    (340) joinOpt -> R_FULL . R_OUTER

    R_JOIN          reduce using rule 339 (joinOpt -> R_FULL .)
    R_OUTER         shift and go to state 362


state 247

    (315) selectList -> selectList S_COMA selectListParams . optAlias
    (319) optAlias -> . R_AS idOrString
    (320) optAlias -> . idOrString
    (321) optAlias -> .
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    R_AS            shift and go to state 139
    S_COMA          reduce using rule 321 (optAlias -> .)
    R_FROM          reduce using rule 321 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 321 (optAlias -> .)
    R_UNION         reduce using rule 321 (optAlias -> .)
    R_INTERSECT     reduce using rule 321 (optAlias -> .)
    R_EXCEPT        reduce using rule 321 (optAlias -> .)
    S_PARDER        reduce using rule 321 (optAlias -> .)
    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    optAlias                       shift and go to state 363
    idOrString                     shift and go to state 140

state 248

    (257) columnName -> ID S_PUNTO ID .

    O_SUMA          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    O_RESTA         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    O_PRODUCTO      reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    O_DIVISION      reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    O_EXPONENTE     reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    O_MODULAR       reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    OC_CONCATENAR   reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_IN            reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_NOT           reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    OL_MENORQUE     reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    OL_MAYORQUE     reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    OL_MAYORIGUALQUE reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    OL_MENORIGUALQUE reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    S_IGUAL         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    OL_DISTINTODE   reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_IS            reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_BETWEEN       reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_ISNULL        reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_NOTNULL       reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    OL_ESIGUAL      reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_AS            reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    ID              reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    STRING          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    CHARACTER       reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    S_COMA          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_FROM          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    S_PUNTOCOMA     reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_UNION         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_INTERSECT     reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_EXCEPT        reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    S_PARDER        reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_LIKE          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_AND           reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_OR            reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_GROUP         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_ORDER         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_LIMIT         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_THEN          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_NATURAL       reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_INNER         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_LEFT          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_RIGHT         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_FULL          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_WHERE         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_ALL           reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_ANY           reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_SOME          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_ON            reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_USING         reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_HAVING        reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_ASC           reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_DESC          reduce using rule 257 (columnName -> ID S_PUNTO ID .)
    R_NULL          reduce using rule 257 (columnName -> ID S_PUNTO ID .)


state 249

    (318) selectListParams -> ID S_PUNTO O_PRODUCTO .

    R_AS            reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    ID              reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    STRING          reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    CHARACTER       reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_COMA          reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_FROM          reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_UNION         reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_INTERSECT     reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_EXCEPT        reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PARDER        reduce using rule 318 (selectListParams -> ID S_PUNTO O_PRODUCTO .)


state 250

    (132) funcCall -> ID S_PARIZQ paramsList . S_PARDER
    (167) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 364
    S_COMA          shift and go to state 365


state 251

    (133) funcCall -> ID S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    ID              reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    STRING          reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 133 (funcCall -> ID S_PARIZQ S_PARDER .)


state 252

    (168) paramsList -> datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 168 (paramsList -> datatype .)
    S_COMA          reduce using rule 168 (paramsList -> datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 253

    (169) datatype -> datatype O_SUMA datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    O_RESTA         reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_IN            reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_NOT           reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    S_IGUAL         reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_IS            reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_BETWEEN       reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_ISNULL        reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_NOTNULL       reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    OL_ESIGUAL      reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_AS            reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    ID              reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    STRING          reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    CHARACTER       reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    S_COMA          reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_FROM          reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_UNION         reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_INTERSECT     reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_EXCEPT        reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    S_PARDER        reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_AND           reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_OR            reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_GROUP         reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_ORDER         reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_LIMIT         reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_THEN          reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_NATURAL       reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_INNER         reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_LEFT          reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_RIGHT         reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_FULL          reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_WHERE         reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_ALL           reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_ANY           reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    R_SOME          reduce using rule 169 (datatype -> datatype O_SUMA datatype .)
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158

  ! O_PRODUCTO      [ reduce using rule 169 (datatype -> datatype O_SUMA datatype .) ]
  ! O_DIVISION      [ reduce using rule 169 (datatype -> datatype O_SUMA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 169 (datatype -> datatype O_SUMA datatype .) ]
  ! O_MODULAR       [ reduce using rule 169 (datatype -> datatype O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 153 ]
  ! O_RESTA         [ shift and go to state 154 ]
  ! OC_CONCATENAR   [ shift and go to state 159 ]


state 254

    (170) datatype -> datatype O_RESTA datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    O_RESTA         reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_IN            reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_NOT           reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    S_IGUAL         reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_IS            reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_BETWEEN       reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_ISNULL        reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_NOTNULL       reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    OL_ESIGUAL      reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_AS            reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    ID              reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    STRING          reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    CHARACTER       reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    S_COMA          reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_FROM          reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_UNION         reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_INTERSECT     reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_EXCEPT        reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    S_PARDER        reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_AND           reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_OR            reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_GROUP         reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_ORDER         reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_LIMIT         reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_THEN          reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_NATURAL       reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_INNER         reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_LEFT          reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_RIGHT         reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_FULL          reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_WHERE         reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_ALL           reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_ANY           reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    R_SOME          reduce using rule 170 (datatype -> datatype O_RESTA datatype .)
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158

  ! O_PRODUCTO      [ reduce using rule 170 (datatype -> datatype O_RESTA datatype .) ]
  ! O_DIVISION      [ reduce using rule 170 (datatype -> datatype O_RESTA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 170 (datatype -> datatype O_RESTA datatype .) ]
  ! O_MODULAR       [ reduce using rule 170 (datatype -> datatype O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 153 ]
  ! O_RESTA         [ shift and go to state 154 ]
  ! OC_CONCATENAR   [ shift and go to state 159 ]


state 255

    (171) datatype -> datatype O_PRODUCTO datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    O_RESTA         reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    O_PRODUCTO      reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    O_DIVISION      reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    O_MODULAR       reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    OC_CONCATENAR   reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_IN            reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOT           reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORQUE     reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORQUE     reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORIGUALQUE reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORIGUALQUE reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    S_IGUAL         reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    OL_DISTINTODE   reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_IS            reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_BETWEEN       reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_ISNULL        reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOTNULL       reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    OL_ESIGUAL      reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_AS            reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    ID              reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    STRING          reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    CHARACTER       reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    S_COMA          reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_FROM          reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    S_PUNTOCOMA     reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_UNION         reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_INTERSECT     reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_EXCEPT        reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    S_PARDER        reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_AND           reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_OR            reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_GROUP         reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_ORDER         reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_LIMIT         reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_THEN          reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_NATURAL       reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_INNER         reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_LEFT          reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_RIGHT         reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_FULL          reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_WHERE         reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_ALL           reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_ANY           reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    R_SOME          reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .)
    O_EXPONENTE     shift and go to state 157

  ! O_EXPONENTE     [ reduce using rule 171 (datatype -> datatype O_PRODUCTO datatype .) ]
  ! O_SUMA          [ shift and go to state 153 ]
  ! O_RESTA         [ shift and go to state 154 ]
  ! O_PRODUCTO      [ shift and go to state 155 ]
  ! O_DIVISION      [ shift and go to state 156 ]
  ! O_MODULAR       [ shift and go to state 158 ]
  ! OC_CONCATENAR   [ shift and go to state 159 ]


state 256

    (172) datatype -> datatype O_DIVISION datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    O_RESTA         reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    O_PRODUCTO      reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    O_DIVISION      reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    O_MODULAR       reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    OC_CONCATENAR   reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_IN            reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_NOT           reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORQUE     reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORQUE     reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORIGUALQUE reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORIGUALQUE reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    S_IGUAL         reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    OL_DISTINTODE   reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_IS            reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_BETWEEN       reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_ISNULL        reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_NOTNULL       reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    OL_ESIGUAL      reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_AS            reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    ID              reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    STRING          reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    CHARACTER       reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    S_COMA          reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_FROM          reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    S_PUNTOCOMA     reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_UNION         reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_INTERSECT     reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_EXCEPT        reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    S_PARDER        reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_AND           reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_OR            reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_GROUP         reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_ORDER         reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_LIMIT         reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_THEN          reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_NATURAL       reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_INNER         reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_LEFT          reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_RIGHT         reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_FULL          reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_WHERE         reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_ALL           reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_ANY           reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    R_SOME          reduce using rule 172 (datatype -> datatype O_DIVISION datatype .)
    O_EXPONENTE     shift and go to state 157

  ! O_EXPONENTE     [ reduce using rule 172 (datatype -> datatype O_DIVISION datatype .) ]
  ! O_SUMA          [ shift and go to state 153 ]
  ! O_RESTA         [ shift and go to state 154 ]
  ! O_PRODUCTO      [ shift and go to state 155 ]
  ! O_DIVISION      [ shift and go to state 156 ]
  ! O_MODULAR       [ shift and go to state 158 ]
  ! OC_CONCATENAR   [ shift and go to state 159 ]


state 257

    (173) datatype -> datatype O_EXPONENTE datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    O_RESTA         reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    O_PRODUCTO      reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    O_DIVISION      reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    O_EXPONENTE     reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    O_MODULAR       reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    OC_CONCATENAR   reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_IN            reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOT           reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORQUE     reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORQUE     reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORIGUALQUE reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORIGUALQUE reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    S_IGUAL         reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    OL_DISTINTODE   reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_IS            reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_BETWEEN       reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_ISNULL        reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOTNULL       reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    OL_ESIGUAL      reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_AS            reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    ID              reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    STRING          reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    CHARACTER       reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    S_COMA          reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_FROM          reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    S_PUNTOCOMA     reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_UNION         reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_INTERSECT     reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_EXCEPT        reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    S_PARDER        reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_AND           reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_OR            reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_GROUP         reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_ORDER         reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_LIMIT         reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_THEN          reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_NATURAL       reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_INNER         reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_LEFT          reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_RIGHT         reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_FULL          reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_WHERE         reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_ALL           reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_ANY           reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)
    R_SOME          reduce using rule 173 (datatype -> datatype O_EXPONENTE datatype .)

  ! O_SUMA          [ shift and go to state 153 ]
  ! O_RESTA         [ shift and go to state 154 ]
  ! O_PRODUCTO      [ shift and go to state 155 ]
  ! O_DIVISION      [ shift and go to state 156 ]
  ! O_EXPONENTE     [ shift and go to state 157 ]
  ! O_MODULAR       [ shift and go to state 158 ]
  ! OC_CONCATENAR   [ shift and go to state 159 ]


state 258

    (174) datatype -> datatype O_MODULAR datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    O_RESTA         reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    O_PRODUCTO      reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    O_DIVISION      reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    O_MODULAR       reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    OC_CONCATENAR   reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_IN            reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_NOT           reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORQUE     reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORQUE     reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORIGUALQUE reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    S_IGUAL         reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    OL_DISTINTODE   reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_IS            reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_BETWEEN       reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_ISNULL        reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_NOTNULL       reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    OL_ESIGUAL      reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_AS            reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    ID              reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    STRING          reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    CHARACTER       reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    S_COMA          reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_FROM          reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    S_PUNTOCOMA     reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_UNION         reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_INTERSECT     reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_EXCEPT        reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    S_PARDER        reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_AND           reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_OR            reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_GROUP         reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_ORDER         reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_LIMIT         reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_THEN          reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_NATURAL       reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_INNER         reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_LEFT          reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_RIGHT         reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_FULL          reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_WHERE         reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_ALL           reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_ANY           reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    R_SOME          reduce using rule 174 (datatype -> datatype O_MODULAR datatype .)
    O_EXPONENTE     shift and go to state 157

  ! O_EXPONENTE     [ reduce using rule 174 (datatype -> datatype O_MODULAR datatype .) ]
  ! O_SUMA          [ shift and go to state 153 ]
  ! O_RESTA         [ shift and go to state 154 ]
  ! O_PRODUCTO      [ shift and go to state 155 ]
  ! O_DIVISION      [ shift and go to state 156 ]
  ! O_MODULAR       [ shift and go to state 158 ]
  ! OC_CONCATENAR   [ shift and go to state 159 ]


state 259

    (175) datatype -> datatype OC_CONCATENAR datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    OC_CONCATENAR   reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IN            reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOT           reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORQUE     reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORQUE     reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORIGUALQUE reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    S_IGUAL         reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_DISTINTODE   reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IS            reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_BETWEEN       reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ISNULL        reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOTNULL       reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_ESIGUAL      reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AS            reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    ID              reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    STRING          reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    CHARACTER       reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    S_COMA          reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FROM          reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PUNTOCOMA     reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_UNION         reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INTERSECT     reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_EXCEPT        reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PARDER        reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AND           reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_OR            reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_GROUP         reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ORDER         reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LIMIT         reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_THEN          reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NATURAL       reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INNER         reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LEFT          reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_RIGHT         reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FULL          reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_WHERE         reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ALL           reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ANY           reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    R_SOME          reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158

  ! O_SUMA          [ reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_RESTA         [ reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_PRODUCTO      [ reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_DIVISION      [ reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_MODULAR       [ reduce using rule 175 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! OC_CONCATENAR   [ shift and go to state 159 ]


state 260

    (240) boolean -> datatype R_IN S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 366

state 261

    (241) boolean -> datatype R_NOT R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 367


state 262

    (200) expComp -> datatype R_NOT R_BETWEEN . datatype R_AND datatype
    (219) expSubq -> datatype R_NOT R_BETWEEN . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 368
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 263

    (191) expComp -> datatype OL_MENORQUE datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_OR            reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_IS            reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_AS            reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    ID              reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    STRING          reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    CHARACTER       reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    S_COMA          reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_FROM          reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_UNION         reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_INTERSECT     reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_EXCEPT        reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    S_PARDER        reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_GROUP         reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_ORDER         reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_LIMIT         reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_THEN          reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_NATURAL       reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_INNER         reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_LEFT          reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_RIGHT         reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_FULL          reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    R_WHERE         reduce using rule 191 (expComp -> datatype OL_MENORQUE datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 264

    (212) expSubq -> datatype OL_MENORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 369


state 265

    (236) subqValues -> R_ALL .

    S_PARIZQ        reduce using rule 236 (subqValues -> R_ALL .)


state 266

    (237) subqValues -> R_ANY .

    S_PARIZQ        reduce using rule 237 (subqValues -> R_ANY .)


state 267

    (238) subqValues -> R_SOME .

    S_PARIZQ        reduce using rule 238 (subqValues -> R_SOME .)


state 268

    (192) expComp -> datatype OL_MAYORQUE datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_OR            reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_IS            reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_AS            reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    ID              reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    STRING          reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    CHARACTER       reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    S_COMA          reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FROM          reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_UNION         reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INTERSECT     reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_EXCEPT        reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PARDER        reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_GROUP         reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_ORDER         reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LIMIT         reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_THEN          reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_NATURAL       reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INNER         reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LEFT          reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_RIGHT         reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FULL          reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    R_WHERE         reduce using rule 192 (expComp -> datatype OL_MAYORQUE datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 269

    (213) expSubq -> datatype OL_MAYORQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 370


state 270

    (193) expComp -> datatype OL_MAYORIGUALQUE datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_OR            reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_IS            reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_AS            reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    ID              reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    STRING          reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    CHARACTER       reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_COMA          reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FROM          reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_UNION         reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PARDER        reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_GROUP         reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_ORDER         reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_THEN          reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INNER         reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LEFT          reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FULL          reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_WHERE         reduce using rule 193 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 271

    (214) expSubq -> datatype OL_MAYORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 371


state 272

    (194) expComp -> datatype OL_MENORIGUALQUE datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_OR            reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_IS            reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_AS            reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    ID              reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    STRING          reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    CHARACTER       reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_COMA          reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FROM          reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_UNION         reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PARDER        reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_GROUP         reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_ORDER         reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_THEN          reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_NATURAL       reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INNER         reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LEFT          reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_RIGHT         reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FULL          reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_WHERE         reduce using rule 194 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 273

    (215) expSubq -> datatype OL_MENORIGUALQUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 372


state 274

    (195) expComp -> datatype S_IGUAL datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_OR            reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_IS            reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_AS            reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    ID              reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    STRING          reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    CHARACTER       reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    S_COMA          reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_FROM          reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    S_PUNTOCOMA     reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_UNION         reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_INTERSECT     reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_EXCEPT        reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    S_PARDER        reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_GROUP         reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_ORDER         reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_LIMIT         reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_THEN          reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_NATURAL       reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_INNER         reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_LEFT          reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_RIGHT         reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_FULL          reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    R_WHERE         reduce using rule 195 (expComp -> datatype S_IGUAL datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 275

    (196) expComp -> datatype OL_DISTINTODE datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_OR            reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_IS            reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_AS            reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    ID              reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    STRING          reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    CHARACTER       reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    S_COMA          reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FROM          reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PUNTOCOMA     reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_UNION         reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INTERSECT     reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_EXCEPT        reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PARDER        reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_GROUP         reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_ORDER         reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LIMIT         reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_THEN          reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_NATURAL       reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INNER         reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LEFT          reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_RIGHT         reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FULL          reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    R_WHERE         reduce using rule 196 (expComp -> datatype OL_DISTINTODE datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 276

    (217) expSubq -> datatype OL_DISTINTODE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 373


state 277

    (197) expComp -> datatype R_IS R_DISTINCT . R_FROM datatype
    (221) expSubq -> datatype R_IS R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 374


state 278

    (198) expComp -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype
    (208) expComp -> datatype R_IS R_NOT . R_NULL
    (209) expComp -> datatype R_IS R_NOT . R_TRUE
    (210) expComp -> datatype R_IS R_NOT . R_FALSE
    (211) expComp -> datatype R_IS R_NOT . R_UNKNOWN
    (222) expSubq -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> datatype R_IS R_NOT . R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> datatype R_IS R_NOT . R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> datatype R_IS R_NOT . R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> datatype R_IS R_NOT . R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER

    R_DISTINCT      shift and go to state 375
    R_NULL          shift and go to state 376
    R_TRUE          shift and go to state 377
    R_FALSE         shift and go to state 378
    R_UNKNOWN       shift and go to state 379


state 279

    (204) expComp -> datatype R_IS R_NULL .
    (223) expSubq -> datatype R_IS R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_OR            reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_IS            reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_AS            reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    ID              reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    STRING          reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    CHARACTER       reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    S_COMA          reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_FROM          reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    S_PUNTOCOMA     reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_UNION         reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_INTERSECT     reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_EXCEPT        reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    S_PARDER        reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_GROUP         reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_ORDER         reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_LIMIT         reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_THEN          reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_NATURAL       reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_INNER         reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_LEFT          reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_RIGHT         reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_FULL          reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_WHERE         reduce using rule 204 (expComp -> datatype R_IS R_NULL .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 380

state 280

    (205) expComp -> datatype R_IS R_TRUE .
    (227) expSubq -> datatype R_IS R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_OR            reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_IS            reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_AS            reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    ID              reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    STRING          reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    CHARACTER       reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    S_COMA          reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_FROM          reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_UNION         reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    S_PARDER        reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_GROUP         reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_ORDER         reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_LIMIT         reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_THEN          reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_NATURAL       reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_INNER         reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_LEFT          reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_RIGHT         reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_FULL          reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_WHERE         reduce using rule 205 (expComp -> datatype R_IS R_TRUE .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 381

state 281

    (206) expComp -> datatype R_IS R_FALSE .
    (229) expSubq -> datatype R_IS R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_OR            reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_IS            reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_AS            reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    ID              reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    STRING          reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    CHARACTER       reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    S_COMA          reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_FROM          reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_UNION         reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    S_PARDER        reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_GROUP         reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_ORDER         reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_LIMIT         reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_THEN          reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_NATURAL       reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_INNER         reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_LEFT          reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_RIGHT         reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_FULL          reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_WHERE         reduce using rule 206 (expComp -> datatype R_IS R_FALSE .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 382

state 282

    (207) expComp -> datatype R_IS R_UNKNOWN .
    (231) expSubq -> datatype R_IS R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_OR            reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_IS            reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_AS            reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    ID              reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    STRING          reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 207 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 383

state 283

    (199) expComp -> datatype R_BETWEEN datatype . R_AND datatype
    (218) expSubq -> datatype R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 384
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 284

    (201) expComp -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype
    (220) expSubq -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 385
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 285

    (225) expSubq -> datatype R_ISNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 386


state 286

    (226) expSubq -> datatype R_NOTNULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 387


state 287

    (216) expSubq -> datatype OL_ESIGUAL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 388


state 288

    (244) expBool -> expBool R_AND expBool .
    (244) expBool -> expBool . R_AND expBool
    (245) expBool -> expBool . R_OR expBool
    (248) expBool -> expBool . optBoolPredicate
    (250) optBoolPredicate -> . R_IS R_TRUE
    (251) optBoolPredicate -> . R_IS R_FALSE
    (252) optBoolPredicate -> . R_IS R_UNKNOWN
    (253) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (254) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (255) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_OR            reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_AS            reduce using rule 244 (expBool -> expBool R_AND expBool .)
    ID              reduce using rule 244 (expBool -> expBool R_AND expBool .)
    STRING          reduce using rule 244 (expBool -> expBool R_AND expBool .)
    CHARACTER       reduce using rule 244 (expBool -> expBool R_AND expBool .)
    S_COMA          reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_FROM          reduce using rule 244 (expBool -> expBool R_AND expBool .)
    S_PUNTOCOMA     reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_UNION         reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_INTERSECT     reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_EXCEPT        reduce using rule 244 (expBool -> expBool R_AND expBool .)
    S_PARDER        reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_GROUP         reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_ORDER         reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_LIMIT         reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_THEN          reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_NATURAL       reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_INNER         reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_LEFT          reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_RIGHT         reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_FULL          reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_WHERE         reduce using rule 244 (expBool -> expBool R_AND expBool .)
    R_IS            shift and go to state 176

  ! R_IS            [ reduce using rule 244 (expBool -> expBool R_AND expBool .) ]
  ! R_AND           [ shift and go to state 173 ]
  ! R_OR            [ shift and go to state 174 ]

    optBoolPredicate               shift and go to state 175

state 289

    (245) expBool -> expBool R_OR expBool .
    (244) expBool -> expBool . R_AND expBool
    (245) expBool -> expBool . R_OR expBool
    (248) expBool -> expBool . optBoolPredicate
    (250) optBoolPredicate -> . R_IS R_TRUE
    (251) optBoolPredicate -> . R_IS R_FALSE
    (252) optBoolPredicate -> . R_IS R_UNKNOWN
    (253) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (254) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (255) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_OR            reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_AS            reduce using rule 245 (expBool -> expBool R_OR expBool .)
    ID              reduce using rule 245 (expBool -> expBool R_OR expBool .)
    STRING          reduce using rule 245 (expBool -> expBool R_OR expBool .)
    CHARACTER       reduce using rule 245 (expBool -> expBool R_OR expBool .)
    S_COMA          reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_FROM          reduce using rule 245 (expBool -> expBool R_OR expBool .)
    S_PUNTOCOMA     reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_UNION         reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_INTERSECT     reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_EXCEPT        reduce using rule 245 (expBool -> expBool R_OR expBool .)
    S_PARDER        reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_GROUP         reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_ORDER         reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_LIMIT         reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_THEN          reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_NATURAL       reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_INNER         reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_LEFT          reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_RIGHT         reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_FULL          reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_WHERE         reduce using rule 245 (expBool -> expBool R_OR expBool .)
    R_IS            shift and go to state 176

  ! R_IS            [ reduce using rule 245 (expBool -> expBool R_OR expBool .) ]
  ! R_AND           [ shift and go to state 173 ]
  ! R_OR            [ shift and go to state 174 ]

    optBoolPredicate               shift and go to state 175

state 290

    (250) optBoolPredicate -> R_IS R_TRUE .

    R_AND           reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_OR            reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_IS            reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_AS            reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    ID              reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    STRING          reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    CHARACTER       reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    S_COMA          reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_FROM          reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_UNION         reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    S_PARDER        reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_GROUP         reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_ORDER         reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_LIMIT         reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_THEN          reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_NATURAL       reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_INNER         reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_LEFT          reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_RIGHT         reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_FULL          reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)
    R_WHERE         reduce using rule 250 (optBoolPredicate -> R_IS R_TRUE .)


state 291

    (251) optBoolPredicate -> R_IS R_FALSE .

    R_AND           reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_OR            reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_IS            reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_AS            reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    ID              reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    STRING          reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    CHARACTER       reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    S_COMA          reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_FROM          reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_UNION         reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    S_PARDER        reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_GROUP         reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_ORDER         reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_LIMIT         reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_THEN          reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_NATURAL       reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_INNER         reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_LEFT          reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_RIGHT         reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_FULL          reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)
    R_WHERE         reduce using rule 251 (optBoolPredicate -> R_IS R_FALSE .)


state 292

    (252) optBoolPredicate -> R_IS R_UNKNOWN .

    R_AND           reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_OR            reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_IS            reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_AS            reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    ID              reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    STRING          reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_NATURAL       reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INNER         reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LEFT          reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_RIGHT         reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FULL          reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_WHERE         reduce using rule 252 (optBoolPredicate -> R_IS R_UNKNOWN .)


state 293

    (253) optBoolPredicate -> R_IS R_NOT . R_TRUE
    (254) optBoolPredicate -> R_IS R_NOT . R_FALSE
    (255) optBoolPredicate -> R_IS R_NOT . R_UNKNOWN

    R_TRUE          shift and go to state 389
    R_FALSE         shift and go to state 390
    R_UNKNOWN       shift and go to state 391


state 294

    (131) expresion -> S_PARIZQ selectStmt S_PARDER .

    R_AS            reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 131 (expresion -> S_PARIZQ selectStmt S_PARDER .)


state 295

    (190) datatype -> S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 190 (datatype -> S_PARIZQ datatype S_PARDER .)


state 296

    (247) expBool -> S_PARIZQ expBool S_PARDER .

    R_AND           reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_OR            reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_IS            reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_AS            reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    ID              reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    STRING          reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    CHARACTER       reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_COMA          reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FROM          reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PUNTOCOMA     reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_UNION         reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INTERSECT     reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_EXCEPT        reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PARDER        reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_GROUP         reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_ORDER         reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LIMIT         reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_THEN          reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_NATURAL       reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INNER         reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LEFT          reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_RIGHT         reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FULL          reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_WHERE         reduce using rule 247 (expBool -> S_PARIZQ expBool S_PARDER .)


state 297

    (190) datatype -> S_PARIZQ datatype . S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 295
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 298

    (176) datatype -> R_CASE caseList optElse . R_END

    R_END           shift and go to state 392


state 299

    (177) caseList -> caseList caseWhen .

    R_ELSE          reduce using rule 177 (caseList -> caseList caseWhen .)
    R_WHEN          reduce using rule 177 (caseList -> caseList caseWhen .)
    R_END           reduce using rule 177 (caseList -> caseList caseWhen .)


state 300

    (180) optElse -> R_ELSE . literal
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL

    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95

    literal                        shift and go to state 393

state 301

    (179) caseWhen -> R_WHEN expBool . R_THEN literal
    (244) expBool -> expBool . R_AND expBool
    (245) expBool -> expBool . R_OR expBool
    (248) expBool -> expBool . optBoolPredicate
    (250) optBoolPredicate -> . R_IS R_TRUE
    (251) optBoolPredicate -> . R_IS R_FALSE
    (252) optBoolPredicate -> . R_IS R_UNKNOWN
    (253) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (254) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (255) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_THEN          shift and go to state 394
    R_AND           shift and go to state 173
    R_OR            shift and go to state 174
    R_IS            shift and go to state 176

    optBoolPredicate               shift and go to state 175

state 302

    (134) funcCall -> R_NOW S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_ESIGUAL      reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    ID              reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    STRING          reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NATURAL       reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INNER         reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LEFT          reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_RIGHT         reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FULL          reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ALL           reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ANY           reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_SOME          reduce using rule 134 (funcCall -> R_NOW S_PARIZQ S_PARDER .)


state 303

    (135) funcCall -> R_COUNT S_PARIZQ datatype . S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 395
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 304

    (136) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO . S_PARDER

    S_PARDER        shift and go to state 396


state 305

    (137) funcCall -> R_SUM S_PARIZQ datatype . S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 397
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 306

    (138) funcCall -> R_PROM S_PARIZQ datatype . S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 398
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 307

    (139) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM timeStamp S_PARDER
    (140) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM columnName S_PARDER

    R_FROM          shift and go to state 399


state 308

    (143) optsExtract -> R_YEAR .

    R_FROM          reduce using rule 143 (optsExtract -> R_YEAR .)


state 309

    (144) optsExtract -> R_MONTH .

    R_FROM          reduce using rule 144 (optsExtract -> R_MONTH .)


state 310

    (145) optsExtract -> R_DAY .

    R_FROM          reduce using rule 145 (optsExtract -> R_DAY .)


state 311

    (146) optsExtract -> R_HOUR .

    R_FROM          reduce using rule 146 (optsExtract -> R_HOUR .)


state 312

    (147) optsExtract -> R_MINUTE .

    R_FROM          reduce using rule 147 (optsExtract -> R_MINUTE .)


state 313

    (148) optsExtract -> R_SECOND .

    R_FROM          reduce using rule 148 (optsExtract -> R_SECOND .)


state 314

    (149) datePart -> R_DATE_PART S_PARIZQ STRING . S_COMA dateSource S_PARDER

    S_COMA          shift and go to state 400


state 315

    (239) boolean -> R_EXISTS S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 401
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 316

    (233) expSubq -> stringExp R_LIKE STRING .

    R_AND           reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_OR            reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_IS            reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_AS            reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    ID              reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    STRING          reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    CHARACTER       reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    S_COMA          reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_FROM          reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    S_PUNTOCOMA     reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_UNION         reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_INTERSECT     reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_EXCEPT        reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    S_PARDER        reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_GROUP         reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_ORDER         reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_LIMIT         reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_THEN          reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_NATURAL       reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_INNER         reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_LEFT          reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_RIGHT         reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_FULL          reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)
    R_WHERE         reduce using rule 233 (expSubq -> stringExp R_LIKE STRING .)


state 317

    (16) ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN . List_body else_
    (23) List_body -> . List_body body
    (24) List_body -> . body
    (25) body -> . createStmt S_PUNTOCOMA
    (26) body -> . showStmt S_PUNTOCOMA
    (27) body -> . alterStmt S_PUNTOCOMA
    (28) body -> . dropStmt S_PUNTOCOMA
    (29) body -> . insertStmt S_PUNTOCOMA
    (30) body -> . updateStmt S_PUNTOCOMA
    (31) body -> . deleteStmt S_PUNTOCOMA
    (32) body -> . truncateStmt S_PUNTOCOMA
    (33) body -> . useStmt S_PUNTOCOMA
    (34) body -> . selectStmt S_PUNTOCOMA
    (35) body -> . functionStmt
    (36) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16

    List_body                      shift and go to state 402
    body                           shift and go to state 403
    createStmt                     shift and go to state 404
    showStmt                       shift and go to state 405
    alterStmt                      shift and go to state 406
    dropStmt                       shift and go to state 407
    insertStmt                     shift and go to state 408
    updateStmt                     shift and go to state 409
    deleteStmt                     shift and go to state 410
    truncateStmt                   shift and go to state 411
    useStmt                        shift and go to state 412
    selectStmt                     shift and go to state 413
    functionStmt                   shift and go to state 414
    ifStmt                         shift and go to state 415

state 318

    (390) param_item -> ID . types
    (87) types -> . ID
    (88) types -> . T_SMALLINT
    (89) types -> . T_INTEGER
    (90) types -> . T_BIGINT
    (91) types -> . T_REAL
    (92) types -> . T_DOUBLE T_PRECISION
    (93) types -> . T_MONEY
    (94) types -> . T_TEXT
    (95) types -> . T_BOOLEAN
    (96) types -> . R_TIMESTAMP
    (97) types -> . T_DATE
    (98) types -> . T_TIME
    (99) types -> . T_DECIMAL optParams
    (100) types -> . T_NUMERIC optParams
    (101) types -> . T_VARCHAR optParams
    (102) types -> . T_CHARACTER optParams
    (103) types -> . T_CHAR optParams
    (104) types -> . T_CHARACTER T_VARYING optParams
    (105) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 416
    T_SMALLINT      shift and go to state 418
    T_INTEGER       shift and go to state 419
    T_BIGINT        shift and go to state 420
    T_REAL          shift and go to state 421
    T_DOUBLE        shift and go to state 422
    T_MONEY         shift and go to state 423
    T_TEXT          shift and go to state 424
    T_BOOLEAN       shift and go to state 425
    R_TIMESTAMP     shift and go to state 426
    T_DATE          shift and go to state 427
    T_TIME          shift and go to state 428
    T_DECIMAL       shift and go to state 429
    T_NUMERIC       shift and go to state 430
    T_VARCHAR       shift and go to state 431
    T_CHARACTER     shift and go to state 432
    T_CHAR          shift and go to state 433
    R_INTERVAL      shift and go to state 434

    types                          shift and go to state 417

state 319

    (385) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list . S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (388) params_list -> params_list . S_COMA param_item

    S_PARDER        shift and go to state 435
    S_COMA          shift and go to state 436


state 320

    (386) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER . returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (391) returnsStmt -> . R_RETURNS types
    (392) returnsStmt -> .

    R_RETURNS       shift and go to state 438
    R_AS            reduce using rule 392 (returnsStmt -> .)

    returnsStmt                    shift and go to state 437

state 321

    (389) params_list -> param_item .

    S_PARDER        reduce using rule 389 (params_list -> param_item .)
    S_COMA          reduce using rule 389 (params_list -> param_item .)


state 322

    (42) createOpts -> unique_index R_INDEX ID R_ON . ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    ID              shift and go to state 439


state 323

    (53) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ . createTableList S_PARDER inheritsOpt
    (70) createTableList -> . createTableList S_COMA createTable
    (71) createTableList -> . createTable
    (72) createTable -> . ID types createColumns
    (73) createTable -> . createConstraint
    (74) createTable -> . createUnique
    (75) createTable -> . createPrimary
    (76) createTable -> . createForeign
    (79) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (80) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (81) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (82) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (83) constrName -> . R_CONSTRAINT ID
    (84) constrName -> .

    ID              shift and go to state 442
    R_UNIQUE        shift and go to state 448
    R_PRIMARY       shift and go to state 338
    R_CONSTRAINT    shift and go to state 339
    R_CHECK         reduce using rule 84 (constrName -> .)
    R_FOREIGN       reduce using rule 84 (constrName -> .)

    createTableList                shift and go to state 440
    createTable                    shift and go to state 441
    createConstraint               shift and go to state 443
    createUnique                   shift and go to state 444
    createPrimary                  shift and go to state 445
    createForeign                  shift and go to state 446
    constrName                     shift and go to state 447

state 324

    (58) ifNotExists -> R_IF R_NOT R_EXISTS .

    ID              reduce using rule 58 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    STRING          reduce using rule 58 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    CHARACTER       reduce using rule 58 (ifNotExists -> R_IF R_NOT R_EXISTS .)


state 325

    (54) createOpts -> orReplace R_DATABASE ifNotExists idOrString . createOwner createMode
    (62) createOwner -> . R_OWNER ID
    (63) createOwner -> . R_OWNER STRING
    (64) createOwner -> . R_OWNER S_IGUAL ID
    (65) createOwner -> . R_OWNER S_IGUAL STRING
    (66) createOwner -> .

    R_OWNER         shift and go to state 450
    R_MODE          reduce using rule 66 (createOwner -> .)
    S_PUNTOCOMA     reduce using rule 66 (createOwner -> .)

    createOwner                    shift and go to state 449

state 326

    (57) createOpts -> R_TYPE ifNotExists ID R_AS . R_ENUM S_PARIZQ paramsList S_PARDER

    R_ENUM          shift and go to state 451


state 327

    (275) alterDb -> R_RENAME R_TO . idOrString
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    idOrString                     shift and go to state 452

state 328

    (276) alterDb -> R_OWNER R_TO . ownerOPts
    (277) ownerOPts -> . idOrString
    (278) ownerOPts -> . R_CURRENT_USER
    (279) ownerOPts -> . R_SESSION_USER
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    R_CURRENT_USER  shift and go to state 455
    R_SESSION_USER  shift and go to state 456
    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    ownerOPts                      shift and go to state 453
    idOrString                     shift and go to state 454

state 329

    (283) alterTable -> R_ALTER alterAlter .

    S_COMA          reduce using rule 283 (alterTable -> R_ALTER alterAlter .)
    S_PUNTOCOMA     reduce using rule 283 (alterTable -> R_ALTER alterAlter .)


state 330

    (291) alterAlter -> R_COLUMN . ID R_SET nullOpt
    (292) alterAlter -> R_COLUMN . ID R_SET defaultVal
    (293) alterAlter -> R_COLUMN . ID R_TYPE types

    ID              shift and go to state 457


state 331

    (280) alterTableList -> alterTableList S_COMA . alterTable
    (282) alterTable -> . R_ADD alterAdd
    (283) alterTable -> . R_ALTER alterAlter
    (284) alterTable -> . R_DROP alterDrop
    (285) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 221
    R_ALTER         shift and go to state 218
    R_DROP          shift and go to state 222
    R_RENAME        shift and go to state 223

    alterTable                     shift and go to state 458

state 332

    (282) alterTable -> R_ADD alterAdd .

    S_COMA          reduce using rule 282 (alterTable -> R_ADD alterAdd .)
    S_PUNTOCOMA     reduce using rule 282 (alterTable -> R_ADD alterAdd .)


state 333

    (286) alterAdd -> R_COLUMN . ID types

    ID              shift and go to state 459


state 334

    (287) alterAdd -> createConstraint .

    S_COMA          reduce using rule 287 (alterAdd -> createConstraint .)
    S_PUNTOCOMA     reduce using rule 287 (alterAdd -> createConstraint .)


state 335

    (288) alterAdd -> createPrimary .

    S_COMA          reduce using rule 288 (alterAdd -> createPrimary .)
    S_PUNTOCOMA     reduce using rule 288 (alterAdd -> createPrimary .)


state 336

    (289) alterAdd -> createForeign .

    S_COMA          reduce using rule 289 (alterAdd -> createForeign .)
    S_PUNTOCOMA     reduce using rule 289 (alterAdd -> createForeign .)


state 337

    (290) alterAdd -> constrName . R_UNIQUE S_PARIZQ ID S_PARDER
    (79) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (82) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_UNIQUE        shift and go to state 460
    R_CHECK         shift and go to state 461
    R_FOREIGN       shift and go to state 462


state 338

    (81) createPrimary -> R_PRIMARY . R_KEY S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 463


state 339

    (83) constrName -> R_CONSTRAINT . ID

    ID              shift and go to state 464


state 340

    (284) alterTable -> R_DROP alterDrop .

    S_COMA          reduce using rule 284 (alterTable -> R_DROP alterDrop .)
    S_PUNTOCOMA     reduce using rule 284 (alterTable -> R_DROP alterDrop .)


state 341

    (294) alterDrop -> R_CONSTRAINT . ID

    ID              shift and go to state 465


state 342

    (295) alterDrop -> R_COLUMN . ID

    ID              shift and go to state 466


state 343

    (285) alterTable -> R_RENAME alterRename .

    S_COMA          reduce using rule 285 (alterTable -> R_RENAME alterRename .)
    S_PUNTOCOMA     reduce using rule 285 (alterTable -> R_RENAME alterRename .)


state 344

    (296) alterRename -> R_COLUMN . ID R_TO ID

    ID              shift and go to state 467


state 345

    (368) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 468


state 346

    (369) paramsColumn -> S_PARIZQ idList . S_PARDER
    (85) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 469
    S_COMA          shift and go to state 470


state 347

    (86) idList -> ID .

    S_PARDER        reduce using rule 86 (idList -> ID .)
    S_COMA          reduce using rule 86 (idList -> ID .)
    R_DESC          reduce using rule 86 (idList -> ID .)
    R_ASC           reduce using rule 86 (idList -> ID .)
    R_NULLS         reduce using rule 86 (idList -> ID .)


state 348

    (371) updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .

    S_PUNTOCOMA     reduce using rule 371 (updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .)


state 349

    (372) updateCols -> updateCols S_COMA . updateVals
    (374) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 231

    updateVals                     shift and go to state 471

state 350

    (374) updateVals -> ID S_IGUAL . updateExp
    (375) updateExp -> . datatype
    (376) updateExp -> . R_DEFAULT
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_DEFAULT       shift and go to state 474
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    updateExp                      shift and go to state 472
    datatype                       shift and go to state 473
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 351

    (325) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS . idOrString
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    idOrString                     shift and go to state 475

state 352

    (322) tableExp -> tableExp S_COMA fromBody .

    S_COMA          reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_WHERE         reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    S_PUNTOCOMA     reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_NATURAL       reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_INNER         reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_LEFT          reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_RIGHT         reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_FULL          reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_GROUP         reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_ORDER         reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_LIMIT         reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_UNION         reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_INTERSECT     reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    R_EXCEPT        reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)
    S_PARDER        reduce using rule 322 (tableExp -> tableExp S_COMA fromBody .)


state 353

    (301) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl . groupByCl orderByCl limitCl
    (343) groupByCl -> . R_GROUP R_BY groupList havingCl
    (344) groupByCl -> .

    R_GROUP         shift and go to state 355
    R_ORDER         reduce using rule 344 (groupByCl -> .)
    R_LIMIT         reduce using rule 344 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 344 (groupByCl -> .)
    R_UNION         reduce using rule 344 (groupByCl -> .)
    R_INTERSECT     reduce using rule 344 (groupByCl -> .)
    R_EXCEPT        reduce using rule 344 (groupByCl -> .)
    S_PARDER        reduce using rule 344 (groupByCl -> .)

    groupByCl                      shift and go to state 476

state 354

    (302) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (351) orderByCl -> . R_ORDER R_BY orderList
    (352) orderByCl -> .

    R_ORDER         shift and go to state 478
    R_LIMIT         reduce using rule 352 (orderByCl -> .)
    S_PUNTOCOMA     reduce using rule 352 (orderByCl -> .)
    R_UNION         reduce using rule 352 (orderByCl -> .)
    R_INTERSECT     reduce using rule 352 (orderByCl -> .)
    R_EXCEPT        reduce using rule 352 (orderByCl -> .)
    S_PARDER        reduce using rule 352 (orderByCl -> .)

    orderByCl                      shift and go to state 477

state 355

    (343) groupByCl -> R_GROUP . R_BY groupList havingCl

    R_BY            shift and go to state 479


state 356

    (303) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl orderByCl limitCl
    (304) selectStmt -> R_SELECT selectParams fromCl joinList whereCl . groupByCl limitCl
    (343) groupByCl -> . R_GROUP R_BY groupList havingCl
    (344) groupByCl -> .

    R_GROUP         shift and go to state 355
    R_ORDER         reduce using rule 344 (groupByCl -> .)
    R_LIMIT         reduce using rule 344 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 344 (groupByCl -> .)
    R_UNION         reduce using rule 344 (groupByCl -> .)
    R_INTERSECT     reduce using rule 344 (groupByCl -> .)
    R_EXCEPT        reduce using rule 344 (groupByCl -> .)
    S_PARDER        reduce using rule 344 (groupByCl -> .)

    groupByCl                      shift and go to state 480

state 357

    (327) joinList2 -> joinList2 joinCl .

    R_NATURAL       reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_INNER         reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_LEFT          reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_RIGHT         reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_FULL          reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_WHERE         reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_GROUP         reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_ORDER         reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_LIMIT         reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    S_PUNTOCOMA     reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_UNION         reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_INTERSECT     reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    R_EXCEPT        reduce using rule 327 (joinList2 -> joinList2 joinCl .)
    S_PARDER        reduce using rule 327 (joinList2 -> joinList2 joinCl .)


state 358

    (329) joinCl -> joinOpt R_JOIN . columnName optAlias R_ON expBool
    (330) joinCl -> joinOpt R_JOIN . columnName optAlias R_USING S_PARIZQ nameList S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 482

    columnName                     shift and go to state 481

state 359

    (331) joinCl -> R_NATURAL joinOpt . R_JOIN columnName optAlias

    R_JOIN          shift and go to state 483


state 360

    (336) joinOpt -> R_LEFT R_OUTER .

    R_JOIN          reduce using rule 336 (joinOpt -> R_LEFT R_OUTER .)


state 361

    (338) joinOpt -> R_RIGHT R_OUTER .

    R_JOIN          reduce using rule 338 (joinOpt -> R_RIGHT R_OUTER .)


state 362

    (340) joinOpt -> R_FULL R_OUTER .

    R_JOIN          reduce using rule 340 (joinOpt -> R_FULL R_OUTER .)


state 363

    (315) selectList -> selectList S_COMA selectListParams optAlias .

    S_COMA          reduce using rule 315 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_FROM          reduce using rule 315 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 315 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_UNION         reduce using rule 315 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_INTERSECT     reduce using rule 315 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_EXCEPT        reduce using rule 315 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PARDER        reduce using rule 315 (selectList -> selectList S_COMA selectListParams optAlias .)


state 364

    (132) funcCall -> ID S_PARIZQ paramsList S_PARDER .

    O_SUMA          reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_RESTA         reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_PRODUCTO      reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_DIVISION      reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_EXPONENTE     reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_MODULAR       reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OC_CONCATENAR   reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IN            reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOT           reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORQUE     reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORQUE     reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_IGUAL         reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_DISTINTODE   reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IS            reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_BETWEEN       reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ISNULL        reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOTNULL       reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_ESIGUAL      reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AS            reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    ID              reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    STRING          reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    CHARACTER       reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_COMA          reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FROM          reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_UNION         reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INTERSECT     reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_EXCEPT        reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PARDER        reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AND           reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_OR            reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_GROUP         reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ORDER         reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LIMIT         reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_THEN          reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NATURAL       reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INNER         reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LEFT          reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_RIGHT         reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FULL          reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_WHERE         reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ALL           reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ANY           reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_SOME          reduce using rule 132 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)


state 365

    (167) paramsList -> paramsList S_COMA . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 484
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 366

    (240) boolean -> datatype R_IN S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 485
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 367

    (241) boolean -> datatype R_NOT R_IN S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 486

state 368

    (200) expComp -> datatype R_NOT R_BETWEEN datatype . R_AND datatype
    (219) expSubq -> datatype R_NOT R_BETWEEN datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 487
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 369

    (212) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 488

state 370

    (213) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 489

state 371

    (214) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 490

state 372

    (215) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 491

state 373

    (217) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 492

state 374

    (197) expComp -> datatype R_IS R_DISTINCT R_FROM . datatype
    (221) expSubq -> datatype R_IS R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 493
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 375

    (198) expComp -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype
    (222) expSubq -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER

    R_FROM          shift and go to state 494


state 376

    (208) expComp -> datatype R_IS R_NOT R_NULL .
    (224) expSubq -> datatype R_IS R_NOT R_NULL . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_OR            reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_IS            reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_AS            reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    ID              reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    STRING          reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    CHARACTER       reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_COMA          reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FROM          reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_UNION         reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INTERSECT     reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_EXCEPT        reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PARDER        reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_GROUP         reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ORDER         reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LIMIT         reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_THEN          reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_NATURAL       reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INNER         reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LEFT          reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_RIGHT         reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FULL          reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_WHERE         reduce using rule 208 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 495

state 377

    (209) expComp -> datatype R_IS R_NOT R_TRUE .
    (228) expSubq -> datatype R_IS R_NOT R_TRUE . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    ID              reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 209 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 496

state 378

    (210) expComp -> datatype R_IS R_NOT R_FALSE .
    (230) expSubq -> datatype R_IS R_NOT R_FALSE . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    ID              reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 210 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 497

state 379

    (211) expComp -> datatype R_IS R_NOT R_UNKNOWN .
    (232) expSubq -> datatype R_IS R_NOT R_UNKNOWN . subqValues S_PARIZQ selectStmt S_PARDER
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 211 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 498

state 380

    (223) expSubq -> datatype R_IS R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 499


state 381

    (227) expSubq -> datatype R_IS R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 500


state 382

    (229) expSubq -> datatype R_IS R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 501


state 383

    (231) expSubq -> datatype R_IS R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 502


state 384

    (199) expComp -> datatype R_BETWEEN datatype R_AND . datatype
    (218) expSubq -> datatype R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 503
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 385

    (201) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype
    (220) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 504
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 386

    (225) expSubq -> datatype R_ISNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 505

state 387

    (226) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 506

state 388

    (216) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 507

state 389

    (253) optBoolPredicate -> R_IS R_NOT R_TRUE .

    R_AND           reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    ID              reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_NATURAL       reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INNER         reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LEFT          reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_RIGHT         reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FULL          reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_WHERE         reduce using rule 253 (optBoolPredicate -> R_IS R_NOT R_TRUE .)


state 390

    (254) optBoolPredicate -> R_IS R_NOT R_FALSE .

    R_AND           reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    ID              reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_NATURAL       reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INNER         reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LEFT          reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_RIGHT         reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FULL          reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_WHERE         reduce using rule 254 (optBoolPredicate -> R_IS R_NOT R_FALSE .)


state 391

    (255) optBoolPredicate -> R_IS R_NOT R_UNKNOWN .

    R_AND           reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_NATURAL       reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INNER         reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LEFT          reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_RIGHT         reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FULL          reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_WHERE         reduce using rule 255 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)


state 392

    (176) datatype -> R_CASE caseList optElse R_END .

    O_SUMA          reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    O_RESTA         reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    O_PRODUCTO      reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    O_DIVISION      reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    O_EXPONENTE     reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    O_MODULAR       reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    OC_CONCATENAR   reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_IN            reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_NOT           reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORQUE     reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORQUE     reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORIGUALQUE reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORIGUALQUE reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    S_IGUAL         reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    OL_DISTINTODE   reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_IS            reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_BETWEEN       reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_ISNULL        reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_NOTNULL       reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    OL_ESIGUAL      reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_AS            reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    ID              reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    STRING          reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    CHARACTER       reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    S_COMA          reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_FROM          reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    S_PUNTOCOMA     reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_UNION         reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_INTERSECT     reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_EXCEPT        reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    S_PARDER        reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_AND           reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_OR            reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_GROUP         reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_ORDER         reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_LIMIT         reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_THEN          reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_NATURAL       reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_INNER         reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_LEFT          reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_RIGHT         reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_FULL          reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_WHERE         reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_ALL           reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_ANY           reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)
    R_SOME          reduce using rule 176 (datatype -> R_CASE caseList optElse R_END .)


state 393

    (180) optElse -> R_ELSE literal .

    R_END           reduce using rule 180 (optElse -> R_ELSE literal .)


state 394

    (179) caseWhen -> R_WHEN expBool R_THEN . literal
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL

    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95

    literal                        shift and go to state 508

state 395

    (135) funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 135 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)


state 396

    (136) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .

    O_SUMA          reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_RESTA         reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_PRODUCTO      reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_DIVISION      reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_EXPONENTE     reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_MODULAR       reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OC_CONCATENAR   reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IN            reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOT           reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORQUE     reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORQUE     reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_IGUAL         reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_DISTINTODE   reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IS            reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_BETWEEN       reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ISNULL        reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOTNULL       reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_ESIGUAL      reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AS            reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    ID              reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    STRING          reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    CHARACTER       reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_COMA          reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FROM          reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PUNTOCOMA     reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_UNION         reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INTERSECT     reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_EXCEPT        reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PARDER        reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AND           reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_OR            reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_GROUP         reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ORDER         reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LIMIT         reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_THEN          reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NATURAL       reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INNER         reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LEFT          reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_RIGHT         reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FULL          reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_WHERE         reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ALL           reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ANY           reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_SOME          reduce using rule 136 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)


state 397

    (137) funcCall -> R_SUM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 137 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)


state 398

    (138) funcCall -> R_PROM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_ESIGUAL      reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NATURAL       reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INNER         reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LEFT          reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_RIGHT         reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FULL          reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ALL           reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ANY           reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_SOME          reduce using rule 138 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)


state 399

    (139) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . timeStamp S_PARDER
    (140) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . columnName S_PARDER
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID

    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109
    ID              shift and go to state 482

    timeStamp                      shift and go to state 509
    columnName                     shift and go to state 510

state 400

    (149) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA . dateSource S_PARDER
    (150) dateSource -> . R_TIMESTAMP STRING
    (151) dateSource -> . T_DATE STRING
    (152) dateSource -> . T_TIME STRING
    (153) dateSource -> . R_INTERVAL STRING
    (154) dateSource -> . R_NOW S_PARIZQ S_PARDER

    R_TIMESTAMP     shift and go to state 512
    T_DATE          shift and go to state 513
    T_TIME          shift and go to state 514
    R_INTERVAL      shift and go to state 515
    R_NOW           shift and go to state 516

    dateSource                     shift and go to state 511

state 401

    (239) boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 239 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)


state 402

    (16) ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body . else_
    (23) List_body -> List_body . body
    (17) else_ -> . R_ELSE List_body
    (18) else_ -> . Lista_elsif_
    (19) else_ -> .
    (25) body -> . createStmt S_PUNTOCOMA
    (26) body -> . showStmt S_PUNTOCOMA
    (27) body -> . alterStmt S_PUNTOCOMA
    (28) body -> . dropStmt S_PUNTOCOMA
    (29) body -> . insertStmt S_PUNTOCOMA
    (30) body -> . updateStmt S_PUNTOCOMA
    (31) body -> . deleteStmt S_PUNTOCOMA
    (32) body -> . truncateStmt S_PUNTOCOMA
    (33) body -> . useStmt S_PUNTOCOMA
    (34) body -> . selectStmt S_PUNTOCOMA
    (35) body -> . functionStmt
    (36) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (20) Lista_elsif_ -> . Lista_elsif_ elsif_
    (21) Lista_elsif_ -> . elsif_
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_
    (22) elsif_ -> . R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body

    R_ELSE          shift and go to state 519
    R_END           reduce using rule 19 (else_ -> .)
    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16
    R_ELSIF         shift and go to state 522

    else_                          shift and go to state 517
    body                           shift and go to state 518
    Lista_elsif_                   shift and go to state 520
    createStmt                     shift and go to state 404
    showStmt                       shift and go to state 405
    alterStmt                      shift and go to state 406
    dropStmt                       shift and go to state 407
    insertStmt                     shift and go to state 408
    updateStmt                     shift and go to state 409
    deleteStmt                     shift and go to state 410
    truncateStmt                   shift and go to state 411
    useStmt                        shift and go to state 412
    selectStmt                     shift and go to state 413
    functionStmt                   shift and go to state 414
    ifStmt                         shift and go to state 415
    elsif_                         shift and go to state 521

state 403

    (24) List_body -> body .

    R_ELSE          reduce using rule 24 (List_body -> body .)
    R_CREATE        reduce using rule 24 (List_body -> body .)
    R_SHOW          reduce using rule 24 (List_body -> body .)
    R_ALTER         reduce using rule 24 (List_body -> body .)
    R_DROP          reduce using rule 24 (List_body -> body .)
    R_INSERT        reduce using rule 24 (List_body -> body .)
    R_UPDATE        reduce using rule 24 (List_body -> body .)
    R_DELETE        reduce using rule 24 (List_body -> body .)
    R_TRUNCATE      reduce using rule 24 (List_body -> body .)
    R_USE           reduce using rule 24 (List_body -> body .)
    R_SELECT        reduce using rule 24 (List_body -> body .)
    S_PARIZQ        reduce using rule 24 (List_body -> body .)
    R_IF            reduce using rule 24 (List_body -> body .)
    R_ELSIF         reduce using rule 24 (List_body -> body .)
    R_END           reduce using rule 24 (List_body -> body .)


state 404

    (25) body -> createStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 523


state 405

    (26) body -> showStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 524


state 406

    (27) body -> alterStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 525


state 407

    (28) body -> dropStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 526


state 408

    (29) body -> insertStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 527


state 409

    (30) body -> updateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 528


state 410

    (31) body -> deleteStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 529


state 411

    (32) body -> truncateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 530


state 412

    (33) body -> useStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 531


state 413

    (34) body -> selectStmt . S_PUNTOCOMA
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     shift and go to state 532
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 414

    (35) body -> functionStmt .

    R_ELSE          reduce using rule 35 (body -> functionStmt .)
    R_CREATE        reduce using rule 35 (body -> functionStmt .)
    R_SHOW          reduce using rule 35 (body -> functionStmt .)
    R_ALTER         reduce using rule 35 (body -> functionStmt .)
    R_DROP          reduce using rule 35 (body -> functionStmt .)
    R_INSERT        reduce using rule 35 (body -> functionStmt .)
    R_UPDATE        reduce using rule 35 (body -> functionStmt .)
    R_DELETE        reduce using rule 35 (body -> functionStmt .)
    R_TRUNCATE      reduce using rule 35 (body -> functionStmt .)
    R_USE           reduce using rule 35 (body -> functionStmt .)
    R_SELECT        reduce using rule 35 (body -> functionStmt .)
    S_PARIZQ        reduce using rule 35 (body -> functionStmt .)
    R_IF            reduce using rule 35 (body -> functionStmt .)
    R_ELSIF         reduce using rule 35 (body -> functionStmt .)
    R_END           reduce using rule 35 (body -> functionStmt .)


state 415

    (36) body -> ifStmt . R_END R_IF S_PUNTOCOMA

    R_END           shift and go to state 533


state 416

    (87) types -> ID .

    S_PARDER        reduce using rule 87 (types -> ID .)
    S_COMA          reduce using rule 87 (types -> ID .)
    R_AS            reduce using rule 87 (types -> ID .)
    R_DEFAULT       reduce using rule 87 (types -> ID .)
    R_NOT           reduce using rule 87 (types -> ID .)
    R_NULL          reduce using rule 87 (types -> ID .)
    R_PRIMARY       reduce using rule 87 (types -> ID .)
    R_REFERENCES    reduce using rule 87 (types -> ID .)
    R_CONSTRAINT    reduce using rule 87 (types -> ID .)
    R_UNIQUE        reduce using rule 87 (types -> ID .)
    R_CHECK         reduce using rule 87 (types -> ID .)
    S_PUNTOCOMA     reduce using rule 87 (types -> ID .)
    S_DOSPUNTOS     reduce using rule 87 (types -> ID .)
    S_IGUAL         reduce using rule 87 (types -> ID .)


state 417

    (390) param_item -> ID types .

    S_PARDER        reduce using rule 390 (param_item -> ID types .)
    S_COMA          reduce using rule 390 (param_item -> ID types .)


state 418

    (88) types -> T_SMALLINT .

    S_PARDER        reduce using rule 88 (types -> T_SMALLINT .)
    S_COMA          reduce using rule 88 (types -> T_SMALLINT .)
    R_AS            reduce using rule 88 (types -> T_SMALLINT .)
    R_DEFAULT       reduce using rule 88 (types -> T_SMALLINT .)
    R_NOT           reduce using rule 88 (types -> T_SMALLINT .)
    R_NULL          reduce using rule 88 (types -> T_SMALLINT .)
    R_PRIMARY       reduce using rule 88 (types -> T_SMALLINT .)
    R_REFERENCES    reduce using rule 88 (types -> T_SMALLINT .)
    R_CONSTRAINT    reduce using rule 88 (types -> T_SMALLINT .)
    R_UNIQUE        reduce using rule 88 (types -> T_SMALLINT .)
    R_CHECK         reduce using rule 88 (types -> T_SMALLINT .)
    S_PUNTOCOMA     reduce using rule 88 (types -> T_SMALLINT .)
    S_DOSPUNTOS     reduce using rule 88 (types -> T_SMALLINT .)
    S_IGUAL         reduce using rule 88 (types -> T_SMALLINT .)


state 419

    (89) types -> T_INTEGER .

    S_PARDER        reduce using rule 89 (types -> T_INTEGER .)
    S_COMA          reduce using rule 89 (types -> T_INTEGER .)
    R_AS            reduce using rule 89 (types -> T_INTEGER .)
    R_DEFAULT       reduce using rule 89 (types -> T_INTEGER .)
    R_NOT           reduce using rule 89 (types -> T_INTEGER .)
    R_NULL          reduce using rule 89 (types -> T_INTEGER .)
    R_PRIMARY       reduce using rule 89 (types -> T_INTEGER .)
    R_REFERENCES    reduce using rule 89 (types -> T_INTEGER .)
    R_CONSTRAINT    reduce using rule 89 (types -> T_INTEGER .)
    R_UNIQUE        reduce using rule 89 (types -> T_INTEGER .)
    R_CHECK         reduce using rule 89 (types -> T_INTEGER .)
    S_PUNTOCOMA     reduce using rule 89 (types -> T_INTEGER .)
    S_DOSPUNTOS     reduce using rule 89 (types -> T_INTEGER .)
    S_IGUAL         reduce using rule 89 (types -> T_INTEGER .)


state 420

    (90) types -> T_BIGINT .

    S_PARDER        reduce using rule 90 (types -> T_BIGINT .)
    S_COMA          reduce using rule 90 (types -> T_BIGINT .)
    R_AS            reduce using rule 90 (types -> T_BIGINT .)
    R_DEFAULT       reduce using rule 90 (types -> T_BIGINT .)
    R_NOT           reduce using rule 90 (types -> T_BIGINT .)
    R_NULL          reduce using rule 90 (types -> T_BIGINT .)
    R_PRIMARY       reduce using rule 90 (types -> T_BIGINT .)
    R_REFERENCES    reduce using rule 90 (types -> T_BIGINT .)
    R_CONSTRAINT    reduce using rule 90 (types -> T_BIGINT .)
    R_UNIQUE        reduce using rule 90 (types -> T_BIGINT .)
    R_CHECK         reduce using rule 90 (types -> T_BIGINT .)
    S_PUNTOCOMA     reduce using rule 90 (types -> T_BIGINT .)
    S_DOSPUNTOS     reduce using rule 90 (types -> T_BIGINT .)
    S_IGUAL         reduce using rule 90 (types -> T_BIGINT .)


state 421

    (91) types -> T_REAL .

    S_PARDER        reduce using rule 91 (types -> T_REAL .)
    S_COMA          reduce using rule 91 (types -> T_REAL .)
    R_AS            reduce using rule 91 (types -> T_REAL .)
    R_DEFAULT       reduce using rule 91 (types -> T_REAL .)
    R_NOT           reduce using rule 91 (types -> T_REAL .)
    R_NULL          reduce using rule 91 (types -> T_REAL .)
    R_PRIMARY       reduce using rule 91 (types -> T_REAL .)
    R_REFERENCES    reduce using rule 91 (types -> T_REAL .)
    R_CONSTRAINT    reduce using rule 91 (types -> T_REAL .)
    R_UNIQUE        reduce using rule 91 (types -> T_REAL .)
    R_CHECK         reduce using rule 91 (types -> T_REAL .)
    S_PUNTOCOMA     reduce using rule 91 (types -> T_REAL .)
    S_DOSPUNTOS     reduce using rule 91 (types -> T_REAL .)
    S_IGUAL         reduce using rule 91 (types -> T_REAL .)


state 422

    (92) types -> T_DOUBLE . T_PRECISION

    T_PRECISION     shift and go to state 534


state 423

    (93) types -> T_MONEY .

    S_PARDER        reduce using rule 93 (types -> T_MONEY .)
    S_COMA          reduce using rule 93 (types -> T_MONEY .)
    R_AS            reduce using rule 93 (types -> T_MONEY .)
    R_DEFAULT       reduce using rule 93 (types -> T_MONEY .)
    R_NOT           reduce using rule 93 (types -> T_MONEY .)
    R_NULL          reduce using rule 93 (types -> T_MONEY .)
    R_PRIMARY       reduce using rule 93 (types -> T_MONEY .)
    R_REFERENCES    reduce using rule 93 (types -> T_MONEY .)
    R_CONSTRAINT    reduce using rule 93 (types -> T_MONEY .)
    R_UNIQUE        reduce using rule 93 (types -> T_MONEY .)
    R_CHECK         reduce using rule 93 (types -> T_MONEY .)
    S_PUNTOCOMA     reduce using rule 93 (types -> T_MONEY .)
    S_DOSPUNTOS     reduce using rule 93 (types -> T_MONEY .)
    S_IGUAL         reduce using rule 93 (types -> T_MONEY .)


state 424

    (94) types -> T_TEXT .

    S_PARDER        reduce using rule 94 (types -> T_TEXT .)
    S_COMA          reduce using rule 94 (types -> T_TEXT .)
    R_AS            reduce using rule 94 (types -> T_TEXT .)
    R_DEFAULT       reduce using rule 94 (types -> T_TEXT .)
    R_NOT           reduce using rule 94 (types -> T_TEXT .)
    R_NULL          reduce using rule 94 (types -> T_TEXT .)
    R_PRIMARY       reduce using rule 94 (types -> T_TEXT .)
    R_REFERENCES    reduce using rule 94 (types -> T_TEXT .)
    R_CONSTRAINT    reduce using rule 94 (types -> T_TEXT .)
    R_UNIQUE        reduce using rule 94 (types -> T_TEXT .)
    R_CHECK         reduce using rule 94 (types -> T_TEXT .)
    S_PUNTOCOMA     reduce using rule 94 (types -> T_TEXT .)
    S_DOSPUNTOS     reduce using rule 94 (types -> T_TEXT .)
    S_IGUAL         reduce using rule 94 (types -> T_TEXT .)


state 425

    (95) types -> T_BOOLEAN .

    S_PARDER        reduce using rule 95 (types -> T_BOOLEAN .)
    S_COMA          reduce using rule 95 (types -> T_BOOLEAN .)
    R_AS            reduce using rule 95 (types -> T_BOOLEAN .)
    R_DEFAULT       reduce using rule 95 (types -> T_BOOLEAN .)
    R_NOT           reduce using rule 95 (types -> T_BOOLEAN .)
    R_NULL          reduce using rule 95 (types -> T_BOOLEAN .)
    R_PRIMARY       reduce using rule 95 (types -> T_BOOLEAN .)
    R_REFERENCES    reduce using rule 95 (types -> T_BOOLEAN .)
    R_CONSTRAINT    reduce using rule 95 (types -> T_BOOLEAN .)
    R_UNIQUE        reduce using rule 95 (types -> T_BOOLEAN .)
    R_CHECK         reduce using rule 95 (types -> T_BOOLEAN .)
    S_PUNTOCOMA     reduce using rule 95 (types -> T_BOOLEAN .)
    S_DOSPUNTOS     reduce using rule 95 (types -> T_BOOLEAN .)
    S_IGUAL         reduce using rule 95 (types -> T_BOOLEAN .)


state 426

    (96) types -> R_TIMESTAMP .

    S_PARDER        reduce using rule 96 (types -> R_TIMESTAMP .)
    S_COMA          reduce using rule 96 (types -> R_TIMESTAMP .)
    R_AS            reduce using rule 96 (types -> R_TIMESTAMP .)
    R_DEFAULT       reduce using rule 96 (types -> R_TIMESTAMP .)
    R_NOT           reduce using rule 96 (types -> R_TIMESTAMP .)
    R_NULL          reduce using rule 96 (types -> R_TIMESTAMP .)
    R_PRIMARY       reduce using rule 96 (types -> R_TIMESTAMP .)
    R_REFERENCES    reduce using rule 96 (types -> R_TIMESTAMP .)
    R_CONSTRAINT    reduce using rule 96 (types -> R_TIMESTAMP .)
    R_UNIQUE        reduce using rule 96 (types -> R_TIMESTAMP .)
    R_CHECK         reduce using rule 96 (types -> R_TIMESTAMP .)
    S_PUNTOCOMA     reduce using rule 96 (types -> R_TIMESTAMP .)
    S_DOSPUNTOS     reduce using rule 96 (types -> R_TIMESTAMP .)
    S_IGUAL         reduce using rule 96 (types -> R_TIMESTAMP .)


state 427

    (97) types -> T_DATE .

    S_PARDER        reduce using rule 97 (types -> T_DATE .)
    S_COMA          reduce using rule 97 (types -> T_DATE .)
    R_AS            reduce using rule 97 (types -> T_DATE .)
    R_DEFAULT       reduce using rule 97 (types -> T_DATE .)
    R_NOT           reduce using rule 97 (types -> T_DATE .)
    R_NULL          reduce using rule 97 (types -> T_DATE .)
    R_PRIMARY       reduce using rule 97 (types -> T_DATE .)
    R_REFERENCES    reduce using rule 97 (types -> T_DATE .)
    R_CONSTRAINT    reduce using rule 97 (types -> T_DATE .)
    R_UNIQUE        reduce using rule 97 (types -> T_DATE .)
    R_CHECK         reduce using rule 97 (types -> T_DATE .)
    S_PUNTOCOMA     reduce using rule 97 (types -> T_DATE .)
    S_DOSPUNTOS     reduce using rule 97 (types -> T_DATE .)
    S_IGUAL         reduce using rule 97 (types -> T_DATE .)


state 428

    (98) types -> T_TIME .

    S_PARDER        reduce using rule 98 (types -> T_TIME .)
    S_COMA          reduce using rule 98 (types -> T_TIME .)
    R_AS            reduce using rule 98 (types -> T_TIME .)
    R_DEFAULT       reduce using rule 98 (types -> T_TIME .)
    R_NOT           reduce using rule 98 (types -> T_TIME .)
    R_NULL          reduce using rule 98 (types -> T_TIME .)
    R_PRIMARY       reduce using rule 98 (types -> T_TIME .)
    R_REFERENCES    reduce using rule 98 (types -> T_TIME .)
    R_CONSTRAINT    reduce using rule 98 (types -> T_TIME .)
    R_UNIQUE        reduce using rule 98 (types -> T_TIME .)
    R_CHECK         reduce using rule 98 (types -> T_TIME .)
    S_PUNTOCOMA     reduce using rule 98 (types -> T_TIME .)
    S_DOSPUNTOS     reduce using rule 98 (types -> T_TIME .)
    S_IGUAL         reduce using rule 98 (types -> T_TIME .)


state 429

    (99) types -> T_DECIMAL . optParams
    (113) optParams -> . S_PARIZQ literalList S_PARDER
    (114) optParams -> .

    S_PARIZQ        shift and go to state 536
    S_PARDER        reduce using rule 114 (optParams -> .)
    S_COMA          reduce using rule 114 (optParams -> .)
    R_AS            reduce using rule 114 (optParams -> .)
    R_DEFAULT       reduce using rule 114 (optParams -> .)
    R_NOT           reduce using rule 114 (optParams -> .)
    R_NULL          reduce using rule 114 (optParams -> .)
    R_PRIMARY       reduce using rule 114 (optParams -> .)
    R_REFERENCES    reduce using rule 114 (optParams -> .)
    R_CONSTRAINT    reduce using rule 114 (optParams -> .)
    R_UNIQUE        reduce using rule 114 (optParams -> .)
    R_CHECK         reduce using rule 114 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 114 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 114 (optParams -> .)
    S_IGUAL         reduce using rule 114 (optParams -> .)

    optParams                      shift and go to state 535

state 430

    (100) types -> T_NUMERIC . optParams
    (113) optParams -> . S_PARIZQ literalList S_PARDER
    (114) optParams -> .

    S_PARIZQ        shift and go to state 536
    S_PARDER        reduce using rule 114 (optParams -> .)
    S_COMA          reduce using rule 114 (optParams -> .)
    R_AS            reduce using rule 114 (optParams -> .)
    R_DEFAULT       reduce using rule 114 (optParams -> .)
    R_NOT           reduce using rule 114 (optParams -> .)
    R_NULL          reduce using rule 114 (optParams -> .)
    R_PRIMARY       reduce using rule 114 (optParams -> .)
    R_REFERENCES    reduce using rule 114 (optParams -> .)
    R_CONSTRAINT    reduce using rule 114 (optParams -> .)
    R_UNIQUE        reduce using rule 114 (optParams -> .)
    R_CHECK         reduce using rule 114 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 114 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 114 (optParams -> .)
    S_IGUAL         reduce using rule 114 (optParams -> .)

    optParams                      shift and go to state 537

state 431

    (101) types -> T_VARCHAR . optParams
    (113) optParams -> . S_PARIZQ literalList S_PARDER
    (114) optParams -> .

    S_PARIZQ        shift and go to state 536
    S_PARDER        reduce using rule 114 (optParams -> .)
    S_COMA          reduce using rule 114 (optParams -> .)
    R_AS            reduce using rule 114 (optParams -> .)
    R_DEFAULT       reduce using rule 114 (optParams -> .)
    R_NOT           reduce using rule 114 (optParams -> .)
    R_NULL          reduce using rule 114 (optParams -> .)
    R_PRIMARY       reduce using rule 114 (optParams -> .)
    R_REFERENCES    reduce using rule 114 (optParams -> .)
    R_CONSTRAINT    reduce using rule 114 (optParams -> .)
    R_UNIQUE        reduce using rule 114 (optParams -> .)
    R_CHECK         reduce using rule 114 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 114 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 114 (optParams -> .)
    S_IGUAL         reduce using rule 114 (optParams -> .)

    optParams                      shift and go to state 538

state 432

    (102) types -> T_CHARACTER . optParams
    (104) types -> T_CHARACTER . T_VARYING optParams
    (113) optParams -> . S_PARIZQ literalList S_PARDER
    (114) optParams -> .

    T_VARYING       shift and go to state 540
    S_PARIZQ        shift and go to state 536
    S_PARDER        reduce using rule 114 (optParams -> .)
    S_COMA          reduce using rule 114 (optParams -> .)
    R_AS            reduce using rule 114 (optParams -> .)
    R_DEFAULT       reduce using rule 114 (optParams -> .)
    R_NOT           reduce using rule 114 (optParams -> .)
    R_NULL          reduce using rule 114 (optParams -> .)
    R_PRIMARY       reduce using rule 114 (optParams -> .)
    R_REFERENCES    reduce using rule 114 (optParams -> .)
    R_CONSTRAINT    reduce using rule 114 (optParams -> .)
    R_UNIQUE        reduce using rule 114 (optParams -> .)
    R_CHECK         reduce using rule 114 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 114 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 114 (optParams -> .)
    S_IGUAL         reduce using rule 114 (optParams -> .)

    optParams                      shift and go to state 539

state 433

    (103) types -> T_CHAR . optParams
    (113) optParams -> . S_PARIZQ literalList S_PARDER
    (114) optParams -> .

    S_PARIZQ        shift and go to state 536
    S_PARDER        reduce using rule 114 (optParams -> .)
    S_COMA          reduce using rule 114 (optParams -> .)
    R_AS            reduce using rule 114 (optParams -> .)
    R_DEFAULT       reduce using rule 114 (optParams -> .)
    R_NOT           reduce using rule 114 (optParams -> .)
    R_NULL          reduce using rule 114 (optParams -> .)
    R_PRIMARY       reduce using rule 114 (optParams -> .)
    R_REFERENCES    reduce using rule 114 (optParams -> .)
    R_CONSTRAINT    reduce using rule 114 (optParams -> .)
    R_UNIQUE        reduce using rule 114 (optParams -> .)
    R_CHECK         reduce using rule 114 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 114 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 114 (optParams -> .)
    S_IGUAL         reduce using rule 114 (optParams -> .)

    optParams                      shift and go to state 541

state 434

    (105) types -> R_INTERVAL . intervalFields
    (106) intervalFields -> . R_YEAR
    (107) intervalFields -> . R_MONTH
    (108) intervalFields -> . R_DAY
    (109) intervalFields -> . R_HOUR
    (110) intervalFields -> . R_MINUTE
    (111) intervalFields -> . R_SECOND
    (112) intervalFields -> .

    R_YEAR          shift and go to state 543
    R_MONTH         shift and go to state 544
    R_DAY           shift and go to state 545
    R_HOUR          shift and go to state 546
    R_MINUTE        shift and go to state 547
    R_SECOND        shift and go to state 548
    S_PARDER        reduce using rule 112 (intervalFields -> .)
    S_COMA          reduce using rule 112 (intervalFields -> .)
    R_AS            reduce using rule 112 (intervalFields -> .)
    R_DEFAULT       reduce using rule 112 (intervalFields -> .)
    R_NOT           reduce using rule 112 (intervalFields -> .)
    R_NULL          reduce using rule 112 (intervalFields -> .)
    R_PRIMARY       reduce using rule 112 (intervalFields -> .)
    R_REFERENCES    reduce using rule 112 (intervalFields -> .)
    R_CONSTRAINT    reduce using rule 112 (intervalFields -> .)
    R_UNIQUE        reduce using rule 112 (intervalFields -> .)
    R_CHECK         reduce using rule 112 (intervalFields -> .)
    S_PUNTOCOMA     reduce using rule 112 (intervalFields -> .)
    S_DOSPUNTOS     reduce using rule 112 (intervalFields -> .)
    S_IGUAL         reduce using rule 112 (intervalFields -> .)

    intervalFields                 shift and go to state 542

state 435

    (385) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER . returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (391) returnsStmt -> . R_RETURNS types
    (392) returnsStmt -> .

    R_RETURNS       shift and go to state 438
    R_AS            reduce using rule 392 (returnsStmt -> .)

    returnsStmt                    shift and go to state 549

state 436

    (388) params_list -> params_list S_COMA . param_item
    (390) param_item -> . ID types

    ID              shift and go to state 318

    param_item                     shift and go to state 550

state 437

    (386) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt . R_AS S_DOLAR S_DOLAR bloqueFunction

    R_AS            shift and go to state 551


state 438

    (391) returnsStmt -> R_RETURNS . types
    (87) types -> . ID
    (88) types -> . T_SMALLINT
    (89) types -> . T_INTEGER
    (90) types -> . T_BIGINT
    (91) types -> . T_REAL
    (92) types -> . T_DOUBLE T_PRECISION
    (93) types -> . T_MONEY
    (94) types -> . T_TEXT
    (95) types -> . T_BOOLEAN
    (96) types -> . R_TIMESTAMP
    (97) types -> . T_DATE
    (98) types -> . T_TIME
    (99) types -> . T_DECIMAL optParams
    (100) types -> . T_NUMERIC optParams
    (101) types -> . T_VARCHAR optParams
    (102) types -> . T_CHARACTER optParams
    (103) types -> . T_CHAR optParams
    (104) types -> . T_CHARACTER T_VARYING optParams
    (105) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 416
    T_SMALLINT      shift and go to state 418
    T_INTEGER       shift and go to state 419
    T_BIGINT        shift and go to state 420
    T_REAL          shift and go to state 421
    T_DOUBLE        shift and go to state 422
    T_MONEY         shift and go to state 423
    T_TEXT          shift and go to state 424
    T_BOOLEAN       shift and go to state 425
    R_TIMESTAMP     shift and go to state 426
    T_DATE          shift and go to state 427
    T_TIME          shift and go to state 428
    T_DECIMAL       shift and go to state 429
    T_NUMERIC       shift and go to state 430
    T_VARCHAR       shift and go to state 431
    T_CHARACTER     shift and go to state 432
    T_CHAR          shift and go to state 433
    R_INTERVAL      shift and go to state 434

    types                          shift and go to state 552

state 439

    (42) createOpts -> unique_index R_INDEX ID R_ON ID . using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl
    (45) using_hash_index -> . R_USING R_HASH
    (46) using_hash_index -> .

    R_USING         shift and go to state 554
    S_PARIZQ        reduce using rule 46 (using_hash_index -> .)

    using_hash_index               shift and go to state 553

state 440

    (53) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList . S_PARDER inheritsOpt
    (70) createTableList -> createTableList . S_COMA createTable

    S_PARDER        shift and go to state 555
    S_COMA          shift and go to state 556


state 441

    (71) createTableList -> createTable .

    S_PARDER        reduce using rule 71 (createTableList -> createTable .)
    S_COMA          reduce using rule 71 (createTableList -> createTable .)


state 442

    (72) createTable -> ID . types createColumns
    (87) types -> . ID
    (88) types -> . T_SMALLINT
    (89) types -> . T_INTEGER
    (90) types -> . T_BIGINT
    (91) types -> . T_REAL
    (92) types -> . T_DOUBLE T_PRECISION
    (93) types -> . T_MONEY
    (94) types -> . T_TEXT
    (95) types -> . T_BOOLEAN
    (96) types -> . R_TIMESTAMP
    (97) types -> . T_DATE
    (98) types -> . T_TIME
    (99) types -> . T_DECIMAL optParams
    (100) types -> . T_NUMERIC optParams
    (101) types -> . T_VARCHAR optParams
    (102) types -> . T_CHARACTER optParams
    (103) types -> . T_CHAR optParams
    (104) types -> . T_CHARACTER T_VARYING optParams
    (105) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 416
    T_SMALLINT      shift and go to state 418
    T_INTEGER       shift and go to state 419
    T_BIGINT        shift and go to state 420
    T_REAL          shift and go to state 421
    T_DOUBLE        shift and go to state 422
    T_MONEY         shift and go to state 423
    T_TEXT          shift and go to state 424
    T_BOOLEAN       shift and go to state 425
    R_TIMESTAMP     shift and go to state 426
    T_DATE          shift and go to state 427
    T_TIME          shift and go to state 428
    T_DECIMAL       shift and go to state 429
    T_NUMERIC       shift and go to state 430
    T_VARCHAR       shift and go to state 431
    T_CHARACTER     shift and go to state 432
    T_CHAR          shift and go to state 433
    R_INTERVAL      shift and go to state 434

    types                          shift and go to state 557

state 443

    (73) createTable -> createConstraint .

    S_PARDER        reduce using rule 73 (createTable -> createConstraint .)
    S_COMA          reduce using rule 73 (createTable -> createConstraint .)


state 444

    (74) createTable -> createUnique .

    S_PARDER        reduce using rule 74 (createTable -> createUnique .)
    S_COMA          reduce using rule 74 (createTable -> createUnique .)


state 445

    (75) createTable -> createPrimary .

    S_PARDER        reduce using rule 75 (createTable -> createPrimary .)
    S_COMA          reduce using rule 75 (createTable -> createPrimary .)


state 446

    (76) createTable -> createForeign .

    S_PARDER        reduce using rule 76 (createTable -> createForeign .)
    S_COMA          reduce using rule 76 (createTable -> createForeign .)


state 447

    (79) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (82) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_CHECK         shift and go to state 461
    R_FOREIGN       shift and go to state 462


state 448

    (80) createUnique -> R_UNIQUE . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 558


state 449

    (54) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner . createMode
    (67) createMode -> . R_MODE INTEGER
    (68) createMode -> . R_MODE S_IGUAL INTEGER
    (69) createMode -> .

    R_MODE          shift and go to state 560
    S_PUNTOCOMA     reduce using rule 69 (createMode -> .)

    createMode                     shift and go to state 559

state 450

    (62) createOwner -> R_OWNER . ID
    (63) createOwner -> R_OWNER . STRING
    (64) createOwner -> R_OWNER . S_IGUAL ID
    (65) createOwner -> R_OWNER . S_IGUAL STRING

    ID              shift and go to state 561
    STRING          shift and go to state 562
    S_IGUAL         shift and go to state 563


state 451

    (57) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 564


state 452

    (275) alterDb -> R_RENAME R_TO idOrString .

    S_PUNTOCOMA     reduce using rule 275 (alterDb -> R_RENAME R_TO idOrString .)


state 453

    (276) alterDb -> R_OWNER R_TO ownerOPts .

    S_PUNTOCOMA     reduce using rule 276 (alterDb -> R_OWNER R_TO ownerOPts .)


state 454

    (277) ownerOPts -> idOrString .

    S_PUNTOCOMA     reduce using rule 277 (ownerOPts -> idOrString .)


state 455

    (278) ownerOPts -> R_CURRENT_USER .

    S_PUNTOCOMA     reduce using rule 278 (ownerOPts -> R_CURRENT_USER .)


state 456

    (279) ownerOPts -> R_SESSION_USER .

    S_PUNTOCOMA     reduce using rule 279 (ownerOPts -> R_SESSION_USER .)


state 457

    (291) alterAlter -> R_COLUMN ID . R_SET nullOpt
    (292) alterAlter -> R_COLUMN ID . R_SET defaultVal
    (293) alterAlter -> R_COLUMN ID . R_TYPE types

    R_SET           shift and go to state 565
    R_TYPE          shift and go to state 566


state 458

    (280) alterTableList -> alterTableList S_COMA alterTable .

    S_COMA          reduce using rule 280 (alterTableList -> alterTableList S_COMA alterTable .)
    S_PUNTOCOMA     reduce using rule 280 (alterTableList -> alterTableList S_COMA alterTable .)


state 459

    (286) alterAdd -> R_COLUMN ID . types
    (87) types -> . ID
    (88) types -> . T_SMALLINT
    (89) types -> . T_INTEGER
    (90) types -> . T_BIGINT
    (91) types -> . T_REAL
    (92) types -> . T_DOUBLE T_PRECISION
    (93) types -> . T_MONEY
    (94) types -> . T_TEXT
    (95) types -> . T_BOOLEAN
    (96) types -> . R_TIMESTAMP
    (97) types -> . T_DATE
    (98) types -> . T_TIME
    (99) types -> . T_DECIMAL optParams
    (100) types -> . T_NUMERIC optParams
    (101) types -> . T_VARCHAR optParams
    (102) types -> . T_CHARACTER optParams
    (103) types -> . T_CHAR optParams
    (104) types -> . T_CHARACTER T_VARYING optParams
    (105) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 416
    T_SMALLINT      shift and go to state 418
    T_INTEGER       shift and go to state 419
    T_BIGINT        shift and go to state 420
    T_REAL          shift and go to state 421
    T_DOUBLE        shift and go to state 422
    T_MONEY         shift and go to state 423
    T_TEXT          shift and go to state 424
    T_BOOLEAN       shift and go to state 425
    R_TIMESTAMP     shift and go to state 426
    T_DATE          shift and go to state 427
    T_TIME          shift and go to state 428
    T_DECIMAL       shift and go to state 429
    T_NUMERIC       shift and go to state 430
    T_VARCHAR       shift and go to state 431
    T_CHARACTER     shift and go to state 432
    T_CHAR          shift and go to state 433
    R_INTERVAL      shift and go to state 434

    types                          shift and go to state 567

state 460

    (290) alterAdd -> constrName R_UNIQUE . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 568


state 461

    (79) createConstraint -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 569


state 462

    (82) createForeign -> constrName R_FOREIGN . R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 570


state 463

    (81) createPrimary -> R_PRIMARY R_KEY . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 571


state 464

    (83) constrName -> R_CONSTRAINT ID .

    R_UNIQUE        reduce using rule 83 (constrName -> R_CONSTRAINT ID .)
    R_CHECK         reduce using rule 83 (constrName -> R_CONSTRAINT ID .)
    R_FOREIGN       reduce using rule 83 (constrName -> R_CONSTRAINT ID .)


state 465

    (294) alterDrop -> R_CONSTRAINT ID .

    S_COMA          reduce using rule 294 (alterDrop -> R_CONSTRAINT ID .)
    S_PUNTOCOMA     reduce using rule 294 (alterDrop -> R_CONSTRAINT ID .)


state 466

    (295) alterDrop -> R_COLUMN ID .

    S_COMA          reduce using rule 295 (alterDrop -> R_COLUMN ID .)
    S_PUNTOCOMA     reduce using rule 295 (alterDrop -> R_COLUMN ID .)


state 467

    (296) alterRename -> R_COLUMN ID . R_TO ID

    R_TO            shift and go to state 572


state 468

    (368) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ . paramsList S_PARDER
    (167) paramsList -> . paramsList S_COMA datatype
    (168) paramsList -> . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    paramsList                     shift and go to state 573
    datatype                       shift and go to state 252
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 469

    (369) paramsColumn -> S_PARIZQ idList S_PARDER .

    R_VALUES        reduce using rule 369 (paramsColumn -> S_PARIZQ idList S_PARDER .)


state 470

    (85) idList -> idList S_COMA . ID

    ID              shift and go to state 574


state 471

    (372) updateCols -> updateCols S_COMA updateVals .

    S_COMA          reduce using rule 372 (updateCols -> updateCols S_COMA updateVals .)
    R_WHERE         reduce using rule 372 (updateCols -> updateCols S_COMA updateVals .)
    S_PUNTOCOMA     reduce using rule 372 (updateCols -> updateCols S_COMA updateVals .)


state 472

    (374) updateVals -> ID S_IGUAL updateExp .

    S_COMA          reduce using rule 374 (updateVals -> ID S_IGUAL updateExp .)
    R_WHERE         reduce using rule 374 (updateVals -> ID S_IGUAL updateExp .)
    S_PUNTOCOMA     reduce using rule 374 (updateVals -> ID S_IGUAL updateExp .)


state 473

    (375) updateExp -> datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    S_COMA          reduce using rule 375 (updateExp -> datatype .)
    R_WHERE         reduce using rule 375 (updateExp -> datatype .)
    S_PUNTOCOMA     reduce using rule 375 (updateExp -> datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 474

    (376) updateExp -> R_DEFAULT .

    S_COMA          reduce using rule 376 (updateExp -> R_DEFAULT .)
    R_WHERE         reduce using rule 376 (updateExp -> R_DEFAULT .)
    S_PUNTOCOMA     reduce using rule 376 (updateExp -> R_DEFAULT .)


state 475

    (325) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .

    R_SET           reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_COMA          reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_WHERE         reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_NATURAL       reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INNER         reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LEFT          reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_RIGHT         reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_FULL          reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_GROUP         reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_ORDER         reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LIMIT         reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_UNION         reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INTERSECT     reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_EXCEPT        reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PARDER        reduce using rule 325 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)


state 476

    (301) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl . orderByCl limitCl
    (351) orderByCl -> . R_ORDER R_BY orderList
    (352) orderByCl -> .

    R_ORDER         shift and go to state 478
    R_LIMIT         reduce using rule 352 (orderByCl -> .)
    S_PUNTOCOMA     reduce using rule 352 (orderByCl -> .)
    R_UNION         reduce using rule 352 (orderByCl -> .)
    R_INTERSECT     reduce using rule 352 (orderByCl -> .)
    R_EXCEPT        reduce using rule 352 (orderByCl -> .)
    S_PARDER        reduce using rule 352 (orderByCl -> .)

    orderByCl                      shift and go to state 575

state 477

    (302) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (363) limitCl -> . R_LIMIT INTEGER offsetLimit
    (364) limitCl -> . R_LIMIT R_ALL offsetLimit
    (365) limitCl -> .

    R_LIMIT         shift and go to state 577
    S_PUNTOCOMA     reduce using rule 365 (limitCl -> .)
    R_UNION         reduce using rule 365 (limitCl -> .)
    R_INTERSECT     reduce using rule 365 (limitCl -> .)
    R_EXCEPT        reduce using rule 365 (limitCl -> .)
    S_PARDER        reduce using rule 365 (limitCl -> .)

    limitCl                        shift and go to state 576

state 478

    (351) orderByCl -> R_ORDER . R_BY orderList

    R_BY            shift and go to state 578


state 479

    (343) groupByCl -> R_GROUP R_BY . groupList havingCl
    (345) groupList -> . groupList S_COMA columnName
    (346) groupList -> . groupList S_COMA INTEGER
    (347) groupList -> . columnName
    (348) groupList -> . INTEGER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 581
    ID              shift and go to state 482

    groupList                      shift and go to state 579
    columnName                     shift and go to state 580

state 480

    (303) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . orderByCl limitCl
    (304) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl . limitCl
    (351) orderByCl -> . R_ORDER R_BY orderList
    (352) orderByCl -> .
    (363) limitCl -> . R_LIMIT INTEGER offsetLimit
    (364) limitCl -> . R_LIMIT R_ALL offsetLimit
    (365) limitCl -> .

  ! shift/reduce conflict for R_LIMIT resolved as shift
  ! reduce/reduce conflict for S_PUNTOCOMA resolved using rule 352 (orderByCl -> .)
  ! reduce/reduce conflict for R_UNION resolved using rule 352 (orderByCl -> .)
  ! reduce/reduce conflict for R_INTERSECT resolved using rule 352 (orderByCl -> .)
  ! reduce/reduce conflict for R_EXCEPT resolved using rule 352 (orderByCl -> .)
  ! reduce/reduce conflict for S_PARDER resolved using rule 352 (orderByCl -> .)
    R_ORDER         shift and go to state 478
    S_PUNTOCOMA     reduce using rule 352 (orderByCl -> .)
    R_UNION         reduce using rule 352 (orderByCl -> .)
    R_INTERSECT     reduce using rule 352 (orderByCl -> .)
    R_EXCEPT        reduce using rule 352 (orderByCl -> .)
    S_PARDER        reduce using rule 352 (orderByCl -> .)
    R_LIMIT         shift and go to state 577

  ! R_LIMIT         [ reduce using rule 352 (orderByCl -> .) ]
  ! S_PUNTOCOMA     [ reduce using rule 365 (limitCl -> .) ]
  ! R_UNION         [ reduce using rule 365 (limitCl -> .) ]
  ! R_INTERSECT     [ reduce using rule 365 (limitCl -> .) ]
  ! R_EXCEPT        [ reduce using rule 365 (limitCl -> .) ]
  ! S_PARDER        [ reduce using rule 365 (limitCl -> .) ]

    orderByCl                      shift and go to state 582
    limitCl                        shift and go to state 583

state 481

    (329) joinCl -> joinOpt R_JOIN columnName . optAlias R_ON expBool
    (330) joinCl -> joinOpt R_JOIN columnName . optAlias R_USING S_PARIZQ nameList S_PARDER
    (319) optAlias -> . R_AS idOrString
    (320) optAlias -> . idOrString
    (321) optAlias -> .
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    R_AS            shift and go to state 139
    R_ON            reduce using rule 321 (optAlias -> .)
    R_USING         reduce using rule 321 (optAlias -> .)
    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    optAlias                       shift and go to state 584
    idOrString                     shift and go to state 140

state 482

    (256) columnName -> ID .
    (257) columnName -> ID . S_PUNTO ID

    R_AS            reduce using rule 256 (columnName -> ID .)
    ID              reduce using rule 256 (columnName -> ID .)
    STRING          reduce using rule 256 (columnName -> ID .)
    CHARACTER       reduce using rule 256 (columnName -> ID .)
    R_ON            reduce using rule 256 (columnName -> ID .)
    R_USING         reduce using rule 256 (columnName -> ID .)
    S_PARDER        reduce using rule 256 (columnName -> ID .)
    S_COMA          reduce using rule 256 (columnName -> ID .)
    R_HAVING        reduce using rule 256 (columnName -> ID .)
    R_ORDER         reduce using rule 256 (columnName -> ID .)
    R_LIMIT         reduce using rule 256 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 256 (columnName -> ID .)
    R_UNION         reduce using rule 256 (columnName -> ID .)
    R_INTERSECT     reduce using rule 256 (columnName -> ID .)
    R_EXCEPT        reduce using rule 256 (columnName -> ID .)
    R_NATURAL       reduce using rule 256 (columnName -> ID .)
    R_INNER         reduce using rule 256 (columnName -> ID .)
    R_LEFT          reduce using rule 256 (columnName -> ID .)
    R_RIGHT         reduce using rule 256 (columnName -> ID .)
    R_FULL          reduce using rule 256 (columnName -> ID .)
    R_WHERE         reduce using rule 256 (columnName -> ID .)
    R_GROUP         reduce using rule 256 (columnName -> ID .)
    R_ASC           reduce using rule 256 (columnName -> ID .)
    R_DESC          reduce using rule 256 (columnName -> ID .)
    R_NULL          reduce using rule 256 (columnName -> ID .)
    S_PUNTO         shift and go to state 207


state 483

    (331) joinCl -> R_NATURAL joinOpt R_JOIN . columnName optAlias
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 482

    columnName                     shift and go to state 585

state 484

    (167) paramsList -> paramsList S_COMA datatype .
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 167 (paramsList -> paramsList S_COMA datatype .)
    S_COMA          reduce using rule 167 (paramsList -> paramsList S_COMA datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159


state 485

    (240) boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 240 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)


state 486

    (241) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 586
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 487

    (200) expComp -> datatype R_NOT R_BETWEEN datatype R_AND . datatype
    (219) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 587
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 488

    (212) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 588
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 489

    (213) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 589
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 490

    (214) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 590
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 491

    (215) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 591
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 492

    (217) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 592
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 493

    (197) expComp -> datatype R_IS R_DISTINCT R_FROM datatype .
    (221) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 197 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 593

state 494

    (198) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype
    (222) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 594
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 495

    (224) expSubq -> datatype R_IS R_NOT R_NULL subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 595


state 496

    (228) expSubq -> datatype R_IS R_NOT R_TRUE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 596


state 497

    (230) expSubq -> datatype R_IS R_NOT R_FALSE subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 597


state 498

    (232) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 598


state 499

    (223) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 599

state 500

    (227) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 600

state 501

    (229) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 601

state 502

    (231) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 602

state 503

    (199) expComp -> datatype R_BETWEEN datatype R_AND datatype .
    (218) expSubq -> datatype R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 199 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 603

state 504

    (201) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype
    (220) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    datatype                       shift and go to state 604
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 505

    (225) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 605
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 506

    (226) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 606
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 507

    (216) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 607
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 508

    (179) caseWhen -> R_WHEN expBool R_THEN literal .

    R_ELSE          reduce using rule 179 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_WHEN          reduce using rule 179 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_END           reduce using rule 179 (caseWhen -> R_WHEN expBool R_THEN literal .)


state 509

    (139) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp . S_PARDER

    S_PARDER        shift and go to state 608


state 510

    (140) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName . S_PARDER

    S_PARDER        shift and go to state 609


state 511

    (149) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource . S_PARDER

    S_PARDER        shift and go to state 610


state 512

    (150) dateSource -> R_TIMESTAMP . STRING

    STRING          shift and go to state 611


state 513

    (151) dateSource -> T_DATE . STRING

    STRING          shift and go to state 612


state 514

    (152) dateSource -> T_TIME . STRING

    STRING          shift and go to state 613


state 515

    (153) dateSource -> R_INTERVAL . STRING

    STRING          shift and go to state 614


state 516

    (154) dateSource -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 615


state 517

    (16) ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_ .

    R_END           reduce using rule 16 (ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_ .)


state 518

    (23) List_body -> List_body body .

    R_ELSE          reduce using rule 23 (List_body -> List_body body .)
    R_CREATE        reduce using rule 23 (List_body -> List_body body .)
    R_SHOW          reduce using rule 23 (List_body -> List_body body .)
    R_ALTER         reduce using rule 23 (List_body -> List_body body .)
    R_DROP          reduce using rule 23 (List_body -> List_body body .)
    R_INSERT        reduce using rule 23 (List_body -> List_body body .)
    R_UPDATE        reduce using rule 23 (List_body -> List_body body .)
    R_DELETE        reduce using rule 23 (List_body -> List_body body .)
    R_TRUNCATE      reduce using rule 23 (List_body -> List_body body .)
    R_USE           reduce using rule 23 (List_body -> List_body body .)
    R_SELECT        reduce using rule 23 (List_body -> List_body body .)
    S_PARIZQ        reduce using rule 23 (List_body -> List_body body .)
    R_IF            reduce using rule 23 (List_body -> List_body body .)
    R_ELSIF         reduce using rule 23 (List_body -> List_body body .)
    R_END           reduce using rule 23 (List_body -> List_body body .)


state 519

    (17) else_ -> R_ELSE . List_body
    (23) List_body -> . List_body body
    (24) List_body -> . body
    (25) body -> . createStmt S_PUNTOCOMA
    (26) body -> . showStmt S_PUNTOCOMA
    (27) body -> . alterStmt S_PUNTOCOMA
    (28) body -> . dropStmt S_PUNTOCOMA
    (29) body -> . insertStmt S_PUNTOCOMA
    (30) body -> . updateStmt S_PUNTOCOMA
    (31) body -> . deleteStmt S_PUNTOCOMA
    (32) body -> . truncateStmt S_PUNTOCOMA
    (33) body -> . useStmt S_PUNTOCOMA
    (34) body -> . selectStmt S_PUNTOCOMA
    (35) body -> . functionStmt
    (36) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16

    List_body                      shift and go to state 616
    body                           shift and go to state 403
    createStmt                     shift and go to state 404
    showStmt                       shift and go to state 405
    alterStmt                      shift and go to state 406
    dropStmt                       shift and go to state 407
    insertStmt                     shift and go to state 408
    updateStmt                     shift and go to state 409
    deleteStmt                     shift and go to state 410
    truncateStmt                   shift and go to state 411
    useStmt                        shift and go to state 412
    selectStmt                     shift and go to state 413
    functionStmt                   shift and go to state 414
    ifStmt                         shift and go to state 415

state 520

    (18) else_ -> Lista_elsif_ .
    (20) Lista_elsif_ -> Lista_elsif_ . elsif_
    (22) elsif_ -> . R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body

    R_END           reduce using rule 18 (else_ -> Lista_elsif_ .)
    R_ELSIF         shift and go to state 522

    elsif_                         shift and go to state 617

state 521

    (21) Lista_elsif_ -> elsif_ .

    R_ELSIF         reduce using rule 21 (Lista_elsif_ -> elsif_ .)
    R_END           reduce using rule 21 (Lista_elsif_ -> elsif_ .)


state 522

    (22) elsif_ -> R_ELSIF . S_PARIZQ expresion S_PARDER R_THEN List_body

    S_PARIZQ        shift and go to state 618


state 523

    (25) body -> createStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)
    R_END           reduce using rule 25 (body -> createStmt S_PUNTOCOMA .)


state 524

    (26) body -> showStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)
    R_END           reduce using rule 26 (body -> showStmt S_PUNTOCOMA .)


state 525

    (27) body -> alterStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)
    R_END           reduce using rule 27 (body -> alterStmt S_PUNTOCOMA .)


state 526

    (28) body -> dropStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)
    R_END           reduce using rule 28 (body -> dropStmt S_PUNTOCOMA .)


state 527

    (29) body -> insertStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)
    R_END           reduce using rule 29 (body -> insertStmt S_PUNTOCOMA .)


state 528

    (30) body -> updateStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 30 (body -> updateStmt S_PUNTOCOMA .)


state 529

    (31) body -> deleteStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)
    R_END           reduce using rule 31 (body -> deleteStmt S_PUNTOCOMA .)


state 530

    (32) body -> truncateStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)
    R_END           reduce using rule 32 (body -> truncateStmt S_PUNTOCOMA .)


state 531

    (33) body -> useStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)
    R_END           reduce using rule 33 (body -> useStmt S_PUNTOCOMA .)


state 532

    (34) body -> selectStmt S_PUNTOCOMA .

    R_ELSE          reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)
    R_END           reduce using rule 34 (body -> selectStmt S_PUNTOCOMA .)


state 533

    (36) body -> ifStmt R_END . R_IF S_PUNTOCOMA

    R_IF            shift and go to state 619


state 534

    (92) types -> T_DOUBLE T_PRECISION .

    S_PARDER        reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    S_COMA          reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    R_AS            reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    R_DEFAULT       reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    R_NOT           reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    R_NULL          reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    R_PRIMARY       reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    R_REFERENCES    reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    R_CONSTRAINT    reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    R_UNIQUE        reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    R_CHECK         reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    S_PUNTOCOMA     reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    S_DOSPUNTOS     reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)
    S_IGUAL         reduce using rule 92 (types -> T_DOUBLE T_PRECISION .)


state 535

    (99) types -> T_DECIMAL optParams .

    S_PARDER        reduce using rule 99 (types -> T_DECIMAL optParams .)
    S_COMA          reduce using rule 99 (types -> T_DECIMAL optParams .)
    R_AS            reduce using rule 99 (types -> T_DECIMAL optParams .)
    R_DEFAULT       reduce using rule 99 (types -> T_DECIMAL optParams .)
    R_NOT           reduce using rule 99 (types -> T_DECIMAL optParams .)
    R_NULL          reduce using rule 99 (types -> T_DECIMAL optParams .)
    R_PRIMARY       reduce using rule 99 (types -> T_DECIMAL optParams .)
    R_REFERENCES    reduce using rule 99 (types -> T_DECIMAL optParams .)
    R_CONSTRAINT    reduce using rule 99 (types -> T_DECIMAL optParams .)
    R_UNIQUE        reduce using rule 99 (types -> T_DECIMAL optParams .)
    R_CHECK         reduce using rule 99 (types -> T_DECIMAL optParams .)
    S_PUNTOCOMA     reduce using rule 99 (types -> T_DECIMAL optParams .)
    S_DOSPUNTOS     reduce using rule 99 (types -> T_DECIMAL optParams .)
    S_IGUAL         reduce using rule 99 (types -> T_DECIMAL optParams .)


state 536

    (113) optParams -> S_PARIZQ . literalList S_PARDER
    (158) literalList -> . literalList S_COMA literal
    (159) literalList -> . literal
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL

    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95

    literalList                    shift and go to state 620
    literal                        shift and go to state 621

state 537

    (100) types -> T_NUMERIC optParams .

    S_PARDER        reduce using rule 100 (types -> T_NUMERIC optParams .)
    S_COMA          reduce using rule 100 (types -> T_NUMERIC optParams .)
    R_AS            reduce using rule 100 (types -> T_NUMERIC optParams .)
    R_DEFAULT       reduce using rule 100 (types -> T_NUMERIC optParams .)
    R_NOT           reduce using rule 100 (types -> T_NUMERIC optParams .)
    R_NULL          reduce using rule 100 (types -> T_NUMERIC optParams .)
    R_PRIMARY       reduce using rule 100 (types -> T_NUMERIC optParams .)
    R_REFERENCES    reduce using rule 100 (types -> T_NUMERIC optParams .)
    R_CONSTRAINT    reduce using rule 100 (types -> T_NUMERIC optParams .)
    R_UNIQUE        reduce using rule 100 (types -> T_NUMERIC optParams .)
    R_CHECK         reduce using rule 100 (types -> T_NUMERIC optParams .)
    S_PUNTOCOMA     reduce using rule 100 (types -> T_NUMERIC optParams .)
    S_DOSPUNTOS     reduce using rule 100 (types -> T_NUMERIC optParams .)
    S_IGUAL         reduce using rule 100 (types -> T_NUMERIC optParams .)


state 538

    (101) types -> T_VARCHAR optParams .

    S_PARDER        reduce using rule 101 (types -> T_VARCHAR optParams .)
    S_COMA          reduce using rule 101 (types -> T_VARCHAR optParams .)
    R_AS            reduce using rule 101 (types -> T_VARCHAR optParams .)
    R_DEFAULT       reduce using rule 101 (types -> T_VARCHAR optParams .)
    R_NOT           reduce using rule 101 (types -> T_VARCHAR optParams .)
    R_NULL          reduce using rule 101 (types -> T_VARCHAR optParams .)
    R_PRIMARY       reduce using rule 101 (types -> T_VARCHAR optParams .)
    R_REFERENCES    reduce using rule 101 (types -> T_VARCHAR optParams .)
    R_CONSTRAINT    reduce using rule 101 (types -> T_VARCHAR optParams .)
    R_UNIQUE        reduce using rule 101 (types -> T_VARCHAR optParams .)
    R_CHECK         reduce using rule 101 (types -> T_VARCHAR optParams .)
    S_PUNTOCOMA     reduce using rule 101 (types -> T_VARCHAR optParams .)
    S_DOSPUNTOS     reduce using rule 101 (types -> T_VARCHAR optParams .)
    S_IGUAL         reduce using rule 101 (types -> T_VARCHAR optParams .)


state 539

    (102) types -> T_CHARACTER optParams .

    S_PARDER        reduce using rule 102 (types -> T_CHARACTER optParams .)
    S_COMA          reduce using rule 102 (types -> T_CHARACTER optParams .)
    R_AS            reduce using rule 102 (types -> T_CHARACTER optParams .)
    R_DEFAULT       reduce using rule 102 (types -> T_CHARACTER optParams .)
    R_NOT           reduce using rule 102 (types -> T_CHARACTER optParams .)
    R_NULL          reduce using rule 102 (types -> T_CHARACTER optParams .)
    R_PRIMARY       reduce using rule 102 (types -> T_CHARACTER optParams .)
    R_REFERENCES    reduce using rule 102 (types -> T_CHARACTER optParams .)
    R_CONSTRAINT    reduce using rule 102 (types -> T_CHARACTER optParams .)
    R_UNIQUE        reduce using rule 102 (types -> T_CHARACTER optParams .)
    R_CHECK         reduce using rule 102 (types -> T_CHARACTER optParams .)
    S_PUNTOCOMA     reduce using rule 102 (types -> T_CHARACTER optParams .)
    S_DOSPUNTOS     reduce using rule 102 (types -> T_CHARACTER optParams .)
    S_IGUAL         reduce using rule 102 (types -> T_CHARACTER optParams .)


state 540

    (104) types -> T_CHARACTER T_VARYING . optParams
    (113) optParams -> . S_PARIZQ literalList S_PARDER
    (114) optParams -> .

    S_PARIZQ        shift and go to state 536
    S_PARDER        reduce using rule 114 (optParams -> .)
    S_COMA          reduce using rule 114 (optParams -> .)
    R_AS            reduce using rule 114 (optParams -> .)
    R_DEFAULT       reduce using rule 114 (optParams -> .)
    R_NOT           reduce using rule 114 (optParams -> .)
    R_NULL          reduce using rule 114 (optParams -> .)
    R_PRIMARY       reduce using rule 114 (optParams -> .)
    R_REFERENCES    reduce using rule 114 (optParams -> .)
    R_CONSTRAINT    reduce using rule 114 (optParams -> .)
    R_UNIQUE        reduce using rule 114 (optParams -> .)
    R_CHECK         reduce using rule 114 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 114 (optParams -> .)
    S_DOSPUNTOS     reduce using rule 114 (optParams -> .)
    S_IGUAL         reduce using rule 114 (optParams -> .)

    optParams                      shift and go to state 622

state 541

    (103) types -> T_CHAR optParams .

    S_PARDER        reduce using rule 103 (types -> T_CHAR optParams .)
    S_COMA          reduce using rule 103 (types -> T_CHAR optParams .)
    R_AS            reduce using rule 103 (types -> T_CHAR optParams .)
    R_DEFAULT       reduce using rule 103 (types -> T_CHAR optParams .)
    R_NOT           reduce using rule 103 (types -> T_CHAR optParams .)
    R_NULL          reduce using rule 103 (types -> T_CHAR optParams .)
    R_PRIMARY       reduce using rule 103 (types -> T_CHAR optParams .)
    R_REFERENCES    reduce using rule 103 (types -> T_CHAR optParams .)
    R_CONSTRAINT    reduce using rule 103 (types -> T_CHAR optParams .)
    R_UNIQUE        reduce using rule 103 (types -> T_CHAR optParams .)
    R_CHECK         reduce using rule 103 (types -> T_CHAR optParams .)
    S_PUNTOCOMA     reduce using rule 103 (types -> T_CHAR optParams .)
    S_DOSPUNTOS     reduce using rule 103 (types -> T_CHAR optParams .)
    S_IGUAL         reduce using rule 103 (types -> T_CHAR optParams .)


state 542

    (105) types -> R_INTERVAL intervalFields .

    S_PARDER        reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    S_COMA          reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    R_AS            reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    R_DEFAULT       reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    R_NOT           reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    R_NULL          reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    R_PRIMARY       reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    R_REFERENCES    reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    R_CONSTRAINT    reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    R_UNIQUE        reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    R_CHECK         reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    S_PUNTOCOMA     reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    S_DOSPUNTOS     reduce using rule 105 (types -> R_INTERVAL intervalFields .)
    S_IGUAL         reduce using rule 105 (types -> R_INTERVAL intervalFields .)


state 543

    (106) intervalFields -> R_YEAR .

    S_PARDER        reduce using rule 106 (intervalFields -> R_YEAR .)
    S_COMA          reduce using rule 106 (intervalFields -> R_YEAR .)
    R_AS            reduce using rule 106 (intervalFields -> R_YEAR .)
    R_DEFAULT       reduce using rule 106 (intervalFields -> R_YEAR .)
    R_NOT           reduce using rule 106 (intervalFields -> R_YEAR .)
    R_NULL          reduce using rule 106 (intervalFields -> R_YEAR .)
    R_PRIMARY       reduce using rule 106 (intervalFields -> R_YEAR .)
    R_REFERENCES    reduce using rule 106 (intervalFields -> R_YEAR .)
    R_CONSTRAINT    reduce using rule 106 (intervalFields -> R_YEAR .)
    R_UNIQUE        reduce using rule 106 (intervalFields -> R_YEAR .)
    R_CHECK         reduce using rule 106 (intervalFields -> R_YEAR .)
    S_PUNTOCOMA     reduce using rule 106 (intervalFields -> R_YEAR .)
    S_DOSPUNTOS     reduce using rule 106 (intervalFields -> R_YEAR .)
    S_IGUAL         reduce using rule 106 (intervalFields -> R_YEAR .)


state 544

    (107) intervalFields -> R_MONTH .

    S_PARDER        reduce using rule 107 (intervalFields -> R_MONTH .)
    S_COMA          reduce using rule 107 (intervalFields -> R_MONTH .)
    R_AS            reduce using rule 107 (intervalFields -> R_MONTH .)
    R_DEFAULT       reduce using rule 107 (intervalFields -> R_MONTH .)
    R_NOT           reduce using rule 107 (intervalFields -> R_MONTH .)
    R_NULL          reduce using rule 107 (intervalFields -> R_MONTH .)
    R_PRIMARY       reduce using rule 107 (intervalFields -> R_MONTH .)
    R_REFERENCES    reduce using rule 107 (intervalFields -> R_MONTH .)
    R_CONSTRAINT    reduce using rule 107 (intervalFields -> R_MONTH .)
    R_UNIQUE        reduce using rule 107 (intervalFields -> R_MONTH .)
    R_CHECK         reduce using rule 107 (intervalFields -> R_MONTH .)
    S_PUNTOCOMA     reduce using rule 107 (intervalFields -> R_MONTH .)
    S_DOSPUNTOS     reduce using rule 107 (intervalFields -> R_MONTH .)
    S_IGUAL         reduce using rule 107 (intervalFields -> R_MONTH .)


state 545

    (108) intervalFields -> R_DAY .

    S_PARDER        reduce using rule 108 (intervalFields -> R_DAY .)
    S_COMA          reduce using rule 108 (intervalFields -> R_DAY .)
    R_AS            reduce using rule 108 (intervalFields -> R_DAY .)
    R_DEFAULT       reduce using rule 108 (intervalFields -> R_DAY .)
    R_NOT           reduce using rule 108 (intervalFields -> R_DAY .)
    R_NULL          reduce using rule 108 (intervalFields -> R_DAY .)
    R_PRIMARY       reduce using rule 108 (intervalFields -> R_DAY .)
    R_REFERENCES    reduce using rule 108 (intervalFields -> R_DAY .)
    R_CONSTRAINT    reduce using rule 108 (intervalFields -> R_DAY .)
    R_UNIQUE        reduce using rule 108 (intervalFields -> R_DAY .)
    R_CHECK         reduce using rule 108 (intervalFields -> R_DAY .)
    S_PUNTOCOMA     reduce using rule 108 (intervalFields -> R_DAY .)
    S_DOSPUNTOS     reduce using rule 108 (intervalFields -> R_DAY .)
    S_IGUAL         reduce using rule 108 (intervalFields -> R_DAY .)


state 546

    (109) intervalFields -> R_HOUR .

    S_PARDER        reduce using rule 109 (intervalFields -> R_HOUR .)
    S_COMA          reduce using rule 109 (intervalFields -> R_HOUR .)
    R_AS            reduce using rule 109 (intervalFields -> R_HOUR .)
    R_DEFAULT       reduce using rule 109 (intervalFields -> R_HOUR .)
    R_NOT           reduce using rule 109 (intervalFields -> R_HOUR .)
    R_NULL          reduce using rule 109 (intervalFields -> R_HOUR .)
    R_PRIMARY       reduce using rule 109 (intervalFields -> R_HOUR .)
    R_REFERENCES    reduce using rule 109 (intervalFields -> R_HOUR .)
    R_CONSTRAINT    reduce using rule 109 (intervalFields -> R_HOUR .)
    R_UNIQUE        reduce using rule 109 (intervalFields -> R_HOUR .)
    R_CHECK         reduce using rule 109 (intervalFields -> R_HOUR .)
    S_PUNTOCOMA     reduce using rule 109 (intervalFields -> R_HOUR .)
    S_DOSPUNTOS     reduce using rule 109 (intervalFields -> R_HOUR .)
    S_IGUAL         reduce using rule 109 (intervalFields -> R_HOUR .)


state 547

    (110) intervalFields -> R_MINUTE .

    S_PARDER        reduce using rule 110 (intervalFields -> R_MINUTE .)
    S_COMA          reduce using rule 110 (intervalFields -> R_MINUTE .)
    R_AS            reduce using rule 110 (intervalFields -> R_MINUTE .)
    R_DEFAULT       reduce using rule 110 (intervalFields -> R_MINUTE .)
    R_NOT           reduce using rule 110 (intervalFields -> R_MINUTE .)
    R_NULL          reduce using rule 110 (intervalFields -> R_MINUTE .)
    R_PRIMARY       reduce using rule 110 (intervalFields -> R_MINUTE .)
    R_REFERENCES    reduce using rule 110 (intervalFields -> R_MINUTE .)
    R_CONSTRAINT    reduce using rule 110 (intervalFields -> R_MINUTE .)
    R_UNIQUE        reduce using rule 110 (intervalFields -> R_MINUTE .)
    R_CHECK         reduce using rule 110 (intervalFields -> R_MINUTE .)
    S_PUNTOCOMA     reduce using rule 110 (intervalFields -> R_MINUTE .)
    S_DOSPUNTOS     reduce using rule 110 (intervalFields -> R_MINUTE .)
    S_IGUAL         reduce using rule 110 (intervalFields -> R_MINUTE .)


state 548

    (111) intervalFields -> R_SECOND .

    S_PARDER        reduce using rule 111 (intervalFields -> R_SECOND .)
    S_COMA          reduce using rule 111 (intervalFields -> R_SECOND .)
    R_AS            reduce using rule 111 (intervalFields -> R_SECOND .)
    R_DEFAULT       reduce using rule 111 (intervalFields -> R_SECOND .)
    R_NOT           reduce using rule 111 (intervalFields -> R_SECOND .)
    R_NULL          reduce using rule 111 (intervalFields -> R_SECOND .)
    R_PRIMARY       reduce using rule 111 (intervalFields -> R_SECOND .)
    R_REFERENCES    reduce using rule 111 (intervalFields -> R_SECOND .)
    R_CONSTRAINT    reduce using rule 111 (intervalFields -> R_SECOND .)
    R_UNIQUE        reduce using rule 111 (intervalFields -> R_SECOND .)
    R_CHECK         reduce using rule 111 (intervalFields -> R_SECOND .)
    S_PUNTOCOMA     reduce using rule 111 (intervalFields -> R_SECOND .)
    S_DOSPUNTOS     reduce using rule 111 (intervalFields -> R_SECOND .)
    S_IGUAL         reduce using rule 111 (intervalFields -> R_SECOND .)


state 549

    (385) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt . R_AS S_DOLAR S_DOLAR bloqueFunction

    R_AS            shift and go to state 623


state 550

    (388) params_list -> params_list S_COMA param_item .

    S_PARDER        reduce using rule 388 (params_list -> params_list S_COMA param_item .)
    S_COMA          reduce using rule 388 (params_list -> params_list S_COMA param_item .)


state 551

    (386) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS . S_DOLAR S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 624


state 552

    (391) returnsStmt -> R_RETURNS types .

    R_AS            reduce using rule 391 (returnsStmt -> R_RETURNS types .)


state 553

    (42) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index . S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl

    S_PARIZQ        shift and go to state 625


state 554

    (45) using_hash_index -> R_USING . R_HASH

    R_HASH          shift and go to state 626


state 555

    (53) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER . inheritsOpt
    (60) inheritsOpt -> . R_INHERITS S_PARIZQ ID S_PARDER
    (61) inheritsOpt -> .

    R_INHERITS      shift and go to state 628
    S_PUNTOCOMA     reduce using rule 61 (inheritsOpt -> .)

    inheritsOpt                    shift and go to state 627

state 556

    (70) createTableList -> createTableList S_COMA . createTable
    (72) createTable -> . ID types createColumns
    (73) createTable -> . createConstraint
    (74) createTable -> . createUnique
    (75) createTable -> . createPrimary
    (76) createTable -> . createForeign
    (79) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (80) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (81) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (82) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (83) constrName -> . R_CONSTRAINT ID
    (84) constrName -> .

    ID              shift and go to state 442
    R_UNIQUE        shift and go to state 448
    R_PRIMARY       shift and go to state 338
    R_CONSTRAINT    shift and go to state 339
    R_CHECK         reduce using rule 84 (constrName -> .)
    R_FOREIGN       reduce using rule 84 (constrName -> .)

    createTable                    shift and go to state 629
    createConstraint               shift and go to state 443
    createUnique                   shift and go to state 444
    createPrimary                  shift and go to state 445
    createForeign                  shift and go to state 446
    constrName                     shift and go to state 447

state 557

    (72) createTable -> ID types . createColumns
    (77) createColumns -> . colOptionsList
    (78) createColumns -> .
    (115) colOptionsList -> . colOptionsList colOptions
    (116) colOptionsList -> . colOptions
    (117) colOptions -> . defaultVal
    (118) colOptions -> . nullOpt
    (119) colOptions -> . constraintOpt
    (120) colOptions -> . primaryOpt
    (121) colOptions -> . referencesOpt
    (122) defaultVal -> . R_DEFAULT literal
    (123) nullOpt -> . R_NOT R_NULL
    (124) nullOpt -> . R_NULL
    (125) constraintOpt -> . constrName R_UNIQUE
    (126) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (127) primaryOpt -> . R_PRIMARY R_KEY
    (128) referencesOpt -> . R_REFERENCES ID
    (83) constrName -> . R_CONSTRAINT ID
    (84) constrName -> .

    S_PARDER        reduce using rule 78 (createColumns -> .)
    S_COMA          reduce using rule 78 (createColumns -> .)
    R_DEFAULT       shift and go to state 638
    R_NOT           shift and go to state 639
    R_NULL          shift and go to state 640
    R_PRIMARY       shift and go to state 642
    R_REFERENCES    shift and go to state 643
    R_CONSTRAINT    shift and go to state 339
    R_UNIQUE        reduce using rule 84 (constrName -> .)
    R_CHECK         reduce using rule 84 (constrName -> .)

    createColumns                  shift and go to state 630
    colOptionsList                 shift and go to state 631
    colOptions                     shift and go to state 632
    defaultVal                     shift and go to state 633
    nullOpt                        shift and go to state 634
    constraintOpt                  shift and go to state 635
    primaryOpt                     shift and go to state 636
    referencesOpt                  shift and go to state 637
    constrName                     shift and go to state 641

state 558

    (80) createUnique -> R_UNIQUE S_PARIZQ . idList S_PARDER
    (85) idList -> . idList S_COMA ID
    (86) idList -> . ID

    ID              shift and go to state 347

    idList                         shift and go to state 644

state 559

    (54) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .

    S_PUNTOCOMA     reduce using rule 54 (createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .)


state 560

    (67) createMode -> R_MODE . INTEGER
    (68) createMode -> R_MODE . S_IGUAL INTEGER

    INTEGER         shift and go to state 645
    S_IGUAL         shift and go to state 646


state 561

    (62) createOwner -> R_OWNER ID .

    R_MODE          reduce using rule 62 (createOwner -> R_OWNER ID .)
    S_PUNTOCOMA     reduce using rule 62 (createOwner -> R_OWNER ID .)


state 562

    (63) createOwner -> R_OWNER STRING .

    R_MODE          reduce using rule 63 (createOwner -> R_OWNER STRING .)
    S_PUNTOCOMA     reduce using rule 63 (createOwner -> R_OWNER STRING .)


state 563

    (64) createOwner -> R_OWNER S_IGUAL . ID
    (65) createOwner -> R_OWNER S_IGUAL . STRING

    ID              shift and go to state 647
    STRING          shift and go to state 648


state 564

    (57) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ . paramsList S_PARDER
    (167) paramsList -> . paramsList S_COMA datatype
    (168) paramsList -> . datatype
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    S_PARIZQ        shift and go to state 183
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    paramsList                     shift and go to state 649
    datatype                       shift and go to state 252
    columnName                     shift and go to state 182
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    timeStamp                      shift and go to state 101

state 565

    (291) alterAlter -> R_COLUMN ID R_SET . nullOpt
    (292) alterAlter -> R_COLUMN ID R_SET . defaultVal
    (123) nullOpt -> . R_NOT R_NULL
    (124) nullOpt -> . R_NULL
    (122) defaultVal -> . R_DEFAULT literal

    R_NOT           shift and go to state 639
    R_NULL          shift and go to state 640
    R_DEFAULT       shift and go to state 638

    nullOpt                        shift and go to state 650
    defaultVal                     shift and go to state 651

state 566

    (293) alterAlter -> R_COLUMN ID R_TYPE . types
    (87) types -> . ID
    (88) types -> . T_SMALLINT
    (89) types -> . T_INTEGER
    (90) types -> . T_BIGINT
    (91) types -> . T_REAL
    (92) types -> . T_DOUBLE T_PRECISION
    (93) types -> . T_MONEY
    (94) types -> . T_TEXT
    (95) types -> . T_BOOLEAN
    (96) types -> . R_TIMESTAMP
    (97) types -> . T_DATE
    (98) types -> . T_TIME
    (99) types -> . T_DECIMAL optParams
    (100) types -> . T_NUMERIC optParams
    (101) types -> . T_VARCHAR optParams
    (102) types -> . T_CHARACTER optParams
    (103) types -> . T_CHAR optParams
    (104) types -> . T_CHARACTER T_VARYING optParams
    (105) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 416
    T_SMALLINT      shift and go to state 418
    T_INTEGER       shift and go to state 419
    T_BIGINT        shift and go to state 420
    T_REAL          shift and go to state 421
    T_DOUBLE        shift and go to state 422
    T_MONEY         shift and go to state 423
    T_TEXT          shift and go to state 424
    T_BOOLEAN       shift and go to state 425
    R_TIMESTAMP     shift and go to state 426
    T_DATE          shift and go to state 427
    T_TIME          shift and go to state 428
    T_DECIMAL       shift and go to state 429
    T_NUMERIC       shift and go to state 430
    T_VARCHAR       shift and go to state 431
    T_CHARACTER     shift and go to state 432
    T_CHAR          shift and go to state 433
    R_INTERVAL      shift and go to state 434

    types                          shift and go to state 652

state 567

    (286) alterAdd -> R_COLUMN ID types .

    S_COMA          reduce using rule 286 (alterAdd -> R_COLUMN ID types .)
    S_PUNTOCOMA     reduce using rule 286 (alterAdd -> R_COLUMN ID types .)


state 568

    (290) alterAdd -> constrName R_UNIQUE S_PARIZQ . ID S_PARDER

    ID              shift and go to state 653


state 569

    (79) createConstraint -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (258) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (259) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (260) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (261) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (262) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (263) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (264) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (265) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    booleanCheck                   shift and go to state 654
    idOrLiteral                    shift and go to state 655

state 570

    (82) createForeign -> constrName R_FOREIGN R_KEY . S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 663


state 571

    (81) createPrimary -> R_PRIMARY R_KEY S_PARIZQ . idList S_PARDER
    (85) idList -> . idList S_COMA ID
    (86) idList -> . ID

    ID              shift and go to state 347

    idList                         shift and go to state 664

state 572

    (296) alterRename -> R_COLUMN ID R_TO . ID

    ID              shift and go to state 665


state 573

    (368) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList . S_PARDER
    (167) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 666
    S_COMA          shift and go to state 365


state 574

    (85) idList -> idList S_COMA ID .

    S_PARDER        reduce using rule 85 (idList -> idList S_COMA ID .)
    S_COMA          reduce using rule 85 (idList -> idList S_COMA ID .)
    R_DESC          reduce using rule 85 (idList -> idList S_COMA ID .)
    R_ASC           reduce using rule 85 (idList -> idList S_COMA ID .)
    R_NULLS         reduce using rule 85 (idList -> idList S_COMA ID .)


state 575

    (301) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl . limitCl
    (363) limitCl -> . R_LIMIT INTEGER offsetLimit
    (364) limitCl -> . R_LIMIT R_ALL offsetLimit
    (365) limitCl -> .

    R_LIMIT         shift and go to state 577
    S_PUNTOCOMA     reduce using rule 365 (limitCl -> .)
    R_UNION         reduce using rule 365 (limitCl -> .)
    R_INTERSECT     reduce using rule 365 (limitCl -> .)
    R_EXCEPT        reduce using rule 365 (limitCl -> .)
    S_PARDER        reduce using rule 365 (limitCl -> .)

    limitCl                        shift and go to state 667

state 576

    (302) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 302 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 302 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 302 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 302 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 302 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl .)


state 577

    (363) limitCl -> R_LIMIT . INTEGER offsetLimit
    (364) limitCl -> R_LIMIT . R_ALL offsetLimit

    INTEGER         shift and go to state 668
    R_ALL           shift and go to state 669


state 578

    (351) orderByCl -> R_ORDER R_BY . orderList
    (353) orderList -> . orderList S_COMA orderByElem
    (354) orderList -> . orderByElem
    (355) orderByElem -> . columnName orderOpts orderNull
    (356) orderByElem -> . INTEGER orderOpts orderNull
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 673
    ID              shift and go to state 482

    orderList                      shift and go to state 670
    orderByElem                    shift and go to state 671
    columnName                     shift and go to state 672

state 579

    (343) groupByCl -> R_GROUP R_BY groupList . havingCl
    (345) groupList -> groupList . S_COMA columnName
    (346) groupList -> groupList . S_COMA INTEGER
    (349) havingCl -> . R_HAVING expBool
    (350) havingCl -> .

    S_COMA          shift and go to state 675
    R_HAVING        shift and go to state 676
    R_ORDER         reduce using rule 350 (havingCl -> .)
    R_LIMIT         reduce using rule 350 (havingCl -> .)
    S_PUNTOCOMA     reduce using rule 350 (havingCl -> .)
    R_UNION         reduce using rule 350 (havingCl -> .)
    R_INTERSECT     reduce using rule 350 (havingCl -> .)
    R_EXCEPT        reduce using rule 350 (havingCl -> .)
    S_PARDER        reduce using rule 350 (havingCl -> .)

    havingCl                       shift and go to state 674

state 580

    (347) groupList -> columnName .

    S_COMA          reduce using rule 347 (groupList -> columnName .)
    R_HAVING        reduce using rule 347 (groupList -> columnName .)
    R_ORDER         reduce using rule 347 (groupList -> columnName .)
    R_LIMIT         reduce using rule 347 (groupList -> columnName .)
    S_PUNTOCOMA     reduce using rule 347 (groupList -> columnName .)
    R_UNION         reduce using rule 347 (groupList -> columnName .)
    R_INTERSECT     reduce using rule 347 (groupList -> columnName .)
    R_EXCEPT        reduce using rule 347 (groupList -> columnName .)
    S_PARDER        reduce using rule 347 (groupList -> columnName .)


state 581

    (348) groupList -> INTEGER .

    S_COMA          reduce using rule 348 (groupList -> INTEGER .)
    R_HAVING        reduce using rule 348 (groupList -> INTEGER .)
    R_ORDER         reduce using rule 348 (groupList -> INTEGER .)
    R_LIMIT         reduce using rule 348 (groupList -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 348 (groupList -> INTEGER .)
    R_UNION         reduce using rule 348 (groupList -> INTEGER .)
    R_INTERSECT     reduce using rule 348 (groupList -> INTEGER .)
    R_EXCEPT        reduce using rule 348 (groupList -> INTEGER .)
    S_PARDER        reduce using rule 348 (groupList -> INTEGER .)


state 582

    (303) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl . limitCl
    (363) limitCl -> . R_LIMIT INTEGER offsetLimit
    (364) limitCl -> . R_LIMIT R_ALL offsetLimit
    (365) limitCl -> .

    R_LIMIT         shift and go to state 577
    S_PUNTOCOMA     reduce using rule 365 (limitCl -> .)
    R_UNION         reduce using rule 365 (limitCl -> .)
    R_INTERSECT     reduce using rule 365 (limitCl -> .)
    R_EXCEPT        reduce using rule 365 (limitCl -> .)
    S_PARDER        reduce using rule 365 (limitCl -> .)

    limitCl                        shift and go to state 677

state 583

    (304) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .

    S_PUNTOCOMA     reduce using rule 304 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_UNION         reduce using rule 304 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_INTERSECT     reduce using rule 304 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    R_EXCEPT        reduce using rule 304 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)
    S_PARDER        reduce using rule 304 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl .)


state 584

    (329) joinCl -> joinOpt R_JOIN columnName optAlias . R_ON expBool
    (330) joinCl -> joinOpt R_JOIN columnName optAlias . R_USING S_PARIZQ nameList S_PARDER

    R_ON            shift and go to state 678
    R_USING         shift and go to state 679


state 585

    (331) joinCl -> R_NATURAL joinOpt R_JOIN columnName . optAlias
    (319) optAlias -> . R_AS idOrString
    (320) optAlias -> . idOrString
    (321) optAlias -> .
    (37) idOrString -> . ID
    (38) idOrString -> . STRING
    (39) idOrString -> . CHARACTER

    R_AS            shift and go to state 139
    R_NATURAL       reduce using rule 321 (optAlias -> .)
    R_INNER         reduce using rule 321 (optAlias -> .)
    R_LEFT          reduce using rule 321 (optAlias -> .)
    R_RIGHT         reduce using rule 321 (optAlias -> .)
    R_FULL          reduce using rule 321 (optAlias -> .)
    R_WHERE         reduce using rule 321 (optAlias -> .)
    R_GROUP         reduce using rule 321 (optAlias -> .)
    R_ORDER         reduce using rule 321 (optAlias -> .)
    R_LIMIT         reduce using rule 321 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 321 (optAlias -> .)
    R_UNION         reduce using rule 321 (optAlias -> .)
    R_INTERSECT     reduce using rule 321 (optAlias -> .)
    R_EXCEPT        reduce using rule 321 (optAlias -> .)
    S_PARDER        reduce using rule 321 (optAlias -> .)
    ID              shift and go to state 128
    STRING          shift and go to state 129
    CHARACTER       shift and go to state 130

    optAlias                       shift and go to state 680
    idOrString                     shift and go to state 140

state 586

    (241) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 241 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)


state 587

    (200) expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .
    (219) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_NATURAL       reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INNER         reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LEFT          reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_RIGHT         reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FULL          reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_WHERE         reduce using rule 200 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 681

state 588

    (212) expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 212 (expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 589

    (213) expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 213 (expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 590

    (214) expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 214 (expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 591

    (215) expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 215 (expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 592

    (217) expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 217 (expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER .)


state 593

    (221) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 682


state 594

    (198) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .
    (222) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_NATURAL       reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INNER         reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LEFT          reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_RIGHT         reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FULL          reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_WHERE         reduce using rule 198 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 683

state 595

    (224) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 684

state 596

    (228) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 685

state 597

    (230) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 686

state 598

    (232) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 687

state 599

    (223) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 688
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 600

    (227) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 689
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 601

    (229) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 690
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 602

    (231) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 691
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 603

    (218) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 692


state 604

    (201) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .
    (220) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype . subqValues S_PARIZQ selectStmt S_PARDER
    (169) datatype -> datatype . O_SUMA datatype
    (170) datatype -> datatype . O_RESTA datatype
    (171) datatype -> datatype . O_PRODUCTO datatype
    (172) datatype -> datatype . O_DIVISION datatype
    (173) datatype -> datatype . O_EXPONENTE datatype
    (174) datatype -> datatype . O_MODULAR datatype
    (175) datatype -> datatype . OC_CONCATENAR datatype
    (236) subqValues -> . R_ALL
    (237) subqValues -> . R_ANY
    (238) subqValues -> . R_SOME

    R_AND           reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_OR            reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_IS            reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_AS            reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    ID              reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    STRING          reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    CHARACTER       reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_COMA          reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FROM          reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_UNION         reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PARDER        reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_GROUP         reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_ORDER         reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LIMIT         reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_THEN          reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_NATURAL       reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INNER         reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LEFT          reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_RIGHT         reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FULL          reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_WHERE         reduce using rule 201 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    O_SUMA          shift and go to state 153
    O_RESTA         shift and go to state 154
    O_PRODUCTO      shift and go to state 155
    O_DIVISION      shift and go to state 156
    O_EXPONENTE     shift and go to state 157
    O_MODULAR       shift and go to state 158
    OC_CONCATENAR   shift and go to state 159
    R_ALL           shift and go to state 265
    R_ANY           shift and go to state 266
    R_SOME          shift and go to state 267

    subqValues                     shift and go to state 693

state 605

    (225) expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 225 (expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 606

    (226) expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 226 (expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 607

    (216) expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 216 (expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER .)


state 608

    (139) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .

    O_SUMA          reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_RESTA         reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_PRODUCTO      reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_DIVISION      reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_EXPONENTE     reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_MODULAR       reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OC_CONCATENAR   reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IN            reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOT           reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORQUE     reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORQUE     reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_IGUAL         reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_DISTINTODE   reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IS            reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_BETWEEN       reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ISNULL        reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOTNULL       reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_ESIGUAL      reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AS            reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    ID              reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    STRING          reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    CHARACTER       reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_COMA          reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FROM          reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PUNTOCOMA     reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_UNION         reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INTERSECT     reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_EXCEPT        reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PARDER        reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AND           reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_OR            reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_GROUP         reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ORDER         reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LIMIT         reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_THEN          reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NATURAL       reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INNER         reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LEFT          reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_RIGHT         reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FULL          reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_WHERE         reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ALL           reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ANY           reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_SOME          reduce using rule 139 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)


state 609

    (140) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .

    O_SUMA          reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_RESTA         reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_PRODUCTO      reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_DIVISION      reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_EXPONENTE     reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_MODULAR       reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OC_CONCATENAR   reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IN            reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOT           reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORQUE     reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORQUE     reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_IGUAL         reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_DISTINTODE   reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IS            reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_BETWEEN       reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ISNULL        reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOTNULL       reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_ESIGUAL      reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AS            reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    ID              reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    STRING          reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    CHARACTER       reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_COMA          reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FROM          reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PUNTOCOMA     reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_UNION         reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INTERSECT     reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_EXCEPT        reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PARDER        reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AND           reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_OR            reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_GROUP         reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ORDER         reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LIMIT         reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_THEN          reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NATURAL       reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INNER         reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LEFT          reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_RIGHT         reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FULL          reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_WHERE         reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ALL           reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ANY           reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_SOME          reduce using rule 140 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)


state 610

    (149) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .

    O_SUMA          reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_RESTA         reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_PRODUCTO      reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_DIVISION      reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_EXPONENTE     reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_MODULAR       reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OC_CONCATENAR   reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IN            reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOT           reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORQUE     reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORQUE     reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_IGUAL         reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_DISTINTODE   reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IS            reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_BETWEEN       reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ISNULL        reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOTNULL       reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_ESIGUAL      reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AS            reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    ID              reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    STRING          reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    CHARACTER       reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_COMA          reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FROM          reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PUNTOCOMA     reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_UNION         reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INTERSECT     reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_EXCEPT        reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PARDER        reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AND           reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_OR            reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_GROUP         reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ORDER         reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LIMIT         reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_THEN          reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NATURAL       reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INNER         reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LEFT          reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_RIGHT         reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FULL          reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_WHERE         reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ALL           reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ANY           reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_SOME          reduce using rule 149 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)


state 611

    (150) dateSource -> R_TIMESTAMP STRING .

    S_PARDER        reduce using rule 150 (dateSource -> R_TIMESTAMP STRING .)


state 612

    (151) dateSource -> T_DATE STRING .

    S_PARDER        reduce using rule 151 (dateSource -> T_DATE STRING .)


state 613

    (152) dateSource -> T_TIME STRING .

    S_PARDER        reduce using rule 152 (dateSource -> T_TIME STRING .)


state 614

    (153) dateSource -> R_INTERVAL STRING .

    S_PARDER        reduce using rule 153 (dateSource -> R_INTERVAL STRING .)


state 615

    (154) dateSource -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 694


state 616

    (17) else_ -> R_ELSE List_body .
    (23) List_body -> List_body . body
    (25) body -> . createStmt S_PUNTOCOMA
    (26) body -> . showStmt S_PUNTOCOMA
    (27) body -> . alterStmt S_PUNTOCOMA
    (28) body -> . dropStmt S_PUNTOCOMA
    (29) body -> . insertStmt S_PUNTOCOMA
    (30) body -> . updateStmt S_PUNTOCOMA
    (31) body -> . deleteStmt S_PUNTOCOMA
    (32) body -> . truncateStmt S_PUNTOCOMA
    (33) body -> . useStmt S_PUNTOCOMA
    (34) body -> . selectStmt S_PUNTOCOMA
    (35) body -> . functionStmt
    (36) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_END           reduce using rule 17 (else_ -> R_ELSE List_body .)
    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16

    body                           shift and go to state 518
    createStmt                     shift and go to state 404
    showStmt                       shift and go to state 405
    alterStmt                      shift and go to state 406
    dropStmt                       shift and go to state 407
    insertStmt                     shift and go to state 408
    updateStmt                     shift and go to state 409
    deleteStmt                     shift and go to state 410
    truncateStmt                   shift and go to state 411
    useStmt                        shift and go to state 412
    selectStmt                     shift and go to state 413
    functionStmt                   shift and go to state 414
    ifStmt                         shift and go to state 415

state 617

    (20) Lista_elsif_ -> Lista_elsif_ elsif_ .

    R_ELSIF         reduce using rule 20 (Lista_elsif_ -> Lista_elsif_ elsif_ .)
    R_END           reduce using rule 20 (Lista_elsif_ -> Lista_elsif_ elsif_ .)


state 618

    (22) elsif_ -> R_ELSIF S_PARIZQ . expresion S_PARDER R_THEN List_body
    (129) expresion -> . datatype
    (130) expresion -> . expBool
    (131) expresion -> . S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    S_PARIZQ        shift and go to state 77
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_NOT           shift and go to state 87
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_EXISTS        shift and go to state 105
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expresion                      shift and go to state 695
    datatype                       shift and go to state 75
    expBool                        shift and go to state 76
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    boolean                        shift and go to state 88
    timeStamp                      shift and go to state 101
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    stringExp                      shift and go to state 110

state 619

    (36) body -> ifStmt R_END R_IF . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 696


state 620

    (113) optParams -> S_PARIZQ literalList . S_PARDER
    (158) literalList -> literalList . S_COMA literal

    S_PARDER        shift and go to state 697
    S_COMA          shift and go to state 698


state 621

    (159) literalList -> literal .

    S_PARDER        reduce using rule 159 (literalList -> literal .)
    S_COMA          reduce using rule 159 (literalList -> literal .)


state 622

    (104) types -> T_CHARACTER T_VARYING optParams .

    S_PARDER        reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    S_COMA          reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    R_AS            reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    R_DEFAULT       reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    R_NOT           reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    R_NULL          reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    R_PRIMARY       reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    R_REFERENCES    reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    R_CONSTRAINT    reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    R_UNIQUE        reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    R_CHECK         reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    S_PUNTOCOMA     reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    S_DOSPUNTOS     reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)
    S_IGUAL         reduce using rule 104 (types -> T_CHARACTER T_VARYING optParams .)


state 623

    (385) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS . S_DOLAR S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 699


state 624

    (386) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR . S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 700


state 625

    (42) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ . idList indexasc_desc indexNullS S_PARDER whereCl
    (85) idList -> . idList S_COMA ID
    (86) idList -> . ID

    ID              shift and go to state 347

    idList                         shift and go to state 701

state 626

    (45) using_hash_index -> R_USING R_HASH .

    S_PARIZQ        reduce using rule 45 (using_hash_index -> R_USING R_HASH .)


state 627

    (53) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .

    S_PUNTOCOMA     reduce using rule 53 (createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .)


state 628

    (60) inheritsOpt -> R_INHERITS . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 702


state 629

    (70) createTableList -> createTableList S_COMA createTable .

    S_PARDER        reduce using rule 70 (createTableList -> createTableList S_COMA createTable .)
    S_COMA          reduce using rule 70 (createTableList -> createTableList S_COMA createTable .)


state 630

    (72) createTable -> ID types createColumns .

    S_PARDER        reduce using rule 72 (createTable -> ID types createColumns .)
    S_COMA          reduce using rule 72 (createTable -> ID types createColumns .)


state 631

    (77) createColumns -> colOptionsList .
    (115) colOptionsList -> colOptionsList . colOptions
    (117) colOptions -> . defaultVal
    (118) colOptions -> . nullOpt
    (119) colOptions -> . constraintOpt
    (120) colOptions -> . primaryOpt
    (121) colOptions -> . referencesOpt
    (122) defaultVal -> . R_DEFAULT literal
    (123) nullOpt -> . R_NOT R_NULL
    (124) nullOpt -> . R_NULL
    (125) constraintOpt -> . constrName R_UNIQUE
    (126) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (127) primaryOpt -> . R_PRIMARY R_KEY
    (128) referencesOpt -> . R_REFERENCES ID
    (83) constrName -> . R_CONSTRAINT ID
    (84) constrName -> .

    S_PARDER        reduce using rule 77 (createColumns -> colOptionsList .)
    S_COMA          reduce using rule 77 (createColumns -> colOptionsList .)
    R_DEFAULT       shift and go to state 638
    R_NOT           shift and go to state 639
    R_NULL          shift and go to state 640
    R_PRIMARY       shift and go to state 642
    R_REFERENCES    shift and go to state 643
    R_CONSTRAINT    shift and go to state 339
    R_UNIQUE        reduce using rule 84 (constrName -> .)
    R_CHECK         reduce using rule 84 (constrName -> .)

    colOptions                     shift and go to state 703
    defaultVal                     shift and go to state 633
    nullOpt                        shift and go to state 634
    constraintOpt                  shift and go to state 635
    primaryOpt                     shift and go to state 636
    referencesOpt                  shift and go to state 637
    constrName                     shift and go to state 641

state 632

    (116) colOptionsList -> colOptions .

    R_DEFAULT       reduce using rule 116 (colOptionsList -> colOptions .)
    R_NOT           reduce using rule 116 (colOptionsList -> colOptions .)
    R_NULL          reduce using rule 116 (colOptionsList -> colOptions .)
    R_PRIMARY       reduce using rule 116 (colOptionsList -> colOptions .)
    R_REFERENCES    reduce using rule 116 (colOptionsList -> colOptions .)
    R_CONSTRAINT    reduce using rule 116 (colOptionsList -> colOptions .)
    R_UNIQUE        reduce using rule 116 (colOptionsList -> colOptions .)
    R_CHECK         reduce using rule 116 (colOptionsList -> colOptions .)
    S_PARDER        reduce using rule 116 (colOptionsList -> colOptions .)
    S_COMA          reduce using rule 116 (colOptionsList -> colOptions .)


state 633

    (117) colOptions -> defaultVal .

    R_DEFAULT       reduce using rule 117 (colOptions -> defaultVal .)
    R_NOT           reduce using rule 117 (colOptions -> defaultVal .)
    R_NULL          reduce using rule 117 (colOptions -> defaultVal .)
    R_PRIMARY       reduce using rule 117 (colOptions -> defaultVal .)
    R_REFERENCES    reduce using rule 117 (colOptions -> defaultVal .)
    R_CONSTRAINT    reduce using rule 117 (colOptions -> defaultVal .)
    R_UNIQUE        reduce using rule 117 (colOptions -> defaultVal .)
    R_CHECK         reduce using rule 117 (colOptions -> defaultVal .)
    S_PARDER        reduce using rule 117 (colOptions -> defaultVal .)
    S_COMA          reduce using rule 117 (colOptions -> defaultVal .)


state 634

    (118) colOptions -> nullOpt .

    R_DEFAULT       reduce using rule 118 (colOptions -> nullOpt .)
    R_NOT           reduce using rule 118 (colOptions -> nullOpt .)
    R_NULL          reduce using rule 118 (colOptions -> nullOpt .)
    R_PRIMARY       reduce using rule 118 (colOptions -> nullOpt .)
    R_REFERENCES    reduce using rule 118 (colOptions -> nullOpt .)
    R_CONSTRAINT    reduce using rule 118 (colOptions -> nullOpt .)
    R_UNIQUE        reduce using rule 118 (colOptions -> nullOpt .)
    R_CHECK         reduce using rule 118 (colOptions -> nullOpt .)
    S_PARDER        reduce using rule 118 (colOptions -> nullOpt .)
    S_COMA          reduce using rule 118 (colOptions -> nullOpt .)


state 635

    (119) colOptions -> constraintOpt .

    R_DEFAULT       reduce using rule 119 (colOptions -> constraintOpt .)
    R_NOT           reduce using rule 119 (colOptions -> constraintOpt .)
    R_NULL          reduce using rule 119 (colOptions -> constraintOpt .)
    R_PRIMARY       reduce using rule 119 (colOptions -> constraintOpt .)
    R_REFERENCES    reduce using rule 119 (colOptions -> constraintOpt .)
    R_CONSTRAINT    reduce using rule 119 (colOptions -> constraintOpt .)
    R_UNIQUE        reduce using rule 119 (colOptions -> constraintOpt .)
    R_CHECK         reduce using rule 119 (colOptions -> constraintOpt .)
    S_PARDER        reduce using rule 119 (colOptions -> constraintOpt .)
    S_COMA          reduce using rule 119 (colOptions -> constraintOpt .)


state 636

    (120) colOptions -> primaryOpt .

    R_DEFAULT       reduce using rule 120 (colOptions -> primaryOpt .)
    R_NOT           reduce using rule 120 (colOptions -> primaryOpt .)
    R_NULL          reduce using rule 120 (colOptions -> primaryOpt .)
    R_PRIMARY       reduce using rule 120 (colOptions -> primaryOpt .)
    R_REFERENCES    reduce using rule 120 (colOptions -> primaryOpt .)
    R_CONSTRAINT    reduce using rule 120 (colOptions -> primaryOpt .)
    R_UNIQUE        reduce using rule 120 (colOptions -> primaryOpt .)
    R_CHECK         reduce using rule 120 (colOptions -> primaryOpt .)
    S_PARDER        reduce using rule 120 (colOptions -> primaryOpt .)
    S_COMA          reduce using rule 120 (colOptions -> primaryOpt .)


state 637

    (121) colOptions -> referencesOpt .

    R_DEFAULT       reduce using rule 121 (colOptions -> referencesOpt .)
    R_NOT           reduce using rule 121 (colOptions -> referencesOpt .)
    R_NULL          reduce using rule 121 (colOptions -> referencesOpt .)
    R_PRIMARY       reduce using rule 121 (colOptions -> referencesOpt .)
    R_REFERENCES    reduce using rule 121 (colOptions -> referencesOpt .)
    R_CONSTRAINT    reduce using rule 121 (colOptions -> referencesOpt .)
    R_UNIQUE        reduce using rule 121 (colOptions -> referencesOpt .)
    R_CHECK         reduce using rule 121 (colOptions -> referencesOpt .)
    S_PARDER        reduce using rule 121 (colOptions -> referencesOpt .)
    S_COMA          reduce using rule 121 (colOptions -> referencesOpt .)


state 638

    (122) defaultVal -> R_DEFAULT . literal
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL

    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95

    literal                        shift and go to state 704

state 639

    (123) nullOpt -> R_NOT . R_NULL

    R_NULL          shift and go to state 705


state 640

    (124) nullOpt -> R_NULL .

    R_DEFAULT       reduce using rule 124 (nullOpt -> R_NULL .)
    R_NOT           reduce using rule 124 (nullOpt -> R_NULL .)
    R_NULL          reduce using rule 124 (nullOpt -> R_NULL .)
    R_PRIMARY       reduce using rule 124 (nullOpt -> R_NULL .)
    R_REFERENCES    reduce using rule 124 (nullOpt -> R_NULL .)
    R_CONSTRAINT    reduce using rule 124 (nullOpt -> R_NULL .)
    R_UNIQUE        reduce using rule 124 (nullOpt -> R_NULL .)
    R_CHECK         reduce using rule 124 (nullOpt -> R_NULL .)
    S_PARDER        reduce using rule 124 (nullOpt -> R_NULL .)
    S_COMA          reduce using rule 124 (nullOpt -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 124 (nullOpt -> R_NULL .)


state 641

    (125) constraintOpt -> constrName . R_UNIQUE
    (126) constraintOpt -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER

    R_UNIQUE        shift and go to state 706
    R_CHECK         shift and go to state 707


state 642

    (127) primaryOpt -> R_PRIMARY . R_KEY

    R_KEY           shift and go to state 708


state 643

    (128) referencesOpt -> R_REFERENCES . ID

    ID              shift and go to state 709


state 644

    (80) createUnique -> R_UNIQUE S_PARIZQ idList . S_PARDER
    (85) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 710
    S_COMA          shift and go to state 470


state 645

    (67) createMode -> R_MODE INTEGER .

    S_PUNTOCOMA     reduce using rule 67 (createMode -> R_MODE INTEGER .)


state 646

    (68) createMode -> R_MODE S_IGUAL . INTEGER

    INTEGER         shift and go to state 711


state 647

    (64) createOwner -> R_OWNER S_IGUAL ID .

    R_MODE          reduce using rule 64 (createOwner -> R_OWNER S_IGUAL ID .)
    S_PUNTOCOMA     reduce using rule 64 (createOwner -> R_OWNER S_IGUAL ID .)


state 648

    (65) createOwner -> R_OWNER S_IGUAL STRING .

    R_MODE          reduce using rule 65 (createOwner -> R_OWNER S_IGUAL STRING .)
    S_PUNTOCOMA     reduce using rule 65 (createOwner -> R_OWNER S_IGUAL STRING .)


state 649

    (57) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList . S_PARDER
    (167) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 712
    S_COMA          shift and go to state 365


state 650

    (291) alterAlter -> R_COLUMN ID R_SET nullOpt .

    S_COMA          reduce using rule 291 (alterAlter -> R_COLUMN ID R_SET nullOpt .)
    S_PUNTOCOMA     reduce using rule 291 (alterAlter -> R_COLUMN ID R_SET nullOpt .)


state 651

    (292) alterAlter -> R_COLUMN ID R_SET defaultVal .

    S_COMA          reduce using rule 292 (alterAlter -> R_COLUMN ID R_SET defaultVal .)
    S_PUNTOCOMA     reduce using rule 292 (alterAlter -> R_COLUMN ID R_SET defaultVal .)


state 652

    (293) alterAlter -> R_COLUMN ID R_TYPE types .

    S_COMA          reduce using rule 293 (alterAlter -> R_COLUMN ID R_TYPE types .)
    S_PUNTOCOMA     reduce using rule 293 (alterAlter -> R_COLUMN ID R_TYPE types .)


state 653

    (290) alterAdd -> constrName R_UNIQUE S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 713


state 654

    (79) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 714


state 655

    (258) booleanCheck -> idOrLiteral . OL_MENORQUE idOrLiteral
    (259) booleanCheck -> idOrLiteral . OL_MAYORQUE idOrLiteral
    (260) booleanCheck -> idOrLiteral . OL_MAYORIGUALQUE idOrLiteral
    (261) booleanCheck -> idOrLiteral . OL_MENORIGUALQUE idOrLiteral
    (262) booleanCheck -> idOrLiteral . S_IGUAL idOrLiteral
    (263) booleanCheck -> idOrLiteral . OL_DISTINTODE idOrLiteral
    (264) booleanCheck -> idOrLiteral . R_IS R_DISTINCT R_FROM idOrLiteral
    (265) booleanCheck -> idOrLiteral . R_IS R_NOT R_DISTINCT R_FROM idOrLiteral

    OL_MENORQUE     shift and go to state 715
    OL_MAYORQUE     shift and go to state 716
    OL_MAYORIGUALQUE shift and go to state 717
    OL_MENORIGUALQUE shift and go to state 718
    S_IGUAL         shift and go to state 719
    OL_DISTINTODE   shift and go to state 720
    R_IS            shift and go to state 721


state 656

    (266) idOrLiteral -> ID .

    OL_MENORQUE     reduce using rule 266 (idOrLiteral -> ID .)
    OL_MAYORQUE     reduce using rule 266 (idOrLiteral -> ID .)
    OL_MAYORIGUALQUE reduce using rule 266 (idOrLiteral -> ID .)
    OL_MENORIGUALQUE reduce using rule 266 (idOrLiteral -> ID .)
    S_IGUAL         reduce using rule 266 (idOrLiteral -> ID .)
    OL_DISTINTODE   reduce using rule 266 (idOrLiteral -> ID .)
    R_IS            reduce using rule 266 (idOrLiteral -> ID .)
    S_PARDER        reduce using rule 266 (idOrLiteral -> ID .)


state 657

    (267) idOrLiteral -> INTEGER .

    OL_MENORQUE     reduce using rule 267 (idOrLiteral -> INTEGER .)
    OL_MAYORQUE     reduce using rule 267 (idOrLiteral -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 267 (idOrLiteral -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 267 (idOrLiteral -> INTEGER .)
    S_IGUAL         reduce using rule 267 (idOrLiteral -> INTEGER .)
    OL_DISTINTODE   reduce using rule 267 (idOrLiteral -> INTEGER .)
    R_IS            reduce using rule 267 (idOrLiteral -> INTEGER .)
    S_PARDER        reduce using rule 267 (idOrLiteral -> INTEGER .)


state 658

    (268) idOrLiteral -> STRING .

    OL_MENORQUE     reduce using rule 268 (idOrLiteral -> STRING .)
    OL_MAYORQUE     reduce using rule 268 (idOrLiteral -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 268 (idOrLiteral -> STRING .)
    OL_MENORIGUALQUE reduce using rule 268 (idOrLiteral -> STRING .)
    S_IGUAL         reduce using rule 268 (idOrLiteral -> STRING .)
    OL_DISTINTODE   reduce using rule 268 (idOrLiteral -> STRING .)
    R_IS            reduce using rule 268 (idOrLiteral -> STRING .)
    S_PARDER        reduce using rule 268 (idOrLiteral -> STRING .)


state 659

    (269) idOrLiteral -> DECIMAL .

    OL_MENORQUE     reduce using rule 269 (idOrLiteral -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 269 (idOrLiteral -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 269 (idOrLiteral -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 269 (idOrLiteral -> DECIMAL .)
    S_IGUAL         reduce using rule 269 (idOrLiteral -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 269 (idOrLiteral -> DECIMAL .)
    R_IS            reduce using rule 269 (idOrLiteral -> DECIMAL .)
    S_PARDER        reduce using rule 269 (idOrLiteral -> DECIMAL .)


state 660

    (270) idOrLiteral -> CHARACTER .

    OL_MENORQUE     reduce using rule 270 (idOrLiteral -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 270 (idOrLiteral -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 270 (idOrLiteral -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 270 (idOrLiteral -> CHARACTER .)
    S_IGUAL         reduce using rule 270 (idOrLiteral -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 270 (idOrLiteral -> CHARACTER .)
    R_IS            reduce using rule 270 (idOrLiteral -> CHARACTER .)
    S_PARDER        reduce using rule 270 (idOrLiteral -> CHARACTER .)


state 661

    (271) idOrLiteral -> R_TRUE .

    OL_MENORQUE     reduce using rule 271 (idOrLiteral -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 271 (idOrLiteral -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 271 (idOrLiteral -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 271 (idOrLiteral -> R_TRUE .)
    S_IGUAL         reduce using rule 271 (idOrLiteral -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 271 (idOrLiteral -> R_TRUE .)
    R_IS            reduce using rule 271 (idOrLiteral -> R_TRUE .)
    S_PARDER        reduce using rule 271 (idOrLiteral -> R_TRUE .)


state 662

    (272) idOrLiteral -> R_FALSE .

    OL_MENORQUE     reduce using rule 272 (idOrLiteral -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 272 (idOrLiteral -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 272 (idOrLiteral -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 272 (idOrLiteral -> R_FALSE .)
    S_IGUAL         reduce using rule 272 (idOrLiteral -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 272 (idOrLiteral -> R_FALSE .)
    R_IS            reduce using rule 272 (idOrLiteral -> R_FALSE .)
    S_PARDER        reduce using rule 272 (idOrLiteral -> R_FALSE .)


state 663

    (82) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ . idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (85) idList -> . idList S_COMA ID
    (86) idList -> . ID

    ID              shift and go to state 347

    idList                         shift and go to state 722

state 664

    (81) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList . S_PARDER
    (85) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 723
    S_COMA          shift and go to state 470


state 665

    (296) alterRename -> R_COLUMN ID R_TO ID .

    S_COMA          reduce using rule 296 (alterRename -> R_COLUMN ID R_TO ID .)
    S_PUNTOCOMA     reduce using rule 296 (alterRename -> R_COLUMN ID R_TO ID .)


state 666

    (368) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 368 (insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .)


state 667

    (301) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 301 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 301 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 301 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 301 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 301 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl .)


state 668

    (363) limitCl -> R_LIMIT INTEGER . offsetLimit
    (366) offsetLimit -> . R_OFFSET INTEGER
    (367) offsetLimit -> .

    R_OFFSET        shift and go to state 725
    S_PUNTOCOMA     reduce using rule 367 (offsetLimit -> .)
    R_UNION         reduce using rule 367 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 367 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 367 (offsetLimit -> .)
    S_PARDER        reduce using rule 367 (offsetLimit -> .)

    offsetLimit                    shift and go to state 724

state 669

    (364) limitCl -> R_LIMIT R_ALL . offsetLimit
    (366) offsetLimit -> . R_OFFSET INTEGER
    (367) offsetLimit -> .

    R_OFFSET        shift and go to state 725
    S_PUNTOCOMA     reduce using rule 367 (offsetLimit -> .)
    R_UNION         reduce using rule 367 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 367 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 367 (offsetLimit -> .)
    S_PARDER        reduce using rule 367 (offsetLimit -> .)

    offsetLimit                    shift and go to state 726

state 670

    (351) orderByCl -> R_ORDER R_BY orderList .
    (353) orderList -> orderList . S_COMA orderByElem

    R_LIMIT         reduce using rule 351 (orderByCl -> R_ORDER R_BY orderList .)
    S_PUNTOCOMA     reduce using rule 351 (orderByCl -> R_ORDER R_BY orderList .)
    R_UNION         reduce using rule 351 (orderByCl -> R_ORDER R_BY orderList .)
    R_INTERSECT     reduce using rule 351 (orderByCl -> R_ORDER R_BY orderList .)
    R_EXCEPT        reduce using rule 351 (orderByCl -> R_ORDER R_BY orderList .)
    S_PARDER        reduce using rule 351 (orderByCl -> R_ORDER R_BY orderList .)
    S_COMA          shift and go to state 727


state 671

    (354) orderList -> orderByElem .

    S_COMA          reduce using rule 354 (orderList -> orderByElem .)
    R_LIMIT         reduce using rule 354 (orderList -> orderByElem .)
    S_PUNTOCOMA     reduce using rule 354 (orderList -> orderByElem .)
    R_UNION         reduce using rule 354 (orderList -> orderByElem .)
    R_INTERSECT     reduce using rule 354 (orderList -> orderByElem .)
    R_EXCEPT        reduce using rule 354 (orderList -> orderByElem .)
    S_PARDER        reduce using rule 354 (orderList -> orderByElem .)


state 672

    (355) orderByElem -> columnName . orderOpts orderNull
    (357) orderOpts -> . R_ASC
    (358) orderOpts -> . R_DESC
    (359) orderOpts -> .

    R_ASC           shift and go to state 729
    R_DESC          shift and go to state 730
    R_NULL          reduce using rule 359 (orderOpts -> .)
    S_COMA          reduce using rule 359 (orderOpts -> .)
    R_LIMIT         reduce using rule 359 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 359 (orderOpts -> .)
    R_UNION         reduce using rule 359 (orderOpts -> .)
    R_INTERSECT     reduce using rule 359 (orderOpts -> .)
    R_EXCEPT        reduce using rule 359 (orderOpts -> .)
    S_PARDER        reduce using rule 359 (orderOpts -> .)

    orderOpts                      shift and go to state 728

state 673

    (356) orderByElem -> INTEGER . orderOpts orderNull
    (357) orderOpts -> . R_ASC
    (358) orderOpts -> . R_DESC
    (359) orderOpts -> .

    R_ASC           shift and go to state 729
    R_DESC          shift and go to state 730
    R_NULL          reduce using rule 359 (orderOpts -> .)
    S_COMA          reduce using rule 359 (orderOpts -> .)
    R_LIMIT         reduce using rule 359 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 359 (orderOpts -> .)
    R_UNION         reduce using rule 359 (orderOpts -> .)
    R_INTERSECT     reduce using rule 359 (orderOpts -> .)
    R_EXCEPT        reduce using rule 359 (orderOpts -> .)
    S_PARDER        reduce using rule 359 (orderOpts -> .)

    orderOpts                      shift and go to state 731

state 674

    (343) groupByCl -> R_GROUP R_BY groupList havingCl .

    R_ORDER         reduce using rule 343 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_LIMIT         reduce using rule 343 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PUNTOCOMA     reduce using rule 343 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_UNION         reduce using rule 343 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_INTERSECT     reduce using rule 343 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_EXCEPT        reduce using rule 343 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PARDER        reduce using rule 343 (groupByCl -> R_GROUP R_BY groupList havingCl .)


state 675

    (345) groupList -> groupList S_COMA . columnName
    (346) groupList -> groupList S_COMA . INTEGER
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 733
    ID              shift and go to state 482

    columnName                     shift and go to state 732

state 676

    (349) havingCl -> R_HAVING . expBool
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 87
    S_PARIZQ        shift and go to state 190
    R_EXISTS        shift and go to state 105
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expBool                        shift and go to state 734
    boolean                        shift and go to state 88
    datatype                       shift and go to state 191
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    stringExp                      shift and go to state 110
    timeStamp                      shift and go to state 101

state 677

    (303) selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .

    S_PUNTOCOMA     reduce using rule 303 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_UNION         reduce using rule 303 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_INTERSECT     reduce using rule 303 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    R_EXCEPT        reduce using rule 303 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)
    S_PARDER        reduce using rule 303 (selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl .)


state 678

    (329) joinCl -> joinOpt R_JOIN columnName optAlias R_ON . expBool
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 87
    S_PARIZQ        shift and go to state 190
    R_EXISTS        shift and go to state 105
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    columnName                     shift and go to state 81
    expBool                        shift and go to state 735
    boolean                        shift and go to state 88
    datatype                       shift and go to state 191
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    stringExp                      shift and go to state 110
    timeStamp                      shift and go to state 101

state 679

    (330) joinCl -> joinOpt R_JOIN columnName optAlias R_USING . S_PARIZQ nameList S_PARDER

    S_PARIZQ        shift and go to state 736


state 680

    (331) joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .

    R_NATURAL       reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INNER         reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LEFT          reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_RIGHT         reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_FULL          reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_WHERE         reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_GROUP         reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_ORDER         reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_LIMIT         reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PUNTOCOMA     reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_UNION         reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_INTERSECT     reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    R_EXCEPT        reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)
    S_PARDER        reduce using rule 331 (joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias .)


state 681

    (219) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 737


state 682

    (221) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 738

state 683

    (222) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 739


state 684

    (224) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 740
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 685

    (228) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 741
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 686

    (230) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 742
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 687

    (232) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 743
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 688

    (223) expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 223 (expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 689

    (227) expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 227 (expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 690

    (229) expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 229 (expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)


state 691

    (231) expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 231 (expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)


state 692

    (218) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 744

state 693

    (220) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 745


state 694

    (154) dateSource -> R_NOW S_PARIZQ S_PARDER .

    S_PARDER        reduce using rule 154 (dateSource -> R_NOW S_PARIZQ S_PARDER .)


state 695

    (22) elsif_ -> R_ELSIF S_PARIZQ expresion . S_PARDER R_THEN List_body

    S_PARDER        shift and go to state 746


state 696

    (36) body -> ifStmt R_END R_IF S_PUNTOCOMA .

    R_ELSE          reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_CREATE        reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SHOW          reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ALTER         reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DROP          reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_INSERT        reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_DELETE        reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_USE           reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_SELECT        reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_IF            reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)
    R_END           reduce using rule 36 (body -> ifStmt R_END R_IF S_PUNTOCOMA .)


state 697

    (113) optParams -> S_PARIZQ literalList S_PARDER .

    S_PARDER        reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_COMA          reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_AS            reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_DEFAULT       reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NOT           reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NULL          reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_PRIMARY       reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_REFERENCES    reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CONSTRAINT    reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_UNIQUE        reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CHECK         reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_DOSPUNTOS     reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_IGUAL         reduce using rule 113 (optParams -> S_PARIZQ literalList S_PARDER .)


state 698

    (158) literalList -> literalList S_COMA . literal
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL

    INTEGER         shift and go to state 89
    STRING          shift and go to state 184
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95

    literal                        shift and go to state 747

state 699

    (385) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR . S_DOLAR bloqueFunction

    S_DOLAR         shift and go to state 748


state 700

    (386) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR . bloqueFunction
    (387) bloqueFunction -> . declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd
    (393) declareStmt -> . R_DECLARE declaracion_list
    (394) declareStmt -> .

    R_DECLARE       shift and go to state 751
    R_BEGIN         reduce using rule 394 (declareStmt -> .)

    bloqueFunction                 shift and go to state 749
    declareStmt                    shift and go to state 750

state 701

    (42) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList . indexasc_desc indexNullS S_PARDER whereCl
    (85) idList -> idList . S_COMA ID
    (50) indexasc_desc -> . R_DESC
    (51) indexasc_desc -> . R_ASC
    (52) indexasc_desc -> .

    S_COMA          shift and go to state 470
    R_DESC          shift and go to state 753
    R_ASC           shift and go to state 754
    R_NULLS         reduce using rule 52 (indexasc_desc -> .)
    S_PARDER        reduce using rule 52 (indexasc_desc -> .)

    indexasc_desc                  shift and go to state 752

state 702

    (60) inheritsOpt -> R_INHERITS S_PARIZQ . ID S_PARDER

    ID              shift and go to state 755


state 703

    (115) colOptionsList -> colOptionsList colOptions .

    R_DEFAULT       reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)
    R_NOT           reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)
    R_NULL          reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)
    R_PRIMARY       reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)
    R_REFERENCES    reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)
    R_CONSTRAINT    reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)
    R_UNIQUE        reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)
    R_CHECK         reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)
    S_PARDER        reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)
    S_COMA          reduce using rule 115 (colOptionsList -> colOptionsList colOptions .)


state 704

    (122) defaultVal -> R_DEFAULT literal .

    R_DEFAULT       reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    R_NOT           reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    R_NULL          reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    R_PRIMARY       reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    R_REFERENCES    reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    R_CONSTRAINT    reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    R_UNIQUE        reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    R_CHECK         reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    S_PARDER        reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    S_COMA          reduce using rule 122 (defaultVal -> R_DEFAULT literal .)
    S_PUNTOCOMA     reduce using rule 122 (defaultVal -> R_DEFAULT literal .)


state 705

    (123) nullOpt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    R_NOT           reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    R_NULL          reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    R_PRIMARY       reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    R_REFERENCES    reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    R_CONSTRAINT    reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    R_UNIQUE        reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    R_CHECK         reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    S_PARDER        reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    S_COMA          reduce using rule 123 (nullOpt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 123 (nullOpt -> R_NOT R_NULL .)


state 706

    (125) constraintOpt -> constrName R_UNIQUE .

    R_DEFAULT       reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)
    R_NOT           reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)
    R_NULL          reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)
    R_PRIMARY       reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)
    R_REFERENCES    reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)
    R_CONSTRAINT    reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)
    R_UNIQUE        reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)
    R_CHECK         reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)
    S_PARDER        reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)
    S_COMA          reduce using rule 125 (constraintOpt -> constrName R_UNIQUE .)


state 707

    (126) constraintOpt -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 756


state 708

    (127) primaryOpt -> R_PRIMARY R_KEY .

    R_DEFAULT       reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NOT           reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NULL          reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)
    R_PRIMARY       reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)
    R_REFERENCES    reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CONSTRAINT    reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)
    R_UNIQUE        reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CHECK         reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)
    S_PARDER        reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)
    S_COMA          reduce using rule 127 (primaryOpt -> R_PRIMARY R_KEY .)


state 709

    (128) referencesOpt -> R_REFERENCES ID .

    R_DEFAULT       reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)
    R_NOT           reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)
    R_NULL          reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)
    R_PRIMARY       reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)
    R_REFERENCES    reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)
    R_CONSTRAINT    reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)
    R_UNIQUE        reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)
    R_CHECK         reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)
    S_PARDER        reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)
    S_COMA          reduce using rule 128 (referencesOpt -> R_REFERENCES ID .)


state 710

    (80) createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .

    S_PARDER        reduce using rule 80 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)
    S_COMA          reduce using rule 80 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)


state 711

    (68) createMode -> R_MODE S_IGUAL INTEGER .

    S_PUNTOCOMA     reduce using rule 68 (createMode -> R_MODE S_IGUAL INTEGER .)


state 712

    (57) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 57 (createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .)


state 713

    (290) alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .

    S_COMA          reduce using rule 290 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)
    S_PUNTOCOMA     reduce using rule 290 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)


state 714

    (79) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    S_COMA          reduce using rule 79 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PUNTOCOMA     reduce using rule 79 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 79 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 715

    (258) booleanCheck -> idOrLiteral OL_MENORQUE . idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    idOrLiteral                    shift and go to state 757

state 716

    (259) booleanCheck -> idOrLiteral OL_MAYORQUE . idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    idOrLiteral                    shift and go to state 758

state 717

    (260) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE . idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    idOrLiteral                    shift and go to state 759

state 718

    (261) booleanCheck -> idOrLiteral OL_MENORIGUALQUE . idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    idOrLiteral                    shift and go to state 760

state 719

    (262) booleanCheck -> idOrLiteral S_IGUAL . idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    idOrLiteral                    shift and go to state 761

state 720

    (263) booleanCheck -> idOrLiteral OL_DISTINTODE . idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    idOrLiteral                    shift and go to state 762

state 721

    (264) booleanCheck -> idOrLiteral R_IS . R_DISTINCT R_FROM idOrLiteral
    (265) booleanCheck -> idOrLiteral R_IS . R_NOT R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 763
    R_NOT           shift and go to state 764


state 722

    (82) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList . S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (85) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 765
    S_COMA          shift and go to state 470


state 723

    (81) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 81 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 81 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 81 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)


state 724

    (363) limitCl -> R_LIMIT INTEGER offsetLimit .

    S_PUNTOCOMA     reduce using rule 363 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_UNION         reduce using rule 363 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_INTERSECT     reduce using rule 363 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_EXCEPT        reduce using rule 363 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    S_PARDER        reduce using rule 363 (limitCl -> R_LIMIT INTEGER offsetLimit .)


state 725

    (366) offsetLimit -> R_OFFSET . INTEGER

    INTEGER         shift and go to state 766


state 726

    (364) limitCl -> R_LIMIT R_ALL offsetLimit .

    S_PUNTOCOMA     reduce using rule 364 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_UNION         reduce using rule 364 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_INTERSECT     reduce using rule 364 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_EXCEPT        reduce using rule 364 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    S_PARDER        reduce using rule 364 (limitCl -> R_LIMIT R_ALL offsetLimit .)


state 727

    (353) orderList -> orderList S_COMA . orderByElem
    (355) orderByElem -> . columnName orderOpts orderNull
    (356) orderByElem -> . INTEGER orderOpts orderNull
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 673
    ID              shift and go to state 482

    orderByElem                    shift and go to state 767
    columnName                     shift and go to state 672

state 728

    (355) orderByElem -> columnName orderOpts . orderNull
    (360) orderNull -> . R_NULL R_FIRST
    (361) orderNull -> . R_NULL R_LAST
    (362) orderNull -> .

    R_NULL          shift and go to state 769
    S_COMA          reduce using rule 362 (orderNull -> .)
    R_LIMIT         reduce using rule 362 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 362 (orderNull -> .)
    R_UNION         reduce using rule 362 (orderNull -> .)
    R_INTERSECT     reduce using rule 362 (orderNull -> .)
    R_EXCEPT        reduce using rule 362 (orderNull -> .)
    S_PARDER        reduce using rule 362 (orderNull -> .)

    orderNull                      shift and go to state 768

state 729

    (357) orderOpts -> R_ASC .

    R_NULL          reduce using rule 357 (orderOpts -> R_ASC .)
    S_COMA          reduce using rule 357 (orderOpts -> R_ASC .)
    R_LIMIT         reduce using rule 357 (orderOpts -> R_ASC .)
    S_PUNTOCOMA     reduce using rule 357 (orderOpts -> R_ASC .)
    R_UNION         reduce using rule 357 (orderOpts -> R_ASC .)
    R_INTERSECT     reduce using rule 357 (orderOpts -> R_ASC .)
    R_EXCEPT        reduce using rule 357 (orderOpts -> R_ASC .)
    S_PARDER        reduce using rule 357 (orderOpts -> R_ASC .)


state 730

    (358) orderOpts -> R_DESC .

    R_NULL          reduce using rule 358 (orderOpts -> R_DESC .)
    S_COMA          reduce using rule 358 (orderOpts -> R_DESC .)
    R_LIMIT         reduce using rule 358 (orderOpts -> R_DESC .)
    S_PUNTOCOMA     reduce using rule 358 (orderOpts -> R_DESC .)
    R_UNION         reduce using rule 358 (orderOpts -> R_DESC .)
    R_INTERSECT     reduce using rule 358 (orderOpts -> R_DESC .)
    R_EXCEPT        reduce using rule 358 (orderOpts -> R_DESC .)
    S_PARDER        reduce using rule 358 (orderOpts -> R_DESC .)


state 731

    (356) orderByElem -> INTEGER orderOpts . orderNull
    (360) orderNull -> . R_NULL R_FIRST
    (361) orderNull -> . R_NULL R_LAST
    (362) orderNull -> .

    R_NULL          shift and go to state 769
    S_COMA          reduce using rule 362 (orderNull -> .)
    R_LIMIT         reduce using rule 362 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 362 (orderNull -> .)
    R_UNION         reduce using rule 362 (orderNull -> .)
    R_INTERSECT     reduce using rule 362 (orderNull -> .)
    R_EXCEPT        reduce using rule 362 (orderNull -> .)
    S_PARDER        reduce using rule 362 (orderNull -> .)

    orderNull                      shift and go to state 770

state 732

    (345) groupList -> groupList S_COMA columnName .

    S_COMA          reduce using rule 345 (groupList -> groupList S_COMA columnName .)
    R_HAVING        reduce using rule 345 (groupList -> groupList S_COMA columnName .)
    R_ORDER         reduce using rule 345 (groupList -> groupList S_COMA columnName .)
    R_LIMIT         reduce using rule 345 (groupList -> groupList S_COMA columnName .)
    S_PUNTOCOMA     reduce using rule 345 (groupList -> groupList S_COMA columnName .)
    R_UNION         reduce using rule 345 (groupList -> groupList S_COMA columnName .)
    R_INTERSECT     reduce using rule 345 (groupList -> groupList S_COMA columnName .)
    R_EXCEPT        reduce using rule 345 (groupList -> groupList S_COMA columnName .)
    S_PARDER        reduce using rule 345 (groupList -> groupList S_COMA columnName .)


state 733

    (346) groupList -> groupList S_COMA INTEGER .

    S_COMA          reduce using rule 346 (groupList -> groupList S_COMA INTEGER .)
    R_HAVING        reduce using rule 346 (groupList -> groupList S_COMA INTEGER .)
    R_ORDER         reduce using rule 346 (groupList -> groupList S_COMA INTEGER .)
    R_LIMIT         reduce using rule 346 (groupList -> groupList S_COMA INTEGER .)
    S_PUNTOCOMA     reduce using rule 346 (groupList -> groupList S_COMA INTEGER .)
    R_UNION         reduce using rule 346 (groupList -> groupList S_COMA INTEGER .)
    R_INTERSECT     reduce using rule 346 (groupList -> groupList S_COMA INTEGER .)
    R_EXCEPT        reduce using rule 346 (groupList -> groupList S_COMA INTEGER .)
    S_PARDER        reduce using rule 346 (groupList -> groupList S_COMA INTEGER .)


state 734

    (349) havingCl -> R_HAVING expBool .
    (244) expBool -> expBool . R_AND expBool
    (245) expBool -> expBool . R_OR expBool
    (248) expBool -> expBool . optBoolPredicate
    (250) optBoolPredicate -> . R_IS R_TRUE
    (251) optBoolPredicate -> . R_IS R_FALSE
    (252) optBoolPredicate -> . R_IS R_UNKNOWN
    (253) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (254) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (255) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_ORDER         reduce using rule 349 (havingCl -> R_HAVING expBool .)
    R_LIMIT         reduce using rule 349 (havingCl -> R_HAVING expBool .)
    S_PUNTOCOMA     reduce using rule 349 (havingCl -> R_HAVING expBool .)
    R_UNION         reduce using rule 349 (havingCl -> R_HAVING expBool .)
    R_INTERSECT     reduce using rule 349 (havingCl -> R_HAVING expBool .)
    R_EXCEPT        reduce using rule 349 (havingCl -> R_HAVING expBool .)
    S_PARDER        reduce using rule 349 (havingCl -> R_HAVING expBool .)
    R_AND           shift and go to state 173
    R_OR            shift and go to state 174
    R_IS            shift and go to state 176

    optBoolPredicate               shift and go to state 175

state 735

    (329) joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .
    (244) expBool -> expBool . R_AND expBool
    (245) expBool -> expBool . R_OR expBool
    (248) expBool -> expBool . optBoolPredicate
    (250) optBoolPredicate -> . R_IS R_TRUE
    (251) optBoolPredicate -> . R_IS R_FALSE
    (252) optBoolPredicate -> . R_IS R_UNKNOWN
    (253) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (254) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (255) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_NATURAL       reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INNER         reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LEFT          reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_RIGHT         reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_FULL          reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_WHERE         reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_GROUP         reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_ORDER         reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_LIMIT         reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PUNTOCOMA     reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_UNION         reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_INTERSECT     reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_EXCEPT        reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    S_PARDER        reduce using rule 329 (joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool .)
    R_AND           shift and go to state 173
    R_OR            shift and go to state 174
    R_IS            shift and go to state 176

    optBoolPredicate               shift and go to state 175

state 736

    (330) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ . nameList S_PARDER
    (332) nameList -> . nameList S_COMA columnName
    (333) nameList -> . columnName
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 482

    columnName                     shift and go to state 771
    nameList                       shift and go to state 772

state 737

    (219) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 773

state 738

    (221) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 774
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 739

    (222) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 775

state 740

    (224) expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 224 (expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER .)


state 741

    (228) expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 228 (expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER .)


state 742

    (230) expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 230 (expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER .)


state 743

    (232) expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 232 (expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER .)


state 744

    (218) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 776
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 745

    (220) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ . selectStmt S_PARDER
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22

    selectStmt                     shift and go to state 777

state 746

    (22) elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER . R_THEN List_body

    R_THEN          shift and go to state 778


state 747

    (158) literalList -> literalList S_COMA literal .

    S_PARDER        reduce using rule 158 (literalList -> literalList S_COMA literal .)
    S_COMA          reduce using rule 158 (literalList -> literalList S_COMA literal .)


state 748

    (385) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR . bloqueFunction
    (387) bloqueFunction -> . declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd
    (393) declareStmt -> . R_DECLARE declaracion_list
    (394) declareStmt -> .

    R_DECLARE       shift and go to state 751
    R_BEGIN         reduce using rule 394 (declareStmt -> .)

    bloqueFunction                 shift and go to state 779
    declareStmt                    shift and go to state 750

state 749

    (386) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .

    R_CREATE        reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SHOW          reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ALTER         reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DROP          reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_INSERT        reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_UPDATE        reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DELETE        reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_TRUNCATE      reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_USE           reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SELECT        reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_PARIZQ        reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_IF            reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    $end            reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ELSE          reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ELSIF         reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_END           reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_RETURN        reduce using rule 386 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)


state 750

    (387) bloqueFunction -> declareStmt . R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd

    R_BEGIN         shift and go to state 780


state 751

    (393) declareStmt -> R_DECLARE . declaracion_list
    (395) declaracion_list -> . declaracion_list declaracion_item
    (396) declaracion_list -> . declaracion_item
    (397) declaracion_item -> . ID constant_opt types null_opt default_item S_PUNTOCOMA
    (398) declaracion_item -> . ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA

    ID              shift and go to state 783

    declaracion_list               shift and go to state 781
    declaracion_item               shift and go to state 782

state 752

    (42) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc . indexNullS S_PARDER whereCl
    (47) indexNullS -> . R_NULLS R_FIRST
    (48) indexNullS -> . R_NULLS R_LAST
    (49) indexNullS -> .

    R_NULLS         shift and go to state 785
    S_PARDER        reduce using rule 49 (indexNullS -> .)

    indexNullS                     shift and go to state 784

state 753

    (50) indexasc_desc -> R_DESC .

    R_NULLS         reduce using rule 50 (indexasc_desc -> R_DESC .)
    S_PARDER        reduce using rule 50 (indexasc_desc -> R_DESC .)


state 754

    (51) indexasc_desc -> R_ASC .

    R_NULLS         reduce using rule 51 (indexasc_desc -> R_ASC .)
    S_PARDER        reduce using rule 51 (indexasc_desc -> R_ASC .)


state 755

    (60) inheritsOpt -> R_INHERITS S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 786


state 756

    (126) constraintOpt -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (258) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (259) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (260) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (261) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (262) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (263) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (264) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (265) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    booleanCheck                   shift and go to state 787
    idOrLiteral                    shift and go to state 655

state 757

    (258) booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .

    S_PARDER        reduce using rule 258 (booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .)


state 758

    (259) booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .

    S_PARDER        reduce using rule 259 (booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .)


state 759

    (260) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 260 (booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .)


state 760

    (261) booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 261 (booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .)


state 761

    (262) booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .

    S_PARDER        reduce using rule 262 (booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .)


state 762

    (263) booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .

    S_PARDER        reduce using rule 263 (booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .)


state 763

    (264) booleanCheck -> idOrLiteral R_IS R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 788


state 764

    (265) booleanCheck -> idOrLiteral R_IS R_NOT . R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 789


state 765

    (82) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER . R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_REFERENCES    shift and go to state 790


state 766

    (366) offsetLimit -> R_OFFSET INTEGER .

    S_PUNTOCOMA     reduce using rule 366 (offsetLimit -> R_OFFSET INTEGER .)
    R_UNION         reduce using rule 366 (offsetLimit -> R_OFFSET INTEGER .)
    R_INTERSECT     reduce using rule 366 (offsetLimit -> R_OFFSET INTEGER .)
    R_EXCEPT        reduce using rule 366 (offsetLimit -> R_OFFSET INTEGER .)
    S_PARDER        reduce using rule 366 (offsetLimit -> R_OFFSET INTEGER .)


state 767

    (353) orderList -> orderList S_COMA orderByElem .

    S_COMA          reduce using rule 353 (orderList -> orderList S_COMA orderByElem .)
    R_LIMIT         reduce using rule 353 (orderList -> orderList S_COMA orderByElem .)
    S_PUNTOCOMA     reduce using rule 353 (orderList -> orderList S_COMA orderByElem .)
    R_UNION         reduce using rule 353 (orderList -> orderList S_COMA orderByElem .)
    R_INTERSECT     reduce using rule 353 (orderList -> orderList S_COMA orderByElem .)
    R_EXCEPT        reduce using rule 353 (orderList -> orderList S_COMA orderByElem .)
    S_PARDER        reduce using rule 353 (orderList -> orderList S_COMA orderByElem .)


state 768

    (355) orderByElem -> columnName orderOpts orderNull .

    S_COMA          reduce using rule 355 (orderByElem -> columnName orderOpts orderNull .)
    R_LIMIT         reduce using rule 355 (orderByElem -> columnName orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 355 (orderByElem -> columnName orderOpts orderNull .)
    R_UNION         reduce using rule 355 (orderByElem -> columnName orderOpts orderNull .)
    R_INTERSECT     reduce using rule 355 (orderByElem -> columnName orderOpts orderNull .)
    R_EXCEPT        reduce using rule 355 (orderByElem -> columnName orderOpts orderNull .)
    S_PARDER        reduce using rule 355 (orderByElem -> columnName orderOpts orderNull .)


state 769

    (360) orderNull -> R_NULL . R_FIRST
    (361) orderNull -> R_NULL . R_LAST

    R_FIRST         shift and go to state 791
    R_LAST          shift and go to state 792


state 770

    (356) orderByElem -> INTEGER orderOpts orderNull .

    S_COMA          reduce using rule 356 (orderByElem -> INTEGER orderOpts orderNull .)
    R_LIMIT         reduce using rule 356 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 356 (orderByElem -> INTEGER orderOpts orderNull .)
    R_UNION         reduce using rule 356 (orderByElem -> INTEGER orderOpts orderNull .)
    R_INTERSECT     reduce using rule 356 (orderByElem -> INTEGER orderOpts orderNull .)
    R_EXCEPT        reduce using rule 356 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PARDER        reduce using rule 356 (orderByElem -> INTEGER orderOpts orderNull .)


state 771

    (333) nameList -> columnName .

    S_PARDER        reduce using rule 333 (nameList -> columnName .)
    S_COMA          reduce using rule 333 (nameList -> columnName .)


state 772

    (330) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList . S_PARDER
    (332) nameList -> nameList . S_COMA columnName

    S_PARDER        shift and go to state 793
    S_COMA          shift and go to state 794


state 773

    (219) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 795
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 774

    (221) expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 221 (expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 775

    (222) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 796
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 776

    (218) expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 218 (expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 777

    (220) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt . S_PARDER
    (305) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (306) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (307) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 797
    R_UNION         shift and go to state 39
    R_INTERSECT     shift and go to state 40
    R_EXCEPT        shift and go to state 41


state 778

    (22) elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN . List_body
    (23) List_body -> . List_body body
    (24) List_body -> . body
    (25) body -> . createStmt S_PUNTOCOMA
    (26) body -> . showStmt S_PUNTOCOMA
    (27) body -> . alterStmt S_PUNTOCOMA
    (28) body -> . dropStmt S_PUNTOCOMA
    (29) body -> . insertStmt S_PUNTOCOMA
    (30) body -> . updateStmt S_PUNTOCOMA
    (31) body -> . deleteStmt S_PUNTOCOMA
    (32) body -> . truncateStmt S_PUNTOCOMA
    (33) body -> . useStmt S_PUNTOCOMA
    (34) body -> . selectStmt S_PUNTOCOMA
    (35) body -> . functionStmt
    (36) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16

    List_body                      shift and go to state 798
    body                           shift and go to state 403
    createStmt                     shift and go to state 404
    showStmt                       shift and go to state 405
    alterStmt                      shift and go to state 406
    dropStmt                       shift and go to state 407
    insertStmt                     shift and go to state 408
    updateStmt                     shift and go to state 409
    deleteStmt                     shift and go to state 410
    truncateStmt                   shift and go to state 411
    useStmt                        shift and go to state 412
    selectStmt                     shift and go to state 413
    functionStmt                   shift and go to state 414
    ifStmt                         shift and go to state 415

state 779

    (385) functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .

    R_CREATE        reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SHOW          reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ALTER         reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DROP          reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_INSERT        reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_UPDATE        reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_DELETE        reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_TRUNCATE      reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_USE           reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_SELECT        reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    S_PARIZQ        reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_IF            reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    $end            reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ELSE          reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_ELSIF         reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_END           reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)
    R_RETURN        reduce using rule 385 (functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction .)


state 780

    (387) bloqueFunction -> declareStmt R_BEGIN . beginStmt R_END S_PUNTOCOMA labelEnd
    (410) beginStmt -> . beginStmt beginItem
    (411) beginStmt -> . beginItem
    (412) beginItem -> . stmt
    (413) beginItem -> . returnStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (414) returnStmt -> . R_RETURN expresion
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_RETURN        shift and go to state 803
    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16

    beginStmt                      shift and go to state 799
    beginItem                      shift and go to state 800
    stmt                           shift and go to state 801
    returnStmt                     shift and go to state 802
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    ifStmt                         shift and go to state 15

state 781

    (393) declareStmt -> R_DECLARE declaracion_list .
    (395) declaracion_list -> declaracion_list . declaracion_item
    (397) declaracion_item -> . ID constant_opt types null_opt default_item S_PUNTOCOMA
    (398) declaracion_item -> . ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA

    R_BEGIN         reduce using rule 393 (declareStmt -> R_DECLARE declaracion_list .)
    ID              shift and go to state 783

    declaracion_item               shift and go to state 804

state 782

    (396) declaracion_list -> declaracion_item .

    ID              reduce using rule 396 (declaracion_list -> declaracion_item .)
    R_BEGIN         reduce using rule 396 (declaracion_list -> declaracion_item .)


state 783

    (397) declaracion_item -> ID . constant_opt types null_opt default_item S_PUNTOCOMA
    (398) declaracion_item -> ID . R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA
    (399) constant_opt -> . R_CONSTANT
    (400) constant_opt -> .

    R_ALIAS         shift and go to state 806
    R_CONSTANT      shift and go to state 807
    ID              reduce using rule 400 (constant_opt -> .)
    T_SMALLINT      reduce using rule 400 (constant_opt -> .)
    T_INTEGER       reduce using rule 400 (constant_opt -> .)
    T_BIGINT        reduce using rule 400 (constant_opt -> .)
    T_REAL          reduce using rule 400 (constant_opt -> .)
    T_DOUBLE        reduce using rule 400 (constant_opt -> .)
    T_MONEY         reduce using rule 400 (constant_opt -> .)
    T_TEXT          reduce using rule 400 (constant_opt -> .)
    T_BOOLEAN       reduce using rule 400 (constant_opt -> .)
    R_TIMESTAMP     reduce using rule 400 (constant_opt -> .)
    T_DATE          reduce using rule 400 (constant_opt -> .)
    T_TIME          reduce using rule 400 (constant_opt -> .)
    T_DECIMAL       reduce using rule 400 (constant_opt -> .)
    T_NUMERIC       reduce using rule 400 (constant_opt -> .)
    T_VARCHAR       reduce using rule 400 (constant_opt -> .)
    T_CHARACTER     reduce using rule 400 (constant_opt -> .)
    T_CHAR          reduce using rule 400 (constant_opt -> .)
    R_INTERVAL      reduce using rule 400 (constant_opt -> .)

    constant_opt                   shift and go to state 805

state 784

    (42) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS . S_PARDER whereCl

    S_PARDER        shift and go to state 808


state 785

    (47) indexNullS -> R_NULLS . R_FIRST
    (48) indexNullS -> R_NULLS . R_LAST

    R_FIRST         shift and go to state 809
    R_LAST          shift and go to state 810


state 786

    (60) inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .

    S_PUNTOCOMA     reduce using rule 60 (inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .)


state 787

    (126) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 811


state 788

    (264) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM . idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    idOrLiteral                    shift and go to state 812

state 789

    (265) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 813


state 790

    (82) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES . ID S_PARIZQ idList S_PARDER

    ID              shift and go to state 814


state 791

    (360) orderNull -> R_NULL R_FIRST .

    S_COMA          reduce using rule 360 (orderNull -> R_NULL R_FIRST .)
    R_LIMIT         reduce using rule 360 (orderNull -> R_NULL R_FIRST .)
    S_PUNTOCOMA     reduce using rule 360 (orderNull -> R_NULL R_FIRST .)
    R_UNION         reduce using rule 360 (orderNull -> R_NULL R_FIRST .)
    R_INTERSECT     reduce using rule 360 (orderNull -> R_NULL R_FIRST .)
    R_EXCEPT        reduce using rule 360 (orderNull -> R_NULL R_FIRST .)
    S_PARDER        reduce using rule 360 (orderNull -> R_NULL R_FIRST .)


state 792

    (361) orderNull -> R_NULL R_LAST .

    S_COMA          reduce using rule 361 (orderNull -> R_NULL R_LAST .)
    R_LIMIT         reduce using rule 361 (orderNull -> R_NULL R_LAST .)
    S_PUNTOCOMA     reduce using rule 361 (orderNull -> R_NULL R_LAST .)
    R_UNION         reduce using rule 361 (orderNull -> R_NULL R_LAST .)
    R_INTERSECT     reduce using rule 361 (orderNull -> R_NULL R_LAST .)
    R_EXCEPT        reduce using rule 361 (orderNull -> R_NULL R_LAST .)
    S_PARDER        reduce using rule 361 (orderNull -> R_NULL R_LAST .)


state 793

    (330) joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .

    R_NATURAL       reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INNER         reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LEFT          reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_RIGHT         reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_FULL          reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_WHERE         reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_GROUP         reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_ORDER         reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_LIMIT         reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_UNION         reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_INTERSECT     reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    R_EXCEPT        reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)
    S_PARDER        reduce using rule 330 (joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER .)


state 794

    (332) nameList -> nameList S_COMA . columnName
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID

    ID              shift and go to state 482

    columnName                     shift and go to state 815

state 795

    (219) expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 219 (expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 796

    (222) expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 222 (expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 797

    (220) expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_NATURAL       reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_INNER         reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_LEFT          reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_RIGHT         reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_FULL          reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)
    R_WHERE         reduce using rule 220 (expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER .)


state 798

    (22) elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body .
    (23) List_body -> List_body . body
    (25) body -> . createStmt S_PUNTOCOMA
    (26) body -> . showStmt S_PUNTOCOMA
    (27) body -> . alterStmt S_PUNTOCOMA
    (28) body -> . dropStmt S_PUNTOCOMA
    (29) body -> . insertStmt S_PUNTOCOMA
    (30) body -> . updateStmt S_PUNTOCOMA
    (31) body -> . deleteStmt S_PUNTOCOMA
    (32) body -> . truncateStmt S_PUNTOCOMA
    (33) body -> . useStmt S_PUNTOCOMA
    (34) body -> . selectStmt S_PUNTOCOMA
    (35) body -> . functionStmt
    (36) body -> . ifStmt R_END R_IF S_PUNTOCOMA
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_ELSIF         reduce using rule 22 (elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body .)
    R_END           reduce using rule 22 (elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body .)
    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16

    body                           shift and go to state 518
    createStmt                     shift and go to state 404
    showStmt                       shift and go to state 405
    alterStmt                      shift and go to state 406
    dropStmt                       shift and go to state 407
    insertStmt                     shift and go to state 408
    updateStmt                     shift and go to state 409
    deleteStmt                     shift and go to state 410
    truncateStmt                   shift and go to state 411
    useStmt                        shift and go to state 412
    selectStmt                     shift and go to state 413
    functionStmt                   shift and go to state 414
    ifStmt                         shift and go to state 415

state 799

    (387) bloqueFunction -> declareStmt R_BEGIN beginStmt . R_END S_PUNTOCOMA labelEnd
    (410) beginStmt -> beginStmt . beginItem
    (412) beginItem -> . stmt
    (413) beginItem -> . returnStmt S_PUNTOCOMA
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (14) stmt -> . functionStmt
    (15) stmt -> . ifStmt R_END R_IF S_PUNTOCOMA
    (414) returnStmt -> . R_RETURN expresion
    (40) createStmt -> . R_CREATE createBody
    (381) showStmt -> . R_SHOW R_DATABASES likeOpt
    (273) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (274) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (297) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (298) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (368) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (371) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (377) deleteStmt -> . R_DELETE fromCl whereCl
    (378) truncateStmt -> . R_TRUNCATE tableOpt ID
    (384) useStmt -> . R_USE ID
    (301) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (302) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl
    (303) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl
    (304) selectStmt -> . R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl
    (305) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (306) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (307) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (308) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (310) selectStmt -> . R_SELECT selectParams
    (385) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (386) functionStmt -> . R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction
    (16) ifStmt -> . R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_

    R_END           shift and go to state 816
    R_RETURN        shift and go to state 803
    R_CREATE        shift and go to state 17
    R_SHOW          shift and go to state 18
    R_ALTER         shift and go to state 19
    R_DROP          shift and go to state 20
    R_INSERT        shift and go to state 21
    R_UPDATE        shift and go to state 23
    R_DELETE        shift and go to state 24
    R_TRUNCATE      shift and go to state 25
    R_USE           shift and go to state 26
    R_SELECT        shift and go to state 27
    S_PARIZQ        shift and go to state 22
    R_IF            shift and go to state 16

    beginItem                      shift and go to state 817
    stmt                           shift and go to state 801
    returnStmt                     shift and go to state 802
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13
    functionStmt                   shift and go to state 14
    ifStmt                         shift and go to state 15

state 800

    (411) beginStmt -> beginItem .

    R_END           reduce using rule 411 (beginStmt -> beginItem .)
    R_RETURN        reduce using rule 411 (beginStmt -> beginItem .)
    R_CREATE        reduce using rule 411 (beginStmt -> beginItem .)
    R_SHOW          reduce using rule 411 (beginStmt -> beginItem .)
    R_ALTER         reduce using rule 411 (beginStmt -> beginItem .)
    R_DROP          reduce using rule 411 (beginStmt -> beginItem .)
    R_INSERT        reduce using rule 411 (beginStmt -> beginItem .)
    R_UPDATE        reduce using rule 411 (beginStmt -> beginItem .)
    R_DELETE        reduce using rule 411 (beginStmt -> beginItem .)
    R_TRUNCATE      reduce using rule 411 (beginStmt -> beginItem .)
    R_USE           reduce using rule 411 (beginStmt -> beginItem .)
    R_SELECT        reduce using rule 411 (beginStmt -> beginItem .)
    S_PARIZQ        reduce using rule 411 (beginStmt -> beginItem .)
    R_IF            reduce using rule 411 (beginStmt -> beginItem .)


state 801

    (412) beginItem -> stmt .

    R_END           reduce using rule 412 (beginItem -> stmt .)
    R_RETURN        reduce using rule 412 (beginItem -> stmt .)
    R_CREATE        reduce using rule 412 (beginItem -> stmt .)
    R_SHOW          reduce using rule 412 (beginItem -> stmt .)
    R_ALTER         reduce using rule 412 (beginItem -> stmt .)
    R_DROP          reduce using rule 412 (beginItem -> stmt .)
    R_INSERT        reduce using rule 412 (beginItem -> stmt .)
    R_UPDATE        reduce using rule 412 (beginItem -> stmt .)
    R_DELETE        reduce using rule 412 (beginItem -> stmt .)
    R_TRUNCATE      reduce using rule 412 (beginItem -> stmt .)
    R_USE           reduce using rule 412 (beginItem -> stmt .)
    R_SELECT        reduce using rule 412 (beginItem -> stmt .)
    S_PARIZQ        reduce using rule 412 (beginItem -> stmt .)
    R_IF            reduce using rule 412 (beginItem -> stmt .)


state 802

    (413) beginItem -> returnStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 818


state 803

    (414) returnStmt -> R_RETURN . expresion
    (129) expresion -> . datatype
    (130) expresion -> . expBool
    (131) expresion -> . S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    S_PARIZQ        shift and go to state 77
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_NOT           shift and go to state 87
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_EXISTS        shift and go to state 105
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expresion                      shift and go to state 819
    datatype                       shift and go to state 75
    expBool                        shift and go to state 76
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    boolean                        shift and go to state 88
    timeStamp                      shift and go to state 101
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    stringExp                      shift and go to state 110

state 804

    (395) declaracion_list -> declaracion_list declaracion_item .

    ID              reduce using rule 395 (declaracion_list -> declaracion_list declaracion_item .)
    R_BEGIN         reduce using rule 395 (declaracion_list -> declaracion_list declaracion_item .)


state 805

    (397) declaracion_item -> ID constant_opt . types null_opt default_item S_PUNTOCOMA
    (87) types -> . ID
    (88) types -> . T_SMALLINT
    (89) types -> . T_INTEGER
    (90) types -> . T_BIGINT
    (91) types -> . T_REAL
    (92) types -> . T_DOUBLE T_PRECISION
    (93) types -> . T_MONEY
    (94) types -> . T_TEXT
    (95) types -> . T_BOOLEAN
    (96) types -> . R_TIMESTAMP
    (97) types -> . T_DATE
    (98) types -> . T_TIME
    (99) types -> . T_DECIMAL optParams
    (100) types -> . T_NUMERIC optParams
    (101) types -> . T_VARCHAR optParams
    (102) types -> . T_CHARACTER optParams
    (103) types -> . T_CHAR optParams
    (104) types -> . T_CHARACTER T_VARYING optParams
    (105) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 416
    T_SMALLINT      shift and go to state 418
    T_INTEGER       shift and go to state 419
    T_BIGINT        shift and go to state 420
    T_REAL          shift and go to state 421
    T_DOUBLE        shift and go to state 422
    T_MONEY         shift and go to state 423
    T_TEXT          shift and go to state 424
    T_BOOLEAN       shift and go to state 425
    R_TIMESTAMP     shift and go to state 426
    T_DATE          shift and go to state 427
    T_TIME          shift and go to state 428
    T_DECIMAL       shift and go to state 429
    T_NUMERIC       shift and go to state 430
    T_VARCHAR       shift and go to state 431
    T_CHARACTER     shift and go to state 432
    T_CHAR          shift and go to state 433
    R_INTERVAL      shift and go to state 434

    types                          shift and go to state 820

state 806

    (398) declaracion_item -> ID R_ALIAS . R_FOR alias_declaracion S_PUNTOCOMA

    R_FOR           shift and go to state 821


state 807

    (399) constant_opt -> R_CONSTANT .

    ID              reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_SMALLINT      reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_INTEGER       reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_BIGINT        reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_REAL          reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_DOUBLE        reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_MONEY         reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_TEXT          reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_BOOLEAN       reduce using rule 399 (constant_opt -> R_CONSTANT .)
    R_TIMESTAMP     reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_DATE          reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_TIME          reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_DECIMAL       reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_NUMERIC       reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_VARCHAR       reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_CHARACTER     reduce using rule 399 (constant_opt -> R_CONSTANT .)
    T_CHAR          reduce using rule 399 (constant_opt -> R_CONSTANT .)
    R_INTERVAL      reduce using rule 399 (constant_opt -> R_CONSTANT .)


state 808

    (42) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER . whereCl
    (341) whereCl -> . R_WHERE expBool
    (342) whereCl -> .

    R_WHERE         shift and go to state 143
    S_PUNTOCOMA     reduce using rule 342 (whereCl -> .)

    whereCl                        shift and go to state 822

state 809

    (47) indexNullS -> R_NULLS R_FIRST .

    S_PARDER        reduce using rule 47 (indexNullS -> R_NULLS R_FIRST .)


state 810

    (48) indexNullS -> R_NULLS R_LAST .

    S_PARDER        reduce using rule 48 (indexNullS -> R_NULLS R_LAST .)


state 811

    (126) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    R_DEFAULT       reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NOT           reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NULL          reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_PRIMARY       reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_REFERENCES    reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CONSTRAINT    reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_UNIQUE        reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CHECK         reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_COMA          reduce using rule 126 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 812

    (264) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 264 (booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .)


state 813

    (265) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM . idOrLiteral
    (266) idOrLiteral -> . ID
    (267) idOrLiteral -> . INTEGER
    (268) idOrLiteral -> . STRING
    (269) idOrLiteral -> . DECIMAL
    (270) idOrLiteral -> . CHARACTER
    (271) idOrLiteral -> . R_TRUE
    (272) idOrLiteral -> . R_FALSE

    ID              shift and go to state 656
    INTEGER         shift and go to state 657
    STRING          shift and go to state 658
    DECIMAL         shift and go to state 659
    CHARACTER       shift and go to state 660
    R_TRUE          shift and go to state 661
    R_FALSE         shift and go to state 662

    idOrLiteral                    shift and go to state 823

state 814

    (82) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 824


state 815

    (332) nameList -> nameList S_COMA columnName .

    S_PARDER        reduce using rule 332 (nameList -> nameList S_COMA columnName .)
    S_COMA          reduce using rule 332 (nameList -> nameList S_COMA columnName .)


state 816

    (387) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END . S_PUNTOCOMA labelEnd

    S_PUNTOCOMA     shift and go to state 825


state 817

    (410) beginStmt -> beginStmt beginItem .

    R_END           reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_RETURN        reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_CREATE        reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_SHOW          reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_ALTER         reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_DROP          reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_INSERT        reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_UPDATE        reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_DELETE        reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_TRUNCATE      reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_USE           reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_SELECT        reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    S_PARIZQ        reduce using rule 410 (beginStmt -> beginStmt beginItem .)
    R_IF            reduce using rule 410 (beginStmt -> beginStmt beginItem .)


state 818

    (413) beginItem -> returnStmt S_PUNTOCOMA .

    R_END           reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_RETURN        reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_CREATE        reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)
    R_IF            reduce using rule 413 (beginItem -> returnStmt S_PUNTOCOMA .)


state 819

    (414) returnStmt -> R_RETURN expresion .

    S_PUNTOCOMA     reduce using rule 414 (returnStmt -> R_RETURN expresion .)


state 820

    (397) declaracion_item -> ID constant_opt types . null_opt default_item S_PUNTOCOMA
    (401) null_opt -> . R_NOT R_NULL
    (402) null_opt -> .

    R_NOT           shift and go to state 827
    R_DEFAULT       reduce using rule 402 (null_opt -> .)
    S_DOSPUNTOS     reduce using rule 402 (null_opt -> .)
    S_IGUAL         reduce using rule 402 (null_opt -> .)
    S_PUNTOCOMA     reduce using rule 402 (null_opt -> .)

    null_opt                       shift and go to state 826

state 821

    (398) declaracion_item -> ID R_ALIAS R_FOR . alias_declaracion S_PUNTOCOMA
    (408) alias_declaracion -> . ID
    (409) alias_declaracion -> . IDEspecial

    ID              shift and go to state 828
    IDEspecial      shift and go to state 830

    alias_declaracion              shift and go to state 829

state 822

    (42) createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl .

    S_PUNTOCOMA     reduce using rule 42 (createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl .)


state 823

    (265) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 265 (booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .)


state 824

    (82) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ . idList S_PARDER
    (85) idList -> . idList S_COMA ID
    (86) idList -> . ID

    ID              shift and go to state 347

    idList                         shift and go to state 831

state 825

    (387) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA . labelEnd
    (415) labelEnd -> .
    (416) labelEnd -> . S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA

    R_CREATE        reduce using rule 415 (labelEnd -> .)
    R_SHOW          reduce using rule 415 (labelEnd -> .)
    R_ALTER         reduce using rule 415 (labelEnd -> .)
    R_DROP          reduce using rule 415 (labelEnd -> .)
    R_INSERT        reduce using rule 415 (labelEnd -> .)
    R_UPDATE        reduce using rule 415 (labelEnd -> .)
    R_DELETE        reduce using rule 415 (labelEnd -> .)
    R_TRUNCATE      reduce using rule 415 (labelEnd -> .)
    R_USE           reduce using rule 415 (labelEnd -> .)
    R_SELECT        reduce using rule 415 (labelEnd -> .)
    S_PARIZQ        reduce using rule 415 (labelEnd -> .)
    R_IF            reduce using rule 415 (labelEnd -> .)
    $end            reduce using rule 415 (labelEnd -> .)
    R_ELSE          reduce using rule 415 (labelEnd -> .)
    R_ELSIF         reduce using rule 415 (labelEnd -> .)
    R_END           reduce using rule 415 (labelEnd -> .)
    R_RETURN        reduce using rule 415 (labelEnd -> .)
    S_DOLAR         shift and go to state 833

    labelEnd                       shift and go to state 832

state 826

    (397) declaracion_item -> ID constant_opt types null_opt . default_item S_PUNTOCOMA
    (406) default_item -> . default_opt expresion
    (407) default_item -> .
    (403) default_opt -> . R_DEFAULT
    (404) default_opt -> . S_DOSPUNTOS S_IGUAL
    (405) default_opt -> . S_IGUAL

    S_PUNTOCOMA     reduce using rule 407 (default_item -> .)
    R_DEFAULT       shift and go to state 836
    S_DOSPUNTOS     shift and go to state 837
    S_IGUAL         shift and go to state 838

    default_item                   shift and go to state 834
    default_opt                    shift and go to state 835

state 827

    (401) null_opt -> R_NOT . R_NULL

    R_NULL          shift and go to state 839


state 828

    (408) alias_declaracion -> ID .

    S_PUNTOCOMA     reduce using rule 408 (alias_declaracion -> ID .)


state 829

    (398) declaracion_item -> ID R_ALIAS R_FOR alias_declaracion . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 840


state 830

    (409) alias_declaracion -> IDEspecial .

    S_PUNTOCOMA     reduce using rule 409 (alias_declaracion -> IDEspecial .)


state 831

    (82) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList . S_PARDER
    (85) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 841
    S_COMA          shift and go to state 470


state 832

    (387) bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .

    R_CREATE        reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_SHOW          reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_ALTER         reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_DROP          reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_INSERT        reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_UPDATE        reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_DELETE        reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_TRUNCATE      reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_USE           reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_SELECT        reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    S_PARIZQ        reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_IF            reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    $end            reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_ELSE          reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_ELSIF         reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_END           reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)
    R_RETURN        reduce using rule 387 (bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd .)


state 833

    (416) labelEnd -> S_DOLAR . S_DOLAR R_LANGUAGE ID S_PUNTOCOMA

    S_DOLAR         shift and go to state 842


state 834

    (397) declaracion_item -> ID constant_opt types null_opt default_item . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 843


state 835

    (406) default_item -> default_opt . expresion
    (129) expresion -> . datatype
    (130) expresion -> . expBool
    (131) expresion -> . S_PARIZQ selectStmt S_PARDER
    (169) datatype -> . datatype O_SUMA datatype
    (170) datatype -> . datatype O_RESTA datatype
    (171) datatype -> . datatype O_PRODUCTO datatype
    (172) datatype -> . datatype O_DIVISION datatype
    (173) datatype -> . datatype O_EXPONENTE datatype
    (174) datatype -> . datatype O_MODULAR datatype
    (175) datatype -> . datatype OC_CONCATENAR datatype
    (176) datatype -> . R_CASE caseList optElse R_END
    (182) datatype -> . O_RESTA datatype
    (183) datatype -> . O_SUMA datatype
    (184) datatype -> . columnName
    (185) datatype -> . literal
    (186) datatype -> . funcCall
    (187) datatype -> . extract
    (188) datatype -> . datePart
    (189) datatype -> . current
    (190) datatype -> . S_PARIZQ datatype S_PARDER
    (244) expBool -> . expBool R_AND expBool
    (245) expBool -> . expBool R_OR expBool
    (246) expBool -> . R_NOT expBool
    (247) expBool -> . S_PARIZQ expBool S_PARDER
    (248) expBool -> . expBool optBoolPredicate
    (249) expBool -> . boolean
    (256) columnName -> . ID
    (257) columnName -> . ID S_PUNTO ID
    (160) literal -> . INTEGER
    (161) literal -> . STRING
    (162) literal -> . DECIMAL
    (163) literal -> . CHARACTER
    (164) literal -> . R_TRUE
    (165) literal -> . R_FALSE
    (166) literal -> . R_NULL
    (132) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (133) funcCall -> . ID S_PARIZQ S_PARDER
    (134) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (135) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (136) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (137) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (138) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (139) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (140) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (149) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (155) current -> . R_CURRENT_DATE
    (156) current -> . R_CURRENT_TIME
    (157) current -> . timeStamp
    (239) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (240) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (241) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (242) boolean -> . expComp
    (243) boolean -> . expSubq
    (141) timeStamp -> . R_TIMESTAMP STRING
    (142) timeStamp -> . R_INTERVAL STRING
    (191) expComp -> . datatype OL_MENORQUE datatype
    (192) expComp -> . datatype OL_MAYORQUE datatype
    (193) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (194) expComp -> . datatype OL_MENORIGUALQUE datatype
    (195) expComp -> . datatype S_IGUAL datatype
    (196) expComp -> . datatype OL_DISTINTODE datatype
    (197) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (198) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (199) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (200) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (201) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (202) expComp -> . datatype R_ISNULL
    (203) expComp -> . datatype R_NOTNULL
    (204) expComp -> . datatype R_IS R_NULL
    (205) expComp -> . datatype R_IS R_TRUE
    (206) expComp -> . datatype R_IS R_FALSE
    (207) expComp -> . datatype R_IS R_UNKNOWN
    (208) expComp -> . datatype R_IS R_NOT R_NULL
    (209) expComp -> . datatype R_IS R_NOT R_TRUE
    (210) expComp -> . datatype R_IS R_NOT R_FALSE
    (211) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (212) expSubq -> . datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (213) expSubq -> . datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER
    (214) expSubq -> . datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (215) expSubq -> . datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER
    (216) expSubq -> . datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER
    (217) expSubq -> . datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER
    (218) expSubq -> . datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (219) expSubq -> . datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (220) expSubq -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER
    (221) expSubq -> . datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (222) expSubq -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER
    (223) expSubq -> . datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (224) expSubq -> . datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER
    (225) expSubq -> . datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER
    (226) expSubq -> . datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER
    (227) expSubq -> . datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (228) expSubq -> . datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER
    (229) expSubq -> . datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (230) expSubq -> . datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER
    (231) expSubq -> . datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (232) expSubq -> . datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER
    (233) expSubq -> . stringExp R_LIKE STRING
    (234) stringExp -> . STRING
    (235) stringExp -> . columnName

    S_PARIZQ        shift and go to state 77
    R_CASE          shift and go to state 80
    O_RESTA         shift and go to state 79
    O_SUMA          shift and go to state 78
    R_NOT           shift and go to state 87
    ID              shift and go to state 117
    INTEGER         shift and go to state 89
    STRING          shift and go to state 90
    DECIMAL         shift and go to state 91
    CHARACTER       shift and go to state 92
    R_TRUE          shift and go to state 93
    R_FALSE         shift and go to state 94
    R_NULL          shift and go to state 95
    R_NOW           shift and go to state 96
    R_COUNT         shift and go to state 97
    R_SUM           shift and go to state 98
    R_PROM          shift and go to state 99
    R_EXTRACT       shift and go to state 100
    R_DATE_PART     shift and go to state 102
    R_CURRENT_DATE  shift and go to state 103
    R_CURRENT_TIME  shift and go to state 104
    R_EXISTS        shift and go to state 105
    R_TIMESTAMP     shift and go to state 108
    R_INTERVAL      shift and go to state 109

    expresion                      shift and go to state 844
    datatype                       shift and go to state 75
    expBool                        shift and go to state 76
    columnName                     shift and go to state 81
    literal                        shift and go to state 82
    funcCall                       shift and go to state 83
    extract                        shift and go to state 84
    datePart                       shift and go to state 85
    current                        shift and go to state 86
    boolean                        shift and go to state 88
    timeStamp                      shift and go to state 101
    expComp                        shift and go to state 106
    expSubq                        shift and go to state 107
    stringExp                      shift and go to state 110

state 836

    (403) default_opt -> R_DEFAULT .

    S_PARIZQ        reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_CASE          reduce using rule 403 (default_opt -> R_DEFAULT .)
    O_RESTA         reduce using rule 403 (default_opt -> R_DEFAULT .)
    O_SUMA          reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_NOT           reduce using rule 403 (default_opt -> R_DEFAULT .)
    ID              reduce using rule 403 (default_opt -> R_DEFAULT .)
    INTEGER         reduce using rule 403 (default_opt -> R_DEFAULT .)
    STRING          reduce using rule 403 (default_opt -> R_DEFAULT .)
    DECIMAL         reduce using rule 403 (default_opt -> R_DEFAULT .)
    CHARACTER       reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_TRUE          reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_FALSE         reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_NULL          reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_NOW           reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_COUNT         reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_SUM           reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_PROM          reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_EXTRACT       reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_DATE_PART     reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_CURRENT_DATE  reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_CURRENT_TIME  reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_EXISTS        reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_TIMESTAMP     reduce using rule 403 (default_opt -> R_DEFAULT .)
    R_INTERVAL      reduce using rule 403 (default_opt -> R_DEFAULT .)


state 837

    (404) default_opt -> S_DOSPUNTOS . S_IGUAL

    S_IGUAL         shift and go to state 845


state 838

    (405) default_opt -> S_IGUAL .

    S_PARIZQ        reduce using rule 405 (default_opt -> S_IGUAL .)
    R_CASE          reduce using rule 405 (default_opt -> S_IGUAL .)
    O_RESTA         reduce using rule 405 (default_opt -> S_IGUAL .)
    O_SUMA          reduce using rule 405 (default_opt -> S_IGUAL .)
    R_NOT           reduce using rule 405 (default_opt -> S_IGUAL .)
    ID              reduce using rule 405 (default_opt -> S_IGUAL .)
    INTEGER         reduce using rule 405 (default_opt -> S_IGUAL .)
    STRING          reduce using rule 405 (default_opt -> S_IGUAL .)
    DECIMAL         reduce using rule 405 (default_opt -> S_IGUAL .)
    CHARACTER       reduce using rule 405 (default_opt -> S_IGUAL .)
    R_TRUE          reduce using rule 405 (default_opt -> S_IGUAL .)
    R_FALSE         reduce using rule 405 (default_opt -> S_IGUAL .)
    R_NULL          reduce using rule 405 (default_opt -> S_IGUAL .)
    R_NOW           reduce using rule 405 (default_opt -> S_IGUAL .)
    R_COUNT         reduce using rule 405 (default_opt -> S_IGUAL .)
    R_SUM           reduce using rule 405 (default_opt -> S_IGUAL .)
    R_PROM          reduce using rule 405 (default_opt -> S_IGUAL .)
    R_EXTRACT       reduce using rule 405 (default_opt -> S_IGUAL .)
    R_DATE_PART     reduce using rule 405 (default_opt -> S_IGUAL .)
    R_CURRENT_DATE  reduce using rule 405 (default_opt -> S_IGUAL .)
    R_CURRENT_TIME  reduce using rule 405 (default_opt -> S_IGUAL .)
    R_EXISTS        reduce using rule 405 (default_opt -> S_IGUAL .)
    R_TIMESTAMP     reduce using rule 405 (default_opt -> S_IGUAL .)
    R_INTERVAL      reduce using rule 405 (default_opt -> S_IGUAL .)


state 839

    (401) null_opt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 401 (null_opt -> R_NOT R_NULL .)
    S_DOSPUNTOS     reduce using rule 401 (null_opt -> R_NOT R_NULL .)
    S_IGUAL         reduce using rule 401 (null_opt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 401 (null_opt -> R_NOT R_NULL .)


state 840

    (398) declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA .

    ID              reduce using rule 398 (declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA .)
    R_BEGIN         reduce using rule 398 (declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA .)


state 841

    (82) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 82 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 82 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 82 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)


state 842

    (416) labelEnd -> S_DOLAR S_DOLAR . R_LANGUAGE ID S_PUNTOCOMA

    R_LANGUAGE      shift and go to state 846


state 843

    (397) declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA .

    ID              reduce using rule 397 (declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA .)
    R_BEGIN         reduce using rule 397 (declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA .)


state 844

    (406) default_item -> default_opt expresion .

    S_PUNTOCOMA     reduce using rule 406 (default_item -> default_opt expresion .)


state 845

    (404) default_opt -> S_DOSPUNTOS S_IGUAL .

    S_PARIZQ        reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_CASE          reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    O_RESTA         reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    O_SUMA          reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_NOT           reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    ID              reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    INTEGER         reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    STRING          reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    DECIMAL         reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    CHARACTER       reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_TRUE          reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_FALSE         reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_NULL          reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_NOW           reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_COUNT         reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_SUM           reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_PROM          reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_EXTRACT       reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_DATE_PART     reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_CURRENT_DATE  reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_CURRENT_TIME  reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_EXISTS        reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_TIMESTAMP     reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)
    R_INTERVAL      reduce using rule 404 (default_opt -> S_DOSPUNTOS S_IGUAL .)


state 846

    (416) labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE . ID S_PUNTOCOMA

    ID              shift and go to state 847


state 847

    (416) labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 848


state 848

    (416) labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .

    R_CREATE        reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_SHOW          reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_ALTER         reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_DROP          reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_INSERT        reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_DELETE        reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_USE           reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_SELECT        reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_IF            reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    $end            reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_ELSE          reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_ELSIF         reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_END           reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)
    R_RETURN        reduce using rule 416 (labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_LIMIT in state 480 resolved as shift
WARNING: reduce/reduce conflict in state 480 resolved using rule (orderByCl -> <empty>)
WARNING: rejected rule (limitCl -> <empty>) in state 480
